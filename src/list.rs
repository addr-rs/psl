
//! This file is automatically @generated by cargo-make.
//! It is not intended for manual editing.

#![allow(clippy::all)] // TODO lint this code?

use crate::{Info, Type};
#[inline]
pub(super) fn lookup<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let mut info = Info { len: 0, typ: None };
    match labels.next() {
        Some(label) => match label {
            [119, 101, 97, 116, 104, 101, 114, 99, 104, 97, 110, 110, 101, 108] => lookup_0(),
            [102, 108, 111, 114, 105, 115, 116] => lookup_1(),
            [224, 186, 165, 224, 186, 178, 224, 186, 167] => lookup_2(),
            [216, 167, 217, 132, 216, 172, 216, 178, 216, 167, 216, 166, 216, 177] => lookup_3(),
            [112, 104] => lookup_4(labels),
            [98, 98] => lookup_5(labels),
            [224, 178, 173, 224, 178, 190, 224, 178, 176, 224, 178, 164] => lookup_6(),
            [97, 111, 108] => lookup_7(),
            [103, 97, 112] => lookup_8(),
            [97, 115, 100, 97] => lookup_9(),
            [102, 117, 106, 105, 120, 101, 114, 111, 120] => lookup_10(),
            [112, 105, 110, 103] => lookup_11(),
            [99, 111, 108, 111, 103, 110, 101] => lookup_12(),
            [114, 97, 105, 100] => lookup_13(),
            [102, 105, 114, 109, 100, 97, 108, 101] => lookup_14(),
            [110, 122] => lookup_15(labels),
            [102, 97, 105, 108] => lookup_16(),
            [114, 111, 99, 104, 101, 114] => lookup_17(),
            [116, 100, 107] => lookup_18(),
            [119, 115] => lookup_19(labels),
            [107, 114] => lookup_20(labels),
            [109, 118] => lookup_21(labels),
            [120, 110, 45, 45, 109, 103, 98, 50, 100, 100, 101, 115] => lookup_22(),
            [98, 106] => lookup_23(labels),
            [103, 109, 98, 104] => lookup_24(),
            [109, 97, 114, 107, 101, 116] => lookup_25(),
            [109, 111, 114, 116, 103, 97, 103, 101] => lookup_26(),
            [104, 117] => lookup_27(labels),
            [102, 111, 114, 117, 109] => lookup_28(),
            [103, 97, 108] => lookup_29(),
            [108, 97, 110, 100, 114, 111, 118, 101, 114] => lookup_30(),
            [99, 108, 101, 97, 110, 105, 110, 103] => lookup_31(),
            [110, 105, 107, 101] => lookup_32(),
            [111, 114, 97, 99, 108, 101] => lookup_33(),
            [115, 101, 115] => lookup_34(),
            [120, 110, 45, 45, 102, 105, 113, 115, 56, 115] => lookup_35(),
            [112, 102, 105, 122, 101, 114] => lookup_36(),
            [103, 105, 102, 116, 115] => lookup_37(),
            [114, 101, 97, 108, 116, 111, 114] => lookup_38(),
            [99, 98, 115] => lookup_39(),
            [116, 117, 110, 101, 115] => lookup_40(),
            [118, 111, 116, 111] => lookup_41(),
            [118, 117, 101, 108, 111, 115] => lookup_42(),
            [119, 105, 110, 101] => lookup_43(),
            [117, 107] => lookup_44(labels),
            [120, 110, 45, 45, 57, 100, 98, 113, 50, 97] => lookup_45(),
            [111, 114, 97, 110, 103, 101] => lookup_46(),
            [107, 112] => lookup_47(labels),
            [112, 97, 114, 116, 121] => lookup_48(labels),
            [114, 101, 112, 111, 114, 116] => lookup_49(),
            [229, 164, 167, 228, 188, 151, 230, 177, 189, 232, 189, 166] => lookup_50(),
            [116, 118, 115] => lookup_51(),
            [98, 110] => lookup_52(labels),
            [118, 97, 110, 103, 117, 97, 114, 100] => lookup_53(),
            [106, 117, 101, 103, 111, 115] => lookup_54(),
            [229, 149, 134, 230, 160, 135] => lookup_55(),
            [100, 106] => lookup_56(),
            [117, 110, 111] => lookup_57(),
            [112, 114, 117] => lookup_58(),
            [208, 186, 208, 190, 208, 188] => lookup_59(),
            [120, 110, 45, 45, 51, 111, 113, 49, 56, 118, 108, 56, 112, 110, 51, 54, 97] => {
                lookup_60()
            }
            [99, 105, 116, 97, 100, 101, 108] => lookup_61(),
            [112, 114, 111, 100, 117, 99, 116, 105, 111, 110, 115] => lookup_62(),
            [102, 97, 115, 104, 105, 111, 110] => lookup_63(labels),
            [111, 111, 111] => lookup_64(),
            [120, 110, 45, 45, 121, 103, 98, 105, 50, 97, 109, 109, 120] => lookup_65(),
            [98, 109, 119] => lookup_66(),
            [103, 101, 110, 116, 105, 110, 103] => lookup_67(),
            [118, 97] => lookup_68(),
            [112, 104, 121, 115, 105, 111] => lookup_69(),
            [115, 97, 110, 100, 118, 105, 107, 99, 111, 114, 111, 109, 97, 110, 116] => lookup_70(),
            [111, 109] => lookup_71(labels),
            [102, 111, 114, 101, 120] => lookup_72(),
            [102, 101, 100, 101, 120] => lookup_73(),
            [229, 149, 134, 229, 159, 142] => lookup_74(),
            [99, 97, 116, 104, 111, 108, 105, 99] => lookup_75(),
            [225, 131, 146, 225, 131, 148] => lookup_76(),
            [99, 117, 105, 115, 105, 110, 101, 108, 108, 97] => lookup_77(),
            [102, 105, 97, 116] => lookup_78(),
            [115, 101, 97, 114, 99, 104] => lookup_79(),
            [110, 105, 115, 115, 97, 121] => lookup_80(),
            [100, 97, 116, 115, 117, 110] => lookup_81(),
            [217, 131, 216, 167, 216, 171, 217, 136, 217, 132, 217, 138, 217, 131] => lookup_82(),
            [232, 135, 186, 231, 129, 163] => lookup_83(),
            [110, 97, 116, 105, 111, 110, 119, 105, 100, 101] => lookup_84(),
            [224, 185, 132, 224, 184, 151, 224, 184, 162] => lookup_85(labels),
            [120, 110, 45, 45, 109, 103, 98, 116, 102, 56, 102, 108] => lookup_86(),
            [112, 114, 111, 116, 101, 99, 116, 105, 111, 110] => lookup_87(),
            [119, 97, 108, 109, 97, 114, 116] => lookup_88(),
            [109, 111, 116, 111, 114, 99, 121, 99, 108, 101, 115] => lookup_89(),
            [104, 101, 108, 112] => lookup_90(),
            [235, 139, 183, 236, 187, 180] => lookup_91(),
            [116, 116] => lookup_92(labels),
            [97, 99] => lookup_93(labels),
            [120, 110, 45, 45, 105, 111, 48, 97, 55, 105] => lookup_94(),
            [228, 184, 150, 231, 149, 140] => lookup_95(),
            [107, 105, 109] => lookup_96(),
            [119, 105, 110, 110, 101, 114, 115] => lookup_97(),
            [97, 118, 105, 97, 110, 99, 97] => lookup_98(),
            [114, 119, 101] => lookup_99(),
            [120, 110, 45, 45, 109, 103, 98, 97, 98, 50, 98, 100] => lookup_100(),
            [120, 110, 45, 45, 109, 103, 98, 113, 108, 121, 55, 99, 48, 97, 54, 55, 102, 98, 99] => {
                lookup_101()
            }
            [110, 101, 99] => lookup_102(),
            [107, 100, 100, 105] => lookup_103(),
            [108, 97, 116, 105, 110, 111] => lookup_104(),
            [112, 114] => lookup_105(labels),
            [107, 119] => lookup_106(labels),
            [108, 111, 99, 107, 101, 114] => lookup_107(),
            [115, 104, 105, 107, 115, 104, 97] => lookup_108(),
            [116, 114, 118] => lookup_109(),
            [120, 110, 45, 45, 109, 103, 98, 57, 97, 119, 98, 102] => lookup_110(),
            [103, 101, 97] => lookup_111(),
            [216, 180, 216, 168, 217, 131, 216, 169] => lookup_112(),
            [100, 105, 115, 99, 111, 117, 110, 116] => lookup_113(),
            [103, 103, 101, 101] => lookup_114(),
            [98, 111, 120] => lookup_115(),
            [104, 111, 116, 101, 108, 101, 115] => lookup_116(),
            [105, 107, 97, 110, 111] => lookup_117(),
            [108, 105, 100, 108] => lookup_118(),
            [107, 121] => lookup_119(labels),
            [118, 97, 110, 97] => lookup_120(),
            [99, 104] => lookup_121(labels),
            [98, 100] => lookup_122(info, labels),
            [111, 114, 105, 103, 105, 110, 115] => lookup_123(),
            [112, 104, 111, 116, 111] => lookup_124(),
            [105, 114, 105, 115, 104] => lookup_125(),
            [115, 97, 120, 111] => lookup_126(),
            [115, 106] => lookup_127(),
            [97, 98, 98] => lookup_128(),
            [109, 97, 114, 107, 101, 116, 105, 110, 103] => lookup_129(labels),
            [109, 101, 100, 105, 97] => lookup_130(),
            [118, 105, 110] => lookup_131(),
            [216, 167, 217, 132, 216, 179, 216, 185, 217, 136, 216, 175, 217, 138, 216, 169] => {
                lookup_132()
            }
            [230, 133, 136, 229, 150, 132] => lookup_133(),
            [98, 119] => lookup_134(labels),
            [120, 110, 45, 45, 119, 52, 114, 115, 52, 48, 108] => lookup_135(),
            [120, 105, 110] => lookup_136(),
            [99, 105, 116, 121] => lookup_137(),
            [102, 97, 103, 101] => lookup_138(),
            [104, 111, 99, 107, 101, 121] => lookup_139(),
            [118, 105] => lookup_140(labels),
            [110, 111, 119] => lookup_141(),
            [114, 111, 99, 107, 115] => lookup_142(labels),
            [99, 111, 110, 115, 116, 114, 117, 99, 116, 105, 111, 110] => lookup_143(),
            [99, 112, 97] => lookup_144(),
            [115, 116, 121, 108, 101] => lookup_145(),
            [115, 117, 112, 112, 108, 121] => lookup_146(),
            [103, 103] => lookup_147(labels),
            [97, 114, 97, 98] => lookup_148(),
            [115, 110, 99, 102] => lookup_149(),
            [120, 110, 45, 45, 56, 48, 97, 111, 50, 49, 97] => lookup_150(),
            [97, 102, 114, 105, 99, 97] => lookup_151(),
            [115, 97, 118, 101] => lookup_152(),
            [118, 105, 118, 111] => lookup_153(),
            [108, 117, 110, 100, 98, 101, 99, 107] => lookup_154(),
            [110, 111, 114, 116, 111, 110] => lookup_155(),
            [120, 110, 45, 45, 120, 104, 113, 53, 50, 49, 98] => lookup_156(),
            [115, 99, 104, 111, 108, 97, 114, 115, 104, 105, 112, 115] => lookup_157(),
            [98, 104] => lookup_158(labels),
            [119, 116, 102] => lookup_159(),
            [98, 101, 116] => lookup_160(),
            [99, 104, 97, 110, 101, 108] => lookup_161(),
            [110, 103, 111] => lookup_162(),
            [120, 110, 45, 45, 102, 122, 121, 115, 56, 100, 54, 57, 117, 118, 103, 109] => {
                lookup_163()
            }
            [105, 116, 97, 117] => lookup_164(),
            [97, 119, 115] => lookup_165(),
            [104, 111, 115, 112, 105, 116, 97, 108] => lookup_166(),
            [99, 98, 97] => lookup_167(),
            [114, 105, 112] => lookup_168(labels),
            [115, 116, 111, 99, 107, 104, 111, 108, 109] => lookup_169(),
            [103, 119] => lookup_170(),
            [104, 109] => lookup_171(),
            [112, 111, 107, 101, 114] => lookup_172(),
            [98, 97, 105, 100, 117] => lookup_173(),
            [110, 97, 109, 101] => lookup_174(labels),
            [98, 114, 105, 100, 103, 101, 115, 116, 111, 110, 101] => lookup_175(),
            [103, 114, 97, 116, 105, 115] => lookup_176(),
            [114, 117, 110] => lookup_177(labels),
            [208, 186, 208, 176, 209, 130, 208, 190, 208, 187, 208, 184, 208, 186] => lookup_178(),
            [98, 117, 122, 122] => lookup_179(),
            [102, 114, 111, 110, 116, 105, 101, 114] => lookup_180(),
            [104, 105, 112, 104, 111, 112] => lookup_181(),
            [109, 111, 101] => lookup_182(),
            [114, 117, 103, 98, 121] => lookup_183(),
            [100, 101, 108, 116, 97] => lookup_184(),
            [231, 189, 145, 231, 171, 153] => lookup_185(),
            [105, 110, 115, 116, 105, 116, 117, 116, 101] => lookup_186(),
            [109, 111, 98, 105] => lookup_187(labels),
            [100, 105, 115, 99, 111, 118, 101, 114] => lookup_188(),
            [97, 117] => lookup_189(labels),
            [108, 98] => lookup_190(labels),
            [112, 97] => lookup_191(labels),
            [112, 121] => lookup_192(labels),
            [97, 114, 99, 104, 105] => lookup_193(),
            [106, 110, 106] => lookup_194(),
            [209, 129, 209, 128, 208, 177] => lookup_195(labels),
            [99, 97, 114, 115] => lookup_196(),
            [108, 116] => lookup_197(labels),
            [112, 97, 114, 116, 115] => lookup_198(),
            [100, 101, 97, 108] => lookup_199(),
            [99, 107] => lookup_200(info, labels),
            [97, 98, 98, 111, 116, 116] => lookup_201(),
            [99, 104, 97, 114, 105, 116, 121] => lookup_202(),
            [97, 110, 113, 117, 97, 110] => lookup_203(),
            [120, 110, 45, 45, 113, 120, 97, 109] => lookup_204(),
            [209, 129, 208, 176, 208, 185, 209, 130] => lookup_205(),
            [104, 105, 116, 97, 99, 104, 105] => lookup_206(),
            [120, 110, 45, 45, 99, 103, 52, 98, 107, 105] => lookup_207(),
            [115, 117, 114, 102] => lookup_208(),
            [120, 110, 45, 45, 109, 103, 98, 112, 108, 50, 102, 104] => lookup_209(),
            [97, 109, 105, 99, 97] => lookup_210(),
            [108, 100, 115] => lookup_211(),
            [109, 105, 116, 115, 117, 98, 105, 115, 104, 105] => lookup_212(),
            [110, 105, 107, 111, 110] => lookup_213(),
            [120, 110, 45, 45, 54, 113, 113, 57, 56, 54, 98, 51, 120, 108] => lookup_214(),
            [120, 110, 45, 45, 112, 49, 97, 105] => lookup_215(),
            [107, 117, 111, 107, 103, 114, 111, 117, 112] => lookup_216(),
            [120, 110, 45, 45, 110, 113, 118, 55, 102, 115, 48, 48, 101, 109, 97] => lookup_217(),
            [110, 105] => lookup_218(labels),
            [110, 117] => lookup_219(labels),
            [98, 114] => lookup_220(labels),
            [97, 112, 97, 114, 116, 109, 101, 110, 116, 115] => lookup_221(),
            [103, 114, 97, 112, 104, 105, 99, 115] => lookup_222(),
            [109, 97, 115, 101, 114, 97, 116, 105] => lookup_223(),
            [109, 107] => lookup_224(labels),
            [97, 98, 117, 100, 104, 97, 98, 105] => lookup_225(),
            [114, 101, 120, 114, 111, 116, 104] => lookup_226(),
            [99, 108, 105, 99, 107] => lookup_227(),
            [112, 114, 111] => lookup_228(labels),
            [112, 115] => lookup_229(labels),
            [114, 101, 108, 105, 97, 110, 99, 101] => lookup_230(),
            [115, 99, 104, 117, 108, 101] => lookup_231(),
            [115, 111, 121] => lookup_232(),
            [116, 114, 97, 100, 105, 110, 103] => lookup_233(),
            [229, 133, 171, 229, 141, 166] => lookup_234(),
            [227, 130, 162, 227, 131, 158, 227, 130, 190, 227, 131, 179] => lookup_235(),
            [120, 110, 45, 45, 102, 108, 119, 51, 53, 49, 101] => lookup_236(),
            [120, 110, 45, 45, 107, 112, 117, 116, 51, 105] => lookup_237(),
            [120, 110, 45, 45, 110, 121, 113, 121, 50, 54, 97] => lookup_238(),
            [116, 106, 109, 97, 120, 120] => lookup_239(),
            [120, 110, 45, 45, 119, 52, 114, 56, 53, 101, 108, 56, 102, 104, 117, 53, 100, 110, 114, 97] => {
                lookup_240()
            }
            [105, 110, 107] => lookup_241(),
            [116, 97, 116, 97, 114] => lookup_242(),
            [116, 105, 101, 110, 100, 97] => lookup_243(),
            [101, 114] => lookup_244(info, labels),
            [116, 101, 110, 110, 105, 115] => lookup_245(),
            [119, 97, 108, 101, 115] => lookup_246(),
            [216, 167, 219, 140, 216, 177, 216, 167, 217, 134] => lookup_247(),
            [119, 104, 111, 115, 119, 104, 111] => lookup_248(),
            [216, 167, 217, 132, 216, 179, 216, 185, 217, 136, 216, 175, 219, 140, 216, 169] => {
                lookup_249()
            }
            [120, 110, 45, 45, 103, 50, 120, 120, 52, 56, 99] => lookup_250(),
            [97, 109, 101, 114, 105, 99, 97, 110, 102, 97, 109, 105, 108, 121] => lookup_251(),
            [98, 117, 115, 105, 110, 101, 115, 115] => lookup_252(labels),
            [102, 105, 115, 104, 105, 110, 103] => lookup_253(),
            [115, 104, 111, 117, 106, 105] => lookup_254(),
            [108, 105, 120, 105, 108] => lookup_255(),
            [103, 112] => lookup_256(labels),
            [109, 101] => lookup_257(labels),
            [102, 97, 114, 109, 101, 114, 115] => lookup_258(),
            [114, 111] => lookup_259(labels),
            [99, 114, 105, 99, 107, 101, 116] => lookup_260(),
            [116, 104, 101, 97, 116, 101, 114] => lookup_261(),
            [120, 110, 45, 45, 117, 110, 117, 112, 52, 121] => lookup_262(),
            [99, 105] => lookup_263(labels),
            [100, 118, 114] => lookup_264(),
            [98, 104, 97, 114, 116, 105] => lookup_265(),
            [116, 111, 107, 121, 111] => lookup_266(),
            [120, 110, 45, 45, 116, 54, 48, 98, 53, 54, 97] => lookup_267(),
            [109, 99] => lookup_268(labels),
            [98, 111, 102, 97] => lookup_269(),
            [208, 177, 208, 179] => lookup_270(),
            [97, 100, 97, 99] => lookup_271(),
            [115, 97, 109, 115, 99, 108, 117, 98] => lookup_272(),
            [109, 97, 100, 114, 105, 100] => lookup_273(),
            [119, 102] => lookup_274(),
            [97, 109, 97, 122, 111, 110] => lookup_275(),
            [120, 110, 45, 45, 109, 103, 98, 98, 104, 49, 97] => lookup_276(),
            [224, 182, 189, 224, 182, 130, 224, 182, 154, 224, 183, 143] => lookup_277(),
            [109, 105, 99, 114, 111, 115, 111, 102, 116] => lookup_278(),
            [233, 163, 158, 229, 136, 169, 230, 181, 166] => lookup_279(),
            [120, 110, 45, 45, 112, 49, 97, 99, 102] => lookup_280(labels),
            [120, 110, 45, 45, 110, 110, 120, 51, 56, 56, 97] => lookup_281(),
            [115, 104, 97, 119] => lookup_282(),
            [118, 105, 100, 101, 111] => lookup_283(),
            [104, 111, 114, 115, 101] => lookup_284(),
            [97, 117, 116, 104, 111, 114] => lookup_285(),
            [231, 189, 145, 231, 187, 156] => lookup_286(),
            [224, 166, 172, 224, 166, 190, 224, 166, 130, 224, 166, 178, 224, 166, 190] => {
                lookup_287()
            }
            [101, 97, 114, 116, 104] => lookup_288(labels),
            [102, 108, 121] => lookup_289(),
            [107, 101, 114, 114, 121, 112, 114, 111, 112, 101, 114, 116, 105, 101, 115] => {
                lookup_290()
            }
            [121, 97, 110, 100, 101, 120] => lookup_291(),
            [98, 105, 111] => lookup_292(),
            [110, 101, 120, 116, 100, 105, 114, 101, 99, 116] => lookup_293(),
            [104, 97, 109, 98, 117, 114, 103] => lookup_294(),
            [118, 105, 115, 97] => lookup_295(),
            [99, 97, 110, 99, 101, 114, 114, 101, 115, 101, 97, 114, 99, 104] => lookup_296(),
            [115, 108] => lookup_297(labels),
            [98, 111, 111, 107] => lookup_298(),
            [120, 110, 45, 45, 101, 99, 107, 118, 100, 116, 99, 57, 100] => lookup_299(),
            [108, 117, 120, 101] => lookup_300(),
            [110, 97, 116, 117, 114, 97] => lookup_301(),
            [111, 112, 101, 110] => lookup_302(),
            [217, 133, 217, 136, 216, 177, 217, 138, 216, 170, 216, 167, 217, 134, 217, 138, 216, 167] => {
                lookup_303()
            }
            [105, 115, 116, 97, 110, 98, 117, 108] => lookup_304(),
            [107, 105, 116, 99, 104, 101, 110] => lookup_305(),
            [118, 117] => lookup_306(labels),
            [112, 104, 105, 108, 105, 112, 115] => lookup_307(),
            [97, 98, 108, 101] => lookup_308(),
            [97, 98, 111, 103, 97, 100, 111] => lookup_309(),
            [108, 105, 118, 101] => lookup_310(),
            [109, 108] => lookup_311(labels),
            [97, 109] => lookup_312(labels),
            [109, 109] => lookup_313(info, labels),
            [99, 114, 111, 119, 110] => lookup_314(),
            [120, 110, 45, 45, 109, 103, 98, 97, 51, 97, 52, 102, 114, 97] => lookup_315(),
            [108, 105, 109, 111] => lookup_316(),
            [224, 180, 173, 224, 180, 190, 224, 180, 176, 224, 180, 164, 224, 180, 130] => {
                lookup_317()
            }
            [110, 111, 119, 114, 117, 122] => lookup_318(),
            [113, 117, 101, 98, 101, 99] => lookup_319(),
            [112, 105, 99, 115] => lookup_320(),
            [103, 113] => lookup_321(),
            [106, 101, 101, 112] => lookup_322(),
            [103, 114, 97, 105, 110, 103, 101, 114] => lookup_323(),
            [114, 101, 110, 116] => lookup_324(),
            [100, 101, 115, 105] => lookup_325(),
            [115, 116, 97, 116, 101, 102, 97, 114, 109] => lookup_326(),
            [99, 111, 111, 112] => lookup_327(),
            [115, 116, 111, 114, 97, 103, 101] => lookup_328(),
            [98, 111, 111] => lookup_329(),
            [120, 110, 45, 45, 109, 103, 98, 97, 121, 104, 55, 103, 112, 97] => lookup_330(),
            [102, 111, 114, 100] => lookup_331(),
            [105, 112, 105, 114, 97, 110, 103, 97] => lookup_332(),
            [108, 111, 97, 110] => lookup_333(),
            [116, 97, 114, 103, 101, 116] => lookup_334(),
            [115, 121] => lookup_335(labels),
            [104, 107] => lookup_336(labels),
            [102, 105, 110, 97, 110, 99, 101] => lookup_337(),
            [116, 105, 99, 107, 101, 116, 115] => lookup_338(),
            [98, 97, 115, 107, 101, 116, 98, 97, 108, 108] => lookup_339(labels),
            [115, 117, 114, 103, 101, 114, 121] => lookup_340(),
            [116, 117, 105] => lookup_341(),
            [119, 105, 108, 108, 105, 97, 109, 104, 105, 108, 108] => lookup_342(),
            [116, 111, 115, 104, 105, 98, 97] => lookup_343(),
            [224, 164, 149, 224, 165, 137, 224, 164, 174] => lookup_344(),
            [97, 117, 100, 105] => lookup_345(),
            [102, 111, 111, 100, 110, 101, 116, 119, 111, 114, 107] => lookup_346(),
            [120, 110, 45, 45, 56, 48, 97, 100, 120, 104, 107, 115] => lookup_347(),
            [120, 110, 45, 45, 111, 51, 99, 119, 52, 104] => lookup_348(labels),
            [103, 117, 103, 101] => lookup_349(),
            [100, 105, 114, 101, 99, 116] => lookup_350(),
            [97, 117, 116, 111] => lookup_351(),
            [100, 111, 109, 97, 105, 110, 115] => lookup_352(),
            [104, 100, 102, 99, 98, 97, 110, 107] => lookup_353(),
            [114, 101, 112, 97, 105, 114] => lookup_354(),
            [108, 112, 108] => lookup_355(),
            [99, 97, 114, 101, 101, 114] => lookup_356(),
            [99, 119] => lookup_357(labels),
            [109, 112] => lookup_358(),
            [108, 97, 110, 120, 101, 115, 115] => lookup_359(),
            [110, 101, 120, 117, 115] => lookup_360(),
            [216, 167, 217, 132, 216, 167, 216, 177, 216, 175, 217, 134] => lookup_361(),
            [217, 133, 216, 181, 216, 177] => lookup_362(),
            [98, 101, 101, 114] => lookup_363(),
            [98, 118] => lookup_364(),
            [115, 119, 105, 115, 115] => lookup_365(),
            [118, 105, 107, 105, 110, 103] => lookup_366(),
            [120, 110, 45, 45, 56, 48, 97, 115, 101, 104, 100, 98] => lookup_367(),
            [116, 114, 97, 118, 101, 108] => lookup_368(),
            [107, 110] => lookup_369(labels),
            [224, 164, 168, 224, 165, 135, 224, 164, 159] => lookup_370(),
            [99, 97, 112, 105, 116, 97, 108] => lookup_371(),
            [120, 110, 45, 45, 99, 99, 107, 50, 98, 51, 98] => lookup_372(),
            [121, 97, 109, 97, 120, 117, 110] => lookup_373(),
            [115, 100] => lookup_374(labels),
            [215, 167, 215, 149, 215, 157] => lookup_375(),
            [120, 110, 45, 45, 102, 99, 116, 52, 50, 57, 107] => lookup_376(),
            [103, 108, 111, 98, 97, 108] => lookup_377(),
            [106, 111, 98, 117, 114, 103] => lookup_378(),
            [111, 116, 115, 117, 107, 97] => lookup_379(),
            [115, 97, 110, 100, 118, 105, 107] => lookup_380(),
            [108, 105] => lookup_381(labels),
            [109, 111, 109] => lookup_382(labels),
            [112, 101, 116] => lookup_383(),
            [97, 102, 97, 109, 105, 108, 121, 99, 111, 109, 112, 97, 110, 121] => lookup_384(),
            [99, 101, 114, 110] => lookup_385(),
            [115, 97, 97, 114, 108, 97, 110, 100] => lookup_386(),
            [115, 99, 104, 119, 97, 114, 122] => lookup_387(),
            [213, 176, 213, 161, 213, 181] => lookup_388(),
            [114, 101, 118, 105, 101, 119, 115] => lookup_389(),
            [103, 121] => lookup_390(labels),
            [112, 114, 111, 109, 111] => lookup_391(),
            [109, 105, 116] => lookup_392(),
            [117, 122] => lookup_393(labels),
            [118, 101, 114, 115, 105, 99, 104, 101, 114, 117, 110, 103] => lookup_394(),
            [228, 184, 173, 230, 150, 135, 231, 189, 145] => lookup_395(),
            [100, 97, 100] => lookup_396(),
            [103, 97, 109, 101] => lookup_397(),
            [97, 108, 105, 112, 97, 121] => lookup_398(),
            [97, 115, 115, 111, 99, 105, 97, 116, 101, 115] => lookup_399(),
            [97, 102, 108] => lookup_400(),
            [115, 97] => lookup_401(labels),
            [115, 103] => lookup_402(labels),
            [216, 168, 217, 138, 216, 170, 217, 131] => lookup_403(),
            [112, 105, 111, 110, 101, 101, 114] => lookup_404(),
            [100, 117, 99, 107] => lookup_405(),
            [99, 121] => lookup_406(labels),
            [100, 117, 110, 108, 111, 112] => lookup_407(),
            [101, 117] => lookup_408(labels),
            [116, 117, 115, 104, 117] => lookup_409(),
            [115, 104] => lookup_410(labels),
            [115, 116, 99] => lookup_411(),
            [115, 116, 99, 103, 114, 111, 117, 112] => lookup_412(),
            [110, 97, 103, 111, 121, 97] => lookup_413(),
            [97, 122] => lookup_414(labels),
            [120, 110, 45, 45, 50, 115, 99, 114, 106, 57, 99] => lookup_415(),
            [108, 97, 109, 101, 114] => lookup_416(),
            [109, 97, 110, 103, 111] => lookup_417(),
            [101, 118, 101, 110, 116, 115] => lookup_418(labels),
            [112, 99, 99, 119] => lookup_419(),
            [109, 99, 107, 105, 110, 115, 101, 121] => lookup_420(),
            [101, 120, 112, 101, 114, 116] => lookup_421(),
            [224, 166, 173, 224, 166, 190, 224, 167, 176, 224, 166, 164] => lookup_422(),
            [116, 114, 97, 118, 101, 108, 101, 114, 115, 105, 110, 115, 117, 114, 97, 110, 99, 101] => {
                lookup_423()
            }
            [98, 102] => lookup_424(labels),
            [111, 110, 105, 111, 110] => lookup_425(),
            [217, 190, 216, 167, 217, 131, 216, 179, 216, 170, 216, 167, 217, 134] => lookup_426(),
            [107, 103] => lookup_427(labels),
            [115, 97, 115] => lookup_428(),
            [120, 110, 45, 45, 109, 103, 98, 97, 97, 107, 99, 55, 100, 118, 102] => lookup_429(),
            [105, 110, 102, 111] => lookup_430(labels),
            [100, 101, 108, 105, 118, 101, 114, 121] => lookup_431(),
            [118, 111, 100, 107, 97] => lookup_432(),
            [112, 101] => lookup_433(labels),
            [98, 122] => lookup_434(labels),
            [112, 114, 111, 102] => lookup_435(),
            [100, 101, 109, 111, 99, 114, 97, 116] => lookup_436(),
            [120, 110, 45, 45, 108, 49, 97, 99, 99] => lookup_437(),
            [209, 128, 209, 132] => lookup_438(),
            [216, 185, 217, 133, 216, 167, 217, 134] => lookup_439(),
            [103, 111, 111] => lookup_440(),
            [110, 105, 110, 106, 97] => lookup_441(),
            [110, 114, 119] => lookup_442(),
            [116, 114, 117, 115, 116] => lookup_443(),
            [103, 97] => lookup_444(),
            [98, 122, 104] => lookup_445(),
            [99, 111] => lookup_446(labels),
            [110, 101, 116] => lookup_447(labels),
            [98, 108, 97, 99, 107, 102, 114, 105, 100, 97, 121] => lookup_448(),
            [119, 97, 116, 99, 104, 101, 115] => lookup_449(),
            [121, 116] => lookup_450(labels),
            [97, 99, 99, 111, 117, 110, 116, 97, 110, 116, 115] => lookup_451(),
            [99, 105, 116, 105, 99] => lookup_452(),
            [115, 104, 105, 97] => lookup_453(),
            [112, 110] => lookup_454(labels),
            [229, 185, 191, 228, 184, 156] => lookup_455(),
            [121, 117, 110] => lookup_456(),
            [111, 114, 103, 97, 110, 105, 99] => lookup_457(),
            [230, 155, 184, 231, 177, 141] => lookup_458(),
            [121, 111, 100, 111, 98, 97, 115, 104, 105] => lookup_459(),
            [115, 117, 112, 112, 108, 105, 101, 115] => lookup_460(),
            [119, 111, 114, 108, 100] => lookup_461(),
            [109, 120] => lookup_462(labels),
            [100, 111, 116] => lookup_463(),
            [120, 110, 45, 45, 109, 105, 120, 56, 57, 49, 102] => lookup_464(),
            [99, 110] => lookup_465(labels),
            [100, 117, 114, 98, 97, 110] => lookup_466(),
            [104, 111, 117, 115, 101] => lookup_467(),
            [116, 111, 112] => lookup_468(labels),
            [109, 97, 114, 114, 105, 111, 116, 116] => lookup_469(),
            [120, 110, 45, 45, 99, 122, 114, 115, 48, 116] => lookup_470(),
            [106, 111] => lookup_471(labels),
            [120, 110, 45, 45, 98, 99, 107, 49, 98, 57, 97, 53, 100, 114, 101, 52, 99] => {
                lookup_472()
            }
            [101, 100, 101, 107, 97] => lookup_473(),
            [115, 98, 105] => lookup_474(),
            [121, 97, 104, 111, 111] => lookup_475(),
            [98, 101, 97, 117, 116, 121] => lookup_476(),
            [103, 109] => lookup_477(),
            [98, 97, 110, 107] => lookup_478(),
            [98, 98, 118, 97] => lookup_479(),
            [104, 121, 117, 110, 100, 97, 105] => lookup_480(),
            [208, 188, 208, 186, 208, 180] => lookup_481(),
            [120, 110, 45, 45, 109, 103, 98, 101, 114, 112, 52, 97, 53, 100, 52, 97, 114] => {
                lookup_482()
            }
            [108, 105, 108, 108, 121] => lookup_483(),
            [217, 133, 217, 132, 217, 138, 216, 179, 217, 138, 216, 167] => lookup_484(),
            [98, 111, 115, 99, 104] => lookup_485(),
            [100, 105, 121] => lookup_486(),
            [117, 103] => lookup_487(labels),
            [99, 97, 109, 101, 114, 97] => lookup_488(),
            [98, 97, 117, 104, 97, 117, 115] => lookup_489(),
            [230, 190, 179, 233, 150, 128] => lookup_490(),
            [102, 101, 114, 114, 101, 114, 111] => lookup_491(),
            [107, 112, 110] => lookup_492(),
            [98, 108, 111, 111, 109, 98, 101, 114, 103] => lookup_493(),
            [97, 110, 122] => lookup_494(),
            [99, 115, 99] => lookup_495(),
            [109, 97, 99, 121, 115] => lookup_496(),
            [100, 101] => lookup_497(labels),
            [108, 105, 110, 99, 111, 108, 110] => lookup_498(),
            [115, 101, 99, 117, 114, 101] => lookup_499(),
            [116, 114, 97, 118, 101, 108, 101, 114, 115] => lookup_500(),
            [112, 114, 97, 109, 101, 114, 105, 99, 97] => lookup_501(),
            [120, 110, 45, 45, 102, 106, 113, 55, 50, 48, 97] => lookup_502(),
            [101, 117, 115] => lookup_503(labels),
            [116, 97, 116, 116, 111, 111] => lookup_504(),
            [227, 129, 191, 227, 130, 147, 227, 129, 170] => lookup_505(),
            [227, 130, 176, 227, 131, 188, 227, 130, 176, 227, 131, 171] => lookup_506(),
            [100, 111, 119, 110, 108, 111, 97, 100] => lookup_507(),
            [106, 112, 109, 111, 114, 103, 97, 110] => lookup_508(),
            [116, 105, 114, 111, 108] => lookup_509(),
            [121, 111, 107, 111, 104, 97, 109, 97] => lookup_510(),
            [120, 110, 45, 45, 119, 103, 98, 104, 49, 99] => lookup_511(),
            [103, 100] => lookup_512(labels),
            [106, 109, 112] => lookup_513(),
            [107, 121, 111, 116, 111] => lookup_514(),
            [120, 110, 45, 45, 102, 112, 99, 114, 106, 57, 99, 51, 100] => lookup_515(),
            [107, 111, 101, 108, 110] => lookup_516(),
            [115, 104, 97, 114, 112] => lookup_517(),
            [104, 97, 117, 115] => lookup_518(),
            [109, 111, 105] => lookup_519(),
            [99, 97, 115, 97] => lookup_520(labels),
            [108, 105, 103, 104, 116, 105, 110, 103] => lookup_521(),
            [97, 101, 114, 111] => lookup_522(labels),
            [112, 114, 117, 100, 101, 110, 116, 105, 97, 108] => lookup_523(),
            [116, 106] => lookup_524(labels),
            [100, 101, 110, 116, 105, 115, 116] => lookup_525(),
            [100, 101, 97, 108, 115] => lookup_526(),
            [104, 101, 108, 115, 105, 110, 107, 105] => lookup_527(),
            [98, 115] => lookup_528(labels),
            [106, 99, 98] => lookup_529(),
            [99, 121, 111, 117] => lookup_530(),
            [102, 97, 105, 116, 104] => lookup_531(labels),
            [230, 148, 191, 229, 186, 156] => lookup_532(),
            [98, 105] => lookup_533(labels),
            [108, 116, 100, 97] => lookup_534(),
            [120, 110, 45, 45, 110, 103, 98, 99, 53, 97, 122, 100] => lookup_535(),
            [119, 101, 100, 100, 105, 110, 103] => lookup_536(),
            [108, 97, 115, 97, 108, 108, 101] => lookup_537(),
            [120, 110, 45, 45, 99, 122, 114, 54, 57, 52, 98] => lookup_538(),
            [109, 105, 108] => lookup_539(),
            [118, 110] => lookup_540(labels),
            [117, 111, 108] => lookup_541(),
            [97, 111] => lookup_542(labels),
            [104, 116] => lookup_543(labels),
            [99, 101, 111] => lookup_544(),
            [102, 117, 116, 98, 111, 108] => lookup_545(),
            [103, 105] => lookup_546(labels),
            [120, 110, 45, 45, 100, 49, 97, 99, 106, 51, 98] => lookup_547(),
            [108, 105, 112, 115, 121] => lookup_548(),
            [120, 110, 45, 45, 109, 103, 98, 98, 104, 49, 97, 55, 49, 101] => lookup_549(),
            [109, 114] => lookup_550(labels),
            [120, 110, 45, 45, 102, 105, 113, 122, 57, 115] => lookup_551(),
            [216, 168, 216, 167, 216, 177, 216, 170] => lookup_552(),
            [122, 109] => lookup_553(labels),
            [97, 109, 102, 97, 109] => lookup_554(),
            [98, 117, 100, 97, 112, 101, 115, 116] => lookup_555(),
            [99, 104, 101, 97, 112] => lookup_556(),
            [99, 111, 109, 109, 98, 97, 110, 107] => lookup_557(),
            [101, 115, 113] => lookup_558(),
            [104, 105, 118] => lookup_559(),
            [104, 111, 115, 116, 105, 110, 103] => lookup_560(labels),
            [100, 101, 103, 114, 101, 101] => lookup_561(),
            [105, 102, 109] => lookup_562(),
            [120, 110, 45, 45, 115, 57, 98, 114, 106, 57, 99] => lookup_563(),
            [106, 101] => lookup_564(labels),
            [98, 105, 98, 108, 101] => lookup_565(),
            [111, 98, 115, 101, 114, 118, 101, 114] => lookup_566(),
            [115, 98, 115] => lookup_567(),
            [120, 110, 45, 45, 56, 121, 48, 97, 48, 54, 51, 97] => lookup_568(),
            [103, 97, 114, 100, 101, 110] => lookup_569(),
            [110, 103] => lookup_570(labels),
            [99, 97, 108] => lookup_571(),
            [99, 111, 114, 115, 105, 99, 97] => lookup_572(),
            [106, 108, 108] => lookup_573(),
            [108, 97, 110, 99, 105, 97] => lookup_574(),
            [105, 109, 109, 111] => lookup_575(),
            [99, 114, 101, 100, 105, 116, 117, 110, 105, 111, 110] => lookup_576(),
            [101, 112, 115, 111, 110] => lookup_577(),
            [99, 97, 115, 104] => lookup_578(),
            [99, 111, 109, 109, 117, 110, 105, 116, 121] => lookup_579(labels),
            [105, 99, 98, 99] => lookup_580(),
            [119, 101, 98, 101, 114] => lookup_581(),
            [233, 166, 153, 230, 160, 188, 233, 135, 140, 230, 139, 137] => lookup_582(),
            [98, 110, 112, 112, 97, 114, 105, 98, 97, 115] => lookup_583(),
            [105, 108] => lookup_584(labels),
            [101, 120, 112, 114, 101, 115, 115] => lookup_585(),
            [104, 110] => lookup_586(labels),
            [114, 101, 115, 116] => lookup_587(),
            [120, 110, 45, 45, 110, 103, 98, 114, 120] => lookup_588(),
            [103, 109, 120] => lookup_589(),
            [120, 110, 45, 45, 53, 116, 122, 109, 53, 103] => lookup_590(),
            [230, 139, 155, 232, 129, 152] => lookup_591(),
            [98, 97, 110, 100] => lookup_592(),
            [102, 114] => lookup_593(labels),
            [120, 110, 45, 45, 109, 103, 98, 120, 52, 99, 100, 48, 97, 98] => lookup_594(),
            [98, 111, 115, 116, 111, 110] => lookup_595(),
            [98, 117, 103, 97, 116, 116, 105] => lookup_596(),
            [100, 101, 118] => lookup_597(labels),
            [105, 116, 118] => lookup_598(),
            [99, 111, 111, 108] => lookup_599(labels),
            [99, 104, 97, 115, 101] => lookup_600(),
            [112, 117, 98] => lookup_601(labels),
            [230, 190, 179, 233, 151, 168] => lookup_602(),
            [115, 101, 119] => lookup_603(),
            [98, 111, 109] => lookup_604(),
            [99, 111, 109, 112, 97, 110, 121] => lookup_605(),
            [107, 122] => lookup_606(labels),
            [112, 105, 100] => lookup_607(),
            [100, 105, 114, 101, 99, 116, 111, 114, 121] => lookup_608(),
            [115, 108, 105, 110, 103] => lookup_609(),
            [115, 112, 111, 116] => lookup_610(),
            [227, 130, 187, 227, 131, 188, 227, 131, 171] => lookup_611(),
            [105, 101] => lookup_612(labels),
            [99, 104, 105, 110, 116, 97, 105] => lookup_613(),
            [110, 101, 119] => lookup_614(),
            [227, 130, 185, 227, 131, 136, 227, 130, 162] => lookup_615(),
            [98, 114, 117, 115, 115, 101, 108, 115] => lookup_616(),
            [103, 116] => lookup_617(labels),
            [120, 110, 45, 45, 106, 108, 113, 52, 56, 48, 110, 50, 114, 103] => lookup_618(),
            [109, 121] => lookup_619(labels),
            [100, 101, 110, 116, 97, 108] => lookup_620(),
            [229, 129, 165, 229, 186, 183] => lookup_621(),
            [120, 110, 45, 45, 115, 101, 115, 53, 53, 52, 103] => lookup_622(),
            [112, 97, 114, 115] => lookup_623(),
            [120, 110, 45, 45, 53, 53, 113, 119, 52, 50, 103] => lookup_624(),
            [120, 110, 45, 45, 111, 116, 117, 55, 57, 54, 100] => lookup_625(),
            [120, 110, 45, 45, 56, 48, 97, 113, 101, 99, 100, 114, 49, 97] => lookup_626(),
            [110, 101] => lookup_627(),
            [97, 108, 108, 102, 105, 110, 97, 110, 122] => lookup_628(),
            [120, 110, 45, 45, 118, 117, 113, 56, 54, 49, 98] => lookup_629(),
            [109, 101, 101, 116] => lookup_630(),
            [98, 111, 97, 116, 115] => lookup_631(),
            [229, 164, 169, 228, 184, 187, 230, 149, 153] => lookup_632(),
            [120, 110, 45, 45, 106, 54, 119, 49, 57, 51, 103] => lookup_633(labels),
            [103, 108, 101] => lookup_634(),
            [102, 117, 110] => lookup_635(),
            [108, 101, 120, 117, 115] => lookup_636(),
            [217, 131, 217, 136, 217, 133] => lookup_637(),
            [105, 101, 101, 101] => lookup_638(),
            [116, 101, 97, 109] => lookup_639(labels),
            [120, 110, 45, 45, 116, 105, 113, 52, 57, 120, 113, 121, 106] => lookup_640(),
            [109, 98, 97] => lookup_641(),
            [101, 99, 111] => lookup_642(),
            [121, 97, 99, 104, 116, 115] => lookup_643(),
            [101, 116] => lookup_644(labels),
            [115, 114] => lookup_645(),
            [108, 97] => lookup_646(labels),
            [108, 101, 103, 97, 108] => lookup_647(),
            [110, 101, 120, 116] => lookup_648(),
            [115, 111, 104, 117] => lookup_649(),
            [120, 110, 45, 45, 109, 103, 98, 97, 97, 109, 55, 97, 56, 104] => lookup_650(),
            [217, 190, 216, 167, 218, 169, 216, 179, 216, 170, 216, 167, 217, 134] => lookup_651(),
            [99, 111, 109, 112, 97, 114, 101] => lookup_652(),
            [216, 168, 218, 190, 216, 167, 216, 177, 216, 170] => lookup_653(),
            [112, 104, 97, 114, 109, 97, 99, 121] => lookup_654(),
            [114, 115, 118, 112] => lookup_655(),
            [102, 105, 114, 101] => lookup_656(),
            [119, 105, 101, 110] => lookup_657(),
            [99, 111, 109, 115, 101, 99] => lookup_658(),
            [115, 107, 105, 110] => lookup_659(),
            [99, 108, 97, 105, 109, 115] => lookup_660(),
            [120, 110, 45, 45, 113, 57, 106, 121, 98, 52, 99] => lookup_661(),
            [208, 181, 209, 142] => lookup_662(),
            [116, 97, 111, 98, 97, 111] => lookup_663(),
            [119, 111, 114, 107] => lookup_664(labels),
            [120, 110, 45, 45, 118, 101, 114, 109, 103, 101, 110, 115, 98, 101, 114, 97, 116, 117, 110, 103, 45, 112, 119, 98] => {
                lookup_665()
            }
            [103, 117, 97, 114, 100, 105, 97, 110] => lookup_666(),
            [105, 110, 116, 101, 114, 110, 97, 116, 105, 111, 110, 97, 108] => lookup_667(),
            [101, 120, 116, 114, 97, 115, 112, 97, 99, 101] => lookup_668(),
            [112, 108, 97, 121, 115, 116, 97, 116, 105, 111, 110] => lookup_669(),
            [98, 108, 97, 99, 107] => lookup_670(),
            [119, 97, 110, 103] => lookup_671(),
            [98, 114, 111, 107, 101, 114] => lookup_672(),
            [116, 101, 108] => lookup_673(),
            [120, 110, 45, 45, 107, 112, 114, 119, 49, 51, 100] => lookup_674(),
            [100, 114, 105, 118, 101] => lookup_675(),
            [104, 101, 114, 109, 101, 115] => lookup_676(),
            [115, 99, 106, 111, 104, 110, 115, 111, 110] => lookup_677(),
            [114, 117, 104, 114] => lookup_678(),
            [103, 109, 111] => lookup_679(),
            [97, 108, 115, 116, 111, 109] => lookup_680(),
            [109, 111, 110, 115, 116, 101, 114] => lookup_681(),
            [115, 119, 105, 102, 116, 99, 111, 118, 101, 114] => lookup_682(),
            [116, 111, 111, 108, 115] => lookup_683(),
            [112, 114, 111, 100] => lookup_684(),
            [116, 114, 97, 105, 110, 105, 110, 103] => lookup_685(),
            [120, 121, 122] => lookup_686(labels),
            [99, 114, 117, 105, 115, 101] => lookup_687(),
            [118, 111, 108, 107, 115, 119, 97, 103, 101, 110] => lookup_688(),
            [120, 110, 45, 45, 99, 50, 98, 114, 55, 103] => lookup_689(),
            [98, 105, 100] => lookup_690(),
            [97, 103, 97, 107, 104, 97, 110] => lookup_691(),
            [117, 121] => lookup_692(labels),
            [118, 97, 99, 97, 116, 105, 111, 110, 115] => lookup_693(),
            [230, 150, 176, 233, 151, 187] => lookup_694(),
            [116, 111, 114, 97, 121] => lookup_695(),
            [102, 101, 101, 100, 98, 97, 99, 107] => lookup_696(),
            [115, 116, 97, 116, 101, 98, 97, 110, 107] => lookup_697(),
            [107, 114, 100] => lookup_698(labels),
            [118, 105, 118, 97] => lookup_699(),
            [224, 164, 173, 224, 164, 190, 224, 164, 176, 224, 164, 164] => lookup_700(),
            [99, 122] => lookup_701(labels),
            [109, 97] => lookup_702(labels),
            [97, 97, 114, 112] => lookup_703(),
            [98, 116] => lookup_704(labels),
            [105, 110, 103] => lookup_705(),
            [105, 110, 118, 101, 115, 116, 109, 101, 110, 116, 115] => lookup_706(),
            [107, 101, 114, 114, 121, 104, 111, 116, 101, 108, 115] => lookup_707(),
            [115, 112, 97] => lookup_708(),
            [120, 110, 45, 45, 101, 49, 97, 52, 99] => lookup_709(),
            [104, 111, 108, 105, 100, 97, 121] => lookup_710(),
            [114, 121, 117, 107, 121, 117] => lookup_711(),
            [120, 110, 45, 45, 111, 103, 98, 112, 102, 56, 102, 108] => lookup_712(),
            [100, 105, 97, 109, 111, 110, 100, 115] => lookup_713(),
            [120, 110, 45, 45, 57, 101, 116, 53, 50, 117] => lookup_714(),
            [120, 110, 45, 45, 109, 103, 98, 101, 114, 112, 52, 97, 53, 100, 52, 97, 56, 55, 103] => {
                lookup_715()
            }
            [116, 122] => lookup_716(labels),
            [111, 109, 101, 103, 97] => lookup_717(),
            [118, 99] => lookup_718(labels),
            [101, 117, 114, 111, 118, 105, 115, 105, 111, 110] => lookup_719(),
            [216, 167, 217, 132, 217, 138, 217, 133, 217, 134] => lookup_720(),
            [110, 101, 116, 98, 97, 110, 107] => lookup_721(),
            [102, 108, 105, 99, 107, 114] => lookup_722(),
            [118, 105, 115, 105, 111, 110] => lookup_723(),
            [103, 97, 109, 101, 115] => lookup_724(),
            [109, 105, 110, 105] => lookup_725(),
            [112, 97, 103, 101] => lookup_726(labels),
            [108, 99] => lookup_727(labels),
            [108, 105, 109, 105, 116, 101, 100] => lookup_728(),
            [112, 108, 97, 121] => lookup_729(),
            [114, 105, 108] => lookup_730(),
            [116, 101, 118, 97] => lookup_731(),
            [97, 114, 112, 97] => lookup_732(labels),
            [110, 111, 119, 116, 118] => lookup_733(),
            [120, 110, 45, 45, 57, 107, 114, 116, 48, 48, 97] => lookup_734(),
            [209, 128, 209, 131, 209, 129] => lookup_735(labels),
            [111, 110, 121, 111, 117, 114, 115, 105, 100, 101] => lookup_736(),
            [228, 188, 129, 228, 184, 154] => lookup_737(),
            [98, 108, 117, 101] => lookup_738(),
            [206, 181, 207, 133] => lookup_739(),
            [122, 119] => lookup_740(labels),
            [97, 114, 116, 101] => lookup_741(),
            [216, 168, 216, 167, 216, 178, 216, 167, 216, 177] => lookup_742(),
            [110, 97] => lookup_743(labels),
            [115, 110] => lookup_744(labels),
            [104, 97, 105, 114] => lookup_745(),
            [99, 111, 111, 107, 105, 110, 103] => lookup_746(),
            [103, 97, 108, 108, 117, 112] => lookup_747(),
            [120, 110, 45, 45, 103, 101, 99, 114, 106, 57, 99] => lookup_748(),
            [109, 97, 110] => lookup_749(),
            [116, 111, 119, 110] => lookup_750(),
            [115, 116, 111, 114, 101] => lookup_751(labels),
            [99, 105, 115, 99, 111] => lookup_752(),
            [109, 111, 98, 105, 108, 101] => lookup_753(),
            [98, 111, 110, 100] => lookup_754(),
            [120, 110, 45, 45, 109, 103, 98, 99, 48, 97, 57, 97, 122, 99, 103] => lookup_755(),
            [100, 111, 99, 116, 111, 114] => lookup_756(),
            [216, 179, 217, 136, 216, 177, 217, 138, 216, 167] => lookup_757(),
            [105, 100] => lookup_758(labels),
            [103, 117, 114, 117] => lookup_759(),
            [99, 97, 110, 111, 110] => lookup_760(),
            [99, 97, 102, 101] => lookup_761(),
            [104, 111, 110, 100, 97] => lookup_762(),
            [105, 99, 101] => lookup_763(),
            [109, 119] => lookup_764(labels),
            [99, 97, 112, 105, 116, 97, 108, 111, 110, 101] => lookup_765(),
            [108, 105, 110, 100, 101] => lookup_766(),
            [115, 116, 97, 112, 108, 101, 115] => lookup_767(),
            [118, 105, 112] => lookup_768(),
            [105, 98, 109] => lookup_769(),
            [119, 101, 97, 116, 104, 101, 114] => lookup_770(),
            [119, 116, 99] => lookup_771(),
            [114, 105, 111] => lookup_772(),
            [116, 97, 120] => lookup_773(),
            [102, 105] => lookup_774(labels),
            [99, 108] => lookup_775(labels),
            [109, 97, 110, 97, 103, 101, 109, 101, 110, 116] => lookup_776(labels),
            [109, 116] => lookup_777(labels),
            [98, 101] => lookup_778(labels),
            [115, 111, 108, 117, 116, 105, 111, 110, 115] => lookup_779(),
            [103, 114] => lookup_780(labels),
            [229, 133, 172, 231, 155, 138] => lookup_781(),
            [97, 114, 97, 109, 99, 111] => lookup_782(),
            [102, 105, 110, 97, 110, 99, 105, 97, 108] => lookup_783(labels),
            [99, 109] => lookup_784(labels),
            [99, 108, 111, 116, 104, 105, 110, 103] => lookup_785(),
            [109, 97, 116, 116, 101, 108] => lookup_786(),
            [99, 97, 114] => lookup_787(),
            [116, 114] => lookup_788(labels),
            [116, 109, 97, 108, 108] => lookup_789(),
            [116, 111, 116, 97, 108] => lookup_790(),
            [99, 102, 97] => lookup_791(),
            [118, 111, 116, 105, 110, 103] => lookup_792(),
            [110, 111] => lookup_793(labels),
            [111, 107, 105, 110, 97, 119, 97] => lookup_794(),
            [216, 167, 217, 132, 216, 179, 216, 185, 217, 136, 216, 175, 219, 140, 219, 131] => {
                lookup_795()
            }
            [97, 99, 99, 111, 117, 110, 116, 97, 110, 116] => lookup_796(),
            [206, 181, 206, 187] => lookup_797(),
            [120, 110, 45, 45, 52, 53, 98, 114, 106, 57, 99] => lookup_798(),
            [116, 97, 105, 112, 101, 105] => lookup_799(),
            [216, 167, 217, 132, 216, 179, 216, 185, 217, 136, 216, 175, 217, 138, 217, 135] => {
                lookup_800()
            }
            [107, 112, 109, 103] => lookup_801(),
            [109, 101, 109, 111, 114, 105, 97, 108] => lookup_802(),
            [98, 117, 105, 108, 100] => lookup_803(),
            [101, 103] => lookup_804(labels),
            [98, 109] => lookup_805(labels),
            [115, 107] => lookup_806(labels),
            [116, 111] => lookup_807(labels),
            [98, 105, 110, 103] => lookup_808(),
            [107, 105, 97] => lookup_809(),
            [116, 100] => lookup_810(labels),
            [112, 105, 110] => lookup_811(),
            [224, 164, 173, 224, 164, 190, 224, 164, 176, 224, 164, 164, 224, 164, 174, 224, 165, 141] => {
                lookup_812()
            }
            [120, 110, 45, 45, 121, 102, 114, 111, 52, 105, 54, 55, 111] => lookup_813(),
            [118, 111, 108, 118, 111] => lookup_814(),
            [99, 111, 109] => lookup_815(labels),
            [104, 98, 111] => lookup_816(),
            [108, 111, 97, 110, 115] => lookup_817(),
            [116, 105, 102, 102, 97, 110, 121] => lookup_818(),
            [105, 109] => lookup_819(labels),
            [112, 107] => lookup_820(labels),
            [101, 113, 117, 105, 112, 109, 101, 110, 116] => lookup_821(),
            [112, 97, 114, 105, 115] => lookup_822(),
            [109, 97, 112] => lookup_823(),
            [115, 111] => lookup_824(labels),
            [98, 101, 97, 116, 115] => lookup_825(),
            [102, 105, 114, 101, 115, 116, 111, 110, 101] => lookup_826(),
            [120, 110, 45, 45, 99, 108, 99, 104, 99, 48, 101, 97, 48, 98, 50, 103, 50, 97, 57, 103, 99, 100] => {
                lookup_827()
            }
            [112, 105, 110, 107] => lookup_828(),
            [99, 97, 114, 100, 115] => lookup_829(),
            [103, 111, 118] => lookup_830(),
            [110, 111, 107, 105, 97] => lookup_831(),
            [109, 117, 115, 101, 117, 109] => lookup_832(labels),
            [110, 114, 97] => lookup_833(),
            [112, 111, 114, 110] => lookup_834(labels),
            [110, 101, 116, 119, 111, 114, 107] => lookup_835(labels),
            [115, 107, 121] => lookup_836(),
            [116, 97, 108, 107] => lookup_837(),
            [116, 111, 121, 115] => lookup_838(),
            [208, 190, 208, 189, 208, 187, 208, 176, 208, 185, 208, 189] => lookup_839(),
            [100, 100, 115] => lookup_840(),
            [115, 105] => lookup_841(labels),
            [105, 110, 99] => lookup_842(),
            [107, 102, 104] => lookup_843(),
            [107, 105, 110, 100, 101, 114] => lookup_844(),
            [105, 109, 100, 98] => lookup_845(),
            [113, 97] => lookup_846(labels),
            [109, 101, 110, 117] => lookup_847(labels),
            [115, 101, 108, 101, 99, 116] => lookup_848(),
            [115, 112, 114, 101, 97, 100, 98, 101, 116, 116, 105, 110, 103] => lookup_849(),
            [98, 97, 114, 99, 108, 97, 121, 99, 97, 114, 100] => lookup_850(),
            [107, 111, 109, 97, 116, 115, 117] => lookup_851(),
            [116, 99, 105] => lookup_852(),
            [111, 108, 108, 111] => lookup_853(),
            [116, 105, 112, 115] => lookup_854(),
            [109, 108, 115] => lookup_855(),
            [120, 105, 104, 117, 97, 110] => lookup_856(),
            [120, 110, 45, 45, 52, 53, 113, 49, 49, 99] => lookup_857(),
            [114, 101, 97, 108, 116, 121] => lookup_858(),
            [236, 130, 188, 236, 132, 177] => lookup_859(),
            [108, 105, 102, 101, 115, 116, 121, 108, 101] => lookup_860(),
            [108, 97, 116] => lookup_861(),
            [108, 117, 120, 117, 114, 121] => lookup_862(),
            [106, 112] => lookup_863(labels),
            [120, 110, 45, 45, 53, 52, 98, 55, 102, 116, 97, 48, 99, 99] => lookup_864(),
            [111, 115, 97, 107, 97] => lookup_865(),
            [232, 176, 183, 230, 173, 140] => lookup_866(),
            [118, 101] => lookup_867(labels),
            [120, 110, 45, 45, 119, 103, 98, 108, 54, 97] => lookup_868(),
            [109, 110] => lookup_869(labels),
            [104, 111, 109, 101, 103, 111, 111, 100, 115] => lookup_870(),
            [108, 108, 99] => lookup_871(),
            [216, 167, 217, 132, 216, 168, 216, 173, 216, 177, 217, 138, 217, 134] => lookup_872(),
            [114, 101, 112, 117, 98, 108, 105, 99, 97, 110] => lookup_873(),
            [115, 102, 114] => lookup_874(),
            [115, 112, 111, 114, 116] => lookup_875(),
            [120, 110, 45, 45, 103, 107, 51, 97, 116, 49, 101] => lookup_876(),
            [120, 110, 45, 45, 104, 120, 116, 56, 49, 52, 101] => lookup_877(),
            [120, 110, 45, 45, 109, 103, 98, 97, 51, 97, 51, 101, 106, 116] => lookup_878(),
            [109, 109, 97] => lookup_879(),
            [120, 110, 45, 45, 110, 103, 98, 101, 57, 101, 48, 97] => lookup_880(),
            [103, 117, 99, 99, 105] => lookup_881(),
            [229, 133, 172, 229, 143, 184] => lookup_882(),
            [112, 103] => lookup_883(info, labels),
            [103, 101, 110, 116] => lookup_884(),
            [99, 111, 117, 112, 111, 110, 115] => lookup_885(),
            [118, 101, 110, 116, 117, 114, 101, 115] => lookup_886(),
            [118, 101, 114, 109, 195, 182, 103, 101, 110, 115, 98, 101, 114, 97, 116, 101, 114] => {
                lookup_887()
            }
            [114, 101, 100, 115, 116, 111, 110, 101] => lookup_888(),
            [109, 101, 100] => lookup_889(),
            [99, 111, 109, 99, 97, 115, 116] => lookup_890(),
            [101, 110, 103, 105, 110, 101, 101, 114] => lookup_891(),
            [104, 111, 116, 101, 108, 115] => lookup_892(),
            [102, 97, 109, 105, 108, 121] => lookup_893(),
            [109, 111, 118] => lookup_894(),
            [102, 105, 108, 109] => lookup_895(),
            [100, 110, 112] => lookup_896(),
            [115, 97, 108, 101] => lookup_897(labels),
            [109, 104] => lookup_898(),
            [101, 97, 116] => lookup_899(),
            [103, 104] => lookup_900(labels),
            [97, 116, 116, 111, 114, 110, 101, 121] => lookup_901(),
            [105, 110, 115, 117, 114, 97, 110, 99, 101] => lookup_902(),
            [120, 110, 45, 45, 52, 50, 99, 50, 100, 57, 97] => lookup_903(),
            [217, 133, 217, 136, 217, 130, 216, 185] => lookup_904(),
            [105, 115] => lookup_905(labels),
            [120, 110, 45, 45, 114, 104, 113, 118, 57, 54, 103] => lookup_906(),
            [120, 110, 45, 45, 51, 104, 99, 114, 106, 57, 99] => lookup_907(),
            [107, 101, 114, 114, 121, 108, 111, 103, 105, 115, 116, 105, 99, 115] => lookup_908(),
            [99, 108, 105, 110, 105, 99] => lookup_909(),
            [112, 104, 111, 116, 111, 103, 114, 97, 112, 104, 121] => lookup_910(),
            [115, 105, 110, 103, 108, 101, 115] => lookup_911(),
            [100, 117, 98, 97, 105] => lookup_912(),
            [106, 97, 103, 117, 97, 114] => lookup_913(),
            [106, 101, 116, 122, 116] => lookup_914(),
            [97, 108, 105, 98, 97, 98, 97] => lookup_915(),
            [110, 116, 116] => lookup_916(),
            [112, 108, 97, 99, 101] => lookup_917(labels),
            [230, 151, 182, 229, 176, 154] => lookup_918(),
            [97, 117, 99, 116, 105, 111, 110] => lookup_919(),
            [100, 101, 108, 111, 105, 116, 116, 101] => lookup_920(),
            [103, 111, 111, 100, 121, 101, 97, 114] => lookup_921(),
            [119, 105, 107, 105] => lookup_922(),
            [119, 111, 108, 116, 101, 114, 115, 107, 108, 117, 119, 101, 114] => lookup_923(),
            [116, 117, 98, 101] => lookup_924(),
            [105, 116] => lookup_925(labels),
            [108, 101, 102, 114, 97, 107] => lookup_926(),
            [109, 116, 110] => lookup_927(),
            [120, 110, 45, 45, 106, 108, 113, 54, 49, 117, 57, 119, 55, 98] => lookup_928(),
            [113, 118, 99] => lookup_929(),
            [106, 117, 110, 105, 112, 101, 114] => lookup_930(),
            [115, 101, 97, 116] => lookup_931(),
            [112, 105, 122, 122, 97] => lookup_932(),
            [224, 174, 154, 224, 174, 191, 224, 174, 153, 224, 175, 141, 224, 174, 149, 224, 174, 170, 224, 175, 141, 224, 174, 170, 224, 175, 130, 224, 174, 176, 224, 175, 141] => {
                lookup_933()
            }
            [100, 97, 116, 97] => lookup_934(),
            [231, 167, 187, 229, 138, 168] => lookup_935(),
            [227, 131, 157, 227, 130, 164, 227, 131, 179, 227, 131, 136] => lookup_936(),
            [108, 101, 99, 108, 101, 114, 99] => lookup_937(),
            [111, 108, 97, 121, 97, 110, 103, 114, 111, 117, 112] => lookup_938(),
            [217, 135, 217, 133, 216, 177, 216, 167, 217, 135] => lookup_939(),
            [110, 114] => lookup_940(labels),
            [97, 107, 100, 110] => lookup_941(),
            [112, 108, 117, 109, 98, 105, 110, 103] => lookup_942(),
            [99, 99] => lookup_943(labels),
            [99, 120] => lookup_944(labels),
            [100, 104, 108] => lookup_945(),
            [100, 105, 101, 116] => lookup_946(),
            [229, 152, 137, 233, 135, 140] => lookup_947(),
            [102, 105, 100, 111] => lookup_948(),
            [101, 114, 105, 99, 115, 115, 111, 110] => lookup_949(),
            [109, 111] => lookup_950(labels),
            [97, 105, 114, 98, 117, 115] => lookup_951(),
            [102, 97, 110, 115] => lookup_952(),
            [113, 112, 111, 110] => lookup_953(),
            [114, 101, 105, 115, 101] => lookup_954(),
            [97, 105, 103] => lookup_955(),
            [115, 101, 110, 101, 114] => lookup_956(),
            [111, 110, 108, 105, 110, 101] => lookup_957(labels),
            [217, 129, 217, 132, 216, 179, 216, 183, 217, 138, 217, 134] => lookup_958(),
            [98, 111, 117, 116, 105, 113, 117, 101] => lookup_959(),
            [100, 105, 115, 104] => lookup_960(),
            [119, 105, 110] => lookup_961(labels),
            [116, 109] => lookup_962(labels),
            [99, 111, 117, 112, 111, 110] => lookup_963(),
            [115, 104, 111, 101, 115] => lookup_964(),
            [120, 98, 111, 120] => lookup_965(),
            [97, 117, 116, 111, 115] => lookup_966(),
            [101, 114, 110, 105] => lookup_967(),
            [115, 97, 112] => lookup_968(),
            [100, 101, 115, 105, 103, 110] => lookup_969(labels),
            [120, 110, 45, 45, 109, 103, 98, 105, 52, 101, 99, 101, 120, 112] => lookup_970(),
            [233, 155, 187, 232, 168, 138, 231, 155, 136, 231, 167, 145] => lookup_971(),
            [115, 101, 118, 101, 110] => lookup_972(),
            [118, 101, 103, 97, 115] => lookup_973(),
            [118, 105, 97, 106, 101, 115] => lookup_974(),
            [114, 101, 104, 97, 98] => lookup_975(),
            [100, 117, 112, 111, 110, 116] => lookup_976(),
            [115, 101, 101, 107] => lookup_977(),
            [114, 111, 103, 101, 114, 115] => lookup_978(),
            [120, 110, 45, 45, 57, 48, 97, 51, 97, 99] => lookup_979(labels),
            [102, 105, 115, 104] => lookup_980(),
            [114, 101, 105, 116] => lookup_981(),
            [120, 110, 45, 45, 109, 107, 49, 98, 117, 52, 52, 99] => lookup_982(),
            [97, 101] => lookup_983(labels),
            [117, 110, 105, 118, 101, 114, 115, 105, 116, 121] => lookup_984(),
            [216, 167, 216, 168, 217, 136, 216, 184, 216, 168, 217, 138] => lookup_985(),
            [97, 117, 115, 112, 111, 115, 116] => lookup_986(),
            [208, 188, 208, 190, 209, 129, 208, 186, 208, 178, 208, 176] => lookup_987(),
            [103, 101, 111, 114, 103, 101] => lookup_988(),
            [97, 103] => lookup_989(labels),
            [103, 111, 108, 100, 112, 111, 105, 110, 116] => lookup_990(),
            [122, 117, 101, 114, 105, 99, 104] => lookup_991(),
            [98, 105, 122] => lookup_992(labels),
            [120, 110, 45, 45, 109, 103, 98, 97, 105, 57, 97, 122, 103, 113, 112, 54, 106] => {
                lookup_993()
            }
            [120, 110, 45, 45, 104, 50, 98, 114, 101, 103, 51, 101, 118, 101] => lookup_994(),
            [216, 179, 217, 136, 216, 175, 216, 167, 217, 134] => lookup_995(),
            [99, 114, 115] => lookup_996(),
            [109, 116, 114] => lookup_997(),
            [115, 111, 110, 103] => lookup_998(),
            [115, 111, 110, 121] => lookup_999(),
            [97, 108] => lookup_1000(labels),
            [120, 110, 45, 45, 57, 48, 97, 105, 115] => lookup_1001(),
            [224, 166, 173, 224, 166, 190, 224, 166, 176, 224, 166, 164] => lookup_1002(),
            [98, 114, 111, 116, 104, 101, 114] => lookup_1003(),
            [100, 111, 103] => lookup_1004(),
            [106, 105, 111] => lookup_1005(),
            [115, 99, 97] => lookup_1006(),
            [98, 97] => lookup_1007(labels),
            [118, 105, 108, 108, 97, 115] => lookup_1008(),
            [120, 110, 45, 45, 102, 105, 113, 54, 52, 98] => lookup_1009(),
            [97, 101, 116, 110, 97] => lookup_1010(),
            [105, 114] => lookup_1011(labels),
            [115, 104, 101, 108, 108] => lookup_1012(),
            [228, 184, 173, 228, 191, 161] => lookup_1013(),
            [117, 97] => lookup_1014(labels),
            [97, 115] => lookup_1015(labels),
            [102, 114, 101, 101] => lookup_1016(),
            [98, 97, 98, 121] => lookup_1017(),
            [104, 111, 108, 100, 105, 110, 103, 115] => lookup_1018(),
            [99, 108, 117, 98, 109, 101, 100] => lookup_1019(),
            [108, 111, 102, 116] => lookup_1020(),
            [99, 98, 110] => lookup_1021(),
            [103, 105, 118, 105, 110, 103] => lookup_1022(),
            [109, 97, 114, 107, 101, 116, 115] => lookup_1023(),
            [115, 104, 97, 110, 103, 114, 105, 108, 97] => lookup_1024(),
            [112, 97, 110, 97, 115, 111, 110, 105, 99] => lookup_1025(),
            [115, 114, 108] => lookup_1026(),
            [115, 116, 117, 100, 121] => lookup_1027(),
            [224, 174, 135, 224, 174, 168, 224, 175, 141, 224, 174, 164, 224, 174, 191, 224, 174, 175, 224, 174, 190] => {
                lookup_1028()
            }
            [217, 130, 216, 183, 216, 177] => lookup_1029(),
            [109, 97, 105, 102] => lookup_1030(),
            [120, 110, 45, 45, 49, 49, 98, 52, 99, 51, 100] => lookup_1031(),
            [233, 164, 144, 229, 142, 133] => lookup_1032(),
            [114, 101, 110] => lookup_1033(),
            [216, 179, 217, 136, 216, 177, 217, 138, 216, 169] => lookup_1034(),
            [99, 101, 110, 116, 101, 114] => lookup_1035(),
            [116, 106, 120] => lookup_1036(),
            [109, 111, 110, 97, 115, 104] => lookup_1037(),
            [98, 111, 116] => lookup_1038(),
            [98, 117, 121] => lookup_1039(),
            [97, 108, 108, 121] => lookup_1040(),
            [98, 99, 103] => lookup_1041(),
            [102, 108, 105, 114] => lookup_1042(),
            [97, 100] => lookup_1043(labels),
            [102, 111, 111] => lookup_1044(),
            [110, 99] => lookup_1045(labels),
            [108, 107] => lookup_1046(labels),
            [210, 155, 208, 176, 208, 183] => lookup_1047(),
            [114, 101, 118, 105, 101, 119] => lookup_1048(labels),
            [116, 114, 97, 100, 101] => lookup_1049(labels),
            [110, 112] => lookup_1050(info, labels),
            [99, 108, 111, 117, 100] => lookup_1051(labels),
            [99, 111, 111, 107, 105, 110, 103, 99, 104, 97, 110, 110, 101, 108] => lookup_1052(),
            [120, 110, 45, 45, 52, 53, 98, 114, 53, 99, 121, 108] => lookup_1053(),
            [100, 99, 108, 107] => lookup_1054(),
            [120, 110, 45, 45, 109, 105, 120, 48, 56, 50, 102] => lookup_1055(),
            [103, 98] => lookup_1056(),
            [97, 99, 111] => lookup_1057(),
            [99, 97, 108, 118, 105, 110, 107, 108, 101, 105, 110] => lookup_1058(),
            [114, 115] => lookup_1059(labels),
            [97, 116, 104, 108, 101, 116, 97] => lookup_1060(),
            [115, 111, 102, 116, 119, 97, 114, 101] => lookup_1061(),
            [115, 112, 97, 99, 101] => lookup_1062(labels),
            [115, 116, 97, 114] => lookup_1063(),
            [110, 101, 117, 115, 116, 97, 114] => lookup_1064(),
            [116, 104, 100] => lookup_1065(),
            [116, 111, 117, 114, 115] => lookup_1066(),
            [102, 111, 114, 115, 97, 108, 101] => lookup_1067(),
            [117, 112, 115] => lookup_1068(),
            [118, 105, 114, 103, 105, 110] => lookup_1069(),
            [99, 111, 109, 112, 117, 116, 101, 114] => lookup_1070(),
            [120, 110, 45, 45, 51, 101, 48, 98, 55, 48, 55, 101] => lookup_1071(),
            [233, 163, 159, 229, 147, 129] => lookup_1072(),
            [101, 100, 117] => lookup_1073(labels),
            [103, 98, 105, 122] => lookup_1074(),
            [216, 167, 217, 132, 216, 185, 217, 132, 217, 138, 216, 167, 217, 134] => lookup_1075(),
            [227, 130, 179, 227, 131, 160] => lookup_1076(),
            [120, 110, 45, 45, 118, 101, 114, 109, 103, 101, 110, 115, 98, 101, 114, 97, 116, 101, 114, 45, 99, 116, 98] => {
                lookup_1077()
            }
            [115, 97, 109, 115, 117, 110, 103] => lookup_1078(),
            [114, 101, 97, 108, 101, 115, 116, 97, 116, 101] => lookup_1079(),
            [230, 183, 161, 233, 169, 172, 233, 148, 161] => lookup_1080(),
            [116, 102] => lookup_1081(),
            [102, 108, 111, 119, 101, 114, 115] => lookup_1082(),
            [120, 110, 45, 45, 113, 120, 97, 54, 97] => lookup_1083(),
            [99, 97, 115, 101] => lookup_1084(),
            [111, 102, 102, 105, 99, 101] => lookup_1085(),
            [108, 117] => lookup_1086(labels),
            [97, 108, 115, 97, 99, 101] => lookup_1087(),
            [98, 101, 115, 116] => lookup_1088(),
            [109, 117, 116, 117, 97, 108] => lookup_1089(),
            [97, 99, 116, 111, 114] => lookup_1090(),
            [107, 105] => lookup_1091(labels),
            [99, 111, 110, 100, 111, 115] => lookup_1092(),
            [98, 101, 110, 116, 108, 101, 121] => lookup_1093(),
            [102, 109] => lookup_1094(labels),
            [99, 97, 114, 97, 118, 97, 110] => lookup_1095(),
            [102, 97, 114, 109] => lookup_1096(labels),
            [103, 108, 97, 115, 115] => lookup_1097(),
            [235, 139, 183, 235, 132, 183] => lookup_1098(),
            [120, 110, 45, 45, 109, 103, 98, 113, 108, 121, 55, 99, 118, 97, 102, 114] => {
                lookup_1099()
            }
            [122, 97, 112, 112, 111, 115] => lookup_1100(),
            [111, 118, 104] => lookup_1101(labels),
            [117, 110, 105, 99, 111, 109] => lookup_1102(),
            [119, 101, 98, 99, 97, 109] => lookup_1103(),
            [104, 111, 109, 101, 115, 101, 110, 115, 101] => lookup_1104(),
            [109, 111, 110, 101, 121] => lookup_1105(),
            [99, 104, 97, 110, 110, 101, 108] => lookup_1106(),
            [115, 99, 111, 116] => lookup_1107(labels),
            [115, 116, 97, 100, 97] => lookup_1108(),
            [116, 101, 99, 104] => lookup_1109(),
            [115, 101] => lookup_1110(labels),
            [109, 97, 114, 115, 104, 97, 108, 108, 115] => lookup_1111(),
            [115, 98] => lookup_1112(labels),
            [102, 117, 110, 100] => lookup_1113(),
            [120, 110, 45, 45, 106, 118, 114, 49, 56, 57, 109] => lookup_1114(),
            [98, 108, 111, 99, 107, 98, 117, 115, 116, 101, 114] => lookup_1115(),
            [111, 108, 97, 121, 97, 110] => lookup_1116(),
            [120, 110, 45, 45, 110, 113, 118, 55, 102] => lookup_1117(),
            [115, 105, 110, 97] => lookup_1118(),
            [115, 111, 99, 99, 101, 114] => lookup_1119(),
            [97, 102] => lookup_1120(labels),
            [101, 99] => lookup_1121(labels),
            [120, 110, 45, 45, 120, 107, 99, 50, 100, 108, 51, 97, 53, 101, 101, 48, 104] => {
                lookup_1122()
            }
            [110, 102, 108] => lookup_1123(),
            [115, 97, 107, 117, 114, 97] => lookup_1124(),
            [99, 114, 117, 105, 115, 101, 115] => lookup_1125(),
            [120, 110, 45, 45, 118, 104, 113, 117, 118] => lookup_1126(),
            [99, 111, 110, 115, 117, 108, 116, 105, 110, 103] => lookup_1127(),
            [99, 97, 114, 101] => lookup_1128(),
            [227, 131, 149, 227, 130, 161, 227, 131, 131, 227, 130, 183, 227, 131, 167, 227, 131, 179] => {
                lookup_1129()
            }
            [112, 108, 117, 115] => lookup_1130(),
            [115, 99, 104, 97, 101, 102, 102, 108, 101, 114] => lookup_1131(),
            [114, 119] => lookup_1132(labels),
            [99, 97, 114, 101, 101, 114, 115] => lookup_1133(),
            [114, 111, 111, 109] => lookup_1134(),
            [120, 110, 45, 45, 110, 111, 100, 101] => lookup_1135(),
            [103, 117, 105, 100, 101] => lookup_1136(),
            [98, 105, 107, 101] => lookup_1137(),
            [208, 177, 208, 181, 208, 187] => lookup_1138(),
            [97, 101, 103] => lookup_1139(),
            [109, 111, 115, 99, 111, 119] => lookup_1140(),
            [100, 105, 103, 105, 116, 97, 108] => lookup_1141(labels),
            [112, 119] => lookup_1142(labels),
            [101, 100, 117, 99, 97, 116, 105, 111, 110] => lookup_1143(labels),
            [97, 120, 97] => lookup_1144(),
            [98, 101, 114, 108, 105, 110] => lookup_1145(),
            [101, 109, 101, 114, 99, 107] => lookup_1146(),
            [111, 98, 105] => lookup_1147(),
            [112, 97, 114, 116, 110, 101, 114, 115] => lookup_1148(),
            [115, 99] => lookup_1149(labels),
            [120, 110, 45, 45, 102, 122, 99, 50, 99, 57, 101, 50, 99] => lookup_1150(),
            [108, 105, 118, 105, 110, 103] => lookup_1151(),
            [100, 116, 118] => lookup_1152(),
            [112, 104, 111, 116, 111, 115] => lookup_1153(),
            [110, 101, 119, 115] => lookup_1154(labels),
            [115, 104, 111, 112] => lookup_1155(labels),
            [216, 167, 216, 170, 216, 181, 216, 167, 217, 132, 216, 167, 216, 170] => lookup_1156(),
            [109, 105, 110, 116] => lookup_1157(),
            [115, 99, 104, 109, 105, 100, 116] => lookup_1158(),
            [115, 116, 114, 101, 97, 109] => lookup_1159(),
            [112, 114, 97, 120, 105] => lookup_1160(),
            [216, 167, 217, 138, 216, 177, 216, 167, 217, 134] => lookup_1161(),
            [102, 111, 117, 110, 100, 97, 116, 105, 111, 110] => lookup_1162(),
            [231, 189, 145, 229, 157, 128] => lookup_1163(),
            [99, 111, 108, 108, 101, 103, 101] => lookup_1164(),
            [121, 111, 117] => lookup_1165(),
            [100, 109] => lookup_1166(labels),
            [120, 110, 45, 45, 102, 104, 98, 101, 105] => lookup_1167(),
            [105, 110] => lookup_1168(labels),
            [108, 118] => lookup_1169(labels),
            [99, 114] => lookup_1170(labels),
            [98, 111, 101, 104, 114, 105, 110, 103, 101, 114] => lookup_1171(),
            [108, 97, 99, 97, 105, 120, 97] => lookup_1172(),
            [112, 108] => lookup_1173(labels),
            [109, 101, 110] => lookup_1174(labels),
            [104, 111, 115, 116] => lookup_1175(labels),
            [120, 110, 45, 45, 99, 122, 114, 117, 50, 100] => lookup_1176(),
            [104, 101, 97, 108, 116, 104, 99, 97, 114, 101] => lookup_1177(),
            [97, 98, 99] => lookup_1178(),
            [120, 110, 45, 45, 112, 103, 98, 115, 48, 100, 104] => lookup_1179(),
            [120, 110, 45, 45, 105, 109, 114, 53, 49, 51, 110] => lookup_1180(),
            [120, 110, 45, 45, 104, 50, 98, 114, 106, 57, 99, 56, 99] => lookup_1181(),
            [115, 118] => lookup_1182(labels),
            [103, 115] => lookup_1183(),
            [120, 110, 45, 45, 109, 103, 98, 103, 117, 56, 50, 97] => lookup_1184(),
            [115, 109, 97, 114, 116] => lookup_1185(),
            [103, 111, 111, 103] => lookup_1186(labels),
            [230, 150, 176, 229, 138, 160, 229, 157, 161] => lookup_1187(),
            [230, 184, 184, 230, 136, 143] => lookup_1188(),
            [97, 109, 115, 116, 101, 114, 100, 97, 109] => lookup_1189(),
            [99, 97, 108, 108] => lookup_1190(),
            [107, 105, 110, 100, 108, 101] => lookup_1191(),
            [116, 119] => lookup_1192(labels),
            [98, 97, 114, 99, 101, 108, 111, 110, 97] => lookup_1193(),
            [120, 110, 45, 45, 116, 99, 107, 119, 101] => lookup_1194(),
            [120, 110, 45, 45, 120, 107, 99, 50, 97, 108, 51, 104, 121, 101, 50, 97] => {
                lookup_1195()
            }
            [99, 111, 117, 110, 116, 114, 121] => lookup_1196(),
            [100, 97, 116, 101] => lookup_1197(),
            [115, 104, 111, 112, 112, 105, 110, 103] => lookup_1198(),
            [100, 97, 110, 99, 101] => lookup_1199(),
            [98, 99, 110] => lookup_1200(),
            [108, 105, 107, 101] => lookup_1201(),
            [115, 117, 122, 117, 107, 105] => lookup_1202(),
            [118, 101, 116] => lookup_1203(),
            [119, 97, 108, 116, 101, 114] => lookup_1204(),
            [120, 110, 45, 45, 98, 52, 119, 54, 48, 53, 102, 101, 114, 100] => lookup_1205(),
            [232, 175, 186, 229, 159, 186, 228, 186, 154] => lookup_1206(),
            [120, 110, 45, 45, 112, 115, 115, 121, 50, 117] => lookup_1207(),
            [99, 97, 112, 101, 116, 111, 119, 110] => lookup_1208(),
            [97, 98, 97, 114, 116, 104] => lookup_1209(),
            [109, 105, 97, 109, 105] => lookup_1210(),
            [122, 105, 112] => lookup_1211(),
            [99, 97, 109, 112] => lookup_1212(),
            [228, 184, 173, 229, 156, 139] => lookup_1213(),
            [224, 176, 173, 224, 176, 190, 224, 176, 176, 224, 176, 164, 224, 177, 141] => {
                lookup_1214()
            }
            [115, 116] => lookup_1215(labels),
            [216, 167, 217, 132, 217, 133, 216, 186, 216, 177, 216, 168] => lookup_1216(),
            [97, 109, 101, 120] => lookup_1217(),
            [110, 108] => lookup_1218(labels),
            [103, 111, 111, 103, 108, 101] => lookup_1219(),
            [112, 114, 111, 112, 101, 114, 116, 121] => lookup_1220(),
            [103, 111, 108, 100] => lookup_1221(),
            [100, 111, 99, 115] => lookup_1222(),
            [97, 120] => lookup_1223(labels),
            [103, 114, 101, 101, 110] => lookup_1224(),
            [115, 122] => lookup_1225(labels),
            [115, 99, 104, 111, 111, 108] => lookup_1226(),
            [218, 128, 216, 167, 216, 177, 216, 170] => lookup_1227(),
            [102, 105, 116] => lookup_1228(),
            [119, 101, 105, 98, 111] => lookup_1229(),
            [120, 110, 45, 45, 108, 103, 98, 98, 97, 116, 49, 97, 100, 56, 106] => lookup_1230(),
            [120, 102, 105, 110, 105, 116, 121] => lookup_1231(),
            [97, 105, 114, 102, 111, 114, 99, 101] => lookup_1232(),
            [102, 121, 105] => lookup_1233(),
            [116, 104, 101, 97, 116, 114, 101] => lookup_1234(),
            [230, 156, 186, 230, 158, 132] => lookup_1235(),
            [97, 110, 97, 108, 121, 116, 105, 99, 115] => lookup_1236(),
            [108, 115] => lookup_1237(labels),
            [98, 97, 114, 99, 108, 97, 121, 115] => lookup_1238(),
            [99, 111, 102, 102, 101, 101] => lookup_1239(),
            [100, 97, 98, 117, 114] => lookup_1240(),
            [108, 121] => lookup_1241(labels),
            [105, 109, 109, 111, 98, 105, 108, 105, 101, 110] => lookup_1242(),
            [109, 115, 100] => lookup_1243(),
            [110, 101, 116, 102, 108, 105, 120] => lookup_1244(),
            [111, 110, 103] => lookup_1245(),
            [112, 110, 99] => lookup_1246(),
            [97, 113] => lookup_1247(),
            [103, 114, 111, 117, 112] => lookup_1248(labels),
            [97, 114] => lookup_1249(labels),
            [98, 111, 115, 116, 105, 107] => lookup_1250(),
            [115, 117, 99, 107, 115] => lookup_1251(),
            [116, 97, 98] => lookup_1252(),
            [99, 98, 114, 101] => lookup_1253(),
            [98, 111, 111, 107, 105, 110, 103] => lookup_1254(),
            [99, 108, 105, 110, 105, 113, 117, 101] => lookup_1255(),
            [224, 174, 135, 224, 174, 178, 224, 174, 153, 224, 175, 141, 224, 174, 149, 224, 175, 136] => {
                lookup_1256()
            }
            [112, 119, 99] => lookup_1257(),
            [97, 97, 97] => lookup_1258(),
            [116, 111, 100, 97, 121] => lookup_1259(),
            [119, 97, 116, 99, 104] => lookup_1260(),
            [120, 110, 45, 45, 49, 113, 113, 119, 50, 51, 97] => lookup_1261(),
            [99, 102, 100] => lookup_1262(),
            [112, 111, 104, 108] => lookup_1263(),
            [97, 112, 112, 108, 101] => lookup_1264(),
            [109, 115] => lookup_1265(labels),
            [115, 120] => lookup_1266(labels),
            [111, 114, 103] => lookup_1267(labels),
            [100, 101, 108, 108] => lookup_1268(),
            [103, 105, 102, 116] => lookup_1269(),
            [101, 101] => lookup_1270(labels),
            [106, 111, 98, 115] => lookup_1271(),
            [104, 100, 102, 99] => lookup_1272(),
            [113, 117, 101, 115, 116] => lookup_1273(),
            [114, 101, 105, 115, 101, 110] => lookup_1274(),
            [120, 110, 45, 45, 109, 103, 98, 97, 104, 49, 97, 51, 104, 106, 107, 114, 100] => {
                lookup_1275()
            }
            [112, 97, 115, 115, 97, 103, 101, 110, 115] => lookup_1276(),
            [105, 99, 117] => lookup_1277(),
            [115, 97, 110, 111, 102, 105] => lookup_1278(),
            [230, 136, 145, 231, 136, 177, 228, 189, 160] => lookup_1279(),
            [103, 97, 121] => lookup_1280(),
            [120, 110, 45, 45, 99, 99, 107, 119, 99, 120, 101, 116, 100] => lookup_1281(),
            [232, 180, 173, 231, 137, 169] => lookup_1282(),
            [98, 97, 115, 101, 98, 97, 108, 108] => lookup_1283(),
            [112, 114, 101, 115, 115] => lookup_1284(),
            [233, 128, 154, 232, 178, 169] => lookup_1285(),
            [216, 185, 216, 177, 216, 168] => lookup_1286(),
            [231, 187, 132, 231, 187, 135, 230, 156, 186, 230, 158, 132] => lookup_1287(),
            [105, 115, 109, 97, 105, 108, 105] => lookup_1288(),
            [120, 110, 45, 45, 51, 112, 120, 117, 56, 107] => lookup_1289(),
            [120, 110, 45, 45, 114, 111, 118, 117, 56, 56, 98] => lookup_1290(),
            [216, 185, 216, 177, 216, 167, 217, 130] => lookup_1291(),
            [107, 114, 101, 100] => lookup_1292(),
            [110, 105, 99, 111] => lookup_1293(),
            [98, 108, 111, 103] => lookup_1294(),
            [98, 98, 99] => lookup_1295(),
            [118, 108, 97, 97, 110, 100, 101, 114, 101, 110] => lookup_1296(),
            [224, 168, 173, 224, 168, 190, 224, 168, 176, 224, 168, 164] => lookup_1297(),
            [120, 110, 45, 45, 51, 48, 114, 114, 55, 121] => lookup_1298(),
            [101, 110, 101, 114, 103, 121] => lookup_1299(),
            [99, 104, 114, 111, 109, 101] => lookup_1300(),
            [97, 100, 115] => lookup_1301(),
            [97, 109, 101, 114, 105, 99, 97, 110, 101, 120, 112, 114, 101, 115, 115] => {
                lookup_1302()
            }
            [118, 103] => lookup_1303(labels),
            [98, 97, 114, 101, 102, 111, 111, 116] => lookup_1304(),
            [98, 121] => lookup_1305(labels),
            [112, 109] => lookup_1306(labels),
            [106, 109] => lookup_1307(info, labels),
            [120, 110, 45, 45, 113, 55, 99, 101, 54, 97] => lookup_1308(),
            [116, 99] => lookup_1309(labels),
            [97, 99, 97, 100, 101, 109, 121] => lookup_1310(labels),
            [100, 101, 97, 108, 101, 114] => lookup_1311(),
            [101, 115, 116, 97, 116, 101] => lookup_1312(labels),
            [110, 98, 97] => lookup_1313(),
            [97, 98, 98, 118, 105, 101] => lookup_1314(),
            [108, 101, 97, 115, 101] => lookup_1315(),
            [102, 107] => lookup_1316(info, labels),
            [115, 109, 105, 108, 101] => lookup_1317(),
            [102, 111] => lookup_1318(),
            [97, 119] => lookup_1319(labels),
            [115, 111, 99, 105, 97, 108] => lookup_1320(),
            [116, 101, 109, 97, 115, 101, 107] => lookup_1321(),
            [231, 130, 185, 231, 156, 139] => lookup_1322(),
            [227, 130, 175, 227, 131, 169, 227, 130, 166, 227, 131, 137] => lookup_1323(),
            [108, 101, 103, 111] => lookup_1324(),
            [114, 97, 99, 105, 110, 103] => lookup_1325(),
            [120, 110, 45, 45, 109, 103, 98, 97, 105, 57, 97, 53, 101, 118, 97, 48, 48, 98] => {
                lookup_1326()
            }
            [112, 114, 111, 103, 114, 101, 115, 115, 105, 118, 101] => lookup_1327(),
            [115, 97, 102, 101, 116, 121] => lookup_1328(),
            [115, 101, 120] => lookup_1329(),
            [99, 104, 97, 116] => lookup_1330(),
            [103, 109, 97, 105, 108] => lookup_1331(),
            [108, 97, 110, 99, 97, 115, 116, 101, 114] => lookup_1332(),
            [208, 190, 209, 128, 208, 179] => lookup_1333(),
            [229, 164, 167, 230, 139, 191] => lookup_1334(),
            [99, 111, 100, 101, 115] => lookup_1335(labels),
            [122, 97, 114, 97] => lookup_1336(),
            [101, 110, 116, 101, 114, 112, 114, 105, 115, 101, 115] => lookup_1337(),
            [112, 114, 105, 109, 101] => lookup_1338(),
            [229, 149, 134, 229, 186, 151] => lookup_1339(),
            [120, 110, 45, 45, 109, 103, 98, 116, 51, 100, 104, 100] => lookup_1340(),
            [114, 117] => lookup_1341(labels),
            [114, 101, 100] => lookup_1342(),
            [122, 101, 114, 111] => lookup_1343(),
            [97, 105, 114, 116, 101, 108] => lookup_1344(),
            [98, 103] => lookup_1345(labels),
            [99, 105, 116, 121, 101, 97, 116, 115] => lookup_1346(),
            [104, 111, 109, 101, 100, 101, 112, 111, 116] => lookup_1347(),
            [102, 106] => lookup_1348(labels),
            [107, 109] => lookup_1349(labels),
            [229, 174, 182, 233, 155, 187] => lookup_1350(),
            [103, 97, 108, 108, 111] => lookup_1351(),
            [108, 97, 119] => lookup_1352(),
            [98, 105, 110, 103, 111] => lookup_1353(),
            [99, 97, 115, 105, 110, 111] => lookup_1354(),
            [99, 108, 117, 98] => lookup_1355(labels),
            [116, 114, 97, 118, 101, 108, 99, 104, 97, 110, 110, 101, 108] => lookup_1356(),
            [105, 118, 101, 99, 111] => lookup_1357(),
            [120, 110, 45, 45, 56, 48, 97, 115, 119, 103] => lookup_1358(),
            [121, 111, 103, 97] => lookup_1359(),
            [115, 97, 102, 101] => lookup_1360(),
            [102, 97, 105, 114, 119, 105, 110, 100, 115] => lookup_1361(),
            [119, 111, 119] => lookup_1362(),
            [116, 111, 121, 111, 116, 97] => lookup_1363(),
            [116, 107, 109, 97, 120, 120] => lookup_1364(),
            [120, 101, 114, 111, 120] => lookup_1365(),
            [99, 97] => lookup_1366(labels),
            [107, 101] => lookup_1367(labels),
            [102, 105, 116, 110, 101, 115, 115] => lookup_1368(),
            [104, 101, 97, 108, 116, 104] => lookup_1369(),
            [99, 102] => lookup_1370(labels),
            [109, 113] => lookup_1371(),
            [97, 99, 99, 101, 110, 116, 117, 114, 101] => lookup_1372(),
            [105, 115, 116] => lookup_1373(),
            [103, 108, 111, 98, 111] => lookup_1374(),
            [98, 97, 121, 101, 114, 110] => lookup_1375(),
            [116, 108] => lookup_1376(labels),
            [116, 107] => lookup_1377(),
            [106, 112, 114, 115] => lookup_1378(),
            [105, 111] => lookup_1379(labels),
            [102, 111, 111, 100] => lookup_1380(),
            [104, 121, 97, 116, 116] => lookup_1381(),
            [109, 111, 118, 105, 101] => lookup_1382(),
            [110, 97, 98] => lookup_1383(),
            [112, 105, 99, 116, 101, 116] => lookup_1384(),
            [112, 114, 111, 112, 101, 114, 116, 105, 101, 115] => lookup_1385(),
            [110, 111, 114, 116, 104, 119, 101, 115, 116, 101, 114, 110, 109, 117, 116, 117, 97, 108] => {
                lookup_1386()
            }
            [114, 111, 100, 101, 111] => lookup_1387(),
            [100, 107] => lookup_1388(labels),
            [120, 110, 45, 45, 54, 102, 114, 122, 56, 50, 103] => lookup_1389(),
            [112, 105, 99, 116, 117, 114, 101, 115] => lookup_1390(labels),
            [224, 164, 184, 224, 164, 130, 224, 164, 151, 224, 164, 160, 224, 164, 168] => {
                lookup_1391()
            }
            [99, 114, 101, 100, 105, 116] => lookup_1392(),
            [99, 97, 116] => lookup_1393(),
            [104, 111, 119] => lookup_1394(),
            [108, 105, 102, 101] => lookup_1395(),
            [233, 155, 134, 229, 155, 162] => lookup_1396(),
            [229, 152, 137, 233, 135, 140, 229, 164, 167, 233, 133, 146, 229, 186, 151] => {
                lookup_1397()
            }
            [115, 115] => lookup_1398(labels),
            [111, 110, 101] => lookup_1399(labels),
            [229, 156, 168, 231, 186, 191] => lookup_1400(),
            [98, 97, 110, 97, 109, 101, 120] => lookup_1401(),
            [114, 101, 97, 100] => lookup_1402(),
            [216, 170, 217, 136, 217, 134, 216, 179] => lookup_1403(),
            [97, 108, 108, 115, 116, 97, 116, 101] => lookup_1404(),
            [100, 122] => lookup_1405(labels),
            [116, 110] => lookup_1406(labels),
            [102, 108, 105, 103, 104, 116, 115] => lookup_1407(),
            [105, 110, 102, 105, 110, 105, 116, 105] => lookup_1408(),
            [105, 110, 116, 117, 105, 116] => lookup_1409(),
            [110, 104, 107] => lookup_1410(),
            [114, 101, 110, 116, 97, 108, 115] => lookup_1411(),
            [98, 97, 110, 97, 110, 97, 114, 101, 112, 117, 98, 108, 105, 99] => lookup_1412(),
            [106, 111, 121] => lookup_1413(),
            [115, 121, 115, 116, 101, 109, 115] => lookup_1414(labels),
            [102, 114, 108] => lookup_1415(),
            [119, 101, 98, 115, 105, 116, 101] => lookup_1416(),
            [97, 103, 101, 110, 99, 121] => lookup_1417(),
            [98, 114, 111, 97, 100, 119, 97, 121] => lookup_1418(),
            [97, 114, 109, 121] => lookup_1419(),
            [102, 101, 114, 114, 97, 114, 105] => lookup_1420(),
            [106, 97, 118, 97] => lookup_1421(),
            [106, 111, 116] => lookup_1422(),
            [115, 97, 114, 108] => lookup_1423(),
            [228, 189, 155, 229, 177, 177] => lookup_1424(),
            [115, 101, 114, 118, 105, 99, 101, 115] => lookup_1425(labels),
            [120, 110, 45, 45, 103, 99, 107, 114, 51, 102, 48, 102] => lookup_1426(),
            [120, 110, 45, 45, 106, 49, 97, 101, 102] => lookup_1427(),
            [116, 118] => lookup_1428(labels),
            [107, 111, 115, 104, 101, 114] => lookup_1429(),
            [228, 186, 154, 233, 169, 172, 233, 128, 138] => lookup_1430(),
            [99, 97, 116, 101, 114, 105, 110, 103] => lookup_1431(),
            [115, 107, 105] => lookup_1432(),
            [229, 143, 176, 230, 185, 190] => lookup_1433(),
            [104, 107, 116] => lookup_1434(),
            [104, 111, 109, 101, 115] => lookup_1435(),
            [115, 109] => lookup_1436(),
            [114, 109, 105, 116] => lookup_1437(),
            [119, 111, 111, 100, 115, 105, 100, 101] => lookup_1438(),
            [229, 190, 174, 229, 141, 154] => lookup_1439(),
            [104, 105, 115, 97, 109, 105, 116, 115, 117] => lookup_1440(),
            [230, 137, 139, 230, 156, 186] => lookup_1441(),
            [99, 105, 112, 114, 105, 97, 110, 105] => lookup_1442(),
            [107, 97, 117, 102, 101, 110] => lookup_1443(),
            [115, 121, 100, 110, 101, 121] => lookup_1444(),
            [104, 115, 98, 99] => lookup_1445(),
            [98, 111] => lookup_1446(labels),
            [120, 110, 45, 45, 109, 103, 98, 116, 120, 50, 98] => lookup_1447(),
            [102, 114, 101, 115, 101, 110, 105, 117, 115] => lookup_1448(),
            [116, 101, 99, 104, 110, 111, 108, 111, 103, 121] => lookup_1449(labels),
            [102, 117, 114, 110, 105, 116, 117, 114, 101] => lookup_1450(),
            [103, 117] => lookup_1451(labels),
            [120, 110, 45, 45, 109, 103, 98, 99, 97, 55, 100, 122, 100, 111] => lookup_1452(),
            [120, 110, 45, 45, 109, 120, 116, 113, 49, 109] => lookup_1453(),
            [112, 111, 108, 105, 116, 105, 101] => lookup_1454(),
            [209, 131, 208, 186, 209, 128] => lookup_1455(),
            [103, 111, 116] => lookup_1456(),
            [115, 105, 108, 107] => lookup_1457(),
            [103, 102] => lookup_1458(),
            [99, 104, 117, 114, 99, 104] => lookup_1459(),
            [114, 101, 115, 116, 97, 117, 114, 97, 110, 116] => lookup_1460(),
            [116, 97, 120, 105] => lookup_1461(),
            [120, 110, 45, 45, 122, 102, 114, 49, 54, 52, 98] => lookup_1462(),
            [122, 97] => lookup_1463(info, labels),
            [102, 97, 110] => lookup_1464(),
            [112, 102] => lookup_1465(labels),
            [103, 114, 105, 112, 101] => lookup_1466(),
            [97, 110, 100, 114, 111, 105, 100] => lookup_1467(),
            [99, 118] => lookup_1468(labels),
            [97, 117, 100, 105, 111] => lookup_1469(),
            [105, 110, 115, 117, 114, 101] => lookup_1470(),
            [109, 122] => lookup_1471(labels),
            [111, 108, 100, 110, 97, 118, 121] => lookup_1472(),
            [105, 109, 97, 109, 97, 116] => lookup_1473(),
            [108, 103, 98, 116] => lookup_1474(),
            [118, 111, 116, 101] => lookup_1475(),
            [101, 120, 112, 111, 115, 101, 100] => lookup_1476(),
            [103, 110] => lookup_1477(labels),
            [120, 110, 45, 45, 53, 53, 113, 120, 53, 100] => lookup_1478(),
            [103, 101] => lookup_1479(labels),
            [116, 103] => lookup_1480(),
            [101, 120, 99, 104, 97, 110, 103, 101] => lookup_1481(),
            [103, 111, 108, 102] => lookup_1482(),
            [104, 97, 110, 103, 111, 117, 116] => lookup_1483(),
            [120, 110, 45, 45, 104, 50, 98, 114, 106, 57, 99] => lookup_1484(),
            [108, 116, 100] => lookup_1485(),
            [100, 118, 97, 103] => lookup_1486(),
            [224, 184, 132, 224, 184, 173, 224, 184, 161] => lookup_1487(),
            [232, 129, 148, 233, 128, 154] => lookup_1488(),
            [108, 97, 110, 100] => lookup_1489(labels),
            [103, 111, 112] => lookup_1490(),
            [99, 104, 114, 105, 115, 116, 109, 97, 115] => lookup_1491(),
            [108, 111, 118, 101] => lookup_1492(),
            [115, 117] => lookup_1493(labels),
            [115, 119, 97, 116, 99, 104] => lookup_1494(),
            [99, 100] => lookup_1495(labels),
            [99, 117] => lookup_1496(labels),
            [118, 111, 121, 97, 103, 101] => lookup_1497(),
            [102, 111, 111, 116, 98, 97, 108, 108] => lookup_1498(),
            [120, 110, 45, 45, 52, 103, 98, 114, 105, 109] => lookup_1499(),
            [115, 97, 108, 111, 110] => lookup_1500(),
            [120, 110, 45, 45, 102, 105, 113, 50, 50, 56, 99, 53, 104, 115] => lookup_1501(),
            [100, 111] => lookup_1502(labels),
            [120, 110, 45, 45, 107, 99, 114, 120, 55, 55, 100, 49, 120, 52, 97] => lookup_1503(),
            [120, 110, 45, 45, 100, 49, 97, 108, 102] => lookup_1504(),
            [99, 97, 98] => lookup_1505(),
            [112, 111, 115, 116] => lookup_1506(),
            [97, 116] => lookup_1507(labels),
            [107, 104] => lookup_1508(info, labels),
            [97, 117, 100, 105, 98, 108, 101] => lookup_1509(),
            [100, 97, 121] => lookup_1510(),
            [229, 168, 177, 228, 185, 144] => lookup_1511(),
            [105, 113] => lookup_1512(labels),
            [105, 110, 100, 117, 115, 116, 114, 105, 101, 115] => lookup_1513(),
            [115, 104, 111, 119, 116, 105, 109, 101] => lookup_1514(),
            [120, 110, 45, 45, 57, 48, 97, 101] => lookup_1515(),
            [120, 110, 45, 45, 107, 112, 114, 121, 53, 55, 100] => lookup_1516(),
            [118, 101, 114, 109, 195, 182, 103, 101, 110, 115, 98, 101, 114, 97, 116, 117, 110, 103] => {
                lookup_1517()
            }
            [109, 111, 114, 109, 111, 110] => lookup_1518(),
            [120, 110, 45, 45, 121, 57, 97, 51, 97, 113] => lookup_1519(),
            [109, 111, 116, 111] => lookup_1520(),
            [120, 110, 45, 45, 113, 99, 107, 97, 49, 112, 109, 99] => lookup_1521(),
            [118, 101, 114, 105, 115, 105, 103, 110] => lookup_1522(),
            [208, 180, 208, 181, 209, 130, 208, 184] => lookup_1523(),
            [119, 101, 105, 114] => lookup_1524(),
            [120, 110, 45, 45, 109, 103, 98, 97, 55, 99, 48, 98, 98, 110, 48, 97] => lookup_1525(),
            [108, 114] => lookup_1526(labels),
            [107, 105, 119, 105] => lookup_1527(),
            [102, 105, 110, 97, 108] => lookup_1528(),
            [120, 110, 45, 45, 109, 103, 98, 99, 112, 113, 54, 103, 112, 97, 49, 97] => {
                lookup_1529()
            }
            [229, 143, 176, 231, 129, 163] => lookup_1530(),
            [99, 111, 110, 116, 114, 97, 99, 116, 111, 114, 115] => lookup_1531(),
            [108, 111, 116, 116, 111] => lookup_1532(),
            [109, 108, 98] => lookup_1533(),
            [101, 116, 105, 115, 97, 108, 97, 116] => lookup_1534(),
            [104, 103, 116, 118] => lookup_1535(),
            [233, 166, 153, 230, 184, 175] => lookup_1536(labels),
            [97, 114, 116] => lookup_1537(),
            [108, 111, 110, 100, 111, 110] => lookup_1538(labels),
            [109, 97, 107, 101, 117, 112] => lookup_1539(),
            [109, 100] => lookup_1540(labels),
            [108, 112, 108, 102, 105, 110, 97, 110, 99, 105, 97, 108] => lookup_1541(),
            [106, 101, 119, 101, 108, 114, 121] => lookup_1542(),
            [109, 101, 108, 98, 111, 117, 114, 110, 101] => lookup_1543(),
            [112, 104, 111, 110, 101] => lookup_1544(),
            [102, 105, 100, 101, 108, 105, 116, 121] => lookup_1545(),
            [108, 97, 119, 121, 101, 114] => lookup_1546(),
            [115, 101, 99, 117, 114, 105, 116, 121] => lookup_1547(),
            [115, 111, 102, 116, 98, 97, 110, 107] => lookup_1548(),
            [115, 117, 112, 112, 111, 114, 116] => lookup_1549(labels),
            [108, 111, 108] => lookup_1550(labels),
            [99, 105, 114, 99, 108, 101] => lookup_1551(),
            [224, 164, 173, 224, 164, 190, 224, 164, 176, 224, 165, 139, 224, 164, 164] => {
                lookup_1552()
            }
            [99, 121, 109, 114, 117] => lookup_1553(),
            [97, 113, 117, 97, 114, 101, 108, 108, 101] => lookup_1554(),
            [109, 103] => lookup_1555(labels),
            [120, 110, 45, 45, 106, 49, 97, 109, 104] => lookup_1556(),
            [98, 101, 115, 116, 98, 117, 121] => lookup_1557(),
            [104, 114] => lookup_1558(labels),
            [112, 116] => lookup_1559(labels),
            [108, 97, 109, 98, 111, 114, 103, 104, 105, 110, 105] => lookup_1560(),
            [109, 97, 105, 115, 111, 110] => lookup_1561(),
            [110, 121, 99] => lookup_1562(),
            [108, 105, 102, 101, 105, 110, 115, 117, 114, 97, 110, 99, 101] => lookup_1563(),
            [115, 101, 120, 121] => lookup_1564(),
            [114, 105, 99, 104, 97, 114, 100, 108, 105] => lookup_1565(),
            [115, 107, 121, 112, 101] => lookup_1566(),
            [117, 98, 97, 110, 107] => lookup_1567(),
            [119, 111, 114, 107, 115] => lookup_1568(),
            [120, 110, 45, 45, 53, 115, 117, 51, 52, 106, 57, 51, 54, 98, 103, 115, 103] => {
                lookup_1569()
            }
            [120, 110, 45, 45, 99, 49, 97, 118, 103] => lookup_1570(),
            [112, 97, 121] => lookup_1571(),
            [102, 114, 111, 103, 97, 110, 115] => lookup_1572(),
            [110, 105, 115, 115, 97, 110] => lookup_1573(),
            [216, 167, 216, 177, 216, 167, 217, 133, 217, 131, 217, 136] => lookup_1574(),
            [228, 184, 173, 229, 155, 189] => lookup_1575(),
            [117, 98, 115] => lookup_1576(),
            [104, 111, 116, 109, 97, 105, 108] => lookup_1577(),
            [121, 111, 117, 116, 117, 98, 101] => lookup_1578(),
            [117, 115] => lookup_1579(labels),
            [105, 110, 116] => lookup_1580(labels),
            [102, 97, 115, 116] => lookup_1581(),
            [114, 97, 100, 105, 111] => lookup_1582(),
            [103, 105, 118, 101, 115] => lookup_1583(),
            [119, 105, 110, 100, 111, 119, 115] => lookup_1584(),
            [120, 110, 45, 45, 49, 99, 107, 50, 101, 49, 98] => lookup_1585(),
            [228, 191, 161, 230, 129, 175] => lookup_1586(),
            [108, 108, 112] => lookup_1587(),
            [97, 108, 102, 97, 114, 111, 109, 101, 111] => lookup_1588(),
            [122, 111, 110, 101] => lookup_1589(labels),
            [103, 117, 105, 116, 97, 114, 115] => lookup_1590(),
            [98, 117, 105, 108, 100, 101, 114, 115] => lookup_1591(labels),
            [108, 111, 116, 116, 101] => lookup_1592(),
            [111, 102, 102] => lookup_1593(),
            [108, 105, 110, 107] => lookup_1594(labels),
            [120, 110, 45, 45, 51, 100, 115, 52, 52, 51, 103] => lookup_1595(),
            [120, 110, 45, 45, 114, 118, 99, 49, 101, 48, 97, 109, 51, 101] => lookup_1596(),
            [97, 112, 112] => lookup_1597(labels),
            [97, 122, 117, 114, 101] => lookup_1598(),
            [98, 97, 114, 103, 97, 105, 110, 115] => lookup_1599(),
            [119, 109, 101] => lookup_1600(),
            [115, 105, 116, 101] => lookup_1601(labels),
            [104, 111, 116] => lookup_1602(),
            [224, 172, 173, 224, 172, 190, 224, 172, 176, 224, 172, 164] => lookup_1603(),
            [100, 97, 116, 105, 110, 103] => lookup_1604(),
            [109, 101, 114, 99, 107, 109, 115, 100] => lookup_1605(),
            [109, 111, 100, 97] => lookup_1606(),
            [110, 97, 118, 121] => lookup_1607(),
            [115, 99, 98] => lookup_1608(),
            [110, 102] => lookup_1609(labels),
            [103, 100, 110] => lookup_1610(labels),
            [97, 100, 117, 108, 116] => lookup_1611(),
            [109, 101, 109, 101] => lookup_1612(),
            [97, 115, 105, 97] => lookup_1613(labels),
            [115, 104, 111, 119] => lookup_1614(),
            [118, 105, 103] => lookup_1615(),
            [119, 97, 110, 103, 103, 111, 117] => lookup_1616(),
            [116, 105, 114, 101, 115] => lookup_1617(),
            [108, 97, 116, 114, 111, 98, 101] => lookup_1618(),
            [98, 97, 114] => lookup_1619(),
            [99, 105, 116, 105] => lookup_1620(),
            [102, 116, 114] => lookup_1621(),
            [103, 114, 111, 99, 101, 114, 121] => lookup_1622(),
            [108, 111, 99, 117, 115] => lookup_1623(),
            [120, 110, 45, 45, 51, 98, 115, 116, 48, 48, 109] => lookup_1624(),
            [120, 110, 45, 45, 101, 102, 118, 121, 56, 56, 104] => lookup_1625(),
            [103, 111, 100, 97, 100, 100, 121] => lookup_1626(),
            [102, 111, 120] => lookup_1627(),
            [120, 110, 45, 45, 105, 49, 98, 54, 98, 49, 97, 54, 97, 50, 101] => lookup_1628(),
            [98, 98, 116] => lookup_1629(),
            [120, 120, 120] => lookup_1630(),
            [99, 111, 110, 116, 97, 99, 116] => lookup_1631(),
            [102, 114, 111, 110, 116, 100, 111, 111, 114] => lookup_1632(),
            [114, 105, 99, 111, 104] => lookup_1633(),
            [114, 105, 99, 104] => lookup_1634(),
            [230, 148, 191, 229, 138, 161] => lookup_1635(),
            [99, 114, 101, 100, 105, 116, 99, 97, 114, 100] => lookup_1636(),
            [115, 116, 117, 100, 105, 111] => lookup_1637(),
            [208, 188, 208, 190, 208, 189] => lookup_1638(),
            [103, 108] => lookup_1639(labels),
            [114, 101, 99, 105, 112, 101, 115] => lookup_1640(),
            [231, 189, 145, 229, 186, 151] => lookup_1641(),
            [103, 108, 97, 100, 101] => lookup_1642(),
            [116, 105, 97, 97] => lookup_1643(),
            [101, 115] => lookup_1644(labels),
            [98, 114, 97, 100, 101, 115, 99, 111] => lookup_1645(),
            [99, 97, 109] => lookup_1646(),
            [109, 117] => lookup_1647(labels),
            [99, 111, 97, 99, 104] => lookup_1648(),
            [99, 111, 117, 114, 115, 101, 115] => lookup_1649(),
            [120, 110, 45, 45, 109, 103, 98, 97, 51, 97, 52, 102, 49, 54, 97] => lookup_1650(),
            [101, 109, 97, 105, 108] => lookup_1651(),
            [104, 101, 114, 101] => lookup_1652(),
            [102, 117, 106, 105, 116, 115, 117] => lookup_1653(),
            [111, 110, 108] => lookup_1654(),
            [112, 104, 100] => lookup_1655(),
            [224, 170, 173, 224, 170, 190, 224, 170, 176, 224, 170, 164] => lookup_1656(),
            [114, 101, 100, 117, 109, 98, 114, 101, 108, 108, 97] => lookup_1657(),
            [121, 101] => lookup_1658(labels),
            [115, 111, 108, 97, 114] => lookup_1659(),
            [103, 97, 108, 108, 101, 114, 121] => lookup_1660(),
            [104, 117, 103, 104, 101, 115] => lookup_1661(),
            [97, 105] => lookup_1662(labels),
            [114, 101] => lookup_1663(labels),
            [116, 104] => lookup_1664(labels),
            [237, 149, 156, 234, 181, 173] => lookup_1665(),
            [115, 99, 105, 101, 110, 99, 101] => lookup_1666(labels),
            [98, 109, 115] => lookup_1667(),
            [216, 167, 217, 133, 216, 167, 216, 177, 216, 167, 216, 170] => lookup_1668(),
            [99, 103] => lookup_1669(),
            [101, 110, 103, 105, 110, 101, 101, 114, 105, 110, 103] => lookup_1670(),
            [111, 116, 116] => lookup_1671(),
            [116, 97, 116, 97, 109, 111, 116, 111, 114, 115] => lookup_1672(),
            wild => {
                info.len = wild.len();
                info
            }
        },
        None => info,
    }
}
#[inline]
fn lookup_0() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_2() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_3() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_4_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_4_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_4_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_4_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_4_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_4_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_4_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_4<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_4_0(acc),
            [110, 103, 111] => lookup_4_1(acc),
            [109, 105, 108] => lookup_4_2(acc),
            [110, 101, 116] => lookup_4_3(acc),
            [111, 114, 103] => lookup_4_4(acc),
            [105] => lookup_4_5(acc),
            [99, 111, 109] => lookup_4_6(acc),
            [103, 111, 118] => lookup_4_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_5_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_5_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_5_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_5_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_5_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_5_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_5_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_5_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_5_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_5<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_5_0(acc),
            [98, 105, 122] => lookup_5_1(acc),
            [116, 118] => lookup_5_2(acc),
            [105, 110, 102, 111] => lookup_5_3(acc),
            [110, 101, 116] => lookup_5_4(acc),
            [99, 111] => lookup_5_5(acc),
            [111, 114, 103] => lookup_5_6(acc),
            [99, 111, 109] => lookup_5_7(acc),
            [103, 111, 118] => lookup_5_8(acc),
            [115, 116, 111, 114, 101] => lookup_5_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_6() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_7() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_8() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_9() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_10() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_11() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_12() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_13() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_14() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_15_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_15_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_15_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_15_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_15_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_15_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_15_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_15_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_15_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_15_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_15_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_15_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_15_12_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_15_12<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_15_12_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_15_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_15_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_15_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_15_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_15_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_15<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 105, 119, 105] => lookup_15_0(acc),
            [103, 111, 118, 116] => lookup_15_1(acc),
            [103, 101, 110] => lookup_15_2(acc),
            [97, 99] => lookup_15_3(acc),
            [104, 101, 97, 108, 116, 104] => lookup_15_4(acc),
            [112, 97, 114, 108, 105, 97, 109, 101, 110, 116] => lookup_15_5(acc),
            [115, 99, 104, 111, 111, 108] => lookup_15_6(acc),
            [120, 110, 45, 45, 109, 111, 114, 105, 45, 113, 115, 97] => lookup_15_7(acc),
            [109, 97, 111, 114, 105] => lookup_15_8(acc),
            [103, 101, 101, 107] => lookup_15_9(acc),
            [105, 119, 105] => lookup_15_10(acc),
            [110, 121, 109] => lookup_15_11(acc),
            [99, 111] => lookup_15_12(labels, acc),
            [109, 105, 108] => lookup_15_13(acc),
            [99, 114, 105] => lookup_15_14(acc),
            [110, 101, 116] => lookup_15_15(acc),
            [111, 114, 103] => lookup_15_16(acc),
            [109, 196, 129, 111, 114, 105] => lookup_15_17(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_16() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_17() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_18() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_19_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_19_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_19_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_19_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_19_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_19_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_19_6_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_19_6<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_19_6_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_19_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_19_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_19<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_19_0(acc),
            [109, 121, 112, 101, 116, 115] => lookup_19_1(acc),
            [110, 101, 116] => lookup_19_2(acc),
            [111, 114, 103] => lookup_19_3(acc),
            [99, 111, 109] => lookup_19_4(acc),
            [103, 111, 118] => lookup_19_5(acc),
            [97, 100, 118, 105, 115, 111, 114] => lookup_19_6(info, labels, acc),
            [99, 108, 111, 117, 100, 54, 54] => lookup_19_7(acc),
            [100, 121, 110, 100, 110, 115] => lookup_19_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_20_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_20_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_20_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_20_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_20_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_20_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_20_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_20_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_20_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_20_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_20_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_20_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_20_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_20_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_20_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_20_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_20_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_20_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_20_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_20_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_20_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_20_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_20_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_20_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_20_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_20_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_20_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_20_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_20_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_20_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_20<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_20_0(acc),
            [107, 103] => lookup_20_1(acc),
            [115, 99] => lookup_20_2(acc),
            [103, 121, 101, 111, 110, 103, 103, 105] => lookup_20_3(acc),
            [106, 101, 111, 110, 110, 97, 109] => lookup_20_4(acc),
            [112, 101] => lookup_20_5(acc),
            [101, 115] => lookup_20_6(acc),
            [111, 114] => lookup_20_7(acc),
            [106, 101, 111, 110, 98, 117, 107] => lookup_20_8(acc),
            [99, 104, 117, 110, 103, 110, 97, 109] => lookup_20_9(acc),
            [109, 105, 108] => lookup_20_10(acc),
            [99, 111] => lookup_20_11(acc),
            [109, 115] => lookup_20_12(acc),
            [117, 108, 115, 97, 110] => lookup_20_13(acc),
            [103, 121, 101, 111, 110, 103, 110, 97, 109] => lookup_20_14(acc),
            [104, 115] => lookup_20_15(acc),
            [103, 97, 110, 103, 119, 111, 110] => lookup_20_16(acc),
            [103, 111] => lookup_20_17(acc),
            [97, 99] => lookup_20_18(acc),
            [103, 121, 101, 111, 110, 103, 98, 117, 107] => lookup_20_19(acc),
            [100, 97, 101, 103, 117] => lookup_20_20(acc),
            [106, 101, 106, 117] => lookup_20_21(acc),
            [115, 101, 111, 117, 108] => lookup_20_22(acc),
            [98, 117, 115, 97, 110] => lookup_20_23(acc),
            [114, 101] => lookup_20_24(acc),
            [99, 104, 117, 110, 103, 98, 117, 107] => lookup_20_25(acc),
            [100, 97, 101, 106, 101, 111, 110] => lookup_20_26(acc),
            [105, 110, 99, 104, 101, 111, 110] => lookup_20_27(acc),
            [103, 119, 97, 110, 103, 106, 117] => lookup_20_28(acc),
            [110, 101] => lookup_20_29(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_21_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 101, 114, 111] => lookup_21_0(acc),
            [99, 111, 111, 112] => lookup_21_1(acc),
            [101, 100, 117] => lookup_21_2(acc),
            [98, 105, 122] => lookup_21_3(acc),
            [110, 97, 109, 101] => lookup_21_4(acc),
            [105, 110, 102, 111] => lookup_21_5(acc),
            [109, 105, 108] => lookup_21_6(acc),
            [110, 101, 116] => lookup_21_7(acc),
            [111, 114, 103] => lookup_21_8(acc),
            [99, 111, 109] => lookup_21_9(acc),
            [103, 111, 118] => lookup_21_10(acc),
            [105, 110, 116] => lookup_21_11(acc),
            [109, 117, 115, 101, 117, 109] => lookup_21_12(acc),
            [112, 114, 111] => lookup_21_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_22() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_23_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_23_0(acc),
            [103, 111, 117, 118] => lookup_23_1(acc),
            [98, 97, 114, 114, 101, 97, 117] => lookup_23_2(acc),
            [97, 115, 115, 111] => lookup_23_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_24() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_25() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_26() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_27_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_27_0(acc),
            [97, 103, 114, 97, 114] => lookup_27_1(acc),
            [118, 105, 100, 101, 111] => lookup_27_2(acc),
            [110, 101, 119, 115] => lookup_27_3(acc),
            [105, 110, 102, 111] => lookup_27_4(acc),
            [116, 109] => lookup_27_5(acc),
            [106, 111, 103, 97, 115, 122] => lookup_27_6(acc),
            [101, 114, 111, 116, 105, 107, 97] => lookup_27_7(acc),
            [108, 97, 107, 97, 115] => lookup_27_8(acc),
            [109, 101, 100, 105, 97] => lookup_27_9(acc),
            [115, 101, 120] => lookup_27_10(acc),
            [115, 122, 101, 120] => lookup_27_11(acc),
            [99, 111] => lookup_27_12(acc),
            [99, 105, 116, 121] => lookup_27_13(acc),
            [111, 114, 103] => lookup_27_14(acc),
            [116, 111, 122, 115, 100, 101] => lookup_27_15(acc),
            [104, 111, 116, 101, 108] => lookup_27_16(acc),
            [102, 111, 114, 117, 109] => lookup_27_17(acc),
            [117, 116, 97, 122, 97, 115] => lookup_27_18(acc),
            [115, 112, 111, 114, 116] => lookup_27_19(acc),
            [107, 111, 110, 121, 118, 101, 108, 111] => lookup_27_20(acc),
            [50, 48, 48, 48] => lookup_27_21(acc),
            [101, 114, 111, 116, 105, 99, 97] => lookup_27_22(acc),
            [115, 117, 108, 105] => lookup_27_23(acc),
            [105, 110, 103, 97, 116, 108, 97, 110] => lookup_27_24(acc),
            [99, 97, 115, 105, 110, 111] => lookup_27_25(acc),
            [103, 97, 109, 101, 115] => lookup_27_26(acc),
            [115, 104, 111, 112] => lookup_27_27(acc),
            [114, 101, 107, 108, 97, 109] => lookup_27_28(acc),
            [112, 114, 105, 118] => lookup_27_29(acc),
            [102, 105, 108, 109] => lookup_27_30(acc),
            [98, 111, 108, 116] => lookup_27_31(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_28() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_29() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_30() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_31() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_32() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_33() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_34() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_35() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_36() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_37() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_38() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_39() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_40() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_41() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_42() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_43() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_44_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_44_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_44_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_44_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_44_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_44_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_44_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_44_6_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_44_6_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_44_6_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_44_6_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_44_6_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [100, 104] => lookup_44_6_3_0(acc),
            [118, 109] => lookup_44_6_3_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_44_6_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_44_6_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_44_6_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_44_6_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_44_6_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116] => lookup_44_6_7_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_44_6_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_44_6_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [106] => lookup_44_6_8_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_44_6_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_44_6<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_44_6_0(acc),
            [98, 97, 114, 115, 121, 111, 110, 108, 105, 110, 101] => lookup_44_6_1(acc),
            [110, 104, 45, 115, 101, 114, 118] => lookup_44_6_2(acc),
            [98, 121, 116, 101, 109, 97, 114, 107] => lookup_44_6_3(info, labels, acc),
            [110, 111, 45, 105, 112] => lookup_44_6_4(acc),
            [119, 101, 108, 108, 98, 101, 105, 110, 103, 122, 111, 110, 101] => lookup_44_6_5(acc),
            [103, 119, 105, 100, 100, 108, 101] => lookup_44_6_6(acc),
            [114, 101, 116, 114, 111, 115, 110, 117, 98] => lookup_44_6_7(info, labels, acc),
            [108, 97, 121, 101, 114, 115, 104, 105, 102, 116] => lookup_44_6_8(info, labels, acc),
            [98, 97, 114, 115, 121] => lookup_44_6_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_44_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_44_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_44_8_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_44_8_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_44_8<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 117, 103, 115] => lookup_44_8_0(acc),
            [103, 108, 117, 103] => lookup_44_8_1(acc),
            [108, 117, 103] => lookup_44_8_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_44_9_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_44_9<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_44_9_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_44_10_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_44_10_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_44_10<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 101, 114, 118, 105, 99, 101] => lookup_44_10_0(acc),
            [104, 111, 109, 101, 111, 102, 102, 105, 99, 101] => lookup_44_10_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_44_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_44_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_44_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_44_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_44<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 112, 114, 111] => lookup_44_0(acc),
            [108, 116, 100] => lookup_44_1(acc),
            [97, 99] => lookup_44_2(acc),
            [109, 101] => lookup_44_3(acc),
            [112, 108, 99] => lookup_44_4(acc),
            [98, 97, 114, 115, 121] => lookup_44_5(acc),
            [99, 111] => lookup_44_6(labels, acc),
            [110, 101, 116] => lookup_44_7(acc),
            [111, 114, 103] => lookup_44_8(labels, acc),
            [115, 99, 104] => lookup_44_9(info, labels, acc),
            [103, 111, 118] => lookup_44_10(labels, acc),
            [112, 121, 109, 110, 116] => lookup_44_11(acc),
            [110, 104, 115] => lookup_44_12(acc),
            [99, 111, 110, 110] => lookup_44_13(acc),
            [112, 111, 108, 105, 99, 101] => lookup_44_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_45() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_46() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_47_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_47_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_47_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_47_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_47_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_47_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_47<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_47_0(acc),
            [103, 111, 118] => lookup_47_1(acc),
            [101, 100, 117] => lookup_47_2(acc),
            [99, 111, 109] => lookup_47_3(acc),
            [114, 101, 112] => lookup_47_4(acc),
            [116, 114, 97] => lookup_47_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_48_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_48<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [121, 98, 111] => lookup_48_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_49() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_50() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_51() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_52_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_52_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_52_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_52_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_52_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_52_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_52<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_52_0(acc),
            [111, 114, 103] => lookup_52_1(acc),
            [103, 111, 118] => lookup_52_2(acc),
            [101, 100, 117] => lookup_52_3(acc),
            [99, 111, 109] => lookup_52_4(acc),
            [99, 111] => lookup_52_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_53() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_54() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_55() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_56() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_57() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_58() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_59() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_60() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_61() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_62() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_63_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_63<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 102] => lookup_63_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_64() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_65() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_66() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_67() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_68() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_69() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_70() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_71_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_71_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_71_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_71_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_71_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_71_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_71_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_71_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_71_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_71<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_71_0(acc),
            [112, 114, 111] => lookup_71_1(acc),
            [99, 111] => lookup_71_2(acc),
            [109, 101, 100] => lookup_71_3(acc),
            [110, 101, 116] => lookup_71_4(acc),
            [111, 114, 103] => lookup_71_5(acc),
            [99, 111, 109] => lookup_71_6(acc),
            [103, 111, 118] => lookup_71_7(acc),
            [109, 117, 115, 101, 117, 109] => lookup_71_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_72() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_73() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_74() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_75() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_76() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_78() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_79() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_80() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_81() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_82() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_83() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_84() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_85_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_85_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_85_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_85_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_85_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_85_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_85<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [224, 184, 151, 224, 184, 171, 224, 184, 178, 224, 184, 163] => lookup_85_0(acc),
            [224, 184, 173, 224, 184, 135, 224, 184, 132, 224, 185, 140, 224, 184, 129, 224, 184, 163] => {
                lookup_85_1(acc)
            }
            [224, 184, 168, 224, 184, 182, 224, 184, 129, 224, 184, 169, 224, 184, 178] => {
                lookup_85_2(acc)
            }
            [224, 184, 163, 224, 184, 177, 224, 184, 144, 224, 184, 154, 224, 184, 178, 224, 184, 165] => {
                lookup_85_3(acc)
            }
            [224, 184, 152, 224, 184, 184, 224, 184, 163, 224, 184, 129, 224, 184, 180, 224, 184, 136] => {
                lookup_85_4(acc)
            }
            [224, 185, 128, 224, 184, 153, 224, 185, 135, 224, 184, 149] => lookup_85_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_86() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_87() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_88() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_89() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_90() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_91() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_92_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_92_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_92_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_92_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_92_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_92_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_92_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_92_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_92_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_92_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_92_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_92_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_92_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_92_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_92_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_92_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_92_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_92<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 111, 112] => lookup_92_0(acc),
            [97, 101, 114, 111] => lookup_92_1(acc),
            [112, 114, 111] => lookup_92_2(acc),
            [110, 97, 109, 101] => lookup_92_3(acc),
            [105, 110, 102, 111] => lookup_92_4(acc),
            [116, 114, 97, 118, 101, 108] => lookup_92_5(acc),
            [99, 111, 109] => lookup_92_6(acc),
            [101, 100, 117] => lookup_92_7(acc),
            [98, 105, 122] => lookup_92_8(acc),
            [109, 111, 98, 105] => lookup_92_9(acc),
            [99, 111] => lookup_92_10(acc),
            [110, 101, 116] => lookup_92_11(acc),
            [111, 114, 103] => lookup_92_12(acc),
            [103, 111, 118] => lookup_92_13(acc),
            [109, 117, 115, 101, 117, 109] => lookup_92_14(acc),
            [105, 110, 116] => lookup_92_15(acc),
            [106, 111, 98, 115] => lookup_92_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_93_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_93_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_93_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_93_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_93_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_93_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_93<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_93_0(acc),
            [111, 114, 103] => lookup_93_1(acc),
            [103, 111, 118] => lookup_93_2(acc),
            [101, 100, 117] => lookup_93_3(acc),
            [99, 111, 109] => lookup_93_4(acc),
            [109, 105, 108] => lookup_93_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_94() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_95() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_96() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_97() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_98() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_99() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_100() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_101() -> Info {
    Info {
        len: 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_102() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_103() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_104() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_105_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_105_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_105_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_105_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_105_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_105_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_105_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_105_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_105_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_105_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_105_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_105_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_105_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_105<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 115, 108, 97] => lookup_105_0(acc),
            [101, 100, 117] => lookup_105_1(acc),
            [112, 114, 111] => lookup_105_2(acc),
            [98, 105, 122] => lookup_105_3(acc),
            [105, 110, 102, 111] => lookup_105_4(acc),
            [110, 101, 116] => lookup_105_5(acc),
            [111, 114, 103] => lookup_105_6(acc),
            [110, 97, 109, 101] => lookup_105_7(acc),
            [99, 111, 109] => lookup_105_8(acc),
            [103, 111, 118] => lookup_105_9(acc),
            [101, 115, 116] => lookup_105_10(acc),
            [112, 114, 111, 102] => lookup_105_11(acc),
            [97, 99] => lookup_105_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_106_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_106_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_106_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_106_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_106_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_106_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_106_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_106<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_106_0(acc),
            [105, 110, 100] => lookup_106_1(acc),
            [111, 114, 103] => lookup_106_2(acc),
            [99, 111, 109] => lookup_106_3(acc),
            [101, 100, 117] => lookup_106_4(acc),
            [101, 109, 98] => lookup_106_5(acc),
            [103, 111, 118] => lookup_106_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_107() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_108() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_109() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_110() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_111() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_112() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_113() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_114() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_115() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_116() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_117() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_118() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_119_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_119_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_119_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_119_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_119_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_119<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_119_0(acc),
            [111, 114, 103] => lookup_119_1(acc),
            [99, 111, 109] => lookup_119_2(acc),
            [101, 100, 117] => lookup_119_3(acc),
            [103, 111, 118] => lookup_119_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_120() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_121_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_121_1_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_121_1_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            [97, 108, 112, 49] => lookup_121_1_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_121_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_121_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [97, 101] => lookup_121_1_0(info, labels, acc),
            [97, 112, 112, 101, 110, 103, 105, 110, 101] => lookup_121_1_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_121_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_121_3_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_121_3_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_121_3_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_121_3_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_121_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [115, 118, 99] => lookup_121_3_0(info, labels, acc),
            wild => lookup_121_3_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_121_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_121_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_121_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_121_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_121_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_121_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_121_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_121<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_121_0(acc),
            [102, 108, 111, 119] => lookup_121_1(info, labels, acc),
            [100, 110, 115, 107, 105, 110, 103] => lookup_121_2(acc),
            [102, 105, 114, 101, 110, 101, 116] => lookup_121_3(info, labels, acc),
            [108, 105, 109, 97, 45, 99, 105, 116, 121] => lookup_121_4(acc),
            [50, 105, 120] => lookup_121_5(acc),
            [115, 113, 117, 97, 114, 101, 55] => lookup_121_6(acc),
            [108, 105, 110, 107, 121, 97, 114, 100, 45, 99, 108, 111, 117, 100] => {
                lookup_121_7(acc)
            }
            [52, 108, 105, 109, 97] => lookup_121_8(acc),
            [103, 111, 116, 100, 110, 115] => lookup_121_9(acc),
            [49, 50, 104, 112] => lookup_121_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_122_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_122<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_122_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_123() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_124() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_127() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_128() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_129_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_129<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 114, 111, 109] => lookup_129_0(acc),
            [119, 105, 116, 104] => lookup_129_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_130() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_131() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_132() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_133() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_134_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_134_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_134<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_134_0(acc),
            [99, 111] => lookup_134_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_135() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_136() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_137() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_138() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_139() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_140_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_140_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_140_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_140_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_140_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_140<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_140_0(acc),
            [110, 101, 116] => lookup_140_1(acc),
            [111, 114, 103] => lookup_140_2(acc),
            [99, 111, 109] => lookup_140_3(acc),
            [99, 111] => lookup_140_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_141() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_142_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_142_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_142_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_142<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 115, 112, 97, 99, 101] => lookup_142_0(acc),
            [108, 105, 109, 97, 45, 99, 105, 116, 121] => lookup_142_1(acc),
            [109, 121, 100, 100, 110, 115] => lookup_142_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_143() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_144() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_145() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_146() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_147_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_147_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_147_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_147_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 97, 101, 109, 111, 110] => lookup_147_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_147_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_147_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_147_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_147<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_147_0(acc),
            [111, 114, 103] => lookup_147_1(acc),
            [112, 97, 110, 101, 108] => lookup_147_2(labels, acc),
            [107, 97, 97, 115] => lookup_147_3(acc),
            [99, 121, 97] => lookup_147_4(acc),
            [99, 111] => lookup_147_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_148() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_150() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_151() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_154() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_155() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_156() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_157() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_158_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_158_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_158_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_158_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_158_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_158<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_158_0(acc),
            [111, 114, 103] => lookup_158_1(acc),
            [99, 111, 109] => lookup_158_2(acc),
            [101, 100, 117] => lookup_158_3(acc),
            [103, 111, 118] => lookup_158_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_159() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_160() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_161() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_162() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_165() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_166() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_168<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 97, 110] => lookup_168_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_169() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_170() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_171() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_172() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_173() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_174_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_174_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [102, 111, 114, 103, 111, 116] => lookup_174_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_174_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_174_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [102, 111, 114, 103, 111, 116] => lookup_174_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_174<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 105, 115] => lookup_174_0(info, labels, acc),
            [104, 101, 114] => lookup_174_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_175() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_176() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_177_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_177_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_177_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 100, 101] => lookup_177_0(info, labels, acc),
            [114, 97, 118, 101, 110, 100, 98] => lookup_177_1(acc),
            [100, 101, 118, 101, 108, 111, 112, 109, 101, 110, 116] => lookup_177_2(acc),
            [114, 101, 112, 108] => lookup_177_3(acc),
            [104, 115] => lookup_177_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_178() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_179() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_181() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_182() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_183() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_184() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_185() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_186() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_187_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_187_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_187<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 115, 99, 108, 111, 117, 100] => lookup_187_0(acc),
            [98, 97, 114, 115, 121] => lookup_187_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_188() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_189_6_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_189_6_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [109, 101, 108] => lookup_189_6_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_189_6<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_189_6_0(acc),
            [99, 108, 111, 117, 100, 108, 101, 116, 115] => lookup_189_6_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_189_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_9_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_9_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_9_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_9_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_9_4<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 99, 104, 111, 111, 108, 115] => lookup_189_9_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_189_9_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_9_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_9_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_9_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_9<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 97, 115] => lookup_189_9_0(acc),
            [99, 97, 116, 104, 111, 108, 105, 99] => lookup_189_9_1(acc),
            [113, 108, 100] => lookup_189_9_2(acc),
            [97, 99, 116] => lookup_189_9_3(acc),
            [110, 115, 119] => lookup_189_9_4(labels, acc),
            [119, 97] => lookup_189_9_5(acc),
            [115, 97] => lookup_189_9_6(acc),
            [118, 105, 99] => lookup_189_9_7(acc),
            [110, 116] => lookup_189_9_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_189_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_13_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_13_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_13_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_13_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_13_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_13<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 97, 115] => lookup_189_13_0(acc),
            [113, 108, 100] => lookup_189_13_1(acc),
            [119, 97] => lookup_189_13_2(acc),
            [115, 97] => lookup_189_13_3(acc),
            [118, 105, 99] => lookup_189_13_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_189_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 110, 102] => lookup_189_0(acc),
            [105, 100] => lookup_189_1(acc),
            [116, 97, 115] => lookup_189_2(acc),
            [111, 122] => lookup_189_3(acc),
            [105, 110, 102, 111] => lookup_189_4(acc),
            [97, 99, 116] => lookup_189_5(acc),
            [99, 111, 109] => lookup_189_6(labels, acc),
            [110, 115, 119] => lookup_189_7(acc),
            [113, 108, 100] => lookup_189_8(acc),
            [101, 100, 117] => lookup_189_9(labels, acc),
            [97, 115, 110] => lookup_189_10(acc),
            [110, 101, 116] => lookup_189_11(acc),
            [111, 114, 103] => lookup_189_12(acc),
            [103, 111, 118] => lookup_189_13(labels, acc),
            [119, 97] => lookup_189_14(acc),
            [115, 97] => lookup_189_15(acc),
            [118, 105, 99] => lookup_189_16(acc),
            [110, 116] => lookup_189_17(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_190_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_190_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_190_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_190_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_190_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_190<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_190_0(acc),
            [111, 114, 103] => lookup_190_1(acc),
            [103, 111, 118] => lookup_190_2(acc),
            [101, 100, 117] => lookup_190_3(acc),
            [99, 111, 109] => lookup_190_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_191_0(acc),
            [101, 100, 117] => lookup_191_1(acc),
            [115, 108, 100] => lookup_191_2(acc),
            [110, 101, 116] => lookup_191_3(acc),
            [111, 114, 103] => lookup_191_4(acc),
            [105, 110, 103] => lookup_191_5(acc),
            [99, 111, 109] => lookup_191_6(acc),
            [97, 98, 111] => lookup_191_7(acc),
            [109, 101, 100] => lookup_191_8(acc),
            [103, 111, 98] => lookup_191_9(acc),
            [110, 111, 109] => lookup_191_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_192_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_192_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_192_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_192_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_192_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_192_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_192_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_192<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 111, 112] => lookup_192_0(acc),
            [110, 101, 116] => lookup_192_1(acc),
            [111, 114, 103] => lookup_192_2(acc),
            [99, 111, 109] => lookup_192_3(acc),
            [101, 100, 117] => lookup_192_4(acc),
            [103, 111, 118] => lookup_192_5(acc),
            [109, 105, 108] => lookup_192_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_193() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_194() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_195_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_195_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_195_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_195_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_195_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_195_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_195<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [208, 190, 208, 180] => lookup_195_0(acc),
            [208, 190, 208, 177, 209, 128] => lookup_195_1(acc),
            [208, 176, 208, 186] => lookup_195_2(acc),
            [208, 191, 209, 128] => lookup_195_3(acc),
            [208, 190, 209, 128, 208, 179] => lookup_195_4(acc),
            [209, 131, 208, 191, 209, 128] => lookup_195_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_196() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_197_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_197_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_197_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_197<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_197_0(acc),
            [110, 121, 109] => lookup_197_1(acc),
            [103, 111, 118] => lookup_197_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_198() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_199() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_200_0(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_200_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_200<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            [119, 119, 119] => lookup_200_0(acc),
            wild => lookup_200_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_201() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_202() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_203() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_204() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_205() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_206() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_207() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_208() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_209() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_210() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_211() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_212() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_213() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_214() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_215() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_216() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_217() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_218_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_218_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_218_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_218_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_218_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_218_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_218_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_218_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_218_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_218_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_218_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_218_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_218_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_218_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_218<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_218_0(acc),
            [119, 101, 98] => lookup_218_1(acc),
            [97, 99] => lookup_218_2(acc),
            [105, 110] => lookup_218_3(acc),
            [98, 105, 122] => lookup_218_4(acc),
            [101, 100, 117] => lookup_218_5(acc),
            [99, 111] => lookup_218_6(acc),
            [105, 110, 102, 111] => lookup_218_7(acc),
            [109, 105, 108] => lookup_218_8(acc),
            [99, 111, 109] => lookup_218_9(acc),
            [110, 101, 116] => lookup_218_10(acc),
            [105, 110, 116] => lookup_218_11(acc),
            [103, 111, 98] => lookup_218_12(acc),
            [110, 111, 109] => lookup_218_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_219_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_219_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_219_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_219_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_219_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_219_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_219<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 110, 116, 101, 114, 112, 114, 105, 115, 101, 99, 108, 111, 117, 100] => {
                lookup_219_0(acc)
            }
            [115, 104, 97, 99, 107, 110, 101, 116] => lookup_219_1(acc),
            [109, 105, 110, 101] => lookup_219_2(acc),
            [117, 119, 117] => lookup_219_3(acc),
            [110, 111, 109] => lookup_219_4(acc),
            [109, 101, 114, 115, 101, 105, 110, 101] => lookup_219_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_220_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_220_8_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_220_8_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_220_8_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_220_8_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_220_8_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_220_8_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_220_8_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_220_8_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_220_8_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_220_8_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_220_8_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_220_8_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_220_8_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_220_8_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_220_8_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_220_8_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_220_8_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_220_8_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_220_8_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_220_8_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_220_8_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_220_8_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_220_8_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_220_8_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_220_8_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_220_8_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_220_8<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 101] => lookup_220_8_0(acc),
            [115, 99] => lookup_220_8_1(acc),
            [97, 112] => lookup_220_8_2(acc),
            [103, 111] => lookup_220_8_3(acc),
            [97, 99] => lookup_220_8_4(acc),
            [116, 111] => lookup_220_8_5(acc),
            [97, 108] => lookup_220_8_6(acc),
            [114, 115] => lookup_220_8_7(acc),
            [112, 98] => lookup_220_8_8(acc),
            [112, 101] => lookup_220_8_9(acc),
            [114, 111] => lookup_220_8_10(acc),
            [98, 97] => lookup_220_8_11(acc),
            [114, 110] => lookup_220_8_12(acc),
            [114, 114] => lookup_220_8_13(acc),
            [97, 109] => lookup_220_8_14(acc),
            [101, 115] => lookup_220_8_15(acc),
            [115, 112] => lookup_220_8_16(acc),
            [112, 114] => lookup_220_8_17(acc),
            [109, 116] => lookup_220_8_18(acc),
            [109, 115] => lookup_220_8_19(acc),
            [112, 97] => lookup_220_8_20(acc),
            [114, 106] => lookup_220_8_21(acc),
            [99, 101] => lookup_220_8_22(acc),
            [100, 102] => lookup_220_8_23(acc),
            [109, 97] => lookup_220_8_24(acc),
            [109, 103] => lookup_220_8_25(acc),
            [112, 105] => lookup_220_8_26(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_220_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_126_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_126<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_220_126_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_220_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_134_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_220_134_1_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_220_134_1_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [117, 115, 101, 114, 115] => lookup_220_134_1_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_220_134_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [115, 99, 97, 108, 101] => lookup_220_134_1_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_220_134<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_220_134_0(acc),
            [118, 105, 114, 116, 117, 97, 108, 99, 108, 111, 117, 100] => {
                lookup_220_134_1(info, labels, acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_220_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_138_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_138_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_138_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_138_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_138_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_138_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_138_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_138_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_138_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_138_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_138_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_138_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_138_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_138_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_138_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_138_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_138_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_138_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_138_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_138_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_138_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_138_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_138_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_138_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_138_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_138_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_138_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_138<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 101] => lookup_220_138_0(acc),
            [115, 99] => lookup_220_138_1(acc),
            [97, 112] => lookup_220_138_2(acc),
            [103, 111] => lookup_220_138_3(acc),
            [97, 99] => lookup_220_138_4(acc),
            [116, 111] => lookup_220_138_5(acc),
            [97, 108] => lookup_220_138_6(acc),
            [114, 115] => lookup_220_138_7(acc),
            [112, 98] => lookup_220_138_8(acc),
            [112, 101] => lookup_220_138_9(acc),
            [114, 111] => lookup_220_138_10(acc),
            [98, 97] => lookup_220_138_11(acc),
            [114, 110] => lookup_220_138_12(acc),
            [114, 114] => lookup_220_138_13(acc),
            [97, 109] => lookup_220_138_14(acc),
            [101, 115] => lookup_220_138_15(acc),
            [115, 112] => lookup_220_138_16(acc),
            [112, 114] => lookup_220_138_17(acc),
            [109, 116] => lookup_220_138_18(acc),
            [109, 115] => lookup_220_138_19(acc),
            [112, 97] => lookup_220_138_20(acc),
            [114, 106] => lookup_220_138_21(acc),
            [99, 101] => lookup_220_138_22(acc),
            [100, 102] => lookup_220_138_23(acc),
            [109, 97] => lookup_220_138_24(acc),
            [109, 103] => lookup_220_138_25(acc),
            [112, 105] => lookup_220_138_26(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_220_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 109, 100] => lookup_220_0(acc),
            [112, 112, 103] => lookup_220_1(acc),
            [111, 110, 103] => lookup_220_2(acc),
            [108, 111, 103] => lookup_220_3(acc),
            [115, 97, 110, 116, 111, 97, 110, 100, 114, 101] => lookup_220_4(acc),
            [99, 97, 109, 112, 105, 110, 97, 115] => lookup_220_5(acc),
            [103, 49, 50] => lookup_220_6(acc),
            [112, 114, 111] => lookup_220_7(acc),
            [108, 101, 103] => lookup_220_8(labels, acc),
            [97, 112, 97, 114, 101, 99, 105, 100, 97] => lookup_220_9(acc),
            [57, 103, 117, 97, 99, 117] => lookup_220_10(acc),
            [116, 109, 112] => lookup_220_11(acc),
            [98] => lookup_220_12(acc),
            [101, 99, 111] => lookup_220_13(acc),
            [97, 106, 117] => lookup_220_14(acc),
            [99, 111, 110, 116, 97, 103, 101, 109] => lookup_220_15(acc),
            [99, 110, 103] => lookup_220_16(acc),
            [101, 100, 117] => lookup_220_17(acc),
            [109, 97, 114, 105, 110, 103, 97] => lookup_220_18(acc),
            [110, 101, 116] => lookup_220_19(acc),
            [111, 114, 103] => lookup_220_20(acc),
            [116, 114, 100] => lookup_220_21(acc),
            [102, 108, 111, 103] => lookup_220_22(acc),
            [102, 101, 105, 114, 97] => lookup_220_23(acc),
            [109, 97, 116] => lookup_220_24(acc),
            [115, 97, 110, 116, 97, 109, 97, 114, 105, 97] => lookup_220_25(acc),
            [117, 100, 105] => lookup_220_26(acc),
            [112, 115, 105] => lookup_220_27(acc),
            [112, 115, 99] => lookup_220_28(acc),
            [114, 101, 99] => lookup_220_29(acc),
            [102, 109] => lookup_220_30(acc),
            [116, 104, 101] => lookup_220_31(acc),
            [100, 101, 116] => lookup_220_32(acc),
            [98, 108, 111, 103] => lookup_220_33(acc),
            [106, 117, 115] => lookup_220_34(acc),
            [109, 97, 99, 97, 112, 97] => lookup_220_35(acc),
            [101, 116, 99] => lookup_220_36(acc),
            [99, 114, 105] => lookup_220_37(acc),
            [109, 101, 100] => lookup_220_38(acc),
            [110, 111, 116] => lookup_220_39(acc),
            [99, 117, 105, 97, 98, 97] => lookup_220_40(acc),
            [103, 114, 117] => lookup_220_41(acc),
            [115, 97, 111, 103, 111, 110, 99, 97] => lookup_220_42(acc),
            [116, 99] => lookup_220_43(acc),
            [106, 111, 114] => lookup_220_44(acc),
            [118, 105, 120] => lookup_220_45(acc),
            [99, 110, 116] => lookup_220_46(acc),
            [116, 117, 114] => lookup_220_47(acc),
            [97, 114, 116] => lookup_220_48(acc),
            [99, 111, 122] => lookup_220_49(acc),
            [115, 97, 109, 112, 97] => lookup_220_50(acc),
            [112, 97, 108, 109, 97, 115] => lookup_220_51(acc),
            [115, 97, 108, 118, 97, 100, 111, 114] => lookup_220_52(acc),
            [98, 105, 111] => lookup_220_53(acc),
            [98, 115, 98] => lookup_220_54(acc),
            [111, 100, 111] => lookup_220_55(acc),
            [119, 105, 107, 105] => lookup_220_56(acc),
            [115, 114, 118] => lookup_220_57(acc),
            [109, 97, 110, 97, 117, 115] => lookup_220_58(acc),
            [112, 111, 97] => lookup_220_59(acc),
            [115, 108, 122] => lookup_220_60(acc),
            [101, 115, 112] => lookup_220_61(acc),
            [101, 116, 105] => lookup_220_62(acc),
            [113, 115, 108] => lookup_220_63(acc),
            [97, 109] => lookup_220_64(acc),
            [111, 115, 97, 115, 99, 111] => lookup_220_65(acc),
            [114, 101, 99, 105, 102, 101] => lookup_220_66(acc),
            [103, 111, 105, 97, 110, 105, 97] => lookup_220_67(acc),
            [109, 111, 114, 101, 110, 97] => lookup_220_68(acc),
            [101, 99, 110] => lookup_220_69(acc),
            [114, 105, 111, 98, 114, 97, 110, 99, 111] => lookup_220_70(acc),
            [98, 97, 114, 117, 101, 114, 105] => lookup_220_71(acc),
            [114, 105, 98, 101, 105, 114, 97, 111] => lookup_220_72(acc),
            [102, 111, 116] => lookup_220_73(acc),
            [114, 97, 100, 105, 111] => lookup_220_74(acc),
            [99, 111, 111, 112] => lookup_220_75(acc),
            [115, 106, 99] => lookup_220_76(acc),
            [99, 97, 120, 105, 97, 115] => lookup_220_77(acc),
            [115, 108, 103] => lookup_220_78(acc),
            [98, 101, 108, 101, 109] => lookup_220_79(acc),
            [108, 101, 108] => lookup_220_80(acc),
            [102, 111, 122] => lookup_220_81(acc),
            [110, 97, 116, 97, 108] => lookup_220_82(acc),
            [97, 112, 112] => lookup_220_83(acc),
            [110, 116, 114] => lookup_220_84(acc),
            [103, 103, 102] => lookup_220_85(acc),
            [109, 105, 108] => lookup_220_86(acc),
            [99, 117, 114, 105, 116, 105, 98, 97] => lookup_220_87(acc),
            [109, 112] => lookup_220_88(acc),
            [97, 98, 99] => lookup_220_89(acc),
            [98, 111, 97, 118, 105, 115, 116, 97] => lookup_220_90(acc),
            [105, 109, 98] => lookup_220_91(acc),
            [103, 101, 111] => lookup_220_92(acc),
            [101, 109, 112] => lookup_220_93(acc),
            [106, 97, 109, 112, 97] => lookup_220_94(acc),
            [97, 100, 109] => lookup_220_95(acc),
            [105, 110, 100] => lookup_220_96(acc),
            [114, 105, 111, 112, 114, 101, 116, 111] => lookup_220_97(acc),
            [97, 116, 111] => lookup_220_98(acc),
            [102, 110, 100] => lookup_220_99(acc),
            [102, 115, 116] => lookup_220_100(acc),
            [109, 97, 99, 101, 105, 111] => lookup_220_101(acc),
            [109, 117, 115] => lookup_220_102(acc),
            [97, 114, 113] => lookup_220_103(acc),
            [114, 105, 111] => lookup_220_104(acc),
            [118, 108, 111, 103] => lookup_220_105(acc),
            [102, 111, 114, 116, 97, 108] => lookup_220_106(acc),
            [115, 97, 111, 98, 101, 114, 110, 97, 114, 100, 111] => lookup_220_107(acc),
            [122, 108, 103] => lookup_220_108(acc),
            [100, 101, 102] => lookup_220_109(acc),
            [97, 110, 97, 110, 105] => lookup_220_110(acc),
            [102, 108, 111, 114, 105, 112, 97] => lookup_220_111(acc),
            [101, 110, 103] => lookup_220_112(acc),
            [105, 110, 102] => lookup_220_113(acc),
            [116, 118] => lookup_220_114(acc),
            [118, 101, 116] => lookup_220_115(acc),
            [99, 97, 109, 112, 105, 110, 97, 103, 114, 97, 110, 100, 101] => lookup_220_116(acc),
            [106, 111, 105, 110, 118, 105, 108, 108, 101] => lookup_220_117(acc),
            [106, 100, 102] => lookup_220_118(acc),
            [116, 101, 99] => lookup_220_119(acc),
            [97, 103, 114] => lookup_220_120(acc),
            [116, 101, 111] => lookup_220_121(acc),
            [100, 101, 118] => lookup_220_122(acc),
            [102, 97, 114] => lookup_220_123(acc),
            [115, 111, 114, 111, 99, 97, 98, 97] => lookup_220_124(acc),
            [110, 105, 116, 101, 114, 111, 105] => lookup_220_125(acc),
            [110, 111, 109] => lookup_220_126(info, labels, acc),
            [116, 97, 120, 105] => lookup_220_127(acc),
            [100, 101, 115] => lookup_220_128(acc),
            [99, 105, 109] => lookup_220_129(acc),
            [101, 110, 102] => lookup_220_130(acc),
            [106, 97, 98] => lookup_220_131(acc),
            [97, 100, 118] => lookup_220_132(acc),
            [108, 111, 110, 100, 114, 105, 110, 97] => lookup_220_133(acc),
            [99, 111, 109] => lookup_220_134(labels, acc),
            [98, 104, 122] => lookup_220_135(acc),
            [115, 101, 103] => lookup_220_136(acc),
            [98, 105, 98] => lookup_220_137(acc),
            [103, 111, 118] => lookup_220_138(labels, acc),
            [114, 101, 112] => lookup_220_139(acc),
            [112, 118, 104] => lookup_220_140(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_221() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_222() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_223() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_224_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_224_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_224_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_224_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_224_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_224_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_224_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_224_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_224_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_224<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_224_0(acc),
            [105, 110, 102] => lookup_224_1(acc),
            [101, 100, 117] => lookup_224_2(acc),
            [110, 97, 109, 101] => lookup_224_3(acc),
            [110, 101, 116] => lookup_224_4(acc),
            [111, 114, 103] => lookup_224_5(acc),
            [99, 111, 109] => lookup_224_6(acc),
            [103, 111, 118] => lookup_224_7(acc),
            [110, 111, 109] => lookup_224_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_225() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_226() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_227() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_228_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_228_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_228_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_228_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_228_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_228_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_228_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [98, 99, 105] => lookup_228_5_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_228_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_228_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_228_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_228_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_228_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_228_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_228_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_228_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_228<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 97, 97] => lookup_228_0(acc),
            [98, 97, 114, 115, 121] => lookup_228_1(acc),
            [101, 110, 103] => lookup_228_2(acc),
            [108, 97, 119] => lookup_228_3(acc),
            [106, 117, 114] => lookup_228_4(acc),
            [100, 110, 115, 116, 114, 97, 99, 101] => lookup_228_5(info, labels, acc),
            [109, 101, 100] => lookup_228_6(acc),
            [114, 101, 99, 104, 116] => lookup_228_7(acc),
            [97, 99, 97] => lookup_228_8(acc),
            [97, 118, 111, 99, 97, 116] => lookup_228_9(acc),
            [98, 97, 114] => lookup_228_10(acc),
            [97, 99, 99, 116] => lookup_228_11(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_228_12(acc),
            [99, 112, 97] => lookup_228_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_229_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_229_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_229_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_229_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_229_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_229_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_229_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_229<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 101, 99] => lookup_229_0(acc),
            [111, 114, 103] => lookup_229_1(acc),
            [110, 101, 116] => lookup_229_2(acc),
            [103, 111, 118] => lookup_229_3(acc),
            [101, 100, 117] => lookup_229_4(acc),
            [112, 108, 111] => lookup_229_5(acc),
            [99, 111, 109] => lookup_229_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_230() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_231() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_232() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_233() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_234() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_235() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_236() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_237() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_239() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_240() -> Info {
    Info {
        len: 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_241() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_242() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_243() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_244_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_244<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_244_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_245() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_246() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_247() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_248() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_249() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_252<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_252_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_253() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_254() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_255() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_256_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_256_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_256_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_256_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_256_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_256_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_256_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_256<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_256_0(acc),
            [111, 114, 103] => lookup_256_1(acc),
            [99, 111, 109] => lookup_256_2(acc),
            [101, 100, 117] => lookup_256_3(acc),
            [97, 112, 112] => lookup_256_4(acc),
            [109, 111, 98, 105] => lookup_256_5(acc),
            [97, 115, 115, 111] => lookup_256_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_257_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_257_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_257_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_257_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_257_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_257_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_257_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_257_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_257_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_257_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_257_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_257_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_257_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_257_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_257_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_257_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_257_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_257_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_257_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_257_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_257_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_257_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_257_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_257_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_257_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_257_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_257_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_257_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_257_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_257_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_257_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_257_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_257_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_257_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_257_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_257_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_257_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_257_37_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_257_37<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 111, 99, 97, 108, 104, 111, 115, 116] => lookup_257_37_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_257_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_257_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_257_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_257_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_257_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_257_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_257_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_257_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_257<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 106, 112] => lookup_257_0(acc),
            [110, 99, 116, 117] => lookup_257_1(acc),
            [119, 98, 113] => lookup_257_2(acc),
            [103, 108, 105, 116, 99, 104] => lookup_257_3(acc),
            [108, 111, 104, 109, 117, 115] => lookup_257_4(acc),
            [117, 107, 99, 111] => lookup_257_5(acc),
            [100, 105, 115, 107, 115, 116, 97, 116, 105, 111, 110] => lookup_257_6(acc),
            [114, 97, 118, 101, 110, 100, 98] => lookup_257_7(acc),
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 115, 103] => lookup_257_8(acc),
            [101, 100, 117] => lookup_257_9(acc),
            [115, 121, 110, 111, 108, 111, 103, 121] => lookup_257_10(acc),
            [102, 105, 108, 101, 103, 101, 97, 114] => lookup_257_11(acc),
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 105, 101] => lookup_257_12(acc),
            [99, 111] => lookup_257_13(acc),
            [110, 101, 116] => lookup_257_14(acc),
            [111, 114, 103] => lookup_257_15(acc),
            [105, 116, 115] => lookup_257_16(acc),
            [99, 111, 117, 107] => lookup_257_17(acc),
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 97, 117] => lookup_257_18(acc),
            [115, 111, 117, 110, 100, 99, 97, 115, 116] => lookup_257_19(acc),
            [116, 99, 112, 52] => lookup_257_20(acc),
            [100, 100, 110, 115] => lookup_257_21(acc),
            [109, 99, 100, 105, 114] => lookup_257_22(acc),
            [119, 101, 100, 101, 112, 108, 111, 121] => lookup_257_23(acc),
            [97, 99] => lookup_257_24(acc),
            [121, 111, 109, 98, 111] => lookup_257_25(acc),
            [99, 54, 54] => lookup_257_26(acc),
            [119, 101, 98, 104, 111, 112] => lookup_257_27(acc),
            [108, 111, 103, 105, 110, 116, 111] => lookup_257_28(acc),
            [110, 111, 104, 111, 115, 116] => lookup_257_29(acc),
            [105, 50, 51, 52] => lookup_257_30(acc),
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 100, 101] => lookup_257_31(acc),
            [98, 97, 114, 115, 121] => lookup_257_32(acc),
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 103, 98] => lookup_257_33(acc),
            [98, 114, 97, 115, 105, 108, 105, 97] => lookup_257_34(acc),
            [100, 110, 115, 102, 111, 114] => lookup_257_35(acc),
            [109, 99, 112, 101] => lookup_257_36(acc),
            [100, 97, 112, 108, 105, 101] => lookup_257_37(labels, acc),
            [101, 100, 103, 101, 115, 116, 97, 99, 107] => lookup_257_38(acc),
            [110, 121, 109] => lookup_257_39(acc),
            [109, 121, 100, 115] => lookup_257_40(acc),
            [112, 114, 105, 118] => lookup_257_41(acc),
            [103, 111, 118] => lookup_257_42(acc),
            [104, 111, 112, 116, 111] => lookup_257_43(acc),
            [100, 115, 99, 108, 111, 117, 100] => lookup_257_44(acc),
            [110, 111, 105, 112] => lookup_257_45(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_258() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_259_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_259_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_259_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_259_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_259_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_259_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_259_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_259_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_259_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_259_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_259_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_259<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_259_0(acc),
            [105, 110, 102, 111] => lookup_259_1(acc),
            [116, 109] => lookup_259_2(acc),
            [99, 111, 109] => lookup_259_3(acc),
            [114, 101, 99] => lookup_259_4(acc),
            [97, 114, 116, 115] => lookup_259_5(acc),
            [110, 121, 109] => lookup_259_6(acc),
            [115, 104, 111, 112] => lookup_259_7(acc),
            [99, 111] => lookup_259_8(acc),
            [102, 105, 114, 109] => lookup_259_9(acc),
            [111, 114, 103] => lookup_259_10(acc),
            [115, 116, 111, 114, 101] => lookup_259_11(acc),
            [119, 119, 119] => lookup_259_12(acc),
            [110, 111, 109] => lookup_259_13(acc),
            [110, 116] => lookup_259_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_261() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_263_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_263_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_263_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_263_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_263_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_263_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_263_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_263_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_263_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_263_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_263_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_263_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_263_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_263_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_263_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_263_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_263_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_263_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_263<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111] => lookup_263_0(acc),
            [97, 99] => lookup_263_1(acc),
            [97, 115, 115, 111] => lookup_263_2(acc),
            [120, 110, 45, 45, 97, 114, 111, 112, 111, 114, 116, 45, 98, 121, 97] => {
                lookup_263_3(acc)
            }
            [97, 195, 169, 114, 111, 112, 111, 114, 116] => lookup_263_4(acc),
            [99, 111, 109] => lookup_263_5(acc),
            [112, 114, 101, 115, 115, 101] => lookup_263_6(acc),
            [109, 100] => lookup_263_7(acc),
            [111, 114] => lookup_263_8(acc),
            [101, 100] => lookup_263_9(acc),
            [101, 100, 117] => lookup_263_10(acc),
            [102, 105, 110] => lookup_263_11(acc),
            [99, 111] => lookup_263_12(acc),
            [110, 101, 116] => lookup_263_13(acc),
            [111, 114, 103] => lookup_263_14(acc),
            [103, 111, 117, 118] => lookup_263_15(acc),
            [110, 108] => lookup_263_16(acc),
            [105, 110, 116] => lookup_263_17(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_264() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_265() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_266() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_267() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_268_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_268_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_268<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 109] => lookup_268_0(acc),
            [97, 115, 115, 111] => lookup_268_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_270() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_271() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_272() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_273() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_274() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_275() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_276() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_277() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_278() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_279() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_280_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_280_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_280_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_280_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_280_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_280_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_280_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_280_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_280_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_280_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_280<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 57, 48, 97, 49, 97, 102] => lookup_280_0(acc),
            [120, 110, 45, 45, 99, 49, 97, 118, 103] => lookup_280_1(acc),
            [120, 110, 45, 45, 56, 48, 97, 97, 97, 48, 99, 118, 97, 99] => lookup_280_2(acc),
            [120, 110, 45, 45, 106, 49, 97, 101, 108, 56, 98] => lookup_280_3(acc),
            [120, 110, 45, 45, 106, 49, 97, 100, 112] => lookup_280_4(acc),
            [120, 110, 45, 45, 106, 49, 97, 101, 102] => lookup_280_5(acc),
            [120, 110, 45, 45, 57, 48, 97, 109, 99] => lookup_280_6(acc),
            [120, 110, 45, 45, 104, 49, 97, 104, 110] => lookup_280_7(acc),
            [120, 110, 45, 45, 104, 49, 97, 108, 105, 122] => lookup_280_8(acc),
            [120, 110, 45, 45, 52, 49, 97] => lookup_280_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_281() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_282() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_283() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_284() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_285() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_286() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_287() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_288_0_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_288_0_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_288_0_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_288_0_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_288_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [98, 122, 122] => lookup_288_0_0(info, labels, acc),
            wild => lookup_288_0_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_288<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 97, 112, 112, 115] => lookup_288_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_289() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_290() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_291() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_292() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_293() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_294() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_295() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_296() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_297_0(acc),
            [111, 114, 103] => lookup_297_1(acc),
            [99, 111, 109] => lookup_297_2(acc),
            [101, 100, 117] => lookup_297_3(acc),
            [103, 111, 118] => lookup_297_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_298() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_299() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_300() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_301() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_302() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_303() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_304() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_305() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_306_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_306_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_306_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_306_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_306_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_306_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_306_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_306_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_306<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_306_0(acc),
            [98, 108, 111, 103] => lookup_306_1(acc),
            [109, 101] => lookup_306_2(acc),
            [110, 101, 116] => lookup_306_3(acc),
            [111, 114, 103] => lookup_306_4(acc),
            [100, 101, 118] => lookup_306_5(acc),
            [99, 111, 109] => lookup_306_6(acc),
            [99, 110] => lookup_306_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_307() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_308() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_309() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_310() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_311_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_311_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_311_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_311_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_311_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_311_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_311_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_311<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_311_0(acc),
            [111, 114, 103] => lookup_311_1(acc),
            [103, 111, 117, 118] => lookup_311_2(acc),
            [99, 111, 109] => lookup_311_3(acc),
            [101, 100, 117] => lookup_311_4(acc),
            [103, 111, 118] => lookup_311_5(acc),
            [112, 114, 101, 115, 115, 101] => lookup_311_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_312_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_312_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_312_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_312_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_312_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_312_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_312_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_312_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_312_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_312<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_312_0(acc),
            [110, 121, 97, 97] => lookup_312_1(acc),
            [99, 111, 109, 109, 117, 110, 101] => lookup_312_2(acc),
            [99, 111] => lookup_312_3(acc),
            [110, 101, 116] => lookup_312_4(acc),
            [111, 114, 103] => lookup_312_5(acc),
            [110, 101, 107, 111] => lookup_312_6(acc),
            [99, 111, 109] => lookup_312_7(acc),
            [114, 97, 100, 105, 111] => lookup_312_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_313_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_313<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_313_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_314() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_315() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_316() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_317() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_318() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_320() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_321() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_322() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_323() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_324() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_325() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_326() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_327() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_328() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_329() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_330() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_331() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_332() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_333() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_334() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_335_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_335_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_335_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_335_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_335_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_335_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_335<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_335_0(acc),
            [111, 114, 103] => lookup_335_1(acc),
            [103, 111, 118] => lookup_335_2(acc),
            [101, 100, 117] => lookup_335_3(acc),
            [99, 111, 109] => lookup_335_4(acc),
            [109, 105, 108] => lookup_335_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_336_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_336_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_336_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_336_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_336_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_336_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_336_0(acc),
            [120, 110, 45, 45, 53, 53, 113, 120, 53, 100] => lookup_336_1(acc),
            [120, 110, 45, 45, 103, 109, 113, 48, 53, 48, 105] => lookup_336_2(acc),
            [231, 189, 145, 231, 187, 156] => lookup_336_3(acc),
            [231, 187, 132, 231, 185, 148] => lookup_336_4(acc),
            [120, 110, 45, 45, 111, 100, 48, 97, 108, 103] => lookup_336_5(acc),
            [231, 181, 132, 231, 187, 135] => lookup_336_6(acc),
            [108, 116, 100] => lookup_336_7(acc),
            [105, 110, 99] => lookup_336_8(acc),
            [230, 148, 191, 229, 186, 156] => lookup_336_9(acc),
            [120, 110, 45, 45, 103, 109, 113, 119, 53, 97] => lookup_336_10(acc),
            [231, 187, 132, 231, 187, 135] => lookup_336_11(acc),
            [120, 110, 45, 45, 117, 99, 48, 97, 121, 52, 97] => lookup_336_12(acc),
            [105, 100, 118] => lookup_336_13(acc),
            [101, 100, 117] => lookup_336_14(acc),
            [120, 110, 45, 45, 109, 120, 116, 113, 49, 109] => lookup_336_15(acc),
            [231, 182, 178, 231, 187, 156] => lookup_336_16(acc),
            [231, 182, 178, 231, 181, 161] => lookup_336_17(acc),
            [230, 149, 153, 232, 130, 178] => lookup_336_18(acc),
            [110, 101, 116] => lookup_336_19(acc),
            [111, 114, 103] => lookup_336_20(acc),
            [230, 149, 142, 232, 130, 178] => lookup_336_21(acc),
            [228, 184, 170, 228, 186, 186] => lookup_336_22(acc),
            [120, 110, 45, 45, 109, 107, 48, 97, 120, 105] => lookup_336_23(acc),
            [120, 110, 45, 45, 99, 105, 113, 112, 110] => lookup_336_24(acc),
            [120, 110, 45, 45, 108, 99, 118, 114, 51, 50, 100] => lookup_336_25(acc),
            [231, 189, 145, 231, 181, 161] => lookup_336_26(acc),
            [120, 110, 45, 45, 116, 110, 48, 97, 103] => lookup_336_27(acc),
            [115, 101, 99, 97, 97, 115] => lookup_336_28(acc),
            [120, 110, 45, 45, 111, 100, 48, 97, 113, 51, 98] => lookup_336_29(acc),
            [120, 110, 45, 45, 105, 111, 48, 97, 55, 105] => lookup_336_30(acc),
            [120, 110, 45, 45, 119, 99, 118, 115, 50, 50, 100] => lookup_336_31(acc),
            [120, 110, 45, 45, 122, 102, 48, 97, 118, 120] => lookup_336_32(acc),
            [99, 111, 109] => lookup_336_33(acc),
            [231, 174, 135, 228, 186, 186] => lookup_336_34(acc),
            [120, 110, 45, 45, 117, 99, 48, 97, 116, 118] => lookup_336_35(acc),
            [229, 133, 172, 229, 143, 184] => lookup_336_36(acc),
            [110, 121, 109] => lookup_336_37(acc),
            [231, 181, 132, 231, 185, 148] => lookup_336_38(acc),
            [103, 111, 118] => lookup_336_39(acc),
            [229, 128, 139, 228, 186, 186] => lookup_336_40(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_337() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_338() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_339_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_339_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_339<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 122] => lookup_339_0(acc),
            [97, 117, 115] => lookup_339_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_340() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_341() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_342() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_343() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_344() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_345() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_346() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_347() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_348_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_348_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_348_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_348_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_348_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_348_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_348<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 49, 50, 99, 49, 102, 101, 48, 98, 114] => lookup_348_0(acc),
            [120, 110, 45, 45, 49, 50, 99, 111, 48, 99, 51, 98, 52, 101, 118, 97] => {
                lookup_348_1(acc)
            }
            [120, 110, 45, 45, 104, 51, 99, 117, 122, 107, 49, 100, 105] => lookup_348_2(acc),
            [120, 110, 45, 45, 109, 51, 99, 104, 48, 106, 51, 97] => lookup_348_3(acc),
            [120, 110, 45, 45, 49, 50, 99, 102, 105, 56, 105, 120, 98, 56, 108] => {
                lookup_348_4(acc)
            }
            [120, 110, 45, 45, 111, 51, 99, 121, 120, 50, 97] => lookup_348_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_349() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_350() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_351() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_352() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_353() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_354() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_355() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_356() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_357_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_357_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_357_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_357_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_357<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_357_0(acc),
            [111, 114, 103] => lookup_357_1(acc),
            [99, 111, 109] => lookup_357_2(acc),
            [101, 100, 117] => lookup_357_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_358() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_359() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_361() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_362() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_363() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_364() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_365() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_366() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_367() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_368() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_369_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_369_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_369_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_369_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_369<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_369_0(acc),
            [111, 114, 103] => lookup_369_1(acc),
            [103, 111, 118] => lookup_369_2(acc),
            [101, 100, 117] => lookup_369_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_370() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_371() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_372() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_373() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_374_0(acc),
            [116, 118] => lookup_374_1(acc),
            [105, 110, 102, 111] => lookup_374_2(acc),
            [110, 101, 116] => lookup_374_3(acc),
            [111, 114, 103] => lookup_374_4(acc),
            [109, 101, 100] => lookup_374_5(acc),
            [99, 111, 109] => lookup_374_6(acc),
            [103, 111, 118] => lookup_374_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_375() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_376() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_377() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_378() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_379() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_380() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_381_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_381_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_381_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_381_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_381<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_381_0(acc),
            [99, 97, 97] => lookup_381_1(acc),
            [110, 121, 109] => lookup_381_2(acc),
            [110, 111, 109] => lookup_381_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_382_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_382_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_382<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 111, 114] => lookup_382_0(acc),
            [97, 110, 100] => lookup_382_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_383() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_384() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_385() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_386() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_387() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_388() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_389() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_390_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_390_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_390_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_390_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_390_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_390_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_390_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_390_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_390<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 121, 109] => lookup_390_0(acc),
            [101, 100, 117] => lookup_390_1(acc),
            [99, 111] => lookup_390_2(acc),
            [110, 101, 116] => lookup_390_3(acc),
            [111, 114, 103] => lookup_390_4(acc),
            [98, 101] => lookup_390_5(acc),
            [99, 111, 109] => lookup_390_6(acc),
            [103, 111, 118] => lookup_390_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_391() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_392() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_393_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_393_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_393_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_393_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_393<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_393_0(acc),
            [111, 114, 103] => lookup_393_1(acc),
            [99, 111, 109] => lookup_393_2(acc),
            [99, 111] => lookup_393_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_394() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_395() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_396() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_397() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_398() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_399() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_400() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_401_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_401_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_401_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_401_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_401_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_401_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_401_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_401_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_401<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_401_0(acc),
            [110, 101, 116] => lookup_401_1(acc),
            [111, 114, 103] => lookup_401_2(acc),
            [109, 101, 100] => lookup_401_3(acc),
            [99, 111, 109] => lookup_401_4(acc),
            [103, 111, 118] => lookup_401_5(acc),
            [112, 117, 98] => lookup_401_6(acc),
            [115, 99, 104] => lookup_401_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_402_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_402_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_402_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_402_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_402_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_402_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_402_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_402_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_402<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_402_0(acc),
            [112, 101, 114] => lookup_402_1(acc),
            [101, 110, 115, 99, 97, 108, 101, 100] => lookup_402_2(acc),
            [101, 100, 117] => lookup_402_3(acc),
            [110, 101, 116] => lookup_402_4(acc),
            [111, 114, 103] => lookup_402_5(acc),
            [99, 111, 109] => lookup_402_6(acc),
            [103, 111, 118] => lookup_402_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_403() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_404() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_405() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_406_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_406_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_406_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_406_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_406_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_406_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_406_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_406_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_406_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_406_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_406_9_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_406_9_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [106] => lookup_406_9_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_406_9<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_406_9_0(acc),
            [115, 99, 97, 108, 101, 102, 111, 114, 99, 101] => lookup_406_9_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_406_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_406_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_406_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_406<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 97, 114, 108, 105, 97, 109, 101, 110, 116] => lookup_406_0(acc),
            [108, 116, 100] => lookup_406_1(acc),
            [97, 99] => lookup_406_2(acc),
            [110, 97, 109, 101] => lookup_406_3(acc),
            [98, 105, 122] => lookup_406_4(acc),
            [112, 114, 111] => lookup_406_5(acc),
            [110, 101, 116] => lookup_406_6(acc),
            [111, 114, 103] => lookup_406_7(acc),
            [112, 114, 101, 115, 115] => lookup_406_8(acc),
            [99, 111, 109] => lookup_406_9(labels, acc),
            [103, 111, 118] => lookup_406_10(acc),
            [101, 107, 108, 111, 103, 101, 115] => lookup_406_11(acc),
            [116, 109] => lookup_406_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_407() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_408_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_408_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_408_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_408_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_408_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_408_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_408_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 97, 115] => lookup_408_3_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_408_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_408_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_408_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_408_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_408_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_408_7_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_408_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_408<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 105, 115, 107, 115, 116, 97, 116, 105, 111, 110] => lookup_408_0(acc),
            [109, 121, 99, 100] => lookup_408_1(acc),
            [116, 114, 97, 110, 115, 117, 114, 108] => lookup_408_2(info, labels, acc),
            [108, 101, 118, 105, 114, 97, 99, 108, 111, 117, 100] => {
                lookup_408_3(info, labels, acc)
            }
            [119, 101, 108, 108, 98, 101, 105, 110, 103, 122, 111, 110, 101] => lookup_408_4(acc),
            [115, 112, 100, 110, 115] => lookup_408_5(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_408_6(acc),
            [100, 111, 103, 97, 100, 111] => lookup_408_7(info, labels, acc),
            [98, 97, 114, 115, 121] => lookup_408_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_409() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_410_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_410_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_410_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_410_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_410_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_410_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_410_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_410_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_410_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_410_8_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_410_8_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_410_8_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_410_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [101, 110, 116] => lookup_410_8_0(acc),
            [101, 117] => lookup_410_8_1(acc),
            [117, 115] => lookup_410_8_2(acc),
            [98, 99] => lookup_410_8_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_410_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_410_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_410<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [119, 101, 100, 101, 112, 108, 111, 121] => lookup_410_0(acc),
            [104, 97, 115, 104, 98, 97, 110, 103] => lookup_410_1(acc),
            [109, 105, 108] => lookup_410_2(acc),
            [110, 101, 116] => lookup_410_3(acc),
            [111, 114, 103] => lookup_410_4(acc),
            [98, 105, 112] => lookup_410_5(acc),
            [103, 111, 118] => lookup_410_6(acc),
            [99, 111, 109] => lookup_410_7(acc),
            [112, 108, 97, 116, 102, 111, 114, 109] => lookup_410_8(info, labels, acc),
            [110, 111, 119] => lookup_410_9(acc),
            [118, 120, 108] => lookup_410_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_411() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_412() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_413() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_414_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_414_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_414_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_414_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_414_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_414_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_414_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_414_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_414_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_414_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_414_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_414_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_414<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 112] => lookup_414_0(acc),
            [101, 100, 117] => lookup_414_1(acc),
            [110, 97, 109, 101] => lookup_414_2(acc),
            [112, 114, 111] => lookup_414_3(acc),
            [105, 110, 102, 111] => lookup_414_4(acc),
            [110, 101, 116] => lookup_414_5(acc),
            [111, 114, 103] => lookup_414_6(acc),
            [109, 105, 108] => lookup_414_7(acc),
            [99, 111, 109] => lookup_414_8(acc),
            [103, 111, 118] => lookup_414_9(acc),
            [105, 110, 116] => lookup_414_10(acc),
            [98, 105, 122] => lookup_414_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_415() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_416() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_417() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_418_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_418<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_418_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_419() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_420() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_421() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_423() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_424_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_424<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_424_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_425() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_426() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_427_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_427_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_427_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_427_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_427_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_427_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_427_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_427_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_427_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_427_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_427_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_427_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_427<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [117, 107] => lookup_427_0(acc),
            [101, 100, 117] => lookup_427_1(acc),
            [98, 108, 111, 103] => lookup_427_2(acc),
            [116, 118] => lookup_427_3(acc),
            [109, 105, 108] => lookup_427_4(acc),
            [110, 101, 116] => lookup_427_5(acc),
            [111, 114, 103] => lookup_427_6(acc),
            [99, 111, 109] => lookup_427_7(acc),
            [103, 111, 118] => lookup_427_8(acc),
            [106, 112] => lookup_427_9(acc),
            [117, 115] => lookup_427_10(acc),
            [105, 111] => lookup_427_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_428() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_429() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_430_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_430_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_430_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_430_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_430_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_430_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_430_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_430_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_430_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_430_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_430_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_430_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_430_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_430_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_430_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_430_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_430_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_430_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_430_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_430_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_430_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_430<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 114, 101, 108, 45, 111, 102, 45, 107, 110, 111, 119, 108, 101, 100, 103, 101] => {
                lookup_430_0(acc)
            }
            [98, 97, 114, 114, 101, 108, 108, 45, 111, 102, 45, 107, 110, 111, 119, 108, 101, 100, 103, 101] => {
                lookup_430_1(acc)
            }
            [103, 114, 111, 107, 115, 45, 116, 104, 101] => lookup_430_2(acc),
            [104, 101, 114, 101, 45, 102, 111, 114, 45, 109, 111, 114, 101] => lookup_430_3(acc),
            [105, 108, 111, 118, 101, 99, 111, 108, 108, 101, 103, 101] => lookup_430_4(acc),
            [119, 101, 98, 104, 111, 112] => lookup_430_5(acc),
            [109, 97, 121, 102, 105, 114, 115, 116] => lookup_430_6(acc),
            [100, 110, 115, 117, 112, 100, 97, 116, 101] => lookup_430_7(acc),
            [118, 45, 105, 110, 102, 111] => lookup_430_8(acc),
            [102, 111, 114, 117, 109, 122] => lookup_430_9(acc),
            [110, 115, 117, 112, 100, 97, 116, 101] => lookup_430_10(acc),
            [100, 118, 114, 99, 97, 109] => lookup_430_11(acc),
            [98, 97, 114, 115, 121] => lookup_430_12(acc),
            [100, 121, 110, 97, 109, 105, 99, 45, 100, 110, 115] => lookup_430_13(acc),
            [110, 111, 45, 105, 112] => lookup_430_14(acc),
            [102, 111, 114, 45, 111, 117, 114] => lookup_430_15(acc),
            [100, 121, 110, 100, 110, 115] => lookup_430_16(acc),
            [103, 114, 111, 107, 115, 45, 116, 104, 105, 115] => lookup_430_17(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_430_18(acc),
            [107, 110, 111, 119, 115, 105, 116, 97, 108, 108] => lookup_430_19(acc),
            [115, 101, 108, 102, 105, 112] => lookup_430_20(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_431() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_432() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_433_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_433_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_433_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_433_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_433_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_433_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_433_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_433_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_433_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_433<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_433_0(acc),
            [110, 121, 109] => lookup_433_1(acc),
            [101, 100, 117] => lookup_433_2(acc),
            [109, 105, 108] => lookup_433_3(acc),
            [110, 101, 116] => lookup_433_4(acc),
            [111, 114, 103] => lookup_433_5(acc),
            [99, 111, 109] => lookup_433_6(acc),
            [103, 111, 98] => lookup_433_7(acc),
            [110, 111, 109] => lookup_433_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_434_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_434_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_434_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_434_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_434_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_434_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_434_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_434_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_434_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_434<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 121, 109] => lookup_434_0(acc),
            [101, 100, 117] => lookup_434_1(acc),
            [110, 101, 116] => lookup_434_2(acc),
            [111, 114, 103] => lookup_434_3(acc),
            [122, 97] => lookup_434_4(acc),
            [99, 111, 109] => lookup_434_5(acc),
            [103, 111, 118] => lookup_434_6(acc),
            [103, 115, 106] => lookup_434_7(acc),
            [110, 111, 109] => lookup_434_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_435() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_436() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_437() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_438() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_439() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_440() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_441() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_442() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_443() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_444() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_445() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_446_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_446_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_446_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_446_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_446_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_446_5_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_446_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_446_5_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_446_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_446_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_446_7<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_446_7_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_446_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_446_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_446_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_446_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_446_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_446_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_446_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_446_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_446_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_446_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_446_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_446_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_446_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_446_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_446<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 52, 116] => lookup_446_0(acc),
            [114, 101, 112, 108] => lookup_446_1(acc),
            [119, 101, 98] => lookup_446_2(acc),
            [99, 97, 114, 114, 100] => lookup_446_3(acc),
            [105, 110, 102, 111] => lookup_446_4(acc),
            [111, 116, 97, 112] => lookup_446_5(info, labels, acc),
            [114, 101, 99] => lookup_446_6(acc),
            [99, 111, 109] => lookup_446_7(labels, acc),
            [110, 111, 100, 117, 109] => lookup_446_8(acc),
            [99, 114, 100] => lookup_446_9(acc),
            [108, 101, 97, 100, 112, 97, 103, 101, 115] => lookup_446_10(acc),
            [97, 114, 116, 115] => lookup_446_11(acc),
            [101, 100, 117] => lookup_446_12(acc),
            [102, 105, 114, 109] => lookup_446_13(acc),
            [109, 105, 108] => lookup_446_14(acc),
            [110, 101, 116] => lookup_446_15(acc),
            [111, 114, 103] => lookup_446_16(acc),
            [103, 111, 118] => lookup_446_17(acc),
            [108, 112, 97, 103, 101, 115] => lookup_446_18(acc),
            [105, 110, 116] => lookup_446_19(acc),
            [110, 111, 109] => lookup_446_20(acc),
            [109, 121, 112, 105] => lookup_446_21(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_447_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_447_3_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_447_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_8_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_8_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [106, 108, 115, 45, 115, 116, 111, 51] => lookup_447_8_0(acc),
            [106, 108, 115, 45, 115, 116, 111, 50] => lookup_447_8_1(acc),
            [106, 108, 115, 45, 115, 116, 111, 49] => lookup_447_8_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_447_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_14_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_14_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_14_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_14_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [97] => lookup_447_14_0_0(acc),
            [98] => lookup_447_14_0_1(acc),
            [103, 108, 111, 98, 97, 108] => lookup_447_14_0_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_447_14_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_14_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_14_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_14_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_14_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [97] => lookup_447_14_3_0(acc),
            [103, 108, 111, 98, 97, 108] => lookup_447_14_3_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_447_14<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [115, 115, 108] => lookup_447_14_0(info, labels, acc),
            [109, 97, 112] => lookup_447_14_1(acc),
            [102, 114, 101, 101, 116, 108, 115] => lookup_447_14_2(acc),
            [112, 114, 111, 100] => lookup_447_14_3(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_447_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_34_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_34_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_447_34_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_447_34_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_34_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_447_34_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_447_34<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 112, 97, 97, 115] => lookup_447_34_0(info, labels, acc),
            [104, 111, 115, 116, 105, 110, 103] => lookup_447_34_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_447_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_42_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_42_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_42_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_42_0_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_42_0_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_42_0_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_42_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [108, 111, 110, 45, 50] => lookup_447_42_0_0(acc),
            [110, 121, 45, 50] => lookup_447_42_0_1(acc),
            [102, 114, 45, 49] => lookup_447_42_0_2(acc),
            [110, 121, 45, 49] => lookup_447_42_0_3(acc),
            [115, 103, 45, 49] => lookup_447_42_0_4(acc),
            [108, 111, 110, 45, 49] => lookup_447_42_0_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_447_42<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 97, 115] => lookup_447_42_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_447_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_45_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_45<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 97, 112] => lookup_447_45_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_447_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_53_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_53_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [97, 109, 115, 49] => lookup_447_53_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_447_53<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [106, 108, 115] => lookup_447_53_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_447_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_60_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_60<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [117] => lookup_447_60_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_447_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_66_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_66_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_66<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [117, 115, 101, 114] => lookup_447_66_0(acc),
            [115, 111, 99] => lookup_447_66_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_447_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_70_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_70_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_70_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [110, 106, 115] => lookup_447_70_0_0(acc),
            [97, 116, 108] => lookup_447_70_0_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_447_70<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_447_70_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_447_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_74_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_74<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [114] => lookup_447_74_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_447_75_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_75_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_75<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 111, 114, 97, 103, 101] => lookup_447_75_0(acc),
            [119, 101, 98, 115, 105, 116, 101] => lookup_447_75_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_447_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_84_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_84<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [106] => lookup_447_84_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_447_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_89_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_89_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_89<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 114, 100, 101, 115, 116, 101, 45, 105, 100, 99] => lookup_447_89_0(acc),
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_447_89_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_447_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 24usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_113_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_113_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_113<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 114, 97, 49, 45, 100, 101] => lookup_447_113_0(acc),
            [119, 101, 115, 116, 49, 45, 117, 115] => lookup_447_113_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_447_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_118_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_118<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 97, 103, 101, 115] => lookup_447_118_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_447_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_125_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_125<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_447_125_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_447_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_134_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_134_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_134_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_134_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_134_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_134<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 15usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 97, 115, 116, 97, 115, 105, 97] => lookup_447_134_0(acc),
            [119, 101, 115, 116, 101, 117, 114, 111, 112, 101] => lookup_447_134_1(acc),
            [119, 101, 115, 116, 117, 115, 50] => lookup_447_134_2(acc),
            [99, 101, 110, 116, 114, 97, 108, 117, 115] => lookup_447_134_3(acc),
            [101, 97, 115, 116, 117, 115, 50] => lookup_447_134_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_447_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_447<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 98] => lookup_447_0(acc),
            [115, 116, 97, 116, 105, 99, 45, 97, 99, 99, 101, 115, 115] => lookup_447_1(acc),
            [102, 108, 121, 110, 110, 104, 111, 115, 116, 105, 110, 103] => lookup_447_2(acc),
            [116, 115, 117, 107, 97, 101, 114, 117] => lookup_447_3(info, labels, acc),
            [112, 103, 97, 102, 97, 110] => lookup_447_4(acc),
            [107, 105, 110, 103, 104, 111, 115, 116] => lookup_447_5(acc),
            [98, 111, 111, 109, 108, 97] => lookup_447_6(acc),
            [109, 121, 101, 102, 102, 101, 99, 116] => lookup_447_7(acc),
            [101, 108, 97, 115, 116, 120] => lookup_447_8(info, labels, acc),
            [107, 110, 120, 45, 115, 101, 114, 118, 101, 114] => lookup_447_9(acc),
            [116, 51, 108, 51, 112, 48, 114, 116] => lookup_447_10(acc),
            [115, 101, 114, 118, 101, 98, 108, 111, 103] => lookup_447_11(acc),
            [110, 111, 45, 105, 112] => lookup_447_12(acc),
            [97, 116, 45, 98, 97, 110, 100, 45, 99, 97, 109, 112] => lookup_447_13(acc),
            [102, 97, 115, 116, 108, 121] => lookup_447_14(info, labels, acc),
            [116, 104, 114, 117, 104, 101, 114, 101] => lookup_447_15(acc),
            [106, 112] => lookup_447_16(acc),
            [101, 100, 103, 101, 97, 112, 112] => lookup_447_17(acc),
            [104, 117] => lookup_447_18(acc),
            [100, 111, 110, 116, 101, 120, 105, 115, 116] => lookup_447_19(acc),
            [104, 97, 109, 45, 114, 97, 100, 105, 111, 45, 111, 112] => lookup_447_20(acc),
            [107, 114, 101, 108, 108, 105, 97, 110] => lookup_447_21(acc),
            [100, 100, 110, 115] => lookup_447_22(acc),
            [115, 99, 104, 111, 107, 111, 107, 101, 107, 115] => lookup_447_23(acc),
            [100, 97, 116, 116, 111, 108, 111, 99, 97, 108] => lookup_447_24(acc),
            [117, 110, 105, 53] => lookup_447_25(acc),
            [117, 107] => lookup_447_26(acc),
            [116, 119, 109, 97, 105, 108] => lookup_447_27(acc),
            [99, 108, 111, 117, 100, 97, 112, 112] => lookup_447_28(acc),
            [102, 97, 109, 105, 108, 121, 100, 115] => lookup_447_29(acc),
            [99, 108, 111, 117, 100, 97, 99, 99, 101, 115, 115] => lookup_447_30(acc),
            [100, 101, 98, 105, 97, 110] => lookup_447_31(acc),
            [107, 105, 99, 107, 115, 45, 97, 115, 115] => lookup_447_32(acc),
            [109, 121, 100, 105, 115, 115, 101, 110, 116] => lookup_447_33(acc),
            [111, 118, 104] => lookup_447_34(info, labels, acc),
            [115, 101] => lookup_447_35(acc),
            [98, 97, 114, 48] => lookup_447_36(acc),
            [104, 111, 109, 101, 102, 116, 112] => lookup_447_37(acc),
            [105, 115, 45, 97, 45, 103, 101, 101, 107] => lookup_447_38(acc),
            [105, 115, 45, 97, 45, 99, 104, 101, 102] => lookup_447_39(acc),
            [115, 121, 116, 101, 115] => lookup_447_40(acc),
            [99, 100, 110, 55, 55, 45, 115, 115, 108] => lookup_447_41(acc),
            [109, 97, 115, 115, 105, 118, 101, 103, 114, 105, 100] => {
                lookup_447_42(info, labels, acc)
            }
            [99, 100, 110, 45, 101, 100, 103, 101, 115] => lookup_447_43(acc),
            [105, 115, 97, 45, 103, 101, 101, 107] => lookup_447_44(acc),
            [102, 97, 115, 116, 108, 121, 108, 98] => lookup_447_45(labels, acc),
            [100, 111, 101, 115, 45, 105, 116] => lookup_447_46(acc),
            [118, 112, 110, 100, 110, 115] => lookup_447_47(acc),
            [99, 111, 109, 109, 117, 110, 105, 116, 121, 45, 112, 114, 111] => lookup_447_48(acc),
            [100, 110, 115, 100, 111, 106, 111] => lookup_447_49(acc),
            [104, 111, 109, 101, 117, 110, 105, 120] => lookup_447_50(acc),
            [100, 121, 110, 97, 108, 105, 97, 115] => lookup_447_51(acc),
            [104, 105, 99, 97, 109] => lookup_447_52(acc),
            [100, 111, 99, 107, 116, 101, 114, 97] => lookup_447_53(info, labels, acc),
            [119, 101, 98, 104, 111, 112] => lookup_447_54(acc),
            [114, 117] => lookup_447_55(acc),
            [99, 108, 105, 99, 107, 114, 105, 115, 105, 110, 103] => lookup_447_56(acc),
            [98, 114, 111, 107, 101, 45, 105, 116] => lookup_447_57(acc),
            [105, 110, 45, 116, 104, 101, 45, 98, 97, 110, 100] => lookup_447_58(acc),
            [98, 97, 114, 115, 121] => lookup_447_59(acc),
            [99, 104, 97, 110, 110, 101, 108, 115, 100, 118, 114] => lookup_447_60(labels, acc),
            [105, 110, 45, 100, 115, 108] => lookup_447_61(acc),
            [102, 97, 115, 116, 98, 108, 111, 103] => lookup_447_62(acc),
            [109, 121, 109, 101, 100, 105, 97, 112, 99] => lookup_447_63(acc),
            [97, 108, 119, 97, 121, 115, 100, 97, 116, 97] => lookup_447_64(acc),
            [111, 119, 110, 105, 112] => lookup_447_65(acc),
            [115, 114, 99, 102] => lookup_447_66(info, labels, acc),
            [109, 111, 111, 110, 115, 99, 97, 108, 101] => lookup_447_67(acc),
            [98, 111, 117, 110, 99, 101, 109, 101] => lookup_447_68(acc),
            [115, 99, 114, 97, 112, 112, 101, 114, 45, 115, 105, 116, 101] => lookup_447_69(acc),
            [118, 112, 115, 45, 104, 111, 115, 116] => lookup_447_70(info, labels, acc),
            [115, 101, 114, 118, 101, 109, 105, 110, 101, 99, 114, 97, 102, 116] => {
                lookup_447_71(acc)
            }
            [101, 97, 116, 105, 110, 103, 45, 111, 114, 103, 97, 110, 105, 99] => {
                lookup_447_72(acc)
            }
            [99, 97, 115, 97, 99, 97, 109] => lookup_447_73(acc),
            [99, 100, 110, 55, 55] => lookup_447_74(info, labels, acc),
            [121, 97, 110, 100, 101, 120, 99, 108, 111, 117, 100] => lookup_447_75(labels, acc),
            [98, 97, 114, 50] => lookup_447_76(acc),
            [102, 105, 114, 101, 119, 97, 108, 108, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_447_77(acc)
            }
            [103, 101, 116, 115, 45, 105, 116] => lookup_447_78(acc),
            [105, 110] => lookup_447_79(acc),
            [111, 102, 102, 105, 99, 101, 45, 111, 110, 45, 116, 104, 101] => lookup_447_80(acc),
            [115, 113, 117, 97, 114, 101, 55] => lookup_447_81(acc),
            [100, 121, 110, 118, 54] => lookup_447_82(acc),
            [100, 121, 110, 117] => lookup_447_83(acc),
            [115, 99, 97, 108, 101, 102, 111, 114, 99, 101] => lookup_447_84(info, labels, acc),
            [102, 114, 111, 109, 45, 108, 97] => lookup_447_85(acc),
            [115, 101, 110, 115, 101, 101, 114, 105, 110, 103] => lookup_447_86(acc),
            [105, 112, 105, 102, 111, 110, 121] => lookup_447_87(acc),
            [99, 108, 111, 117, 100, 102, 114, 111, 110, 116] => lookup_447_88(acc),
            [115, 97, 118, 101, 105, 110, 99, 108, 111, 117, 100] => {
                lookup_447_89(info, labels, acc)
            }
            [97, 100, 111, 98, 101, 97, 101, 109, 99, 108, 111, 117, 100] => lookup_447_90(acc),
            [99, 108, 105, 99, 50, 48, 48, 48] => lookup_447_91(acc),
            [102, 114, 111, 109, 45, 97, 122] => lookup_447_92(acc),
            [98, 108, 97, 99, 107, 98, 97, 117, 100, 99, 100, 110] => lookup_447_93(acc),
            [98, 117, 121, 115, 104, 111, 117, 115, 101, 115] => lookup_447_94(acc),
            [100, 110, 115, 117, 112] => lookup_447_95(acc),
            [115, 101, 105, 100, 97, 116] => lookup_447_96(acc),
            [112, 114, 105, 118, 97, 116, 105, 122, 101, 104, 101, 97, 108, 116, 104, 105, 110, 115, 117, 114, 97, 110, 99, 101] => {
                lookup_447_97(acc)
            }
            [100, 115, 109, 121, 110, 97, 115] => lookup_447_98(acc),
            [105, 111, 98, 98] => lookup_447_99(acc),
            [100, 110, 115, 97, 108, 105, 97, 115] => lookup_447_100(acc),
            [109, 101, 109, 115, 101, 116] => lookup_447_101(acc),
            [110, 104, 108, 102, 97, 110] => lookup_447_102(acc),
            [97, 122, 117, 114, 101, 45, 109, 111, 98, 105, 108, 101] => lookup_447_103(acc),
            [109, 121, 112, 115, 120] => lookup_447_104(acc),
            [115, 105, 116, 101, 108, 101, 97, 102] => lookup_447_105(acc),
            [98, 112, 108, 97, 99, 101, 100] => lookup_447_106(acc),
            [98, 108, 111, 103, 100, 110, 115] => lookup_447_107(acc),
            [109, 121, 100, 97, 116, 116, 111] => lookup_447_108(acc),
            [101, 110, 100, 111, 102, 105, 110, 116, 101, 114, 110, 101, 116] => {
                lookup_447_109(acc)
            }
            [98, 105, 116, 98, 114, 105, 100, 103, 101] => lookup_447_110(acc),
            [102, 114, 111, 109, 45, 110, 121] => lookup_447_111(acc),
            [99, 108, 111, 117, 100, 102, 117, 110, 99, 116, 105, 111, 110, 115] => {
                lookup_447_112(acc)
            }
            [99, 108, 111, 117, 100, 106, 105, 102, 102, 121] => lookup_447_113(labels, acc),
            [99, 108, 111, 117, 100, 121, 99, 108, 117, 115, 116, 101, 114] => lookup_447_114(acc),
            [114, 101, 100, 105, 114, 101, 99, 116, 109, 101] => lookup_447_115(acc),
            [109, 121, 102, 114, 105, 116, 122] => lookup_447_116(acc),
            [109, 121, 115, 101, 99, 117, 114, 105, 116, 121, 99, 97, 109, 101, 114, 97] => {
                lookup_447_117(acc)
            }
            [116, 111, 114, 112, 114, 111, 106, 101, 99, 116] => lookup_447_118(labels, acc),
            [115, 101, 114, 118, 101, 102, 116, 112] => lookup_447_119(acc),
            [98, 97, 114, 49] => lookup_447_120(acc),
            [109, 101, 105, 110, 102, 111, 114, 117, 109] => lookup_447_121(acc),
            [115, 101, 108, 102, 105, 112] => lookup_447_122(acc),
            [104, 111, 109, 101, 105, 112] => lookup_447_123(acc),
            [100, 101, 102, 105, 110, 105, 109, 97] => lookup_447_124(acc),
            [99, 114, 121, 112, 116, 111, 110, 111, 109, 105, 99] => {
                lookup_447_125(info, labels, acc)
            }
            [100, 121, 110, 97, 116, 104, 111, 109, 101] => lookup_447_126(acc),
            [110, 111, 119, 45, 100, 110, 115] => lookup_447_127(acc),
            [122, 97] => lookup_447_128(acc),
            [102, 114, 111, 109, 45, 99, 111] => lookup_447_129(acc),
            [115, 101, 114, 118, 101, 98, 98, 115] => lookup_447_130(acc),
            [114, 97, 99, 107, 109, 97, 122, 101] => lookup_447_131(acc),
            [97, 122, 117, 114, 101, 119, 101, 98, 115, 105, 116, 101, 115] => lookup_447_132(acc),
            [104, 111, 109, 101, 108, 105, 110, 117, 120] => lookup_447_133(acc),
            [97, 122, 117, 114, 101, 115, 116, 97, 116, 105, 99, 97, 112, 112, 115] => {
                lookup_447_134(labels, acc)
            }
            [115, 101, 108, 108, 115, 45, 105, 116] => lookup_447_135(acc),
            [102, 101, 115, 116, 101, 45, 105, 112] => lookup_447_136(acc),
            [105, 110, 45, 118, 112, 110] => lookup_447_137(acc),
            [112, 111, 100, 122, 111, 110, 101] => lookup_447_138(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_448() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_449() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_450_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_450<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_450_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_451() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_452() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_453() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_454_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_454_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_454_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_454_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_454_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_454<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_454_0(acc),
            [111, 114, 103] => lookup_454_1(acc),
            [103, 111, 118] => lookup_454_2(acc),
            [101, 100, 117] => lookup_454_3(acc),
            [99, 111] => lookup_454_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_455() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_456() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_457() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_458() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_459() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_460() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_461() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_462_0_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_462_0_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [106, 108] => lookup_462_0_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_462_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 101, 114, 118] => lookup_462_0_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_462_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_462_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_462_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_462_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_462_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_462_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_462<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_462_0(labels, acc),
            [111, 114, 103] => lookup_462_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_462_2(acc),
            [99, 111, 109] => lookup_462_3(acc),
            [101, 100, 117] => lookup_462_4(acc),
            [110, 121, 109] => lookup_462_5(acc),
            [103, 111, 98] => lookup_462_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_463() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_464() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_465_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_29_0_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_465_29_0_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_465_29_0_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_465_29_0_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_465_29_0_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_465_29_0_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_465_29_0_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_465_29_0_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_465_29_0_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_465_29_0_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_465_29_0_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_465_29_0_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            [99, 110, 45, 110, 111, 114, 116, 104, 45, 49] => lookup_465_29_0_3_0(acc),
            [99, 110, 45, 110, 111, 114, 116, 104, 119, 101, 115, 116, 45, 49] => {
                lookup_465_29_0_3_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_465_29_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [99, 110, 45, 110, 111, 114, 116, 104, 45, 49] => lookup_465_29_0_0(info, labels, acc),
            [99, 111, 109, 112, 117, 116, 101] => lookup_465_29_0_1(info, labels, acc),
            [101, 108, 98] => lookup_465_29_0_2(info, labels, acc),
            [101, 98] => lookup_465_29_0_3(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_465_29<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 109, 97, 122, 111, 110, 97, 119, 115] => lookup_465_29_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_465_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 53, 53, 113, 120, 53, 100] => lookup_465_0(acc),
            [115, 99] => lookup_465_1(acc),
            [231, 189, 145, 231, 187, 156] => lookup_465_2(acc),
            [120, 110, 45, 45, 111, 100, 48, 97, 108, 103] => lookup_465_3(acc),
            [103, 120] => lookup_465_4(acc),
            [116, 106] => lookup_465_5(acc),
            [105, 110, 115, 116, 97, 110, 116, 99, 108, 111, 117, 100] => lookup_465_6(acc),
            [104, 107] => lookup_465_7(acc),
            [104, 110] => lookup_465_8(acc),
            [106, 120] => lookup_465_9(acc),
            [115, 110] => lookup_465_10(acc),
            [104, 98] => lookup_465_11(acc),
            [110, 109] => lookup_465_12(acc),
            [101, 100, 117] => lookup_465_13(acc),
            [104, 105] => lookup_465_14(acc),
            [120, 122] => lookup_465_15(acc),
            [109, 105, 108] => lookup_465_16(acc),
            [110, 101, 116] => lookup_465_17(acc),
            [111, 114, 103] => lookup_465_18(acc),
            [231, 182, 178, 231, 181, 161] => lookup_465_19(acc),
            [98, 106] => lookup_465_20(acc),
            [104, 101] => lookup_465_21(acc),
            [97, 104] => lookup_465_22(acc),
            [108, 110] => lookup_465_23(acc),
            [115, 120] => lookup_465_24(acc),
            [104, 108] => lookup_465_25(acc),
            [97, 99] => lookup_465_26(acc),
            [120, 110, 45, 45, 105, 111, 48, 97, 55, 105] => lookup_465_27(acc),
            [103, 115] => lookup_465_28(acc),
            [99, 111, 109] => lookup_465_29(labels, acc),
            [103, 100] => lookup_465_30(acc),
            [103, 122] => lookup_465_31(acc),
            [229, 133, 172, 229, 143, 184] => lookup_465_32(acc),
            [102, 106] => lookup_465_33(acc),
            [115, 104] => lookup_465_34(acc),
            [115, 100] => lookup_465_35(acc),
            [113, 104] => lookup_465_36(acc),
            [120, 106] => lookup_465_37(acc),
            [122, 106] => lookup_465_38(acc),
            [104, 97] => lookup_465_39(acc),
            [121, 110] => lookup_465_40(acc),
            [106, 108] => lookup_465_41(acc),
            [106, 115] => lookup_465_42(acc),
            [103, 111, 118] => lookup_465_43(acc),
            [109, 111] => lookup_465_44(acc),
            [116, 119] => lookup_465_45(acc),
            [110, 120] => lookup_465_46(acc),
            [99, 113] => lookup_465_47(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_466() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_467() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_468_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_468_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_468<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 116, 100, 108, 108] => lookup_468_0(acc),
            [110, 111, 119, 45, 100, 110, 115] => lookup_468_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_469() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_470() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_471_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_471_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_471_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_471_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_471_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_471_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_471_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_471_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_471<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_471_0(acc),
            [110, 97, 109, 101] => lookup_471_1(acc),
            [109, 105, 108] => lookup_471_2(acc),
            [110, 101, 116] => lookup_471_3(acc),
            [111, 114, 103] => lookup_471_4(acc),
            [115, 99, 104] => lookup_471_5(acc),
            [99, 111, 109] => lookup_471_6(acc),
            [103, 111, 118] => lookup_471_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_472() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_473() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_474() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_475() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_476() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_477() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_478() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_479() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_480() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_481() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_482() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_483() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_484() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_485() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_486() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_487_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_487_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_487_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_487_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_487_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_487_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_487_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_487_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_487_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_487_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_487<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_487_0(acc),
            [115, 99] => lookup_487_1(acc),
            [111, 114] => lookup_487_2(acc),
            [103, 111] => lookup_487_3(acc),
            [97, 99] => lookup_487_4(acc),
            [99, 111] => lookup_487_5(acc),
            [111, 114, 103] => lookup_487_6(acc),
            [99, 111, 109] => lookup_487_7(acc),
            [110, 111, 109] => lookup_487_8(acc),
            [110, 101] => lookup_487_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_488() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_489() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_490() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_491() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_492() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_493() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_494() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_495() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_496() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_497_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_16_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_16<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [100, 121, 110] => lookup_497_16_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_497_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_31_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_31<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 121, 110] => lookup_497_31_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_497_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_37_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_37<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116, 111, 109, 101, 114] => lookup_497_37_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_497_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_39_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_39_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_39<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 121, 110] => lookup_497_39_0(acc),
            [100, 121, 110, 100, 110, 115] => lookup_497_39_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_497_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_47_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_47<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_497_47_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_497_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 23usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_497_0(acc),
            [115, 118, 110, 45, 114, 101, 112, 111, 115] => lookup_497_1(acc),
            [100, 114, 97, 121, 45, 100, 110, 115] => lookup_497_2(acc),
            [102, 105, 114, 101, 119, 97, 108, 108, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_497_3(acc)
            }
            [116, 101, 115, 116, 45, 105, 115, 101, 114, 118] => lookup_497_4(acc),
            [115, 113, 117, 97, 114, 101, 55] => lookup_497_5(acc),
            [108, 111, 103, 111, 105, 112] => lookup_497_6(acc),
            [116, 114, 97, 101, 117, 109, 116, 103, 101, 114, 97, 100, 101] => lookup_497_7(acc),
            [100, 121, 110, 45, 98, 101, 114, 108, 105, 110] => lookup_497_8(acc),
            [100, 110, 115, 104, 111, 109, 101] => lookup_497_9(acc),
            [102, 117, 101, 116, 116, 101, 114, 116, 100, 97, 115, 110, 101, 116, 122] => {
                lookup_497_10(acc)
            }
            [115, 121, 110, 111, 108, 111, 103, 121, 45, 100, 115] => lookup_497_11(acc),
            [105, 110, 45, 98, 101, 114, 108, 105, 110] => lookup_497_12(acc),
            [107, 101, 121, 109, 97, 99, 104, 105, 110, 101] => lookup_497_13(acc),
            [115, 121, 110, 111, 45, 100, 115] => lookup_497_14(acc),
            [108, 101, 98, 116, 105, 109, 110, 101, 116, 122] => lookup_497_15(acc),
            [99, 111, 115, 105, 100, 110, 115] => lookup_497_16(info, labels, acc),
            [118, 105, 114, 116, 117, 97, 108, 45, 117, 115, 101, 114] => lookup_497_17(acc),
            [109, 101, 105, 110, 45, 118, 105, 103, 111, 114] => lookup_497_18(acc),
            [103, 105, 116, 45, 114, 101, 112, 111, 115] => lookup_497_19(acc),
            [105, 115, 116, 101, 105, 110, 103, 101, 101, 107] => lookup_497_20(acc),
            [109, 101, 105, 110, 45, 105, 115, 101, 114, 118] => lookup_497_21(acc),
            [100, 105, 115, 107, 117, 115, 115, 105, 111, 110, 115, 98, 101, 114, 101, 105, 99, 104] => {
                lookup_497_22(acc)
            }
            [118, 105, 114, 116, 117, 97, 108, 117, 115, 101, 114] => lookup_497_23(acc),
            [109, 121, 45, 118, 105, 103, 111, 114] => lookup_497_24(acc),
            [109, 121, 45, 119, 97, 110] => lookup_497_25(acc),
            [105, 110, 116, 101, 114, 110, 101, 116, 45, 100, 110, 115] => lookup_497_26(acc),
            [98, 112, 108, 97, 99, 101, 100] => lookup_497_27(acc),
            [103, 111, 105, 112] => lookup_497_28(acc),
            [108, 105, 109, 97, 45, 99, 105, 116, 121] => lookup_497_29(acc),
            [108, 101, 105, 116, 117, 110, 103, 115, 101, 110] => lookup_497_30(acc),
            [104, 111, 109, 101, 45, 119, 101, 98, 115, 101, 114, 118, 101, 114] => {
                lookup_497_31(labels, acc)
            }
            [109, 121, 104, 111, 109, 101, 45, 115, 101, 114, 118, 101, 114] => lookup_497_32(acc),
            [109, 121, 45, 114, 111, 117, 116, 101, 114] => lookup_497_33(acc),
            [52, 108, 105, 109, 97] => lookup_497_34(acc),
            [115, 121, 110, 111, 108, 111, 103, 121, 45, 100, 105, 115, 107, 115, 116, 97, 116, 105, 111, 110] => {
                lookup_497_35(acc)
            }
            [109, 121, 45, 103, 97, 116, 101, 119, 97, 121] => lookup_497_36(acc),
            [115, 112, 101, 101, 100, 112, 97, 114, 116, 110, 101, 114] => {
                lookup_497_37(info, labels, acc)
            }
            [120, 110, 45, 45, 103, 110, 115, 116, 105, 103, 108, 105, 101, 102, 101, 114, 110, 45, 119, 111, 98] => {
                lookup_497_38(acc)
            }
            [100, 100, 110, 115, 115] => lookup_497_39(labels, acc),
            [108, 45, 111, 45, 103, 45, 105, 45, 110] => lookup_497_40(acc),
            [50, 105, 120] => lookup_497_41(acc),
            [108, 99, 117, 98, 101, 45, 115, 101, 114, 118, 101, 114] => lookup_497_42(acc),
            [99, 111, 109, 109, 117, 110, 105, 116, 121, 45, 112, 114, 111] => lookup_497_43(acc),
            [100, 121, 110, 118, 112, 110] => lookup_497_44(acc),
            [100, 121, 110, 45, 118, 112, 110] => lookup_497_45(acc),
            [100, 121, 110, 97, 109, 105, 115, 99, 104, 101, 115, 45, 100, 110, 115] => {
                lookup_497_46(acc)
            }
            [117, 98, 101, 114, 115, 112, 97, 99, 101] => lookup_497_47(info, labels, acc),
            [115, 99, 104, 117, 108, 115, 101, 114, 118, 101, 114] => lookup_497_48(acc),
            [100, 114, 97, 121, 100, 110, 115] => lookup_497_49(acc),
            [120, 110, 45, 45, 103, 110, 115, 116, 105, 103, 98, 101, 115, 116, 101, 108, 108, 101, 110, 45, 122, 118, 98] => {
                lookup_497_50(acc)
            }
            [100, 121, 110, 100, 110, 115, 49] => lookup_497_51(acc),
            [105, 110, 45, 98, 114, 98] => lookup_497_52(acc),
            [116, 97, 105, 102, 117, 110, 45, 100, 110, 115] => lookup_497_53(acc),
            [103, 195, 188, 110, 115, 116, 105, 103, 108, 105, 101, 102, 101, 114, 110] => {
                lookup_497_54(acc)
            }
            [100, 100, 45, 100, 110, 115] => lookup_497_55(acc),
            [105, 110, 45, 98, 117, 116, 116, 101, 114] => lookup_497_56(acc),
            [99, 111, 109] => lookup_497_57(acc),
            [105, 115, 116, 109, 101, 105, 110] => lookup_497_58(acc),
            [103, 195, 188, 110, 115, 116, 105, 103, 98, 101, 115, 116, 101, 108, 108, 101, 110] => {
                lookup_497_59(acc)
            }
            [98, 97, 114, 115, 121] => lookup_497_60(acc),
            [105, 110, 45, 100, 115, 108] => lookup_497_61(acc),
            [49, 50, 104, 112] => lookup_497_62(acc),
            [115, 112, 100, 110, 115] => lookup_497_63(acc),
            [105, 110, 45, 118, 112, 110] => lookup_497_64(acc),
            [100, 121, 110, 45, 105, 112, 50, 52] => lookup_497_65(acc),
            [100, 110, 115, 117, 112, 100, 97, 116, 101, 114] => lookup_497_66(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_498() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_499() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_500() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_501() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_502() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_503_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_503_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [117, 115, 101, 114] => lookup_503_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_503<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 97, 114, 116, 121] => lookup_503_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_504() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_505() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_506() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_507() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_508() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_510() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_511() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_512_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_512_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_512_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_512<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_512_0(acc),
            [110, 111, 109] => lookup_512_1(acc),
            [103, 111, 118] => lookup_512_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_513() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_514() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_515() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_516() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_518() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_519() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_520_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_520_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [117, 105] => lookup_520_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_520<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 97, 98, 117] => lookup_520_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_521() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 97, 118, 105, 103, 97, 116, 105, 111, 110] => lookup_522_0(acc),
            [99, 97, 114, 103, 111] => lookup_522_1(acc),
            [99, 101, 114, 116, 105, 102, 105, 99, 97, 116, 105, 111, 110] => lookup_522_2(acc),
            [100, 103, 99, 97] => lookup_522_3(acc),
            [101, 100, 117, 99, 97, 116, 111, 114] => lookup_522_4(acc),
            [101, 120, 99, 104, 97, 110, 103, 101] => lookup_522_5(acc),
            [99, 111, 110, 102, 101, 114, 101, 110, 99, 101] => lookup_522_6(acc),
            [103, 114, 111, 117, 112] => lookup_522_7(acc),
            [112, 97, 114, 97, 99, 104, 117, 116, 105, 110, 103] => lookup_522_8(acc),
            [114, 101, 115] => lookup_522_9(acc),
            [116, 114, 97, 100, 105, 110, 103] => lookup_522_10(acc),
            [116, 114, 97, 105, 110, 101, 114] => lookup_522_11(acc),
            [119, 111, 114, 107, 105, 110, 103, 103, 114, 111, 117, 112] => lookup_522_12(acc),
            [99, 111, 117, 110, 99, 105, 108] => lookup_522_13(acc),
            [99, 104, 97, 114, 116, 101, 114] => lookup_522_14(acc),
            [103, 108, 105, 100, 105, 110, 103] => lookup_522_15(acc),
            [100, 101, 115, 105, 103, 110] => lookup_522_16(acc),
            [108, 111, 103, 105, 115, 116, 105, 99, 115] => lookup_522_17(acc),
            [109, 101, 100, 105, 97] => lookup_522_18(acc),
            [112, 97, 115, 115, 101, 110, 103, 101, 114, 45, 97, 115, 115, 111, 99, 105, 97, 116, 105, 111, 110] => {
                lookup_522_19(acc)
            }
            [115, 99, 105, 101, 110, 116, 105, 115, 116] => lookup_522_20(acc),
            [97, 109, 98, 117, 108, 97, 110, 99, 101] => lookup_522_21(acc),
            [103, 114, 111, 117, 110, 100, 104, 97, 110, 100, 108, 105, 110, 103] => {
                lookup_522_22(acc)
            }
            [97, 101, 114, 111, 100, 114, 111, 109, 101] => lookup_522_23(acc),
            [112, 114, 111, 100, 117, 99, 116, 105, 111, 110] => lookup_522_24(acc),
            [97, 101, 114, 111, 99, 108, 117, 98] => lookup_522_25(acc),
            [97, 115, 115, 111, 99, 105, 97, 116, 105, 111, 110] => lookup_522_26(acc),
            [114, 101, 99, 114, 101, 97, 116, 105, 111, 110] => lookup_522_27(acc),
            [97, 105, 114, 45, 115, 117, 114, 118, 101, 105, 108, 108, 97, 110, 99, 101] => {
                lookup_522_28(acc)
            }
            [109, 111, 100, 101, 108, 108, 105, 110, 103] => lookup_522_29(acc),
            [99, 104, 97, 109, 112, 105, 111, 110, 115, 104, 105, 112] => lookup_522_30(acc),
            [102, 108, 105, 103, 104, 116] => lookup_522_31(acc),
            [101, 110, 103, 105, 110, 101] => lookup_522_32(acc),
            [115, 104, 111, 119] => lookup_522_33(acc),
            [115, 107, 121, 100, 105, 118, 105, 110, 103] => lookup_522_34(acc),
            [112, 114, 101, 115, 115] => lookup_522_35(acc),
            [99, 111, 110, 115, 117, 108, 116, 97, 110, 116] => lookup_522_36(acc),
            [104, 111, 109, 101, 98, 117, 105, 108, 116] => lookup_522_37(acc),
            [97, 109, 117, 115, 101, 109, 101, 110, 116] => lookup_522_38(acc),
            [97, 105, 114, 108, 105, 110, 101] => lookup_522_39(acc),
            [101, 110, 116, 101, 114, 116, 97, 105, 110, 109, 101, 110, 116] => lookup_522_40(acc),
            [109, 97, 103, 97, 122, 105, 110, 101] => lookup_522_41(acc),
            [114, 101, 115, 101, 97, 114, 99, 104] => lookup_522_42(acc),
            [98, 114, 111, 107, 101, 114] => lookup_522_43(acc),
            [99, 105, 118, 105, 108, 97, 118, 105, 97, 116, 105, 111, 110] => lookup_522_44(acc),
            [98, 97, 108, 108, 111, 111, 110, 105, 110, 103] => lookup_522_45(acc),
            [116, 114, 97, 100, 101, 114] => lookup_522_46(acc),
            [97, 105, 114, 116, 114, 97, 102, 102, 105, 99] => lookup_522_47(acc),
            [101, 110, 103, 105, 110, 101, 101, 114] => lookup_522_48(acc),
            [104, 97, 110, 103, 103, 108, 105, 100, 105, 110, 103] => lookup_522_49(acc),
            [102, 101, 100, 101, 114, 97, 116, 105, 111, 110] => lookup_522_50(acc),
            [105, 110, 115, 117, 114, 97, 110, 99, 101] => lookup_522_51(acc),
            [115, 101, 114, 118, 105, 99, 101, 115] => lookup_522_52(acc),
            [97, 99, 99, 105, 100, 101, 110, 116, 45, 105, 110, 118, 101, 115, 116, 105, 103, 97, 116, 105, 111, 110] => {
                lookup_522_53(acc)
            }
            [108, 101, 97, 115, 105, 110, 103] => lookup_522_54(acc),
            [97, 117, 116, 104, 111, 114] => lookup_522_55(acc),
            [106, 111, 117, 114, 110, 97, 108, 105, 115, 116] => lookup_522_56(acc),
            [99, 97, 116, 101, 114, 105, 110, 103] => lookup_522_57(acc),
            [99, 97, 97] => lookup_522_58(acc),
            [101, 120, 112, 114, 101, 115, 115] => lookup_522_59(acc),
            [114, 101, 112, 98, 111, 100, 121] => lookup_522_60(acc),
            [117, 110, 105, 111, 110] => lookup_522_61(acc),
            [119, 111, 114, 107, 115] => lookup_522_62(acc),
            [97, 101, 114, 111, 98, 97, 116, 105, 99] => lookup_522_63(acc),
            [115, 97, 102, 101, 116, 121] => lookup_522_64(acc),
            [102, 117, 101, 108] => lookup_522_65(acc),
            [99, 111, 110, 116, 114, 111, 108] => lookup_522_66(acc),
            [97, 99, 99, 105, 100, 101, 110, 116, 45, 112, 114, 101, 118, 101, 110, 116, 105, 111, 110] => {
                lookup_522_67(acc)
            }
            [97, 105, 114, 99, 114, 97, 102, 116] => lookup_522_68(acc),
            [112, 97, 114, 97, 103, 108, 105, 100, 105, 110, 103] => lookup_522_69(acc),
            [99, 111, 110, 115, 117, 108, 116, 105, 110, 103] => lookup_522_70(acc),
            [109, 97, 105, 110, 116, 101, 110, 97, 110, 99, 101] => lookup_522_71(acc),
            [112, 105, 108, 111, 116] => lookup_522_72(acc),
            [109, 105, 99, 114, 111, 108, 105, 103, 104, 116] => lookup_522_73(acc),
            [103, 111, 118, 101, 114, 110, 109, 101, 110, 116] => lookup_522_74(acc),
            [114, 111, 116, 111, 114, 99, 114, 97, 102, 116] => lookup_522_75(acc),
            [106, 111, 117, 114, 110, 97, 108] => lookup_522_76(acc),
            [101, 113, 117, 105, 112, 109, 101, 110, 116] => lookup_522_77(acc),
            [115, 116, 117, 100, 101, 110, 116] => lookup_522_78(acc),
            [99, 108, 117, 98] => lookup_522_79(acc),
            [97, 105, 114, 112, 111, 114, 116] => lookup_522_80(acc),
            [97, 105, 114, 45, 116, 114, 97, 102, 102, 105, 99, 45, 99, 111, 110, 116, 114, 111, 108] => {
                lookup_522_81(acc)
            }
            [99, 114, 101, 119] => lookup_522_82(acc),
            [101, 109, 101, 114, 103, 101, 110, 99, 121] => lookup_522_83(acc),
            [97, 103, 101, 110, 116, 115] => lookup_522_84(acc),
            [115, 111, 102, 116, 119, 97, 114, 101] => lookup_522_85(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_523() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_524_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_524_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_524_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_524_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_524_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_524_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_524_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_524_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_524_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_524_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_524_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_524_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_524_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_524_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_524_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_524_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_524<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111] => lookup_524_0(acc),
            [97, 99] => lookup_524_1(acc),
            [110, 97, 109, 101] => lookup_524_2(acc),
            [119, 101, 98] => lookup_524_3(acc),
            [99, 111, 109] => lookup_524_4(acc),
            [116, 101, 115, 116] => lookup_524_5(acc),
            [101, 100, 117] => lookup_524_6(acc),
            [98, 105, 122] => lookup_524_7(acc),
            [99, 111] => lookup_524_8(acc),
            [109, 105, 108] => lookup_524_9(acc),
            [110, 101, 116] => lookup_524_10(acc),
            [110, 105, 99] => lookup_524_11(acc),
            [103, 111, 118] => lookup_524_12(acc),
            [111, 114, 103] => lookup_524_13(acc),
            [105, 110, 116] => lookup_524_14(acc),
            [110, 111, 109] => lookup_524_15(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_525() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_526() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_527() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_528_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_528_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_528_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_528_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_528_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_528_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_528<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_528_0(acc),
            [111, 114, 103] => lookup_528_1(acc),
            [99, 111, 109] => lookup_528_2(acc),
            [101, 100, 117] => lookup_528_3(acc),
            [103, 111, 118] => lookup_528_4(acc),
            [119, 101] => lookup_528_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_529() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_530() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_531_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_531<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [121, 98, 111] => lookup_531_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_532() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_533_0(acc),
            [111, 114] => lookup_533_1(acc),
            [99, 111, 109] => lookup_533_2(acc),
            [101, 100, 117] => lookup_533_3(acc),
            [99, 111] => lookup_533_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_534() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_535() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_536() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_538() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_540_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_540_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_540_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_540_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_540_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_540_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_540_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_540_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_540_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_540_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_540_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_540_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_540_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_540<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_540_0(acc),
            [104, 101, 97, 108, 116, 104] => lookup_540_1(acc),
            [101, 100, 117] => lookup_540_2(acc),
            [97, 99] => lookup_540_3(acc),
            [98, 105, 122] => lookup_540_4(acc),
            [105, 110, 102, 111] => lookup_540_5(acc),
            [110, 101, 116] => lookup_540_6(acc),
            [111, 114, 103] => lookup_540_7(acc),
            [110, 97, 109, 101] => lookup_540_8(acc),
            [99, 111, 109] => lookup_540_9(acc),
            [103, 111, 118] => lookup_540_10(acc),
            [105, 110, 116] => lookup_540_11(acc),
            [112, 114, 111] => lookup_540_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_541() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_542_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_542_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_542_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_542_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_542_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_542_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_542<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_542_0(acc),
            [112, 98] => lookup_542_1(acc),
            [111, 103] => lookup_542_2(acc),
            [101, 100] => lookup_542_3(acc),
            [105, 116] => lookup_542_4(acc),
            [103, 118] => lookup_542_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_543_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_543_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_543_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_543_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_543_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_543_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_543_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_543_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_543_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_543_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_543_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_543_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_543_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_543_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_543_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_543_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_543_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_543<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 111, 112] => lookup_543_0(acc),
            [112, 111, 108] => lookup_543_1(acc),
            [97, 100, 117, 108, 116] => lookup_543_2(acc),
            [112, 114, 111] => lookup_543_3(acc),
            [105, 110, 102, 111] => lookup_543_4(acc),
            [97, 115, 115, 111] => lookup_543_5(acc),
            [112, 101, 114, 115, 111] => lookup_543_6(acc),
            [99, 111, 109] => lookup_543_7(acc),
            [97, 114, 116] => lookup_543_8(acc),
            [101, 100, 117] => lookup_543_9(acc),
            [114, 101, 108] => lookup_543_10(acc),
            [115, 104, 111, 112] => lookup_543_11(acc),
            [102, 105, 114, 109] => lookup_543_12(acc),
            [110, 101, 116] => lookup_543_13(acc),
            [111, 114, 103] => lookup_543_14(acc),
            [109, 101, 100] => lookup_543_15(acc),
            [103, 111, 117, 118] => lookup_543_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_544() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_545() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_546_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_546_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_546_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_546_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_546_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_546_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_546<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_546_0(acc),
            [108, 116, 100] => lookup_546_1(acc),
            [103, 111, 118] => lookup_546_2(acc),
            [99, 111, 109] => lookup_546_3(acc),
            [109, 111, 100] => lookup_546_4(acc),
            [101, 100, 117] => lookup_546_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_547() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_549() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_550_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_550_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_550<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_550_0(acc),
            [103, 111, 118] => lookup_550_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_551() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_552() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_553_0(acc),
            [98, 105, 122] => lookup_553_1(acc),
            [101, 100, 117] => lookup_553_2(acc),
            [105, 110, 102, 111] => lookup_553_3(acc),
            [99, 111] => lookup_553_4(acc),
            [109, 105, 108] => lookup_553_5(acc),
            [110, 101, 116] => lookup_553_6(acc),
            [103, 111, 118] => lookup_553_7(acc),
            [99, 111, 109] => lookup_553_8(acc),
            [111, 114, 103] => lookup_553_9(acc),
            [115, 99, 104] => lookup_553_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_554() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_555() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_556() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_557() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_558() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_559() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_560_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_560<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 112, 101, 110, 99, 114, 97, 102, 116] => lookup_560_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_561() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_562() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_563() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_564_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_564_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_564_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_564_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_564<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_564_0(acc),
            [111, 114, 103] => lookup_564_1(acc),
            [111, 102] => lookup_564_2(acc),
            [99, 111] => lookup_564_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_565() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_566() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_567() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_568() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_569() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_570_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_570_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_570_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_570_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_570_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_570_4<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_570_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_570_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_570_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_570_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_570_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_570_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_570_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_570_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_570_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_570_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_570_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_570<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 116, 100] => lookup_570_0(acc),
            [103, 101, 110] => lookup_570_1(acc),
            [110, 97, 109, 101] => lookup_570_2(acc),
            [105] => lookup_570_3(acc),
            [99, 111, 109] => lookup_570_4(labels, acc),
            [99, 111, 108] => lookup_570_5(acc),
            [101, 100, 117] => lookup_570_6(acc),
            [110, 103, 111] => lookup_570_7(acc),
            [109, 111, 98, 105] => lookup_570_8(acc),
            [109, 105, 108] => lookup_570_9(acc),
            [110, 101, 116] => lookup_570_10(acc),
            [111, 114, 103] => lookup_570_11(acc),
            [115, 99, 104] => lookup_570_12(acc),
            [103, 111, 118] => lookup_570_13(acc),
            [102, 105, 114, 109] => lookup_570_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_571() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_572() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_573() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_574() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_575() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_577() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_578() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_579_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_579_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_579<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [114, 97, 118, 101, 110, 100, 98] => lookup_579_0(acc),
            [109, 121, 102, 111, 114, 117, 109] => lookup_579_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_580() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_581() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_582() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_583() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_584_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_584_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_584_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_584_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_584_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_584_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_584_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_584_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_584_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_584_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_584<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_584_0(acc),
            [97, 99] => lookup_584_1(acc),
            [99, 111] => lookup_584_2(labels, acc),
            [109, 117, 110, 105] => lookup_584_3(acc),
            [110, 101, 116] => lookup_584_4(acc),
            [111, 114, 103] => lookup_584_5(acc),
            [103, 111, 118] => lookup_584_6(acc),
            [105, 100, 102] => lookup_584_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_585() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_586_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_586_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_586_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_586_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_586_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_586_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_586_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_586_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_586<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_586_0(acc),
            [101, 100, 117] => lookup_586_1(acc),
            [109, 105, 108] => lookup_586_2(acc),
            [110, 101, 116] => lookup_586_3(acc),
            [111, 114, 103] => lookup_586_4(acc),
            [99, 111, 109] => lookup_586_5(acc),
            [110, 111, 109] => lookup_586_6(acc),
            [103, 111, 98] => lookup_586_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_587() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_588() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_589() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_590() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_591() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_593_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_593_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_593_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_593_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_593_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_593_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_593_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_593_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_593_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_593_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_593_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_593_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_593_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 31usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_593_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_593_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_593_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_593_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_593_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_593_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_593_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_593_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_593_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_593_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_593_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_593_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_593_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_593_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_593_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_593_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_593<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_593_0(acc),
            [103, 101, 111, 109, 101, 116, 114, 101, 45, 101, 120, 112, 101, 114, 116] => {
                lookup_593_1(acc)
            }
            [109, 101, 100, 101, 99, 105, 110] => lookup_593_2(acc),
            [118, 101, 116, 101, 114, 105, 110, 97, 105, 114, 101] => lookup_593_3(acc),
            [102, 98, 120, 111, 115] => lookup_593_4(acc),
            [112, 114, 100] => lookup_593_5(acc),
            [97, 101, 114, 111, 112, 111, 114, 116] => lookup_593_6(acc),
            [97, 115, 115, 111] => lookup_593_7(acc),
            [116, 109] => lookup_593_8(acc),
            [111, 110, 45, 119, 101, 98] => lookup_593_9(acc),
            [101, 120, 112, 101, 114, 116, 115, 45, 99, 111, 109, 112, 116, 97, 98, 108, 101, 115] => {
                lookup_593_10(acc)
            }
            [112, 111, 114, 116] => lookup_593_11(acc),
            [99, 104, 105, 114, 117, 114, 103, 105, 101, 110, 115, 45, 100, 101, 110, 116, 105, 115, 116, 101, 115, 45, 101, 110, 45, 102, 114, 97, 110, 99, 101] => {
                lookup_593_12(acc)
            }
            [103, 114, 101, 116, 97] => lookup_593_13(acc),
            [102, 98, 120, 45, 111, 115] => lookup_593_14(acc),
            [110, 111, 109] => lookup_593_15(acc),
            [102, 114, 101, 101, 98, 111, 120, 45, 111, 115] => lookup_593_16(acc),
            [102, 114, 101, 101, 98, 111, 120, 111, 115] => lookup_593_17(acc),
            [99, 99, 105] => lookup_593_18(acc),
            [97, 118, 111, 117, 101, 115] => lookup_593_19(acc),
            [101, 110, 45, 114, 111, 111, 116] => lookup_593_20(acc),
            [99, 111, 109] => lookup_593_21(acc),
            [99, 104, 105, 114, 117, 114, 103, 105, 101, 110, 115, 45, 100, 101, 110, 116, 105, 115, 116, 101, 115] => {
                lookup_593_22(acc)
            }
            [99, 104, 97, 109, 98, 97, 103, 114, 105] => lookup_593_23(acc),
            [104, 117, 105, 115, 115, 105, 101, 114, 45, 106, 117, 115, 116, 105, 99, 101] => {
                lookup_593_24(acc)
            }
            [103, 111, 117, 118] => lookup_593_25(acc),
            [97, 118, 111, 99, 97, 116] => lookup_593_26(acc),
            [110, 111, 116, 97, 105, 114, 101, 115] => lookup_593_27(acc),
            [112, 104, 97, 114, 109, 97, 99, 105, 101, 110] => lookup_593_28(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_594() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_595() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_596() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_597_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_597_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_597_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_597_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_597_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_597_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_597_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_597_5_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_597_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_597_5_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_597_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_597_7_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_597_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_597_7_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_597_8_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_597_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_597_8_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_597_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_597_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_597_11_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_597_11<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_597_11_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_597_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_597_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_597_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_597_15_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_597_15<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_597_15_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_597<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 97, 116, 101, 119, 97, 121] => lookup_597_0(info, labels, acc),
            [105, 115, 101, 114, 118] => lookup_597_1(acc),
            [99, 117, 114, 118] => lookup_597_2(acc),
            [108, 111, 103, 105, 110, 108, 105, 110, 101] => lookup_597_3(acc),
            [112, 108, 97, 116, 116, 101, 114, 45, 97, 112, 112] => lookup_597_4(acc),
            [115, 116, 103] => lookup_597_5(info, labels, acc),
            [102, 108, 121] => lookup_597_6(acc),
            [108, 99, 108, 115, 116, 97, 103, 101] => lookup_597_7(info, labels, acc),
            [115, 116, 103, 115, 116, 97, 103, 101] => lookup_597_8(info, labels, acc),
            [119, 111, 114, 107, 101, 114, 115] => lookup_597_9(acc),
            [112, 97, 103, 101, 115] => lookup_597_10(acc),
            [108, 99, 108] => lookup_597_11(info, labels, acc),
            [100, 101, 110, 111, 45, 115, 116, 97, 103, 105, 110, 103] => lookup_597_12(acc),
            [100, 101, 110, 111] => lookup_597_13(acc),
            [118, 101, 114, 99, 101, 108] => lookup_597_14(acc),
            [119, 101, 98, 104, 97, 114, 101] => lookup_597_15(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_598() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_599<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 101] => lookup_599_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_600() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_601_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_601<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_601_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_602() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_604() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_605() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_606_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_606_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_606_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_606_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_606_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_606_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_606_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [117, 112, 97, 97, 115] => lookup_606_8_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_606<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [106, 99, 108, 111, 117, 100] => lookup_606_0(acc),
            [110, 121, 109] => lookup_606_1(acc),
            [101, 100, 117] => lookup_606_2(acc),
            [109, 105, 108] => lookup_606_3(acc),
            [110, 101, 116] => lookup_606_4(acc),
            [111, 114, 103] => lookup_606_5(acc),
            [103, 111, 118] => lookup_606_6(acc),
            [99, 111, 109] => lookup_606_7(acc),
            [107, 97, 122, 116, 101, 108, 101, 112, 111, 114, 116] => {
                lookup_606_8(info, labels, acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_607() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_608() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_609() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_610() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_611() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_612_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_612_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_612_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_612<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_612_0(acc),
            [110, 121, 109] => lookup_612_1(acc),
            [103, 111, 118] => lookup_612_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_613() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_614() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_616() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_617_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_617_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_617_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_617_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_617_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_617_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_617_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_617_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_617_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_617_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_617_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_617<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 111] => lookup_617_0(acc),
            [101, 100, 117] => lookup_617_1(acc),
            [98, 108, 111, 103] => lookup_617_2(acc),
            [109, 105, 108] => lookup_617_3(acc),
            [110, 101, 116] => lookup_617_4(acc),
            [105, 110, 100] => lookup_617_5(acc),
            [111, 114, 103] => lookup_617_6(acc),
            [99, 111, 109] => lookup_617_7(acc),
            [100, 101] => lookup_617_8(acc),
            [103, 111, 98] => lookup_617_9(acc),
            [110, 111, 109] => lookup_617_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_618() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_619_0(acc),
            [101, 100, 117] => lookup_619_1(acc),
            [110, 97, 109, 101] => lookup_619_2(acc),
            [98, 105, 122] => lookup_619_3(acc),
            [109, 105, 108] => lookup_619_4(acc),
            [110, 101, 116] => lookup_619_5(acc),
            [111, 114, 103] => lookup_619_6(acc),
            [99, 111, 109] => lookup_619_7(acc),
            [103, 111, 118] => lookup_619_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_620() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_621() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_622() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_624() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_625() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_626() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_627() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_628() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_629() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_630() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_631() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_632() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_633_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_633_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_633_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_633_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_633_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_633_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_633<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 11usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 53, 53, 113, 120, 53, 100] => lookup_633_0(acc),
            [120, 110, 45, 45, 111, 100, 48, 97, 108, 103] => lookup_633_1(acc),
            [120, 110, 45, 45, 117, 99, 48, 97, 116, 118] => lookup_633_2(acc),
            [120, 110, 45, 45, 109, 120, 116, 113, 49, 109] => lookup_633_3(acc),
            [120, 110, 45, 45, 119, 99, 118, 115, 50, 50, 100] => lookup_633_4(acc),
            [120, 110, 45, 45, 103, 109, 113, 119, 53, 97] => lookup_633_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_634() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_636() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_637() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_638() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_639_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_639_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_639<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_639_0(acc),
            [100, 105, 115, 99, 111, 117, 114, 115, 101] => lookup_639_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_641() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_642() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_643() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_644_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_644_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_644_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_644_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_644_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_644_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_644_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_644_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_644<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_644_0(acc),
            [98, 105, 122] => lookup_644_1(acc),
            [110, 97, 109, 101] => lookup_644_2(acc),
            [105, 110, 102, 111] => lookup_644_3(acc),
            [110, 101, 116] => lookup_644_4(acc),
            [111, 114, 103] => lookup_644_5(acc),
            [103, 111, 118] => lookup_644_6(acc),
            [99, 111, 109] => lookup_644_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_645() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_646_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_646_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_646_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_646_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_646_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_646_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_646_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_646_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_646_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_646_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_646_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_646<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 101, 114] => lookup_646_0(acc),
            [110, 121, 109] => lookup_646_1(acc),
            [101, 100, 117] => lookup_646_2(acc),
            [105, 110, 102, 111] => lookup_646_3(acc),
            [110, 101, 116] => lookup_646_4(acc),
            [111, 114, 103] => lookup_646_5(acc),
            [99] => lookup_646_6(acc),
            [103, 111, 118] => lookup_646_7(acc),
            [99, 111, 109] => lookup_646_8(acc),
            [105, 110, 116] => lookup_646_9(acc),
            [98, 110, 114] => lookup_646_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_647() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_648() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_649() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_650() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_651() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_653() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_654() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_655() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_656() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_657() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_658() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_659() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_660() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_661() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_662() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_663() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_664_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_664_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_664<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 114, 111, 109] => lookup_664_0(acc),
            [116, 111] => lookup_664_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_665() -> Info {
    Info {
        len: 24usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_666() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_667() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_668() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_669() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_671() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_672() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_674() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_675() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_676() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_677() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_678() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_679() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_680() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_681() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_682() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_683() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_684() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_685() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_686_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_686_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_686_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_686_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_686_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_686_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_686_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_686<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 101, 108, 101, 98, 105, 116] => lookup_686_0(info, labels, acc),
            [108, 111, 99, 97, 108, 122, 111, 110, 101] => lookup_686_1(acc),
            [98, 108, 111, 103, 115, 105, 116, 101] => lookup_686_2(acc),
            [99, 114, 97, 102, 116, 105, 110, 103] => lookup_686_3(acc),
            [122, 97, 112, 116, 111] => lookup_686_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_687() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_688() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_689() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_690() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_691() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_692_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_692_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_692_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_692_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_692_3<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_692_3_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_692_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_692_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_692_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_692<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 108] => lookup_692_0(acc),
            [110, 101, 116] => lookup_692_1(acc),
            [111, 114, 103] => lookup_692_2(acc),
            [99, 111, 109] => lookup_692_3(labels, acc),
            [101, 100, 117] => lookup_692_4(acc),
            [110, 111, 109] => lookup_692_5(acc),
            [103, 117, 98] => lookup_692_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_693() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_694() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_695() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_696() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_697() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_698_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_698_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_698<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_698_0(acc),
            [99, 111] => lookup_698_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_699() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_700() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_701_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_701_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_701_1_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_701_1_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_701_1_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_701_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116, 111, 109] => lookup_701_1_0(acc),
            [99, 108, 111, 117, 100] => lookup_701_1_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_701_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_701_3_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_701_3_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_701_3_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [117, 115, 114] => lookup_701_3_0_0(acc),
            [102, 108, 116] => lookup_701_3_0_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_701_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_701_3_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_701_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_701_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_701<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_701_0(acc),
            [109, 101, 116, 97, 99, 101, 110, 116, 114, 117, 109] => {
                lookup_701_1(info, labels, acc)
            }
            [114, 101, 97, 108, 109] => lookup_701_2(acc),
            [109, 117, 110, 105] => lookup_701_3(info, labels, acc),
            [101, 52] => lookup_701_4(acc),
            [99, 111] => lookup_701_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_702_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_702_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_702_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_702_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_702_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_702_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_702<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_702_0(acc),
            [111, 114, 103] => lookup_702_1(acc),
            [112, 114, 101, 115, 115] => lookup_702_2(acc),
            [103, 111, 118] => lookup_702_3(acc),
            [97, 99] => lookup_702_4(acc),
            [99, 111] => lookup_702_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_703() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_704_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_704_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_704_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_704_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_704_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_704<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_704_0(acc),
            [111, 114, 103] => lookup_704_1(acc),
            [103, 111, 118] => lookup_704_2(acc),
            [101, 100, 117] => lookup_704_3(acc),
            [99, 111, 109] => lookup_704_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_705() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_706() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_707() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_708() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_709() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_710() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_711() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_712() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_713() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_714() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_715() -> Info {
    Info {
        len: 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_716_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_716_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_716_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_716_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_716_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_716_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_716_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_716_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_716_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_716_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_716_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_716_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_716<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 99] => lookup_716_0(acc),
            [103, 111] => lookup_716_1(acc),
            [111, 114] => lookup_716_2(acc),
            [97, 99] => lookup_716_3(acc),
            [116, 118] => lookup_716_4(acc),
            [109, 111, 98, 105] => lookup_716_5(acc),
            [105, 110, 102, 111] => lookup_716_6(acc),
            [109, 101] => lookup_716_7(acc),
            [109, 105, 108] => lookup_716_8(acc),
            [99, 111] => lookup_716_9(acc),
            [104, 111, 116, 101, 108] => lookup_716_10(acc),
            [110, 101] => lookup_716_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_717() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_718_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_718_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_718_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100] => lookup_718_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_718_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_718_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_718_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_718_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_718_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_718_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_718_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_718<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_718_0(acc),
            [103, 118] => lookup_718_1(labels, acc),
            [110, 101, 116] => lookup_718_2(acc),
            [111, 114, 103] => lookup_718_3(acc),
            [109, 105, 108] => lookup_718_4(acc),
            [99, 111, 109] => lookup_718_5(acc),
            [103, 111, 118] => lookup_718_6(acc),
            [110, 111, 109] => lookup_718_7(acc),
            [48, 101] => lookup_718_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_719() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_720() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_721() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_722() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_723() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_724() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_725() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_726_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_726_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_726_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_726<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 108, 101, 115, 107] => lookup_726_0(acc),
            [112, 114, 118, 99, 121] => lookup_726_1(acc),
            [112, 100, 110, 115] => lookup_726_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_727_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_727_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_727_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_727_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_727_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_727_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_727_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_727_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_727<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 121, 109] => lookup_727_0(acc),
            [101, 100, 117] => lookup_727_1(acc),
            [99, 111] => lookup_727_2(acc),
            [110, 101, 116] => lookup_727_3(acc),
            [111, 114, 103] => lookup_727_4(acc),
            [111, 121] => lookup_727_5(acc),
            [99, 111, 109] => lookup_727_6(acc),
            [103, 111, 118] => lookup_727_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_728() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_729() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_730() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_731() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_732_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_732_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_732_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_732_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_732_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_732_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_732<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 110, 45, 97, 100, 100, 114] => lookup_732_0(acc),
            [105, 112, 54] => lookup_732_1(acc),
            [101, 49, 54, 52] => lookup_732_2(acc),
            [105, 114, 105, 115] => lookup_732_3(acc),
            [117, 114, 105] => lookup_732_4(acc),
            [117, 114, 110] => lookup_732_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_733() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_734() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_735_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_735_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_735_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_735_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_735_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_735_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_735_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_735_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_735_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_735_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_735<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [209, 129, 208, 176, 208, 188, 208, 176, 209, 128, 208, 176] => lookup_735_0(acc),
            [209, 129, 208, 190, 209, 135, 208, 184] => lookup_735_1(acc),
            [208, 190, 209, 128, 208, 179] => lookup_735_2(acc),
            [209, 129, 208, 191, 208, 177] => lookup_735_3(acc),
            [208, 177, 208, 184, 208, 183] => lookup_735_4(acc),
            [208, 186, 208, 190, 208, 188] => lookup_735_5(acc),
            [208, 186, 209, 128, 209, 139, 208, 188] => lookup_735_6(acc),
            [209, 143] => lookup_735_7(acc),
            [208, 188, 208, 184, 209, 128] => lookup_735_8(acc),
            [208, 188, 209, 129, 208, 186] => lookup_735_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_736() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_737() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_738() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_739() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_740_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_740_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_740_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_740_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_740_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_740<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 108] => lookup_740_0(acc),
            [111, 114, 103] => lookup_740_1(acc),
            [103, 111, 118] => lookup_740_2(acc),
            [97, 99] => lookup_740_3(acc),
            [99, 111] => lookup_740_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_741() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_742() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_743_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_743_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_743_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_743_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_743_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_743_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_743_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_743_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_743_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_743_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_743_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_743_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_743_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_743_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_743_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_743_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_743_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_743<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 97] => lookup_743_0(acc),
            [112, 114, 111] => lookup_743_1(acc),
            [110, 97, 109, 101] => lookup_743_2(acc),
            [115, 99, 104, 111, 111, 108] => lookup_743_3(acc),
            [105, 110, 102, 111] => lookup_743_4(acc),
            [109, 120] => lookup_743_5(acc),
            [116, 118] => lookup_743_6(acc),
            [99, 111, 109] => lookup_743_7(acc),
            [99, 99] => lookup_743_8(acc),
            [111, 114] => lookup_743_9(acc),
            [105, 110] => lookup_743_10(acc),
            [100, 114] => lookup_743_11(acc),
            [119, 115] => lookup_743_12(acc),
            [109, 111, 98, 105] => lookup_743_13(acc),
            [99, 111] => lookup_743_14(acc),
            [111, 114, 103] => lookup_743_15(acc),
            [117, 115] => lookup_743_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_744_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_744_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_744_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_744_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_744_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_744_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_744_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_744_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_744<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_744_0(acc),
            [101, 100, 117] => lookup_744_1(acc),
            [112, 101, 114, 115, 111] => lookup_744_2(acc),
            [111, 114, 103] => lookup_744_3(acc),
            [103, 111, 117, 118] => lookup_744_4(acc),
            [99, 111, 109] => lookup_744_5(acc),
            [97, 114, 116] => lookup_744_6(acc),
            [117, 110, 105, 118] => lookup_744_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_745() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_746() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_747() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_748() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_749() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_750() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_751_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_751<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 104, 111, 112, 119, 97, 114, 101] => lookup_751_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_752() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_753() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_754() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_755() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_756() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_757() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758_13_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758_13<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_758_13_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_758_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 111, 110, 112, 101, 115] => lookup_758_0(acc),
            [103, 111] => lookup_758_1(acc),
            [97, 99] => lookup_758_2(acc),
            [119, 101, 98] => lookup_758_3(acc),
            [102, 108, 97, 112] => lookup_758_4(acc),
            [100, 101, 115, 97] => lookup_758_5(acc),
            [119, 98, 108, 111, 103] => lookup_758_6(acc),
            [111, 114] => lookup_758_7(acc),
            [102, 111, 114, 116, 101] => lookup_758_8(acc),
            [98, 108, 111, 103, 101, 114] => lookup_758_9(acc),
            [98, 105, 122] => lookup_758_10(acc),
            [109, 121] => lookup_758_11(acc),
            [109, 105, 108] => lookup_758_12(acc),
            [99, 111] => lookup_758_13(labels, acc),
            [110, 101, 116] => lookup_758_14(acc),
            [115, 99, 104] => lookup_758_15(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_759() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_760() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_761() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_762() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_763() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_764_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_764_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_764_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_764_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_764_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_764_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_764_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_764_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_764_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_764_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_764_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_764<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 111, 112] => lookup_764_0(acc),
            [97, 99] => lookup_764_1(acc),
            [98, 105, 122] => lookup_764_2(acc),
            [101, 100, 117] => lookup_764_3(acc),
            [99, 111] => lookup_764_4(acc),
            [110, 101, 116] => lookup_764_5(acc),
            [111, 114, 103] => lookup_764_6(acc),
            [103, 111, 118] => lookup_764_7(acc),
            [99, 111, 109] => lookup_764_8(acc),
            [105, 110, 116] => lookup_764_9(acc),
            [109, 117, 115, 101, 117, 109] => lookup_764_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_765() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_766() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_767() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_768() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_769() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_770() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_771() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_773() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_774_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_774_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_774_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_774_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [102, 105] => lookup_774_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_774_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_774_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_774_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [100, 101, 109, 111] => lookup_774_3_0(acc),
            [112, 97, 97, 115] => lookup_774_3_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_774_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_774_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_774_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_774_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_774<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_774_0(acc),
            [120, 110, 45, 45, 104, 107, 107, 105, 110, 101, 110, 45, 53, 119, 97] => {
                lookup_774_1(acc)
            }
            [99, 108, 111, 117, 100, 112, 108, 97, 116, 102, 111, 114, 109] => {
                lookup_774_2(info, labels, acc)
            }
            [100, 97, 116, 97, 99, 101, 110, 116, 101, 114] => lookup_774_3(info, labels, acc),
            [105, 107, 105] => lookup_774_4(acc),
            [100, 121] => lookup_774_5(acc),
            [97, 108, 97, 110, 100] => lookup_774_6(acc),
            [104, 195, 164, 107, 107, 105, 110, 101, 110] => lookup_774_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_775_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_775_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_775_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_775_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_775_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_775_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_775_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_775<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 108] => lookup_775_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_775_1(acc),
            [110, 111, 109] => lookup_775_2(acc),
            [103, 111, 118] => lookup_775_3(acc),
            [97, 112, 114, 101, 110, 100, 101, 109, 97, 115] => lookup_775_4(acc),
            [103, 111, 98] => lookup_775_5(acc),
            [99, 111] => lookup_775_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_776_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_776<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [114, 111, 117, 116, 101, 114] => lookup_776_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_777_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_777_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_777_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_777_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_777_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_777_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_777<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_777_0(acc),
            [111, 114, 103] => lookup_777_1(acc),
            [99, 111, 109] => lookup_777_2(labels, acc),
            [101, 100, 117] => lookup_777_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_778_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_778_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_778_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_778_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 18usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_778_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_778_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_778_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [101, 122, 112, 114, 111, 120, 121] => lookup_778_3_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_778_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_778_5_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_778_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_778_5_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_778<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_778_0(acc),
            [119, 101, 98, 104, 111, 115, 116, 105, 110, 103] => lookup_778_1(acc),
            [105, 110, 116, 101, 114, 104, 111, 115, 116, 115, 111, 108, 117, 116, 105, 111, 110, 115] => {
                lookup_778_2(info, labels, acc)
            }
            [107, 117, 108, 101, 117, 118, 101, 110] => lookup_778_3(info, labels, acc),
            [97, 99] => lookup_778_4(acc),
            [116, 114, 97, 110, 115, 117, 114, 108] => lookup_778_5(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_779() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_780_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_780_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_780_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_780_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_780_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_780_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_780_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_780<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_780_0(acc),
            [111, 114, 103] => lookup_780_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_780_2(acc),
            [99, 111, 109] => lookup_780_3(acc),
            [101, 100, 117] => lookup_780_4(acc),
            [103, 111, 118] => lookup_780_5(acc),
            [110, 121, 109] => lookup_780_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_781() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_782() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_783_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_783<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_783_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_784_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_784_0(acc),
            [99, 111, 109] => lookup_784_1(acc),
            [103, 111, 118] => lookup_784_2(acc),
            [99, 111] => lookup_784_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_785() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_786() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_787() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_788_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_788_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_788_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_788_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_788_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_788_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_788_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_788_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_788_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_788_8<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_788_8_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_788_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_788_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_788_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_788_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_788_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_788_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_788_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_788_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_788_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_788_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_788_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_788_20_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_788_20<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_788_20_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_788_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_788<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_788_0(acc),
            [103, 101, 110] => lookup_788_1(acc),
            [112, 111, 108] => lookup_788_2(acc),
            [110, 97, 109, 101] => lookup_788_3(acc),
            [116, 118] => lookup_788_4(acc),
            [105, 110, 102, 111] => lookup_788_5(acc),
            [119, 101, 98] => lookup_788_6(acc),
            [98, 98, 115] => lookup_788_7(acc),
            [99, 111, 109] => lookup_788_8(labels, acc),
            [97, 118] => lookup_788_9(acc),
            [116, 115, 107] => lookup_788_10(acc),
            [101, 100, 117] => lookup_788_11(acc),
            [98, 101, 108] => lookup_788_12(acc),
            [98, 105, 122] => lookup_788_13(acc),
            [100, 114] => lookup_788_14(acc),
            [109, 105, 108] => lookup_788_15(acc),
            [110, 101, 116] => lookup_788_16(acc),
            [111, 114, 103] => lookup_788_17(acc),
            [103, 111, 118] => lookup_788_18(acc),
            [116, 101, 108] => lookup_788_19(acc),
            [110, 99] => lookup_788_20(labels, acc),
            [107, 101, 112] => lookup_788_21(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_789() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_791() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_792() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_793_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_17_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_17<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_793_17_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_793_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_67_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_67<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_793_67_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_793_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_72_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_72_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_72<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 16usize;
    match labels.next() {
        Some(label) => match label {
            [115, 97, 110, 100, 101] => lookup_793_72_0(acc),
            [104, 101, 114, 195, 184, 121] => lookup_793_72_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_793_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_107_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_107_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_107<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 22usize;
    match labels.next() {
        Some(label) => match label {
            [115, 97, 110, 100, 101] => lookup_793_107_0(acc),
            [120, 110, 45, 45, 104, 101, 114, 121, 45, 105, 114, 97] => lookup_793_107_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_793_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_115_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_115<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_793_115_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_793_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_131_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_131<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_793_131_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_793_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_158(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_162(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_163(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_164(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_165_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_165<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_793_165_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_793_166(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_167(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_168(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_169(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_170(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_171(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_172(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_173(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_174(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_175(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_176(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_177(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_178(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_179(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_180(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_181(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_182(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_183(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_184(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_185(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_186(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_187(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_188(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_189(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_190(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_191(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_192(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_193(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_194(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_195(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_196(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_197(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_198(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_199(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_200(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_201(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_202(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_203(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_204(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_205(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_206(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_207(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_208(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_209(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_210(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_211(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_212(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_213(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_214(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_215(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_216(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_217(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_218(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_219(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_220(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_221(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_222(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_223(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_224(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_225(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_226(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_227(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_228(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_229(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_230(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_231(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_232(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_233(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_234(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_235(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_236(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_237(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_238(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_239(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_240(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_241(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_242(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_243(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_244(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_245(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_246(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_247(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_248(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_249(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_250(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_251(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_252(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_253(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_254(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_255(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_256(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_257(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_258_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_258<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_793_258_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_793_259(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_260(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_261(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_262(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_263(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_264(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_265(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_266(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_267(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_268(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_269(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_270(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_271(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_272(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_273(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_274(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_275(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_276(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_277(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_278(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_279(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_280(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_281(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_282(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_283(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_284(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_285(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_286(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_287(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_288(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_289(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_290(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_291(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_292(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_293(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_294(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_295(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_296(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_297(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_298(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_299(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_300(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_301(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_302(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_303(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_304(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_305(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_306(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_307(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_308(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_309(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_310(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_311(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_312(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_313(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_314(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_315(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_316(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_317(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_318(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_319(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_320(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_321(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_322(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_323(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_324(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_325(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_326(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_327(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_328(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_329(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_330(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_331(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_332(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_333(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_334(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_335(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_336(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_337(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_338(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_339(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_340(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_341(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_342(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_343(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_344(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_345(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_346(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_347(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_348(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_349(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_350(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_351(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_352(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_353(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_354(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_355(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_356(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_357(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_358(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_359(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_360(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_361(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_362(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_363(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_364(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_365(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_366(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_367_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_367<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_793_367_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_793_368(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_369(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_370(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_371_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_371<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_793_371_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_793_372(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_373(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_374(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_375(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_376(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_377(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_378(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_379(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_380(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_381(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_382(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_383(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_384(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_385(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_386(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_387(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_388(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_389(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_390(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_391(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_392(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_393(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_394(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_395(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_396(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_397(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_398(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_399(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_400(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_401(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_402(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_403(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_404(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_405(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_406(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_407(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_408(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_409(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_410(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_411(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_412(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_413(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_414(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_415(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_416(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_417(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_418(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_419(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_420(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_421(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_422(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_423(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_424_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_424<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_793_424_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_793_425_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_425<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_793_425_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_793_426(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_427(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_428(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_429(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_430(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_431(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_432(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_433(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_434(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_435(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_436(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_437(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_438(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_439_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_439<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_793_439_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_793_440(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_441(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_442(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_443(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_444(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_445(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_446(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_447(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_448(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_449(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_450(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_451(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_452(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_453(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_454_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_454<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_793_454_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_793_455(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_456(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_457(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_458(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_459(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_460(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_461(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_462(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_463(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_464_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_464_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_464<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 15usize;
    match labels.next() {
        Some(label) => match label {
            [115, 97, 110, 100, 101] => lookup_793_464_0(acc),
            [104, 101, 114, 111, 121] => lookup_793_464_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_793_465(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_466(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_467(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_468(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_469(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_470(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_471(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_472(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_473(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_474(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_475(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_476(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_477(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_478(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_479(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_480(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_481(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_482(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_483(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_484(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_485(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_486_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_486_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_486_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_486<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [98, 111] => lookup_793_486_0(acc),
            [98, 195, 184] => lookup_793_486_1(acc),
            [120, 110, 45, 45, 98, 45, 53, 103, 97] => lookup_793_486_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_793_487(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_488(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_489_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_489<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_793_489_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_793_490(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_491(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_492(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_493(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_494(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_495(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_496(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_497(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_498(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_499(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_500(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_501(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_502(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_503_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_503_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_503_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_503_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_503<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 118, 108, 101, 114, 45, 113, 111, 97] => lookup_793_503_0(acc),
            [118, 97, 108, 101, 114] => lookup_793_503_1(acc),
            [111, 115] => lookup_793_503_2(acc),
            [118, 195, 165, 108, 101, 114] => lookup_793_503_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_793_504(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_505(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_506(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_507(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_508(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_509(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_510(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_511(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_512(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_513(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_514(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_515(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_516(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_517(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_518_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_518<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_793_518_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_793_519(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_520(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_521(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_522_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_522<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [115, 97, 110, 100, 101] => lookup_793_522_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_793_523(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_524(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_525(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_526(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_527(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_793_528(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_529(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_530(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_531(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_532(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_533(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_534(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_535(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_536(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_537(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_538(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_539(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_540(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_541(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_542(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_543(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_544(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_545(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_546(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_547(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_548(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_549(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_550(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_551(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_552(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_553(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_554(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_555(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_556(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_557(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_558(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_559(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_560(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_561(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_562(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_563(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_564(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_565_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_565<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_793_565_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_793_566(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_567(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_568(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_569(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_570(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_571(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_572(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_573(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_574(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_575(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_576(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_577(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_578(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_579(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_580(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_581(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_582(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_583(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_584(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_585(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_586(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_587(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_588_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_588<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [118, 97, 108, 101, 114] => lookup_793_588_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_793_589(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_590_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_590<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_793_590_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_793_591_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_591<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_793_591_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_793_592(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_593(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_594(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_595(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_596(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_597(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_598(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_599(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_600(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_601(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_602(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_603(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_604(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_605(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_606_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_606<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_793_606_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_793_607(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_608(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_609(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_610_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_610<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [110, 101, 115] => lookup_793_610_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_793_611(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_612(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_613(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_614(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_615(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_616(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_617(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_618(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_619(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_620(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_621(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_622(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_623(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_624(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_625(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_626(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_627(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_628(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_629_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_629_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_629_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_629_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_629_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_629_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_629<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [98, 111] => lookup_793_629_0(acc),
            [98, 195, 184] => lookup_793_629_1(acc),
            [120, 110, 45, 45, 98, 45, 53, 103, 97] => lookup_793_629_2(acc),
            [120, 110, 45, 45, 104, 101, 114, 121, 45, 105, 114, 97] => lookup_793_629_3(acc),
            [104, 101, 114, 111, 121] => lookup_793_629_4(acc),
            [104, 101, 114, 195, 184, 121] => lookup_793_629_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_793_630(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_631(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_632(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_633(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_634(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_635(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_636(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_637(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_638(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_639(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_640(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_641(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_642(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_643(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_644(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_645(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_646(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_647(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_648(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_649(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_650(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_651(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_652(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_653(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_654(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_655(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_656(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_657(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_658(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_659(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_660(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_661(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_662(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_663(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_664(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_665(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_666(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_667(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_668(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_669(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_670(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_671(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_672(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_673(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_674(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_675(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_676(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_677(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_678(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_679(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_680(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_681(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_682(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_683(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_684(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_685(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_686(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_687(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_688_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_688<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 118, 108, 101, 114, 45, 113, 111, 97] => lookup_793_688_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_793_689(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_690(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_691(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_692(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_693(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_694(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_695(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_696(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_697(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_698(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_699(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_700(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_701(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_702(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_703(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_704(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_705(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_706(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_707(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_708(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_709(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_710(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_711(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_712(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_713(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_714(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_715(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_716(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_717(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_718(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_719(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_720(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_721(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_722(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_723(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_724(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_725(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_726(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_727(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_728(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_729(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_730(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_731(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_732_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_732<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [110, 101, 115] => lookup_793_732_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_793_733(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_734_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_734<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_793_734_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_793_735(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_736(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_737(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_738(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_739(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_740(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_741(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_742(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_743(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_744(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_745(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_746(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_747(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_748(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_749(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_750(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_751(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_752(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_753(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_754(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_755(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_756(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_757(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_758(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_759(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_760(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_761(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_762(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_763(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_764(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_765(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_766(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_767(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_768(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_769(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_770(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_771(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_772(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_773(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_774(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_775(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_776(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_777(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_778(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_779(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_780(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_781(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_782(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_783(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_784(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_785(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_786(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_787(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_788(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_789(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_790(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_791(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_792(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_793(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_794(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_795(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_796(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_797(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_798(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_799(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_800(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_801(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_802(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_803(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_804(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_805(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_806(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_807(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_808(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_809(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_810(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_811(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_812(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_813(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_814(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_815(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_816(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_817(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_818(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_819(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_820(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_821(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_822(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_823(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_824(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_825(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_826(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_827(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_828(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_829(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_830(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_831_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_831<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [111, 115] => lookup_793_831_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_793_832(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_833(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_834(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_835(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_836(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_837(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_838(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_839(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_840(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_841(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_842(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_843_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_843<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_793_843_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_793_844(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_845(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_846(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_847(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_848(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_849(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_850(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_851(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_852(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_853(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_854(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_855(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_856(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_857(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_858(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_859(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_860(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_861(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_862(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_863(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_864(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_865(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_866(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_867_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_867<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_793_867_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_793_868(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_869(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_870(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_871(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_872(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_873(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_874(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_875(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_876(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_877(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_878(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_879(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_880(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_881(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_882(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_883(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_884(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_885(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_886(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_887_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_887<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [118, 195, 165, 108, 101, 114] => lookup_793_887_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_793_888(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_889(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_890(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_891(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_892(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_893(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 102, 108, 111, 114, 45, 106, 114, 97] => lookup_793_0(acc),
            [120, 110, 45, 45, 115, 116, 114, 101, 45, 116, 111, 116, 101, 110, 45, 122, 99, 98] => {
                lookup_793_1(acc)
            }
            [120, 110, 45, 45, 115, 107, 105, 101, 114, 118, 45, 117, 116, 97] => lookup_793_2(acc),
            [196, 141, 195, 161, 104, 99, 101, 115, 117, 111, 108, 111] => lookup_793_3(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_793_4(acc),
            [97, 110, 100, 97, 115, 117, 111, 108, 111] => lookup_793_5(acc),
            [102, 121, 114, 101, 115, 100, 97, 108] => lookup_793_6(acc),
            [118, 195, 165, 103, 115, 195, 184, 121] => lookup_793_7(acc),
            [116, 111, 110, 115, 98, 101, 114, 103] => lookup_793_8(acc),
            [114, 121, 103, 103, 101] => lookup_793_9(acc),
            [105, 118, 101, 108, 97, 110, 100] => lookup_793_10(acc),
            [98, 97, 100, 97, 100, 100, 106, 97] => lookup_793_11(acc),
            [109, 97, 114, 107, 101, 114] => lookup_793_12(acc),
            [115, 110, 111, 97, 115, 97] => lookup_793_13(acc),
            [120, 110, 45, 45, 98, 105, 100, 114, 45, 53, 110, 97, 99] => lookup_793_14(acc),
            [120, 110, 45, 45, 101, 118, 101, 110, 105, 45, 48, 113, 97, 48, 49, 103, 97] => {
                lookup_793_15(acc)
            }
            [102, 97, 117, 115, 107, 101] => lookup_793_16(acc),
            [111, 108] => lookup_793_17(labels, acc),
            [120, 110, 45, 45, 114, 104, 111, 108, 116, 45, 109, 114, 97] => lookup_793_18(acc),
            [103, 97, 117, 115, 100, 97, 108] => lookup_793_19(acc),
            [104, 97, 116, 116, 102, 106, 101, 108, 108, 100, 97, 108] => lookup_793_20(acc),
            [120, 110, 45, 45, 104, 111, 98, 108, 45, 105, 114, 97] => lookup_793_21(acc),
            [104, 111, 108, 101] => lookup_793_22(acc),
            [107, 118, 97, 109] => lookup_793_23(acc),
            [98, 114, 121, 110, 101] => lookup_793_24(acc),
            [98, 114, 101, 109, 97, 110, 103, 101, 114] => lookup_793_25(acc),
            [120, 110, 45, 45, 100, 121, 114, 121, 45, 105, 114, 97] => lookup_793_26(acc),
            [98, 106, 97, 114, 107, 195, 184, 121] => lookup_793_27(acc),
            [102, 101, 100, 106, 101] => lookup_793_28(acc),
            [102, 108, 97, 107, 115, 116, 97, 100] => lookup_793_29(acc),
            [110, 101, 115, 115, 101, 98, 121] => lookup_793_30(acc),
            [112, 111, 114, 115, 97, 110, 103, 117] => lookup_793_31(acc),
            [104, 97, 109, 109, 101, 114, 102, 101, 115, 116] => lookup_793_32(acc),
            [111, 115, 116, 101, 114, 195, 184, 121] => lookup_793_33(acc),
            [97, 115, 107, 105, 109] => lookup_793_34(acc),
            [103, 106, 111, 118, 105, 107] => lookup_793_35(acc),
            [114, 195, 184, 121, 114, 118, 105, 107] => lookup_793_36(acc),
            [104, 106, 101, 108, 109, 101, 108, 97, 110, 100] => lookup_793_37(acc),
            [102, 117, 111, 105, 115, 107, 117] => lookup_793_38(acc),
            [108, 111, 116, 101, 110] => lookup_793_39(acc),
            [115, 107, 105, 112, 116, 118, 101, 116] => lookup_793_40(acc),
            [110, 195, 161, 118, 117, 111, 116, 110, 97] => lookup_793_41(acc),
            [120, 110, 45, 45, 115, 110, 115, 97, 45, 114, 111, 97] => lookup_793_42(acc),
            [103, 195, 161, 108, 115, 195, 161] => lookup_793_43(acc),
            [115, 111, 103, 110, 100, 97, 108] => lookup_793_44(acc),
            [115, 111, 107, 110, 100, 97, 108] => lookup_793_45(acc),
            [97, 107, 114, 101, 104, 97, 109, 110] => lookup_793_46(acc),
            [101, 105, 100, 115, 118, 111, 108, 108] => lookup_793_47(acc),
            [115, 116, 111, 114, 102, 106, 111, 114, 100] => lookup_793_48(acc),
            [115, 116, 114, 97, 110, 100] => lookup_793_49(acc),
            [97, 115, 107, 118, 111, 108, 108] => lookup_793_50(acc),
            [102, 106, 101, 108, 108] => lookup_793_51(acc),
            [103, 114, 97, 110] => lookup_793_52(acc),
            [100, 105, 101, 108, 100, 100, 97, 110, 117, 111, 114, 114, 105] => lookup_793_53(acc),
            [116, 111, 108, 103, 97] => lookup_793_54(acc),
            [116, 118, 101, 100, 101, 115, 116, 114, 97, 110, 100] => lookup_793_55(acc),
            [104, 97, 103, 101, 98, 111, 115, 116, 97, 100] => lookup_793_56(acc),
            [102, 104, 115] => lookup_793_57(acc),
            [120, 110, 45, 45, 98, 111, 100, 45, 50, 110, 97] => lookup_793_58(acc),
            [98, 114, 195, 184, 110, 110, 195, 184, 121] => lookup_793_59(acc),
            [97, 108, 97, 104, 101, 97, 100, 106, 117] => lookup_793_60(acc),
            [195, 161, 107, 197, 139, 111, 108, 117, 111, 107, 116, 97] => lookup_793_61(acc),
            [107, 114, 97, 103, 101, 114, 195, 184] => lookup_793_62(acc),
            [108, 101, 98, 101, 115, 98, 121] => lookup_793_63(acc),
            [109, 111, 115, 106, 195, 184, 101, 110] => lookup_793_64(acc),
            [120, 110, 45, 45, 98, 114, 110, 110, 121, 45, 119, 117, 97, 99] => lookup_793_65(acc),
            [102, 106, 97, 108, 101, 114] => lookup_793_66(acc),
            [118, 97] => lookup_793_67(labels, acc),
            [109, 101, 108, 97, 110, 100] => lookup_793_68(acc),
            [118, 101, 110, 110, 101, 115, 108, 97] => lookup_793_69(acc),
            [120, 110, 45, 45, 107, 108, 98, 117, 45, 119, 111, 97] => lookup_793_70(acc),
            [97, 117, 115, 116, 114, 104, 101, 105, 109] => lookup_793_71(acc),
            [109, 195, 184, 114, 101, 45, 111, 103, 45, 114, 111, 109, 115, 100, 97, 108] => {
                lookup_793_72(info, labels, acc)
            }
            [104, 97, 108, 100, 101, 110] => lookup_793_73(acc),
            [109, 111, 115, 115] => lookup_793_74(acc),
            [109, 111, 97, 114, 101, 107, 101] => lookup_793_75(acc),
            [120, 110, 45, 45, 104, 98, 109, 101, 114, 45, 120, 113, 97] => lookup_793_76(acc),
            [108, 101, 107, 97] => lookup_793_77(acc),
            [97, 97, 114, 98, 111, 114, 116, 101] => lookup_793_78(acc),
            [103, 114, 111, 110, 103] => lookup_793_79(acc),
            [120, 110, 45, 45, 114, 121, 114, 118, 105, 107, 45, 98, 121, 97] => lookup_793_80(acc),
            [118, 101, 103, 195, 165, 114, 115, 104, 101, 105] => lookup_793_81(acc),
            [116, 121, 110, 115, 101, 116] => lookup_793_82(acc),
            [115, 97, 110, 100, 111, 121] => lookup_793_83(acc),
            [120, 110, 45, 45, 118, 101, 103, 114, 115, 104, 101, 105, 45, 99, 48, 97] => {
                lookup_793_84(acc)
            }
            [115, 195, 184, 114, 45, 102, 114, 111, 110] => lookup_793_85(acc),
            [120, 110, 45, 45, 98, 101, 114, 108, 101, 118, 103, 45, 106, 120, 97] => {
                lookup_793_86(acc)
            }
            [107, 118, 105, 116, 115, 111, 121] => lookup_793_87(acc),
            [110, 111, 114, 100, 107, 97, 112, 112] => lookup_793_88(acc),
            [107, 118, 105, 116, 115, 195, 184, 121] => lookup_793_89(acc),
            [120, 110, 45, 45, 115, 110, 100, 114, 101, 45, 108, 97, 110, 100, 45, 48, 99, 98] => {
                lookup_793_90(acc)
            }
            [120, 110, 45, 45, 115, 108, 97, 116, 45, 53, 110, 97] => lookup_793_91(acc),
            [115, 195, 161, 108, 97, 116] => lookup_793_92(acc),
            [102, 111, 114, 100, 101] => lookup_793_93(acc),
            [103, 105, 115, 107, 101] => lookup_793_94(acc),
            [104, 118, 97, 108, 101, 114] => lookup_793_95(acc),
            [107, 114, 105, 115, 116, 105, 97, 110, 115, 117, 110, 100] => lookup_793_96(acc),
            [118, 101, 118, 101, 108, 115, 116, 97, 100] => lookup_793_97(acc),
            [102, 101, 116] => lookup_793_98(acc),
            [120, 110, 45, 45, 109, 117, 111, 115, 116, 45, 48, 113, 97] => lookup_793_99(acc),
            [111, 114, 115, 116, 97] => lookup_793_100(acc),
            [114, 195, 184, 114, 111, 115] => lookup_793_101(acc),
            [114, 195, 184, 121, 107, 101, 110] => lookup_793_102(acc),
            [116, 97, 110, 97, 110, 103, 101, 114] => lookup_793_103(acc),
            [120, 110, 45, 45, 110, 116, 116, 101, 114, 121, 45, 98, 121, 97, 101] => {
                lookup_793_104(acc)
            }
            [107, 108, 195, 166, 98, 117] => lookup_793_105(acc),
            [120, 110, 45, 45, 109, 111, 115, 106, 101, 110, 45, 101, 121, 97] => {
                lookup_793_106(acc)
            }
            [120, 110, 45, 45, 109, 114, 101, 45, 111, 103, 45, 114, 111, 109, 115, 100, 97, 108, 45, 113, 113, 98] => {
                lookup_793_107(info, labels, acc)
            }
            [120, 110, 45, 45, 108, 111, 97, 98, 116, 45, 48, 113, 97] => lookup_793_108(acc),
            [120, 110, 45, 45, 109, 108, 115, 101, 108, 118, 45, 105, 117, 97] => {
                lookup_793_109(acc)
            }
            [97, 117, 114, 115, 107, 111, 103, 45, 104, 111, 108, 97, 110, 100] => {
                lookup_793_110(acc)
            }
            [116, 114, 111, 109, 115, 111] => lookup_793_111(acc),
            [120, 110, 45, 45, 116, 114, 110, 97, 45, 119, 111, 97] => lookup_793_112(acc),
            [115, 195, 184, 114, 45, 111, 100, 97, 108] => lookup_793_113(acc),
            [102, 108, 97] => lookup_793_114(acc),
            [116, 109] => lookup_793_115(labels, acc),
            [120, 110, 45, 45, 115, 116, 106, 114, 100, 97, 108, 115, 104, 97, 108, 115, 101, 110, 45, 115, 113, 98] => {
                lookup_793_116(acc)
            }
            [102, 97, 114, 115, 117, 110, 100] => lookup_793_117(acc),
            [98, 101, 97, 114, 97, 108, 118, 97, 104, 107, 105] => lookup_793_118(acc),
            [106, 195, 184, 114, 112, 101, 108, 97, 110, 100] => lookup_793_119(acc),
            [107, 111, 109, 109, 117, 110, 101] => lookup_793_120(acc),
            [120, 110, 45, 45, 114, 108, 97, 110, 100, 45, 117, 117, 97] => lookup_793_121(acc),
            [104, 97, 114, 115, 116, 97, 100] => lookup_793_122(acc),
            [120, 110, 45, 45, 118, 114, 101, 45, 101, 105, 107, 101, 114, 45, 107, 56, 97] => {
                lookup_793_123(acc)
            }
            [101, 105, 103, 101, 114, 115, 117, 110, 100] => lookup_793_124(acc),
            [98, 195, 165, 116, 115, 102, 106, 111, 114, 100] => lookup_793_125(acc),
            [115, 97, 117, 100, 97] => lookup_793_126(acc),
            [97, 107, 110, 111, 108, 117, 111, 107, 116, 97] => lookup_793_127(acc),
            [109, 101, 108, 111, 121] => lookup_793_128(acc),
            [120, 110, 45, 45, 104, 112, 109, 105, 114, 45, 120, 113, 97] => lookup_793_129(acc),
            [114, 105, 110, 100, 97, 108] => lookup_793_130(acc),
            [106, 97, 110, 45, 109, 97, 121, 101, 110] => lookup_793_131(labels, acc),
            [104, 195, 161, 109, 109, 195, 161, 114, 102, 101, 97, 115, 116, 97] => {
                lookup_793_132(acc)
            }
            [118, 195, 166, 114, 195, 184, 121] => lookup_793_133(acc),
            [115, 105, 103, 100, 97, 108] => lookup_793_134(acc),
            [98, 101, 97, 114, 97, 108, 118, 195, 161, 104, 107, 105] => lookup_793_135(acc),
            [98, 114, 117, 109, 117, 110, 100, 100, 97, 108] => lookup_793_136(acc),
            [110, 111, 114, 100, 114, 101, 45, 108, 97, 110, 100] => lookup_793_137(acc),
            [120, 110, 45, 45, 109, 101, 114, 107, 101, 114, 45, 107, 117, 97] => {
                lookup_793_138(acc)
            }
            [115, 116, 111, 114, 45, 101, 108, 118, 100, 97, 108] => lookup_793_139(acc),
            [120, 110, 45, 45, 104, 103, 101, 98, 111, 115, 116, 97, 100, 45, 103, 51, 97] => {
                lookup_793_140(acc)
            }
            [108, 97, 118, 97, 110, 103, 101, 110] => lookup_793_141(acc),
            [97, 114, 101, 109, 97, 114, 107] => lookup_793_142(acc),
            [101, 108, 118, 101, 114, 117, 109] => lookup_793_143(acc),
            [120, 110, 45, 45, 115, 114, 117, 109, 45, 103, 114, 97] => lookup_793_144(acc),
            [118, 111, 115, 115, 101, 118, 97, 110, 103, 101, 110] => lookup_793_145(acc),
            [110, 101, 115, 110, 97] => lookup_793_146(acc),
            [102, 114, 111, 108, 97, 110, 100] => lookup_793_147(acc),
            [106, 101, 115, 115, 104, 101, 105, 109] => lookup_793_148(acc),
            [195, 161, 108, 97, 104, 101, 97, 100, 106, 117] => lookup_793_149(acc),
            [102, 108, 111, 114, 111] => lookup_793_150(acc),
            [105, 110, 100, 101, 114, 195, 184, 121] => lookup_793_151(acc),
            [109, 117, 111, 115, 97, 116] => lookup_793_152(acc),
            [111, 114, 108, 97, 110, 100] => lookup_793_153(acc),
            [115, 116, 97, 116, 104, 101, 108, 108, 101] => lookup_793_154(acc),
            [104, 101, 109, 110, 101] => lookup_793_155(acc),
            [115, 101, 108, 98, 117] => lookup_793_156(acc),
            [109, 97, 108, 97, 116, 118, 117, 111, 112, 109, 105] => lookup_793_157(acc),
            [115, 107, 97, 110, 108, 97, 110, 100] => lookup_793_158(acc),
            [120, 110, 45, 45, 102, 114, 121, 97, 45, 104, 114, 97] => lookup_793_159(acc),
            [100, 114, 111, 98, 97, 107] => lookup_793_160(acc),
            [109, 195, 161, 108, 97, 116, 118, 117, 111, 112, 109, 105] => lookup_793_161(acc),
            [120, 110, 45, 45, 105, 110, 100, 101, 114, 121, 45, 102, 121, 97] => {
                lookup_793_162(acc)
            }
            [115, 107, 111, 100, 106, 101] => lookup_793_163(acc),
            [115, 116, 111, 107, 107, 101] => lookup_793_164(acc),
            [104, 109] => lookup_793_165(labels, acc),
            [120, 110, 45, 45, 109, 111, 116, 45, 116, 108, 97] => lookup_793_166(acc),
            [120, 110, 45, 45, 107, 118, 105, 116, 115, 121, 45, 102, 121, 97] => {
                lookup_793_167(acc)
            }
            [116, 114, 111, 110, 100, 104, 101, 105, 109] => lookup_793_168(acc),
            [104, 111, 98, 195, 184, 108] => lookup_793_169(acc),
            [97, 108] => lookup_793_170(acc),
            [118, 97, 107, 115, 100, 97, 108] => lookup_793_171(acc),
            [109, 101, 108, 195, 184, 121] => lookup_793_172(acc),
            [108, 101, 115, 106, 97] => lookup_793_173(acc),
            [107, 114, 111, 100, 115, 104, 101, 114, 97, 100] => lookup_793_174(acc),
            [108, 111, 97, 98, 97, 116] => lookup_793_175(acc),
            [118, 97, 114, 100, 195, 184] => lookup_793_176(acc),
            [115, 109, 111, 108, 97] => lookup_793_177(acc),
            [118, 101, 103, 97] => lookup_793_178(acc),
            [115, 117, 108, 97] => lookup_793_179(acc),
            [103, 97, 109, 118, 105, 107] => lookup_793_180(acc),
            [109, 111, 45, 105, 45, 114, 97, 110, 97] => lookup_793_181(acc),
            [108, 111, 100, 105, 110, 103, 101, 110] => lookup_793_182(acc),
            [118, 111, 115, 115] => lookup_793_183(acc),
            [114, 195, 165, 104, 111, 108, 116] => lookup_793_184(acc),
            [98, 195, 161, 104, 99, 97, 118, 117, 111, 116, 110, 97] => lookup_793_185(acc),
            [120, 110, 45, 45, 108, 104, 112, 112, 105, 45, 120, 113, 97] => lookup_793_186(acc),
            [114, 97, 100, 101] => lookup_793_187(acc),
            [108, 111, 109] => lookup_793_188(acc),
            [98, 195, 161, 108, 195, 161, 116] => lookup_793_189(acc),
            [115, 110, 195, 165, 97, 115, 101] => lookup_793_190(acc),
            [118, 105, 107, 110, 97] => lookup_793_191(acc),
            [115, 111, 114, 116, 108, 97, 110, 100] => lookup_793_192(acc),
            [104, 121, 108, 108, 101, 115, 116, 97, 100] => lookup_793_193(acc),
            [103, 114, 105, 109, 115, 116, 97, 100] => lookup_793_194(acc),
            [110, 195, 165, 195, 165, 109, 101, 115, 106, 101, 118, 117, 101, 109, 105, 101] => {
                lookup_793_195(acc)
            }
            [106, 101, 118, 110, 97, 107, 101, 114] => lookup_793_196(acc),
            [120, 110, 45, 45, 111, 112, 112, 101, 103, 114, 100, 45, 105, 120, 97] => {
                lookup_793_197(acc)
            }
            [97, 115, 101, 114, 97, 108] => lookup_793_198(acc),
            [98, 101, 114, 103] => lookup_793_199(acc),
            [115, 116, 106, 111, 114, 100, 97, 108, 115, 104, 97, 108, 115, 101, 110] => {
                lookup_793_200(acc)
            }
            [103, 106, 195, 184, 118, 105, 107] => lookup_793_201(acc),
            [102, 101, 116, 115, 117, 110, 100] => lookup_793_202(acc),
            [107, 118, 105, 110, 101, 115, 100, 97, 108] => lookup_793_203(acc),
            [195, 165, 109, 111, 116] => lookup_793_204(acc),
            [103, 114, 97, 116, 97, 110, 103, 101, 110] => lookup_793_205(acc),
            [103, 195, 161, 105, 118, 117, 111, 116, 110, 97] => lookup_793_206(acc),
            [108, 101, 97, 197, 139, 103, 97, 118, 105, 105, 107, 97] => lookup_793_207(acc),
            [109, 101, 108, 100, 97, 108] => lookup_793_208(acc),
            [104, 97, 114, 97, 109] => lookup_793_209(acc),
            [107, 114, 111, 107, 115, 116, 97, 100, 101, 108, 118, 97] => lookup_793_210(acc),
            [114, 97, 105, 115, 97] => lookup_793_211(acc),
            [111, 114, 107, 100, 97, 108] => lookup_793_212(acc),
            [107, 114, 105, 115, 116, 105, 97, 110, 115, 97, 110, 100] => lookup_793_213(acc),
            [116, 105, 110, 103, 118, 111, 108, 108] => lookup_793_214(acc),
            [118, 101, 103, 97, 114, 115, 104, 101, 105] => lookup_793_215(acc),
            [120, 110, 45, 45, 111, 115, 116, 101, 114, 121, 45, 102, 121, 97] => {
                lookup_793_216(acc)
            }
            [97, 108, 116, 97] => lookup_793_217(acc),
            [120, 110, 45, 45, 98, 101, 97, 114, 97, 108, 118, 104, 107, 105, 45, 121, 52, 97] => {
                lookup_793_218(acc)
            }
            [98, 105, 101, 118, 97, 116] => lookup_793_219(acc),
            [115, 116, 106, 195, 184, 114, 100, 97, 108, 115, 104, 97, 108, 115, 101, 110] => {
                lookup_793_220(acc)
            }
            [102, 111, 114, 115, 97, 110, 100] => lookup_793_221(acc),
            [102, 108, 111, 114, 97] => lookup_793_222(acc),
            [107, 118, 97, 102, 106, 111, 114, 100] => lookup_793_223(acc),
            [98, 111, 109, 108, 111] => lookup_793_224(acc),
            [109, 97, 110, 100, 97, 108] => lookup_793_225(acc),
            [100, 114, 97, 110, 103, 101, 100, 97, 108] => lookup_793_226(acc),
            [100, 121, 114, 111, 121] => lookup_793_227(acc),
            [102, 111, 108, 107, 101, 98, 105, 98, 108] => lookup_793_228(acc),
            [101, 105, 100, 102, 106, 111, 114, 100] => lookup_793_229(acc),
            [109, 97, 115, 102, 106, 111, 114, 100, 101, 110] => lookup_793_230(acc),
            [115, 116, 111, 114, 100, 97, 108] => lookup_793_231(acc),
            [107, 97, 114, 97, 115, 106, 111, 104, 107, 97] => lookup_793_232(acc),
            [114, 105, 115, 195, 184, 114] => lookup_793_233(acc),
            [120, 110, 45, 45, 114, 115, 116, 97, 45, 102, 114, 97] => lookup_793_234(acc),
            [115, 111, 114, 45, 97, 117, 114, 100, 97, 108] => lookup_793_235(acc),
            [120, 110, 45, 45, 98, 114, 117, 109, 45, 118, 111, 97] => lookup_793_236(acc),
            [101, 105, 100, 115, 107, 111, 103] => lookup_793_237(acc),
            [108, 117, 110, 100] => lookup_793_238(acc),
            [109, 101, 114, 195, 165, 107, 101, 114] => lookup_793_239(acc),
            [120, 110, 45, 45, 107, 114, 100, 115, 104, 101, 114, 97, 100, 45, 109, 56, 97] => {
                lookup_793_240(acc)
            }
            [120, 110, 45, 45, 103, 105, 118, 117, 111, 116, 110, 97, 45, 56, 121, 97] => {
                lookup_793_241(acc)
            }
            [120, 110, 45, 45, 114, 100, 121, 45, 48, 110, 97, 98] => lookup_793_242(acc),
            [120, 110, 45, 45, 115, 110, 97, 115, 101, 45, 110, 114, 97] => lookup_793_243(acc),
            [98, 111, 100, 195, 184] => lookup_793_244(acc),
            [120, 110, 45, 45, 97, 118, 101, 114, 121, 45, 121, 117, 97] => lookup_793_245(acc),
            [109, 117, 111, 115, 195, 161, 116] => lookup_793_246(acc),
            [102, 108, 101, 115, 98, 101, 114, 103] => lookup_793_247(acc),
            [103, 117, 111, 118, 100, 97, 103, 101, 97, 105, 100, 110, 117] => lookup_793_248(acc),
            [195, 165, 108] => lookup_793_249(acc),
            [109, 97, 116, 116, 97, 45, 118, 97, 114, 106, 106, 97, 116] => lookup_793_250(acc),
            [107, 195, 165, 102, 106, 111, 114, 100] => lookup_793_251(acc),
            [98, 97, 114, 117, 109] => lookup_793_252(acc),
            [102, 108, 195, 165] => lookup_793_253(acc),
            [108, 97, 110, 103, 101, 118, 97, 103] => lookup_793_254(acc),
            [114, 101, 110, 110, 101, 115, 111, 121] => lookup_793_255(acc),
            [115, 117, 110, 110, 100, 97, 108] => lookup_793_256(acc),
            [104, 111, 121, 97, 110, 103, 101, 114] => lookup_793_257(acc),
            [102, 109] => lookup_793_258(labels, acc),
            [97, 110, 100, 195, 184, 121] => lookup_793_259(acc),
            [114, 105, 115, 115, 97] => lookup_793_260(acc),
            [115, 107, 101, 100, 115, 109, 111] => lookup_793_261(acc),
            [117, 110, 106, 97, 114, 103, 97] => lookup_793_262(acc),
            [120, 110, 45, 45, 104, 121, 108, 97, 110, 100, 101, 116, 45, 53, 52, 97] => {
                lookup_793_263(acc)
            }
            [110, 97, 118, 117, 111, 116, 110, 97] => lookup_793_264(acc),
            [109, 97, 108, 118, 105, 107] => lookup_793_265(acc),
            [195, 184, 114, 115, 107, 111, 103] => lookup_793_266(acc),
            [120, 110, 45, 45, 114, 114, 111, 115, 45, 103, 114, 97] => lookup_793_267(acc),
            [115, 107, 105, 101, 114, 118, 195, 161] => lookup_793_268(acc),
            [115, 107, 195, 161, 110, 105, 116] => lookup_793_269(acc),
            [120, 110, 45, 45, 115, 109, 110, 97, 45, 103, 114, 97] => lookup_793_270(acc),
            [108, 121, 110, 103, 100, 97, 108] => lookup_793_271(acc),
            [120, 110, 45, 45, 114, 101, 110, 110, 101, 115, 121, 45, 118, 49, 97] => {
                lookup_793_272(acc)
            }
            [115, 110, 105, 108, 108, 102, 106, 111, 114, 100] => lookup_793_273(acc),
            [105, 118, 103, 117] => lookup_793_274(acc),
            [109, 195, 161, 116, 116, 97, 45, 118, 195, 161, 114, 106, 106, 97, 116] => {
                lookup_793_275(acc)
            }
            [115, 111, 114, 114, 101, 105, 115, 97] => lookup_793_276(acc),
            [108, 195, 161, 104, 112, 112, 105] => lookup_793_277(acc),
            [120, 110, 45, 45, 106, 108, 115, 116, 101, 114, 45, 98, 121, 97] => {
                lookup_793_278(acc)
            }
            [109, 111, 100, 97, 108, 101, 110] => lookup_793_279(acc),
            [109, 101, 108, 104, 117, 115] => lookup_793_280(acc),
            [120, 110, 45, 45, 115, 109, 108, 97, 45, 104, 114, 97] => lookup_793_281(acc),
            [108, 101, 105, 114, 102, 106, 111, 114, 100] => lookup_793_282(acc),
            [117, 110, 106, 195, 161, 114, 103, 97] => lookup_793_283(acc),
            [101, 116, 110, 101] => lookup_793_284(acc),
            [110, 101, 100, 114, 101, 45, 101, 105, 107, 101, 114] => lookup_793_285(acc),
            [120, 110, 45, 45, 109, 108, 97, 116, 118, 117, 111, 112, 109, 105, 45, 115, 52, 97] => {
                lookup_793_286(acc)
            }
            [115, 112, 121, 100, 101, 98, 101, 114, 103] => lookup_793_287(acc),
            [116, 114, 111, 109, 115, 195, 184] => lookup_793_288(acc),
            [102, 111, 108, 108, 100, 97, 108] => lookup_793_289(acc),
            [104, 195, 184, 110, 101, 102, 111, 115, 115] => lookup_793_290(acc),
            [107, 195, 161, 114, 195, 161, 197, 161, 106, 111, 104, 107, 97] => lookup_793_291(acc),
            [108, 195, 184, 100, 105, 110, 103, 101, 110] => lookup_793_292(acc),
            [104, 101, 114, 97, 100] => lookup_793_293(acc),
            [115, 111, 110, 100, 114, 101, 45, 108, 97, 110, 100] => lookup_793_294(acc),
            [115, 116, 106, 111, 114, 100, 97, 108] => lookup_793_295(acc),
            [117, 108, 118, 105, 107] => lookup_793_296(acc),
            [115, 107, 97, 117, 110] => lookup_793_297(acc),
            [101, 110, 103, 101, 114, 100, 97, 108] => lookup_793_298(acc),
            [115, 110, 97, 97, 115, 101] => lookup_793_299(acc),
            [114, 195, 165, 100, 101] => lookup_793_300(acc),
            [115, 117, 110, 100] => lookup_793_301(acc),
            [110, 195, 184, 116, 116, 101, 114, 195, 184, 121] => lookup_793_302(acc),
            [100, 105, 118, 116, 116, 97, 115, 118, 117, 111, 116, 110, 97] => lookup_793_303(acc),
            [118, 101, 115, 116, 114, 101, 45, 115, 108, 105, 100, 114, 101] => lookup_793_304(acc),
            [97, 109, 111, 116] => lookup_793_305(acc),
            [98, 101, 105, 97, 114, 110] => lookup_793_306(acc),
            [97, 117, 114, 115, 107, 111, 103, 45, 104, 195, 184, 108, 97, 110, 100] => {
                lookup_793_307(acc)
            }
            [106, 111, 114, 112, 101, 108, 97, 110, 100] => lookup_793_308(acc),
            [107, 97, 114, 97, 115, 106, 111, 107] => lookup_793_309(acc),
            [120, 110, 45, 45, 107, 97, 114, 109, 121, 45, 121, 117, 97] => lookup_793_310(acc),
            [108, 195, 184, 114, 101, 110, 115, 107, 111, 103] => lookup_793_311(acc),
            [109, 195, 165, 108, 115, 101, 108, 118] => lookup_793_312(acc),
            [110, 111, 114, 100, 45, 97, 117, 114, 100, 97, 108] => lookup_793_313(acc),
            [116, 114, 97, 110, 97] => lookup_793_314(acc),
            [102, 195, 184, 114, 100, 101] => lookup_793_315(acc),
            [117, 108, 108, 101, 110, 115, 97, 107, 101, 114] => lookup_793_316(acc),
            [118, 111, 108, 100, 97] => lookup_793_317(acc),
            [115, 116, 101, 105, 110, 107, 106, 101, 114] => lookup_793_318(acc),
            [110, 101, 115, 111, 100, 100, 116, 97, 110, 103, 101, 110] => lookup_793_319(acc),
            [118, 97, 97, 112, 115, 116, 101] => lookup_793_320(acc),
            [103, 114, 97, 110, 101] => lookup_793_321(acc),
            [118, 97, 110, 103] => lookup_793_322(acc),
            [115, 112, 106, 101, 108, 107, 97, 118, 105, 107] => lookup_793_323(acc),
            [120, 110, 45, 45, 98, 106, 97, 114, 107, 121, 45, 102, 121, 97] => lookup_793_324(acc),
            [104, 97, 100, 115, 101, 108] => lookup_793_325(acc),
            [107, 118, 105, 116, 101, 115, 101, 105, 100] => lookup_793_326(acc),
            [110, 111, 116, 111, 100, 100, 101, 110] => lookup_793_327(acc),
            [115, 111, 103, 110, 101] => lookup_793_328(acc),
            [115, 110, 97, 115, 97] => lookup_793_329(acc),
            [120, 110, 45, 45, 115, 97, 110, 100, 121, 45, 121, 117, 97] => lookup_793_330(acc),
            [118, 195, 165, 103, 97, 110] => lookup_793_331(acc),
            [120, 110, 45, 45, 104, 111, 108, 116, 108, 101, 110, 45, 104, 120, 97] => {
                lookup_793_332(acc)
            }
            [108, 97, 97, 107, 101, 115, 118, 117, 101, 109, 105, 101] => lookup_793_333(acc),
            [115, 97, 110, 100, 101, 102, 106, 111, 114, 100] => lookup_793_334(acc),
            [120, 110, 45, 45, 107, 111, 108, 117, 111, 107, 116, 97, 45, 55, 121, 97, 53, 55, 104] => {
                lookup_793_335(acc)
            }
            [115, 116, 111, 114, 100] => lookup_793_336(acc),
            [109, 111, 115, 118, 105, 107] => lookup_793_337(acc),
            [120, 110, 45, 45, 114, 121, 107, 101, 110, 45, 118, 117, 97] => lookup_793_338(acc),
            [118, 101, 114, 100, 97, 108] => lookup_793_339(acc),
            [102, 105, 116, 106, 97, 114] => lookup_793_340(acc),
            [101, 116, 110, 101, 100, 97, 108] => lookup_793_341(acc),
            [115, 116, 97, 116] => lookup_793_342(acc),
            [110, 97, 114, 118, 105, 107] => lookup_793_343(acc),
            [108, 117, 114, 111, 121] => lookup_793_344(acc),
            [109, 111, 115, 107, 101, 110, 101, 115] => lookup_793_345(acc),
            [115, 111, 114, 102, 111, 108, 100] => lookup_793_346(acc),
            [120, 110, 45, 45, 103, 105, 108, 100, 101, 115, 107, 108, 45, 103, 48, 97] => {
                lookup_793_347(acc)
            }
            [98, 195, 166, 114, 117, 109] => lookup_793_348(acc),
            [120, 110, 45, 45, 116, 114, 97, 110, 121, 45, 121, 117, 97] => lookup_793_349(acc),
            [118, 97, 103, 97, 110] => lookup_793_350(acc),
            [116, 114, 111, 103, 115, 116, 97, 100] => lookup_793_351(acc),
            [120, 110, 45, 45, 115, 107, 106, 101, 114, 118, 121, 45, 118, 49, 97] => {
                lookup_793_352(acc)
            }
            [120, 110, 45, 45, 118, 103, 97, 110, 45, 113, 111, 97] => lookup_793_353(acc),
            [114, 101, 110, 100, 97, 108, 101, 110] => lookup_793_354(acc),
            [104, 97, 98, 109, 101, 114] => lookup_793_355(acc),
            [115, 111, 114, 45, 111, 100, 97, 108] => lookup_793_356(acc),
            [99, 97, 104, 99, 101, 115, 117, 111, 108, 111] => lookup_793_357(acc),
            [120, 110, 45, 45, 118, 103, 115, 121, 45, 113, 111, 97, 48, 106] => {
                lookup_793_358(acc)
            }
            [98, 101, 114, 103, 101, 110] => lookup_793_359(acc),
            [120, 110, 45, 45, 108, 101, 97, 103, 97, 118, 105, 105, 107, 97, 45, 53, 50, 98] => {
                lookup_793_360(acc)
            }
            [114, 111, 100, 111, 121] => lookup_793_361(acc),
            [120, 110, 45, 45, 102, 105, 110, 110, 121, 45, 121, 117, 97] => lookup_793_362(acc),
            [120, 110, 45, 45, 115, 45, 49, 102, 97] => lookup_793_363(acc),
            [108, 117, 115, 116, 101, 114] => lookup_793_364(acc),
            [116, 105, 110, 110] => lookup_793_365(acc),
            [115, 97, 110, 100, 110, 101, 115, 115, 106, 111, 101, 110] => lookup_793_366(acc),
            [97, 104] => lookup_793_367(labels, acc),
            [97, 114, 110, 97] => lookup_793_368(acc),
            [120, 110, 45, 45, 97, 115, 107, 121, 45, 105, 114, 97] => lookup_793_369(acc),
            [104, 195, 184, 121, 97, 110, 103, 101, 114] => lookup_793_370(acc),
            [97, 97] => lookup_793_371(labels, acc),
            [109, 111, 108, 100, 101] => lookup_793_372(acc),
            [111, 115, 101, 110] => lookup_793_373(acc),
            [114, 105, 110, 103, 101, 114, 105, 107, 101] => lookup_793_374(acc),
            [97, 118, 101, 114, 195, 184, 121] => lookup_793_375(acc),
            [114, 105, 110, 103, 115, 97, 107, 101, 114] => lookup_793_376(acc),
            [115, 195, 184, 103, 110, 101] => lookup_793_377(acc),
            [114, 97, 110, 100, 97, 98, 101, 114, 103] => lookup_793_378(acc),
            [102, 114, 111, 115, 116, 97] => lookup_793_379(acc),
            [120, 110, 45, 45, 108, 100, 105, 110, 103, 101, 110, 45, 113, 49, 97] => {
                lookup_793_380(acc)
            }
            [120, 110, 45, 45, 116, 106, 109, 101, 45, 104, 114, 97] => lookup_793_381(acc),
            [97, 115, 107, 101, 114] => lookup_793_382(acc),
            [120, 110, 45, 45, 108, 103, 114, 100, 45, 112, 111, 97, 99] => lookup_793_383(acc),
            [98, 114, 195, 184, 110, 110, 195, 184, 121, 115, 117, 110, 100] => lookup_793_384(acc),
            [120, 110, 45, 45, 115, 107, 110, 105, 116, 45, 121, 113, 97] => lookup_793_385(acc),
            [118, 101, 102, 115, 110] => lookup_793_386(acc),
            [102, 108, 101, 107, 107, 101, 102, 106, 111, 114, 100] => lookup_793_387(acc),
            [104, 97, 109, 109, 97, 114, 102, 101, 97, 115, 116, 97] => lookup_793_388(acc),
            [102, 108, 97, 116, 97, 110, 103, 101, 114] => lookup_793_389(acc),
            [111, 118, 114, 101, 45, 101, 105, 107, 101, 114] => lookup_793_390(acc),
            [115, 111, 110, 103, 100, 97, 108, 101, 110] => lookup_793_391(acc),
            [104, 97] => lookup_793_392(acc),
            [120, 110, 45, 45, 98, 104, 99, 97, 118, 117, 111, 116, 110, 97, 45, 115, 52, 97] => {
                lookup_793_393(acc)
            }
            [111, 121, 103, 97, 114, 100, 101, 110] => lookup_793_394(acc),
            [103, 97, 117, 108, 97, 114] => lookup_793_395(acc),
            [109, 97, 115, 111, 121] => lookup_793_396(acc),
            [120, 110, 45, 45, 116, 114, 103, 115, 116, 97, 100, 45, 114, 49, 97] => {
                lookup_793_397(acc)
            }
            [115, 116, 97, 118, 101, 114, 110] => lookup_793_398(acc),
            [105, 98, 101, 115, 116, 97, 100] => lookup_793_399(acc),
            [107, 111, 110, 103, 115, 98, 101, 114, 103] => lookup_793_400(acc),
            [120, 110, 45, 45, 106, 114, 112, 101, 108, 97, 110, 100, 45, 53, 52, 97] => {
                lookup_793_401(acc)
            }
            [107, 114, 97, 97, 110, 103, 104, 107, 101] => lookup_793_402(acc),
            [104, 111, 108, 116, 195, 165, 108, 101, 110] => lookup_793_403(acc),
            [107, 97, 114, 109, 111, 121] => lookup_793_404(acc),
            [120, 110, 45, 45, 108, 105, 110, 100, 115, 45, 112, 114, 97] => lookup_793_405(acc),
            [109, 195, 165, 115, 195, 184, 121] => lookup_793_406(acc),
            [115, 111, 109, 110, 97] => lookup_793_407(acc),
            [110, 101, 115, 111, 100, 100, 101, 110] => lookup_793_408(acc),
            [111, 121, 101, 114] => lookup_793_409(acc),
            [120, 110, 45, 45, 115, 114, 45, 102, 114, 111, 110, 45, 113, 49, 97] => {
                lookup_793_410(acc)
            }
            [117, 116, 115, 105, 114, 97] => lookup_793_411(acc),
            [118, 97, 114, 100, 111] => lookup_793_412(acc),
            [118, 101, 115, 116, 118, 195, 165, 103, 195, 184, 121] => lookup_793_413(acc),
            [120, 110, 45, 45, 114, 100, 97, 108, 45, 112, 111, 97] => lookup_793_414(acc),
            [101, 105, 100] => lookup_793_415(acc),
            [97, 109, 108, 105] => lookup_793_416(acc),
            [104, 195, 165] => lookup_793_417(acc),
            [115, 105, 114, 100, 97, 108] => lookup_793_418(acc),
            [118, 105, 110, 100, 97, 102, 106, 111, 114, 100] => lookup_793_419(acc),
            [101, 110, 101, 98, 97, 107, 107] => lookup_793_420(acc),
            [103, 97, 105, 118, 117, 111, 116, 110, 97] => lookup_793_421(acc),
            [120, 110, 45, 45, 115, 107, 110, 108, 97, 110, 100, 45, 102, 120, 97] => {
                lookup_793_422(acc)
            }
            [118, 97, 100, 115, 111] => lookup_793_423(acc),
            [115, 116] => lookup_793_424(labels, acc),
            [110, 108] => lookup_793_425(labels, acc),
            [102, 114, 101, 100, 114, 105, 107, 115, 116, 97, 100] => lookup_793_426(acc),
            [106, 111, 110, 100, 97, 108] => lookup_793_427(acc),
            [104, 111, 110, 101, 102, 111, 115, 115] => lookup_793_428(acc),
            [111, 109, 97, 115, 118, 117, 111, 116, 110, 97] => lookup_793_429(acc),
            [115, 111, 114, 45, 102, 114, 111, 110] => lookup_793_430(acc),
            [109, 97, 114, 110, 97, 114, 100, 97, 108] => lookup_793_431(acc),
            [118, 195, 161, 114, 103, 103, 195, 161, 116] => lookup_793_432(acc),
            [195, 184, 121, 115, 116, 114, 101, 45, 115, 108, 105, 100, 114, 101] => {
                lookup_793_433(acc)
            }
            [108, 105, 101, 114] => lookup_793_434(acc),
            [120, 110, 45, 45, 98, 108, 116, 45, 101, 108, 97, 98] => lookup_793_435(acc),
            [195, 184, 115, 116, 114, 101, 45, 116, 111, 116, 101, 110] => lookup_793_436(acc),
            [115, 97, 109, 110, 97, 110, 103, 101, 114] => lookup_793_437(acc),
            [115, 101, 108, 106, 101] => lookup_793_438(acc),
            [114, 108] => lookup_793_439(labels, acc),
            [115, 107, 101, 100, 115, 109, 111, 107, 111, 114, 115, 101, 116] => {
                lookup_793_440(acc)
            }
            [102, 121, 108, 107, 101, 115, 98, 105, 98, 108] => lookup_793_441(acc),
            [110, 111, 116, 116, 101, 114, 111, 121] => lookup_793_442(acc),
            [110, 195, 166, 114, 195, 184, 121] => lookup_793_443(acc),
            [114, 111, 115, 116] => lookup_793_444(acc),
            [120, 110, 45, 45, 115, 107, 106, 107, 45, 115, 111, 97] => lookup_793_445(acc),
            [109, 105, 100, 115, 117, 110, 100] => lookup_793_446(acc),
            [115, 117, 114, 110, 97, 100, 97, 108] => lookup_793_447(acc),
            [102, 105, 110, 110, 195, 184, 121] => lookup_793_448(acc),
            [110, 105, 115, 115, 101, 100, 97, 108] => lookup_793_449(acc),
            [116, 121, 115, 118, 195, 166, 114] => lookup_793_450(acc),
            [120, 110, 45, 45, 114, 115, 107, 111, 103, 45, 117, 117, 97] => lookup_793_451(acc),
            [110, 97, 97, 109, 101, 115, 106, 101, 118, 117, 101, 109, 105, 101] => {
                lookup_793_452(acc)
            }
            [97, 115, 107, 195, 184, 121] => lookup_793_453(acc),
            [111, 102] => lookup_793_454(labels, acc),
            [120, 110, 45, 45, 103, 103, 97, 118, 105, 105, 107, 97, 45, 56, 121, 97, 52, 55, 104] => {
                lookup_793_455(acc)
            }
            [98, 101, 97, 114, 100, 117] => lookup_793_456(acc),
            [110, 97, 109, 100, 97, 108, 115, 101, 105, 100] => lookup_793_457(acc),
            [195, 184, 114, 115, 116, 97] => lookup_793_458(acc),
            [114, 97, 117, 109, 97] => lookup_793_459(acc),
            [120, 110, 45, 45, 109, 106, 110, 100, 97, 108, 101, 110, 45, 54, 52, 97] => {
                lookup_793_460(acc)
            }
            [195, 165, 108, 101, 115, 117, 110, 100] => lookup_793_461(acc),
            [98, 97, 104, 99, 97, 118, 117, 111, 116, 110, 97] => lookup_793_462(acc),
            [120, 110, 45, 45, 115, 114, 45, 118, 97, 114, 97, 110, 103, 101, 114, 45, 103, 103, 98] => {
                lookup_793_463(acc)
            }
            [109, 111, 114, 101, 45, 111, 103, 45, 114, 111, 109, 115, 100, 97, 108] => {
                lookup_793_464(info, labels, acc)
            }
            [111, 114, 107, 97, 110, 103, 101, 114] => lookup_793_465(acc),
            [105, 100, 114, 101, 116, 116] => lookup_793_466(acc),
            [97, 118, 101, 114, 111, 121] => lookup_793_467(acc),
            [103, 105, 108, 100, 101, 115, 107, 97, 108] => lookup_793_468(acc),
            [101, 105, 100, 115, 98, 101, 114, 103] => lookup_793_469(acc),
            [120, 110, 45, 45, 110, 118, 117, 111, 116, 110, 97, 45, 104, 119, 97] => {
                lookup_793_470(acc)
            }
            [110, 111, 114, 100, 114, 101, 105, 115, 97] => lookup_793_471(acc),
            [114, 97, 100, 111, 121] => lookup_793_472(acc),
            [116, 97, 110, 97] => lookup_793_473(acc),
            [114, 111, 121, 114, 118, 105, 107] => lookup_793_474(acc),
            [116, 114, 97, 110, 195, 184, 121] => lookup_793_475(acc),
            [195, 165, 108, 103, 195, 165, 114, 100] => lookup_793_476(acc),
            [116, 114, 121, 115, 105, 108] => lookup_793_477(acc),
            [103, 114, 97, 110, 118, 105, 110] => lookup_793_478(acc),
            [104, 111, 107, 107, 115, 117, 110, 100] => lookup_793_479(acc),
            [107, 97, 114, 109, 195, 184, 121] => lookup_793_480(acc),
            [108, 101, 118, 97, 110, 103, 101, 114] => lookup_793_481(acc),
            [120, 110, 45, 45, 121, 115, 116, 114, 101, 45, 115, 108, 105, 100, 114, 101, 45, 117, 106, 98] => {
                lookup_793_482(acc)
            }
            [103, 105, 108, 100, 101, 115, 107, 195, 165, 108] => lookup_793_483(acc),
            [107, 118, 195, 166, 110, 97, 110, 103, 101, 110] => lookup_793_484(acc),
            [101, 118, 106, 101, 45, 111, 103, 45, 104, 111, 114, 110, 110, 101, 115] => {
                lookup_793_485(acc)
            }
            [116, 101, 108, 101, 109, 97, 114, 107] => lookup_793_486(info, labels, acc),
            [104, 195, 161, 112, 109, 105, 114] => lookup_793_487(acc),
            [97, 108, 103, 97, 114, 100] => lookup_793_488(acc),
            [104, 108] => lookup_793_489(labels, acc),
            [102, 114, 195, 166, 110, 97] => lookup_793_490(acc),
            [120, 110, 45, 45, 97, 117, 114, 115, 107, 111, 103, 45, 104, 108, 97, 110, 100, 45, 106, 110, 98] => {
                lookup_793_491(acc)
            }
            [104, 105, 116, 114, 97] => lookup_793_492(acc),
            [108, 105, 110, 100, 97, 115] => lookup_793_493(acc),
            [109, 97, 108, 115, 101, 108, 118] => lookup_793_494(acc),
            [110, 97, 110, 110, 101, 115, 116, 97, 100] => lookup_793_495(acc),
            [120, 110, 45, 45, 107, 118, 110, 97, 110, 103, 101, 110, 45, 107, 48, 97] => {
                lookup_793_496(acc)
            }
            [111, 107, 115, 110, 101, 115] => lookup_793_497(acc),
            [98, 114, 111, 110, 110, 111, 121] => lookup_793_498(acc),
            [195, 161, 108, 116, 195, 161] => lookup_793_499(acc),
            [108, 101, 105, 114, 118, 105, 107] => lookup_793_500(acc),
            [97, 115, 107, 111, 121] => lookup_793_501(acc),
            [195, 184, 107, 115, 110, 101, 115] => lookup_793_502(acc),
            [104, 101, 100, 109, 97, 114, 107] => lookup_793_503(info, labels, acc),
            [114, 101, 110, 110, 101, 115, 195, 184, 121] => lookup_793_504(acc),
            [114, 105, 115, 111, 114] => lookup_793_505(acc),
            [115, 107, 106, 195, 165, 107] => lookup_793_506(acc),
            [115, 195, 184, 110, 100, 114, 101, 45, 108, 97, 110, 100] => lookup_793_507(acc),
            [115, 116, 97, 110, 103, 101] => lookup_793_508(acc),
            [98, 117, 100, 101, 106, 106, 117] => lookup_793_509(acc),
            [114, 97, 104, 107, 107, 101, 114, 97, 118, 106, 117] => lookup_793_510(acc),
            [100, 97, 118, 118, 101, 110, 106, 195, 161, 114, 103, 97] => lookup_793_511(acc),
            [114, 97, 107, 107, 101, 115, 116, 97, 100] => lookup_793_512(acc),
            [120, 110, 45, 45, 115, 114, 102, 111, 108, 100, 45, 98, 121, 97] => {
                lookup_793_513(acc)
            }
            [116, 114, 195, 166, 110, 97] => lookup_793_514(acc),
            [115, 111, 114, 117, 109] => lookup_793_515(acc),
            [116, 106, 101, 108, 100, 115, 117, 110, 100] => lookup_793_516(acc),
            [116, 121, 115, 110, 101, 115] => lookup_793_517(acc),
            [118, 102] => lookup_793_518(labels, acc),
            [120, 110, 45, 45, 104, 99, 101, 115, 117, 111, 108, 111, 45, 55, 121, 97, 51, 53, 98] => {
                lookup_793_519(acc)
            }
            [109, 106, 195, 184, 110, 100, 97, 108, 101, 110] => lookup_793_520(acc),
            [114, 195, 161, 105, 115, 97] => lookup_793_521(acc),
            [118, 101, 115, 116, 102, 111, 108, 100] => lookup_793_522(info, labels, acc),
            [118, 101, 115, 116, 118, 97, 103, 111, 121] => lookup_793_523(acc),
            [195, 165, 107, 114, 101, 104, 97, 109, 110] => lookup_793_524(acc),
            [102, 114, 97, 110, 97] => lookup_793_525(acc),
            [116, 121, 115, 118, 97, 114] => lookup_793_526(acc),
            [99, 111] => lookup_793_527(acc),
            [115, 97, 110, 100, 110, 101, 115, 115, 106, 195, 184, 101, 110] => lookup_793_528(acc),
            [100, 121, 114, 195, 184, 121] => lookup_793_529(acc),
            [120, 110, 45, 45, 108, 97, 110, 103, 101, 118, 103, 45, 106, 120, 97] => {
                lookup_793_530(acc)
            }
            [104, 111, 108, 109, 101, 115, 116, 114, 97, 110, 100] => lookup_793_531(acc),
            [120, 110, 45, 45, 108, 117, 114, 121, 45, 105, 114, 97] => lookup_793_532(acc),
            [97, 108, 118, 100, 97, 108] => lookup_793_533(acc),
            [120, 110, 45, 45, 114, 105, 115, 97, 45, 53, 110, 97] => lookup_793_534(acc),
            [120, 110, 45, 45, 114, 100, 101, 45, 117, 108, 97] => lookup_793_535(acc),
            [115, 118, 101, 108, 118, 105, 107] => lookup_793_536(acc),
            [102, 114, 195, 184, 121, 97] => lookup_793_537(acc),
            [116, 111, 107, 107, 101] => lookup_793_538(acc),
            [98, 101, 114, 108, 101, 118, 97, 103] => lookup_793_539(acc),
            [104, 101, 109, 115, 101, 100, 97, 108] => lookup_793_540(acc),
            [120, 110, 45, 45, 98, 105, 101, 118, 116, 45, 48, 113, 97] => lookup_793_541(acc),
            [112, 111, 114, 115, 97, 110, 103, 101, 114] => lookup_793_542(acc),
            [115, 97, 108, 116, 100, 97, 108] => lookup_793_543(acc),
            [116, 114, 195, 184, 103, 115, 116, 97, 100] => lookup_793_544(acc),
            [100, 97, 118, 118, 101, 115, 105, 105, 100, 97] => lookup_793_545(acc),
            [118, 97, 110, 121, 108, 118, 101, 110] => lookup_793_546(acc),
            [108, 97, 110, 103, 101, 118, 195, 165, 103] => lookup_793_547(acc),
            [101, 118, 101, 110, 195, 161, 197, 161, 197, 161, 105] => lookup_793_548(acc),
            [120, 110, 45, 45, 114, 109, 115, 107, 111, 103, 45, 98, 121, 97] => {
                lookup_793_549(acc)
            }
            [118, 97, 103, 115, 111, 121] => lookup_793_550(acc),
            [115, 97, 110, 100, 195, 184, 121] => lookup_793_551(acc),
            [195, 184, 121, 103, 97, 114, 100, 101, 110] => lookup_793_552(acc),
            [103, 111, 108] => lookup_793_553(acc),
            [107, 97, 102, 106, 111, 114, 100] => lookup_793_554(acc),
            [110, 97, 114, 111, 121] => lookup_793_555(acc),
            [109, 105, 100, 116, 114, 101, 45, 103, 97, 117, 108, 100, 97, 108] => {
                lookup_793_556(acc)
            }
            [116, 114, 97, 110, 98, 121] => lookup_793_557(acc),
            [195, 165, 114, 100, 97, 108] => lookup_793_558(acc),
            [103, 106, 101, 114, 115, 116, 97, 100] => lookup_793_559(acc),
            [120, 110, 45, 45, 114, 115, 116, 45, 48, 110, 97] => lookup_793_560(acc),
            [116, 114, 111, 109, 115, 97] => lookup_793_561(acc),
            [118, 101, 115, 116, 110, 101, 115] => lookup_793_562(acc),
            [120, 110, 45, 45, 118, 101, 115, 116, 118, 103, 121, 45, 105, 120, 97, 54, 111] => {
                lookup_793_563(acc)
            }
            [120, 110, 45, 45, 115, 108, 116, 45, 101, 108, 97, 98] => lookup_793_564(acc),
            [115, 102] => lookup_793_565(labels, acc),
            [107, 105, 114, 107, 101, 110, 101, 115] => lookup_793_566(acc),
            [107, 111, 112, 101, 114, 118, 105, 107] => lookup_793_567(acc),
            [111, 115, 111, 121, 114, 111] => lookup_793_568(acc),
            [97, 117, 114, 101] => lookup_793_569(acc),
            [105, 110, 100, 101, 114, 111, 121] => lookup_793_570(acc),
            [109, 101, 114, 97, 107, 101, 114] => lookup_793_571(acc),
            [109, 111, 195, 165, 114, 101, 107, 101] => lookup_793_572(acc),
            [112, 114, 105, 118] => lookup_793_573(acc),
            [97, 114, 101, 110, 100, 97, 108] => lookup_793_574(acc),
            [120, 110, 45, 45, 115, 101, 114, 97, 108, 45, 108, 114, 97] => lookup_793_575(acc),
            [115, 97, 110, 100, 110, 101, 115] => lookup_793_576(acc),
            [115, 107, 105, 101, 114, 118, 97] => lookup_793_577(acc),
            [100, 101, 112] => lookup_793_578(acc),
            [115, 101, 108, 106, 111, 114, 100] => lookup_793_579(acc),
            [107, 108, 97, 98, 117] => lookup_793_580(acc),
            [115, 107, 106, 101, 114, 118, 111, 121] => lookup_793_581(acc),
            [115, 107, 106, 101, 114, 118, 195, 184, 121] => lookup_793_582(acc),
            [120, 110, 45, 45, 115, 116, 106, 114, 100, 97, 108, 45, 115, 49, 97] => {
                lookup_793_583(acc)
            }
            [111, 115, 195, 184, 121, 114, 111] => lookup_793_584(acc),
            [120, 110, 45, 45, 117, 110, 106, 114, 103, 97, 45, 114, 116, 97] => {
                lookup_793_585(acc)
            }
            [115, 195, 184, 114, 45, 118, 97, 114, 97, 110, 103, 101, 114] => lookup_793_586(acc),
            [104, 111, 114, 110, 105, 110, 100, 97, 108] => lookup_793_587(acc),
            [111, 115, 116, 102, 111, 108, 100] => lookup_793_588(info, labels, acc),
            [104, 117, 114, 100, 97, 108] => lookup_793_589(acc),
            [98, 117] => lookup_793_590(labels, acc),
            [115, 118, 97, 108, 98, 97, 114, 100] => lookup_793_591(labels, acc),
            [98, 97, 108, 101, 115, 116, 114, 97, 110, 100] => lookup_793_592(acc),
            [97, 117, 114, 108, 97, 110, 100] => lookup_793_593(acc),
            [111, 115, 116, 101, 114, 111, 121] => lookup_793_594(acc),
            [111, 118, 101, 114, 104, 97, 108, 108, 97] => lookup_793_595(acc),
            [109, 105, 108] => lookup_793_596(acc),
            [115, 97, 114, 112, 115, 98, 111, 114, 103] => lookup_793_597(acc),
            [98, 195, 161, 104, 99, 99, 97, 118, 117, 111, 116, 110, 97] => lookup_793_598(acc),
            [120, 110, 45, 45, 100, 110, 110, 97, 45, 103, 114, 97] => lookup_793_599(acc),
            [120, 110, 45, 45, 107, 114, 106, 111, 104, 107, 97, 45, 104, 119, 97, 98, 52, 57, 106] => {
                lookup_793_600(acc)
            }
            [97, 117, 100, 110, 101, 100, 97, 108, 110] => lookup_793_601(acc),
            [115, 121, 107, 107, 121, 108, 118, 101, 110] => lookup_793_602(acc),
            [102, 108, 111, 114, 195, 184] => lookup_793_603(acc),
            [120, 110, 45, 45, 115, 110, 101, 115, 45, 112, 111, 97] => lookup_793_604(acc),
            [120, 110, 45, 45, 108, 114, 101, 110, 115, 107, 111, 103, 45, 53, 52, 97] => {
                lookup_793_605(acc)
            }
            [109, 114] => lookup_793_606(labels, acc),
            [114, 195, 184, 109, 115, 107, 111, 103] => lookup_793_607(acc),
            [110, 111, 114, 101, 45, 111, 103, 45, 117, 118, 100, 97, 108] => lookup_793_608(acc),
            [102, 111, 115, 110, 101, 115] => lookup_793_609(acc),
            [98, 117, 115, 107, 101, 114, 117, 100] => lookup_793_610(info, labels, acc),
            [114, 111, 109, 115, 97] => lookup_793_611(acc),
            [116, 121, 100, 97, 108] => lookup_793_612(acc),
            [114, 111, 121, 107, 101, 110] => lookup_793_613(acc),
            [108, 101, 110, 118, 105, 107] => lookup_793_614(acc),
            [116, 195, 184, 110, 115, 98, 101, 114, 103] => lookup_793_615(acc),
            [120, 110, 45, 45, 115, 97, 110, 100, 110, 101, 115, 115, 106, 101, 110, 45, 111, 103, 98] => {
                lookup_793_616(acc)
            }
            [107, 111, 110, 103, 115, 118, 105, 110, 103, 101, 114] => lookup_793_617(acc),
            [120, 110, 45, 45, 108, 45, 49, 102, 97] => lookup_793_618(acc),
            [98, 105, 114, 107, 101, 110, 101, 115] => lookup_793_619(acc),
            [97, 110, 100, 101, 98, 117] => lookup_793_620(acc),
            [120, 110, 45, 45, 104, 121, 97, 110, 103, 101, 114, 45, 113, 49, 97] => {
                lookup_793_621(acc)
            }
            [110, 97, 109, 115, 111, 115] => lookup_793_622(acc),
            [114, 195, 166, 108, 105, 110, 103, 101, 110] => lookup_793_623(acc),
            [98, 195, 184, 109, 108, 111] => lookup_793_624(acc),
            [102, 114, 111, 121, 97] => lookup_793_625(acc),
            [120, 110, 45, 45, 114, 97, 100, 121, 45, 105, 114, 97] => lookup_793_626(acc),
            [97, 108, 101, 115, 117, 110, 100] => lookup_793_627(acc),
            [98, 106, 117, 103, 110] => lookup_793_628(acc),
            [110, 111, 114, 100, 108, 97, 110, 100] => lookup_793_629(info, labels, acc),
            [115, 109, 195, 184, 108, 97] => lookup_793_630(acc),
            [115, 116, 114, 97, 110, 100, 97] => lookup_793_631(acc),
            [120, 110, 45, 45, 110, 109, 101, 115, 106, 101, 118, 117, 101, 109, 105, 101, 45, 116, 99, 98, 97] => {
                lookup_793_632(acc)
            }
            [120, 110, 45, 45, 103, 106, 118, 105, 107, 45, 119, 117, 97] => lookup_793_633(acc),
            [120, 110, 45, 45, 108, 116, 101, 110, 45, 103, 114, 97] => lookup_793_634(acc),
            [195, 184, 121, 101, 114] => lookup_793_635(acc),
            [111, 121, 115, 116, 114, 101, 45, 115, 108, 105, 100, 114, 101] => lookup_793_636(acc),
            [97, 117, 115, 116, 101, 118, 111, 108, 108] => lookup_793_637(acc),
            [98, 97, 108, 108, 97, 110, 103, 101, 110] => lookup_793_638(acc),
            [104, 97, 109, 97, 114] => lookup_793_639(acc),
            [108, 111, 114, 101, 110, 115, 107, 111, 103] => lookup_793_640(acc),
            [115, 195, 184, 109, 110, 97] => lookup_793_641(acc),
            [115, 195, 184, 114, 45, 97, 117, 114, 100, 97, 108] => lookup_793_642(acc),
            [115, 107, 105] => lookup_793_643(acc),
            [97, 110, 100, 111, 121] => lookup_793_644(acc),
            [104, 111, 102] => lookup_793_645(acc),
            [120, 110, 45, 45, 109, 116, 116, 97, 45, 118, 114, 106, 106, 97, 116, 45, 107, 55, 97, 102] => {
                lookup_793_646(acc)
            }
            [120, 110, 45, 45, 114, 104, 107, 107, 101, 114, 118, 106, 117, 45, 48, 49, 97, 102] => {
                lookup_793_647(acc)
            }
            [103, 97, 108, 115, 97] => lookup_793_648(acc),
            [120, 110, 45, 45, 115, 114, 114, 101, 105, 115, 97, 45, 113, 49, 97] => {
                lookup_793_649(acc)
            }
            [116, 114, 111, 97, 110, 100, 105, 110] => lookup_793_650(acc),
            [118, 111, 97, 103, 97, 116] => lookup_793_651(acc),
            [103, 106, 101, 115, 100, 97, 108] => lookup_793_652(acc),
            [102, 114, 101, 105] => lookup_793_653(acc),
            [108, 117, 110, 110, 101, 114] => lookup_793_654(acc),
            [110, 105, 116, 116, 101, 100, 97, 108] => lookup_793_655(acc),
            [120, 110, 45, 45, 100, 97, 118, 118, 101, 110, 106, 114, 103, 97, 45, 121, 52, 97] => {
                lookup_793_656(acc)
            }
            [114, 105, 110, 103, 101, 98, 117] => lookup_793_657(acc),
            [110, 97, 117, 115, 116, 100, 97, 108] => lookup_793_658(acc),
            [115, 105, 108, 106, 97, 110] => lookup_793_659(acc),
            [115, 97, 108, 97, 116] => lookup_793_660(acc),
            [118, 97, 108, 108, 101] => lookup_793_661(acc),
            [97, 115, 110, 101, 115] => lookup_793_662(acc),
            [108, 105, 108, 108, 101, 104, 97, 109, 109, 101, 114] => lookup_793_663(acc),
            [97, 101, 106, 114, 105, 101] => lookup_793_664(acc),
            [109, 111, 100, 117, 109] => lookup_793_665(acc),
            [120, 110, 45, 45, 100, 114, 98, 97, 107, 45, 119, 117, 97] => lookup_793_666(acc),
            [115, 116, 106, 195, 184, 114, 100, 97, 108] => lookup_793_667(acc),
            [120, 110, 45, 45, 98, 106, 100, 100, 97, 114, 45, 112, 116, 97] => lookup_793_668(acc),
            [102, 117, 111, 115, 115, 107, 111] => lookup_793_669(acc),
            [108, 195, 166, 114, 100, 97, 108] => lookup_793_670(acc),
            [118, 97, 114, 111, 121] => lookup_793_671(acc),
            [104, 97, 108, 115, 97] => lookup_793_672(acc),
            [108, 117, 114, 195, 184, 121] => lookup_793_673(acc),
            [104, 97, 115, 118, 105, 107] => lookup_793_674(acc),
            [104, 111, 121, 108, 97, 110, 100, 101, 116] => lookup_793_675(acc),
            [97, 117, 107, 114, 97] => lookup_793_676(acc),
            [104, 97, 109, 97, 114, 111, 121] => lookup_793_677(acc),
            [104, 117, 114, 117, 109] => lookup_793_678(acc),
            [120, 110, 45, 45, 103, 108, 115, 45, 101, 108, 97, 99] => lookup_793_679(acc),
            [98, 97, 106, 100, 100, 97, 114] => lookup_793_680(acc),
            [108, 97, 114, 100, 97, 108] => lookup_793_681(acc),
            [120, 110, 45, 45, 107, 102, 106, 111, 114, 100, 45, 105, 117, 97] => {
                lookup_793_682(acc)
            }
            [114, 111, 114, 111, 115] => lookup_793_683(acc),
            [115, 117, 108, 100, 97, 108] => lookup_793_684(acc),
            [107, 114, 195, 165, 97, 110, 103, 104, 107, 101] => lookup_793_685(acc),
            [97, 102, 106, 111, 114, 100] => lookup_793_686(acc),
            [115, 195, 184, 114, 117, 109] => lookup_793_687(acc),
            [120, 110, 45, 45, 115, 116, 102, 111, 108, 100, 45, 57, 120, 97] => {
                lookup_793_688(info, labels, acc)
            }
            [110, 97, 114, 118, 105, 105, 107, 97] => lookup_793_689(acc),
            [98, 195, 165, 100, 195, 165, 100, 100, 106, 195, 165] => lookup_793_690(acc),
            [111, 112, 112, 100, 97, 108] => lookup_793_691(acc),
            [120, 110, 45, 45, 121, 101, 114, 45, 122, 110, 97] => lookup_793_692(acc),
            [115, 111, 108, 97] => lookup_793_693(acc),
            [98, 97, 104, 99, 99, 97, 118, 117, 111, 116, 110, 97] => lookup_793_694(acc),
            [120, 110, 45, 45, 115, 103, 110, 101, 45, 103, 114, 97] => lookup_793_695(acc),
            [116, 106, 195, 184, 109, 101] => lookup_793_696(acc),
            [195, 165, 109, 108, 105] => lookup_793_697(acc),
            [98, 106, 97, 114, 107, 111, 121] => lookup_793_698(acc),
            [120, 110, 45, 45, 107, 115, 110, 101, 115, 45, 117, 117, 97] => lookup_793_699(acc),
            [100, 105, 118, 116, 97, 115, 118, 117, 111, 100, 110, 97] => lookup_793_700(acc),
            [118, 103, 115] => lookup_793_701(acc),
            [106, 111, 108, 115, 116, 101, 114] => lookup_793_702(acc),
            [98, 106, 101, 114, 107, 114, 101, 105, 109] => lookup_793_703(acc),
            [120, 110, 45, 45, 118, 114, 121, 45, 121, 108, 97, 53, 103] => lookup_793_704(acc),
            [110, 101, 115, 115, 101, 116] => lookup_793_705(acc),
            [98, 97, 114, 100, 117] => lookup_793_706(acc),
            [100, 114, 195, 184, 98, 97, 107] => lookup_793_707(acc),
            [120, 110, 45, 45, 108, 116, 45, 108, 105, 97, 99] => lookup_793_708(acc),
            [120, 110, 45, 45, 98, 100, 100, 100, 106, 45, 109, 114, 97, 98, 100] => {
                lookup_793_709(acc)
            }
            [98, 111, 100, 111] => lookup_793_710(acc),
            [104, 195, 161, 98, 109, 101, 114] => lookup_793_711(acc),
            [107, 97, 114, 108, 115, 111, 121] => lookup_793_712(acc),
            [107, 108, 101, 112, 112] => lookup_793_713(acc),
            [114, 117, 111, 118, 97, 116] => lookup_793_714(acc),
            [120, 110, 45, 45, 108, 101, 115, 117, 110, 100, 45, 104, 117, 97] => {
                lookup_793_715(acc)
            }
            [108, 97, 114, 118, 105, 107] => lookup_793_716(acc),
            [108, 121, 110, 103, 101, 110] => lookup_793_717(acc),
            [120, 110, 45, 45, 114, 105, 115, 114, 45, 105, 114, 97] => lookup_793_718(acc),
            [102, 114, 111, 103, 110] => lookup_793_719(acc),
            [114, 111, 97, 110] => lookup_793_720(acc),
            [114, 111, 109, 115, 107, 111, 103] => lookup_793_721(acc),
            [115, 195, 161, 108, 195, 161, 116] => lookup_793_722(acc),
            [116, 121, 115, 102, 106, 111, 114, 100] => lookup_793_723(acc),
            [120, 110, 45, 45, 98, 116, 115, 102, 106, 111, 114, 100, 45, 57, 122, 97] => {
                lookup_793_724(acc)
            }
            [107, 118, 97, 110, 97, 110, 103, 101, 110] => lookup_793_725(acc),
            [108, 97, 104, 112, 112, 105] => lookup_793_726(acc),
            [120, 110, 45, 45, 109, 111, 114, 101, 107, 101, 45, 106, 117, 97] => {
                lookup_793_727(acc)
            }
            [120, 110, 45, 45, 104, 45, 50, 102, 97] => lookup_793_728(acc),
            [104, 111, 108, 116, 97, 108, 101, 110] => lookup_793_729(acc),
            [108, 195, 184, 116, 101, 110] => lookup_793_730(acc),
            [103, 105, 101, 104, 116, 97, 118, 117, 111, 97, 116, 110, 97] => lookup_793_731(acc),
            [97, 107, 101, 114, 115, 104, 117, 115] => lookup_793_732(info, labels, acc),
            [118, 195, 165, 103, 195, 165] => lookup_793_733(acc),
            [110, 116] => lookup_793_734(labels, acc),
            [103, 117, 108, 101, 110] => lookup_793_735(acc),
            [120, 110, 45, 45, 118, 97, 100, 115, 45, 106, 114, 97] => lookup_793_736(acc),
            [110, 97, 109, 115, 115, 107, 111, 103, 97, 110] => lookup_793_737(acc),
            [108, 97, 118, 97, 103, 105, 115] => lookup_793_738(acc),
            [104, 111, 98, 111, 108] => lookup_793_739(acc),
            [114, 97, 100, 195, 184, 121] => lookup_793_740(acc),
            [111, 112, 112, 101, 103, 195, 165, 114, 100] => lookup_793_741(acc),
            [98, 121, 107, 108, 101] => lookup_793_742(acc),
            [98, 97, 108, 115, 102, 106, 111, 114, 100] => lookup_793_743(acc),
            [120, 110, 45, 45, 118, 103, 45, 121, 105, 97, 98] => lookup_793_744(acc),
            [118, 101, 115, 116, 98, 121] => lookup_793_745(acc),
            [109, 111, 115, 106, 111, 101, 110] => lookup_793_746(acc),
            [98, 111, 107, 110] => lookup_793_747(acc),
            [111, 112, 112, 101, 103, 97, 114, 100] => lookup_793_748(acc),
            [111, 115, 116, 114, 101, 45, 116, 111, 116, 101, 110] => lookup_793_749(acc),
            [115, 105, 101, 108, 108, 97, 107] => lookup_793_750(acc),
            [195, 184, 118, 114, 101, 45, 101, 105, 107, 101, 114] => lookup_793_751(acc),
            [195, 165, 115] => lookup_793_752(acc),
            [115, 116, 97, 118, 97, 110, 103, 101, 114] => lookup_793_753(acc),
            [107, 114, 195, 184, 100, 115, 104, 101, 114, 97, 100] => lookup_793_754(acc),
            [108, 101, 107, 115, 118, 105, 107] => lookup_793_755(acc),
            [98, 114, 111, 110, 110, 111, 121, 115, 117, 110, 100] => lookup_793_756(acc),
            [120, 110, 45, 45, 121, 103, 97, 114, 100, 101, 110, 45, 112, 49, 97] => {
                lookup_793_757(acc)
            }
            [115, 107, 195, 165, 110, 108, 97, 110, 100] => lookup_793_758(acc),
            [115, 116, 114, 121, 110] => lookup_793_759(acc),
            [100, 111, 118, 114, 101] => lookup_793_760(acc),
            [104, 195, 166, 103, 101, 98, 111, 115, 116, 97, 100] => lookup_793_761(acc),
            [110, 111, 114, 100, 45, 102, 114, 111, 110] => lookup_793_762(acc),
            [114, 97, 108, 105, 110, 103, 101, 110] => lookup_793_763(acc),
            [120, 110, 45, 45, 102, 114, 110, 97, 45, 119, 111, 97] => lookup_793_764(acc),
            [120, 110, 45, 45, 114, 108, 105, 110, 103, 101, 110, 45, 109, 120, 97] => {
                lookup_793_765(acc)
            }
            [102, 105, 110, 110, 111, 121] => lookup_793_766(acc),
            [108, 111, 112, 112, 97] => lookup_793_767(acc),
            [98, 97, 109, 98, 108, 101] => lookup_793_768(acc),
            [120, 110, 45, 45, 111, 115, 121, 114, 111, 45, 119, 117, 97] => lookup_793_769(acc),
            [98, 105, 110, 100, 97, 108] => lookup_793_770(acc),
            [115, 107, 106, 97, 107] => lookup_793_771(acc),
            [111, 100, 100, 97] => lookup_793_772(acc),
            [114, 195, 184, 100, 195, 184, 121] => lookup_793_773(acc),
            [98, 97, 116, 115, 102, 106, 111, 114, 100] => lookup_793_774(acc),
            [115, 108, 97, 116, 116, 117, 109] => lookup_793_775(acc),
            [120, 110, 45, 45, 108, 97, 104, 101, 97, 100, 106, 117, 45, 55, 121, 97] => {
                lookup_793_776(acc)
            }
            [115, 110, 195, 165, 115, 97] => lookup_793_777(acc),
            [101, 103, 101, 114, 115, 117, 110, 100] => lookup_793_778(acc),
            [104, 111, 108] => lookup_793_779(acc),
            [114, 97, 104, 111, 108, 116] => lookup_793_780(acc),
            [98, 121, 103, 108, 97, 110, 100] => lookup_793_781(acc),
            [120, 110, 45, 45, 116, 110, 115, 98, 101, 114, 103, 45, 113, 49, 97] => {
                lookup_793_782(acc)
            }
            [100, 114, 97, 109, 109, 101, 110] => lookup_793_783(acc),
            [107, 118, 105, 110, 110, 104, 101, 114, 97, 100] => lookup_793_784(acc),
            [120, 110, 45, 45, 110, 114, 121, 45, 121, 108, 97, 53, 103] => lookup_793_785(acc),
            [103, 97, 110, 103, 97, 118, 105, 105, 107, 97] => lookup_793_786(acc),
            [115, 111, 114, 45, 118, 97, 114, 97, 110, 103, 101, 114] => lookup_793_787(acc),
            [115, 195, 184, 114, 114, 101, 105, 115, 97] => lookup_793_788(acc),
            [120, 110, 45, 45, 98, 114, 110, 110, 121, 115, 117, 110, 100, 45, 109, 56, 97, 99] => {
                lookup_793_789(acc)
            }
            [111, 114, 115, 107, 111, 103] => lookup_793_790(acc),
            [120, 110, 45, 45, 115, 114, 45, 97, 117, 114, 100, 97, 108, 45, 108, 56, 97] => {
                lookup_793_791(acc)
            }
            [120, 110, 45, 45, 116, 114, 111, 109, 115, 45, 122, 117, 97] => lookup_793_792(acc),
            [120, 110, 45, 45, 109, 108, 105, 45, 116, 108, 97] => lookup_793_793(acc),
            [98, 195, 161, 105, 100, 195, 161, 114] => lookup_793_794(acc),
            [97, 108, 115, 116, 97, 104, 97, 117, 103] => lookup_793_795(acc),
            [98, 101, 114, 108, 101, 118, 195, 165, 103] => lookup_793_796(acc),
            [103, 106, 101, 114, 100, 114, 117, 109] => lookup_793_797(acc),
            [120, 110, 45, 45, 107, 114, 97, 110, 103, 104, 107, 101, 45, 98, 48, 97] => {
                lookup_793_798(acc)
            }
            [120, 110, 45, 45, 104, 110, 101, 102, 111, 115, 115, 45, 113, 49, 97] => {
                lookup_793_799(acc)
            }
            [104, 97, 117, 103, 101, 115, 117, 110, 100] => lookup_793_800(acc),
            [100, 97, 118, 118, 101, 110, 106, 97, 114, 103, 97] => lookup_793_801(acc),
            [98, 97, 108, 97, 116] => lookup_793_802(acc),
            [101, 118, 101, 110, 101, 115] => lookup_793_803(acc),
            [109, 106, 111, 110, 100, 97, 108, 101, 110] => lookup_793_804(acc),
            [107, 114, 97, 103, 101, 114, 111] => lookup_793_805(acc),
            [108, 101, 114, 100, 97, 108] => lookup_793_806(acc),
            [114, 97, 110, 97] => lookup_793_807(acc),
            [114, 195, 184, 115, 116] => lookup_793_808(acc),
            [104, 97, 114, 101, 105, 100] => lookup_793_809(acc),
            [103, 195, 161, 197, 139, 103, 97, 118, 105, 105, 107, 97] => lookup_793_810(acc),
            [104, 195, 184, 121, 108, 97, 110, 100, 101, 116] => lookup_793_811(acc),
            [195, 165, 115, 110, 101, 115] => lookup_793_812(acc),
            [106, 195, 184, 108, 115, 116, 101, 114] => lookup_793_813(acc),
            [115, 97, 108, 97, 110, 103, 101, 110] => lookup_793_814(acc),
            [115, 111, 108, 117, 110, 100] => lookup_793_815(acc),
            [115, 116, 101, 105, 103, 101, 110] => lookup_793_816(acc),
            [107, 118, 97, 108, 115, 117, 110, 100] => lookup_793_817(acc),
            [110, 111, 114, 100, 45, 111, 100, 97, 108] => lookup_793_818(acc),
            [100, 195, 184, 110, 110, 97] => lookup_793_819(acc),
            [108, 101, 97, 110, 103, 97, 118, 105, 105, 107, 97] => lookup_793_820(acc),
            [102, 117, 115, 97] => lookup_793_821(acc),
            [115, 118, 101, 105, 111] => lookup_793_822(acc),
            [120, 110, 45, 45, 115, 114, 45, 111, 100, 97, 108, 45, 113, 49, 97] => {
                lookup_793_823(acc)
            }
            [116, 105, 109, 101] => lookup_793_824(acc),
            [120, 110, 45, 45, 107, 114, 101, 104, 97, 109, 110, 45, 100, 120, 97] => {
                lookup_793_825(acc)
            }
            [114, 195, 161, 104, 107, 107, 101, 114, 195, 161, 118, 106, 117] => {
                lookup_793_826(acc)
            }
            [120, 110, 45, 45, 118, 97, 114, 100, 45, 106, 114, 97] => lookup_793_827(acc),
            [195, 165, 115, 101, 114, 97, 108] => lookup_793_828(acc),
            [120, 110, 45, 45, 98, 109, 108, 111, 45, 103, 114, 97] => lookup_793_829(acc),
            [195, 184, 114, 108, 97, 110, 100] => lookup_793_830(acc),
            [104, 111, 114, 100, 97, 108, 97, 110, 100] => lookup_793_831(info, labels, acc),
            [100, 111, 110, 110, 97] => lookup_793_832(acc),
            [112, 111, 114, 115, 103, 114, 117, 110, 110] => lookup_793_833(acc),
            [115, 195, 184, 114, 102, 111, 108, 100] => lookup_793_834(acc),
            [117, 108, 108, 101, 110, 115, 118, 97, 110, 103] => lookup_793_835(acc),
            [98, 195, 161, 106, 100, 100, 97, 114] => lookup_793_836(acc),
            [103, 108, 111, 112, 112, 101, 110] => lookup_793_837(acc),
            [118, 105, 107] => lookup_793_838(acc),
            [120, 110, 45, 45, 97, 110, 100, 121, 45, 105, 114, 97] => lookup_793_839(acc),
            [120, 110, 45, 45, 112, 111, 114, 115, 103, 117, 45, 115, 116, 97, 50, 54, 102] => {
                lookup_793_840(acc)
            }
            [120, 110, 45, 45, 104, 109, 109, 114, 102, 101, 97, 115, 116, 97, 45, 115, 52, 97, 99] => {
                lookup_793_841(acc)
            }
            [108, 105, 110, 100, 101, 115, 110, 101, 115] => lookup_793_842(acc),
            [116, 114] => lookup_793_843(labels, acc),
            [100, 101, 97, 116, 110, 117] => lookup_793_844(acc),
            [101, 118, 101, 110, 97, 115, 115, 105] => lookup_793_845(acc),
            [107, 97, 117, 116, 111, 107, 101, 105, 110, 111] => lookup_793_846(acc),
            [108, 101, 105, 107, 97, 110, 103, 101, 114] => lookup_793_847(acc),
            [108, 105, 108, 108, 101, 115, 97, 110, 100] => lookup_793_848(acc),
            [118, 97, 114, 103, 103, 97, 116] => lookup_793_849(acc),
            [103, 114, 117, 101] => lookup_793_850(acc),
            [98, 105, 101, 118, 195, 161, 116] => lookup_793_851(acc),
            [120, 110, 45, 45, 102, 108, 45, 122, 105, 97] => lookup_793_852(acc),
            [120, 110, 45, 45, 107, 114, 97, 103, 101, 114, 45, 103, 121, 97] => {
                lookup_793_853(acc)
            }
            [116, 111, 114, 115, 107, 101, 110] => lookup_793_854(acc),
            [120, 110, 45, 45, 102, 106, 111, 114, 100, 45, 108, 114, 97] => lookup_793_855(acc),
            [97, 114, 100, 97, 108] => lookup_793_856(acc),
            [114, 101, 110, 110, 101, 98, 117] => lookup_793_857(acc),
            [97, 103, 100, 101, 110, 101, 115] => lookup_793_858(acc),
            [108, 105, 110, 100, 195, 165, 115] => lookup_793_859(acc),
            [112, 111, 114, 115, 195, 161, 197, 139, 103, 117] => lookup_793_860(acc),
            [120, 110, 45, 45, 118, 114, 103, 103, 116, 45, 120, 113, 97, 100] => {
                lookup_793_861(acc)
            }
            [118, 101, 114, 114, 97, 110] => lookup_793_862(acc),
            [120, 110, 45, 45, 98, 104, 99, 99, 97, 118, 117, 111, 116, 110, 97, 45, 107, 55, 97] => {
                lookup_793_863(acc)
            }
            [115, 107, 97, 110, 105, 116] => lookup_793_864(acc),
            [104, 111, 114, 116, 101, 110] => lookup_793_865(acc),
            [115, 101, 108] => lookup_793_866(acc),
            [111, 115, 108, 111] => lookup_793_867(labels, acc),
            [108, 111, 97, 98, 195, 161, 116] => lookup_793_868(acc),
            [110, 111, 114, 100, 100, 97, 108] => lookup_793_869(acc),
            [115, 107, 105, 101, 110] => lookup_793_870(acc),
            [104, 97, 112, 109, 105, 114] => lookup_793_871(acc),
            [120, 110, 45, 45, 108, 114, 100, 97, 108, 45, 115, 114, 97] => lookup_793_872(acc),
            [98, 97, 105, 100, 97, 114] => lookup_793_873(acc),
            [114, 111, 108, 108, 97, 103] => lookup_793_874(acc),
            [118, 101, 115, 116, 114, 101, 45, 116, 111, 116, 101, 110] => lookup_793_875(acc),
            [195, 165, 102, 106, 111, 114, 100] => lookup_793_876(acc),
            [103, 106, 101, 109, 110, 101, 115] => lookup_793_877(acc),
            [118, 97, 100, 115, 195, 184] => lookup_793_878(acc),
            [115, 97, 117, 104, 101, 114, 97, 100] => lookup_793_879(acc),
            [104, 106, 97, 114, 116, 100, 97, 108] => lookup_793_880(acc),
            [104, 101, 109, 110, 101, 115] => lookup_793_881(acc),
            [120, 110, 45, 45, 107, 118, 102, 106, 111, 114, 100, 45, 110, 120, 97] => {
                lookup_793_882(acc)
            }
            [120, 110, 45, 45, 109, 101, 108, 121, 45, 105, 114, 97] => lookup_793_883(acc),
            [107, 118, 195, 166, 102, 106, 111, 114, 100] => lookup_793_884(acc),
            [116, 106, 111, 109, 101] => lookup_793_885(acc),
            [116, 114, 97, 110, 111, 121] => lookup_793_886(acc),
            [195, 184, 115, 116, 102, 111, 108, 100] => lookup_793_887(info, labels, acc),
            [120, 110, 45, 45, 116, 121, 115, 118, 114, 45, 118, 114, 97] => lookup_793_888(acc),
            [120, 110, 45, 45, 109, 115, 121, 45, 117, 108, 97, 48, 104] => lookup_793_889(acc),
            [118, 97, 103, 97] => lookup_793_890(acc),
            [120, 110, 45, 45, 102, 114, 100, 101, 45, 103, 114, 97] => lookup_793_891(acc),
            [109, 117, 115, 101, 117, 109] => lookup_793_892(acc),
            [108, 105, 101, 114, 110, 101] => lookup_793_893(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_794() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_795() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_796() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_797() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_798() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_799() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_800() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_801() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_802() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_803() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_804_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_804_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_804_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_804_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_804_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_804_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_804_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_804_6<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_804_6_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_804_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_804_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_804<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_804_0(acc),
            [110, 97, 109, 101] => lookup_804_1(acc),
            [109, 105, 108] => lookup_804_2(acc),
            [110, 101, 116] => lookup_804_3(acc),
            [111, 114, 103] => lookup_804_4(acc),
            [101, 117, 110] => lookup_804_5(acc),
            [99, 111, 109] => lookup_804_6(labels, acc),
            [103, 111, 118] => lookup_804_7(acc),
            [115, 99, 105] => lookup_804_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_805_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_805_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_805_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_805_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_805_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_805<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_805_0(acc),
            [111, 114, 103] => lookup_805_1(acc),
            [103, 111, 118] => lookup_805_2(acc),
            [101, 100, 117] => lookup_805_3(acc),
            [99, 111, 109] => lookup_805_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_806_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_806_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_806<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_806_0(acc),
            [110, 121, 109] => lookup_806_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_807_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_807_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_807_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_807_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [100, 105, 114, 101, 99, 116] => lookup_807_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_807_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_807_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_807_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_807_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_807_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_807_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_807_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_807_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_807_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_807<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 121, 97, 110] => lookup_807_0(acc),
            [54, 49, 49] => lookup_807_1(acc),
            [113, 117, 105, 99, 107, 99, 111, 110, 110, 101, 99, 116] => {
                lookup_807_2(info, labels, acc)
            }
            [101, 100, 117] => lookup_807_3(acc),
            [118, 112, 110, 112, 108, 117, 115] => lookup_807_4(acc),
            [109, 105, 108] => lookup_807_5(acc),
            [110, 101, 116] => lookup_807_6(acc),
            [111, 114, 103] => lookup_807_7(acc),
            [111, 121, 97] => lookup_807_8(acc),
            [103, 111, 118] => lookup_807_9(acc),
            [99, 111, 109] => lookup_807_10(acc),
            [114, 100, 118] => lookup_807_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_808() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_809() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_810_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_810<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_810_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_811() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_812() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_813() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_814() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_815_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_4_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_4_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_815_4_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_815_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [99, 110, 115] => lookup_815_4_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_5_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_5_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_815_5_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_815_5_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_5_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_815_5_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_815_5_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_5_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_815_5_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_815_5_3(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [111, 99, 112] => lookup_815_5_0(info, labels, acc),
            [111, 99, 115] => lookup_815_5_1(info, labels, acc),
            [111, 99, 105] => lookup_815_5_2(info, labels, acc),
            wild => lookup_815_5_3(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_815_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_6<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112] => lookup_815_6_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_14_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_14<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 15usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [106, 115] => lookup_815_14_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_48_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_48<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112] => lookup_815_48_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_67_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_67<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 97, 115] => lookup_815_67_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_69_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_69<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 18usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 97, 115] => lookup_815_69_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_70_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_70_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_70<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [106, 99, 108, 111, 117, 100] => lookup_815_70_0(acc),
            [106, 99, 108, 111, 117, 100, 45, 118, 101, 114, 45, 106, 112, 99] => {
                lookup_815_70_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_79_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_79<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 105] => lookup_815_79_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_95_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_95<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112, 115] => lookup_815_95_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_96_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_96_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_96<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 108, 112, 104, 97] => lookup_815_96_0(acc),
            [98, 101, 116, 97] => lookup_815_96_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_109_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_109_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_109_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_109_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_109_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_109_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_109_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_109_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_109_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_109_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_109_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_109_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_109_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_109_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_109_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_109_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_109_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_109<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 16usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [117, 115, 45, 119, 101, 115, 116, 45, 50] => lookup_815_109_0(acc),
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_815_109_1(acc)
            }
            [117, 115, 45, 103, 111, 118, 45, 119, 101, 115, 116, 45, 49] => lookup_815_109_2(acc),
            [101, 117, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => lookup_815_109_3(acc),
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_815_109_4(acc)
            }
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_815_109_5(acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_815_109_6(acc),
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 51] => {
                lookup_815_109_7(acc)
            }
            [117, 115, 45, 119, 101, 115, 116, 45, 49] => lookup_815_109_8(acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 51] => lookup_815_109_9(acc),
            [115, 97, 45, 101, 97, 115, 116, 45, 49] => lookup_815_109_10(acc),
            [117, 115, 45, 101, 97, 115, 116, 45, 49] => lookup_815_109_11(acc),
            [99, 97, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => lookup_815_109_12(acc),
            [117, 115, 45, 101, 97, 115, 116, 45, 50] => lookup_815_109_13(acc),
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_815_109_14(acc)
            }
            [101, 117, 45, 119, 101, 115, 116, 45, 50] => lookup_815_109_15(acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 49] => lookup_815_109_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_117_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_117_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_815_117_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_815_117<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 101, 118] => lookup_815_117_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_127_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_127_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_127_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_127_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_127_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_127_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_127_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_127_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_127_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_127_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_127_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_127<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [111, 110, 99, 105, 108, 108, 97] => lookup_815_127_0(acc),
            [115, 112, 104, 105, 110, 120] => lookup_815_127_1(acc),
            [102, 101, 110, 116, 105, 103, 101, 114] => lookup_815_127_2(acc),
            [120] => lookup_815_127_3(acc),
            [111, 99, 101, 108, 111, 116] => lookup_815_127_4(acc),
            [99, 117, 115, 116, 111, 109, 101, 114] => lookup_815_127_5(acc),
            [99, 97, 114, 97, 99, 97, 108] => lookup_815_127_6(acc),
            [111, 110, 122, 97] => lookup_815_127_7(acc),
            [118, 115] => lookup_815_127_8(acc),
            [108, 121, 110, 120] => lookup_815_127_9(acc),
            [121, 97, 108, 105] => lookup_815_127_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_129_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_129_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_129_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_129<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117] => lookup_815_129_0(acc),
            [115, 103] => lookup_815_129_1(acc),
            [97, 109, 115] => lookup_815_129_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_131_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_131<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_815_131_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_815_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_143_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_143_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_143<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [114, 97, 103, 45, 99, 108, 111, 117, 100, 45, 99, 104] => lookup_815_143_0(acc),
            [114, 97, 103, 45, 99, 108, 111, 117, 100] => lookup_815_143_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_152_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_152<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [120, 101, 110] => lookup_815_152_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_158(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_162(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_163_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_163_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_163<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [117, 50, 45, 108, 111, 99, 97, 108] => lookup_815_163_0(acc),
            [117, 50] => lookup_815_163_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_164(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_165(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_166(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_167(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_168(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_169(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_170(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_171(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_172(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_173(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_174(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_175(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_176(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_177(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_178(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_179(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_180_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_180_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_180_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_180_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_180_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_180_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_180_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_180_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_180<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [117, 115, 45, 51] => lookup_815_180_0(acc),
            [101, 117, 45, 52] => lookup_815_180_1(acc),
            [117, 115, 45, 49] => lookup_815_180_2(acc),
            [101, 117, 45, 49] => lookup_815_180_3(acc),
            [117, 115, 45, 50] => lookup_815_180_4(acc),
            [101, 117, 45, 51] => lookup_815_180_5(acc),
            [117, 115, 45, 52] => lookup_815_180_6(acc),
            [101, 117, 45, 50] => lookup_815_180_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_181(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_182(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_183(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_184(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_185_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_185_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_185_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_185<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 100] => lookup_815_185_0(acc),
            [114, 121, 100] => lookup_815_185_1(acc),
            [108, 111, 110] => lookup_815_185_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_186(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_187(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_188(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_189(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_190(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_191(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_192(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_193(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_194(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_195(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_196(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_197(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_198(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_199(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_200(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_201(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_202(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_203(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_204(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_205(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_206(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_207(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_208(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_209_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_209<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_815_209_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_815_210(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_211_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_211<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 117] => lookup_815_211_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_212(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_213(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_214(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_215(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_216(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_217(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_218(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_219_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_219_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 1usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_815_219_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_815_219<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [114] => lookup_815_219_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_220(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_221(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_222(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_223(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_224(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_225(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_226(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_227(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_228(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_229(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_230(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_231(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_232(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_233(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_234(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_235(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_236(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_237(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_238(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_239(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_240(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_241(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_242(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_243(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_244(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_245(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_246(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_247(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_248(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_249(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_250(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_251(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_252(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_253(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_254(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_255(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_256(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_257(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_258(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_259(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_260(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_261(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_262(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_263(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_264(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_265(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_266(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_267(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_268(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_269_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_269<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [100, 101, 109, 111] => lookup_815_269_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_270(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_271(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_272(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_273(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_274(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_275(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_276(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_277_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_277<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 21usize;
    match labels.next() {
        Some(label) => match label {
            [115, 116, 97, 116, 105, 99] => lookup_815_277_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_278(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_279(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_280(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_281(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_282(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_283(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_284(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_285(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_286(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_287(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_288(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_289(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_290(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_291(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_292(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_293_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_293_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_293_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_815_293_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_815_293<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [109, 101, 109, 98, 101, 114, 115] => lookup_815_293_0(acc),
            [110, 111, 100, 101, 98, 97, 108, 97, 110, 99, 101, 114] => {
                lookup_815_293_1(info, labels, acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_294_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_294<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 103, 101, 115] => lookup_815_294_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_295(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_296(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_297(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_298(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_299(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_300(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_301(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_302(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_303(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_304(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_305(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_306(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_307(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_308(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_309(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_310_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_310<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 118] => lookup_815_310_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_311(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_312(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_313(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_314(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_315(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_316(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_317(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_318(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_319(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_320(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_321(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_322(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_323(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_324(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_325(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_326(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_327(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_328(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_329(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_330(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_331(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_332(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_333(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_334(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_335(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_336(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_337(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_338(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_339(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_340(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_341(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_342(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_343(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_344(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_345(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_346_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_346<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_815_346_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_815_347(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_348(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_349(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_350(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_351(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_352(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_353(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_354(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_355(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_356(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_357(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_4_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_4_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_815_358_4_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_358_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_815_358_4_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_358_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_6_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_6_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_815_358_6_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_358_6_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_6_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_6<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_815_358_6_0(info, labels, acc),
            [115, 51] => lookup_815_358_6_1(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_815_358_6_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_358_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_10_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_10_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_815_358_10_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_358_10_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_10_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_10<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_815_358_10_0(info, labels, acc),
            [115, 51] => lookup_815_358_10_1(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_815_358_10_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_358_11_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_11_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_815_358_11_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_358_11_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_11_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_11<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_815_358_11_0(info, labels, acc),
            [115, 51] => lookup_815_358_11_1(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_815_358_11_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_358_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_13_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_13<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_815_358_13_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_815_358_14_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_14_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_815_358_14_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_358_14_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_14_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_14<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_815_358_14_0(info, labels, acc),
            [115, 51] => lookup_815_358_14_1(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_815_358_14_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_358_15_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_15_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_815_358_15_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_358_15<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_815_358_15_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_358_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_20_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_20_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_815_358_20_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_358_20_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_20_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_20<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_815_358_20_0(info, labels, acc),
            [115, 51] => lookup_815_358_20_1(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_815_358_20_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_358_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_22_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_22_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_815_358_22_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_358_22<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_815_358_22_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_358_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_24_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_24<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_815_358_24_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_815_358_25_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_25<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_815_358_25_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_815_358_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_28_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_28_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_815_358_28_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_358_28<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_815_358_28_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_358_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_34_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_34_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_815_358_34_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_358_34<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_815_358_34_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_358_35_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_35_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_815_358_35_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_358_35_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_35_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_35<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_815_358_35_0(info, labels, acc),
            [115, 51] => lookup_815_358_35_1(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_815_358_35_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_358_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 25usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_37_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_37_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_815_358_37_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_358_37<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_815_358_37_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_358_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 25usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_39_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_39_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_815_358_39_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_358_39_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_39_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_39<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_815_358_39_0(info, labels, acc),
            [115, 51] => lookup_815_358_39_1(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_815_358_39_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_358_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 25usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_358<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 115, 97, 45, 101, 97, 115, 116, 45, 49] => {
                lookup_815_358_0(acc)
            }
            [115, 51, 45, 97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_815_358_1(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 101, 117, 45, 119, 101, 115, 116, 45, 49] => {
                lookup_815_358_2(acc)
            }
            [115, 51, 45, 97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_815_358_3(acc)
            }
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_815_358_4(info, labels, acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 117, 115, 45, 119, 101, 115, 116, 45, 50] => {
                lookup_815_358_5(acc)
            }
            [101, 117, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_815_358_6(info, labels, acc)
            }
            [115, 51, 45, 117, 115, 45, 103, 111, 118, 45, 119, 101, 115, 116, 45, 49] => {
                lookup_815_358_7(acc)
            }
            [115, 51, 45, 115, 97, 45, 101, 97, 115, 116, 45, 49] => lookup_815_358_8(acc),
            [115, 51, 45, 117, 115, 45, 119, 101, 115, 116, 45, 49] => lookup_815_358_9(acc),
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_815_358_10(info, labels, acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_815_358_11(info, labels, acc),
            [115, 51, 45, 101, 117, 45, 119, 101, 115, 116, 45, 50] => lookup_815_358_12(acc),
            [99, 111, 109, 112, 117, 116, 101, 45, 49] => lookup_815_358_13(info, labels, acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 51] => lookup_815_358_14(info, labels, acc),
            [115, 97, 45, 101, 97, 115, 116, 45, 49] => lookup_815_358_15(info, labels, acc),
            [115, 51, 45, 97, 112, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_815_358_16(acc),
            [115, 51] => lookup_815_358_17(acc),
            [115, 51, 45, 97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_815_358_18(acc)
            }
            [115, 51, 45, 101, 117, 45, 119, 101, 115, 116, 45, 51] => lookup_815_358_19(acc),
            [117, 115, 45, 101, 97, 115, 116, 45, 50] => lookup_815_358_20(info, labels, acc),
            [115, 51, 45, 102, 105, 112, 115, 45, 117, 115, 45, 103, 111, 118, 45, 119, 101, 115, 116, 45, 49] => {
                lookup_815_358_21(acc)
            }
            [101, 117, 45, 119, 101, 115, 116, 45, 49] => lookup_815_358_22(info, labels, acc),
            [115, 51, 45, 117, 115, 45, 119, 101, 115, 116, 45, 50] => lookup_815_358_23(acc),
            [101, 108, 98] => lookup_815_358_24(info, labels, acc),
            [99, 111, 109, 112, 117, 116, 101] => lookup_815_358_25(info, labels, acc),
            [115, 51, 45, 101, 117, 45, 119, 101, 115, 116, 45, 49] => lookup_815_358_26(acc),
            [115, 51, 45, 99, 97, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_815_358_27(acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_815_358_28(info, labels, acc)
            }
            [115, 51, 45, 97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_815_358_29(acc)
            }
            [115, 51, 45, 101, 117, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_815_358_30(acc)
            }
            [115, 51, 45, 101, 120, 116, 101, 114, 110, 97, 108, 45, 49] => lookup_815_358_31(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 117, 115, 45, 119, 101, 115, 116, 45, 49] => {
                lookup_815_358_32(acc)
            }
            [115, 51, 45, 117, 115, 45, 101, 97, 115, 116, 45, 50] => lookup_815_358_33(acc),
            [117, 115, 45, 101, 97, 115, 116, 45, 49] => lookup_815_358_34(labels, acc),
            [99, 97, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_815_358_35(info, labels, acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_815_358_36(acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_815_358_37(info, labels, acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_815_358_38(acc)
            }
            [101, 117, 45, 119, 101, 115, 116, 45, 50] => lookup_815_358_39(info, labels, acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 117, 115, 45, 101, 97, 115, 116, 45, 49] => {
                lookup_815_358_40(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_815_358_41(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_359(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_360(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 97, 103, 101, 115, 112, 101, 101, 100, 109, 111, 98, 105, 108, 105, 122, 101, 114] => {
                lookup_815_0(acc)
            }
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_815_1(acc),
            [117, 110, 117, 115, 117, 97, 108, 112, 101, 114, 115, 111, 110] => lookup_815_2(acc),
            [99, 108, 111, 117, 100, 99, 111, 110, 116, 114, 111, 108, 108, 101, 100] => {
                lookup_815_3(acc)
            }
            [106, 111, 121, 101, 110, 116] => lookup_815_4(info, labels, acc),
            [99, 117, 115, 116, 111, 109, 101, 114, 45, 111, 99, 105] => {
                lookup_815_5(info, labels, acc)
            }
            [108, 109, 112, 109] => lookup_815_6(info, labels, acc),
            [97, 114] => lookup_815_7(acc),
            [100, 110, 115, 105, 115, 107, 105, 110, 107, 121] => lookup_815_8(acc),
            [105, 115, 45, 97, 110, 45, 97, 99, 116, 114, 101, 115, 115] => lookup_815_9(acc),
            [115, 101, 99, 117, 114, 105, 116, 121, 116, 97, 99, 116, 105, 99, 115] => {
                lookup_815_10(acc)
            }
            [114, 97, 99, 107, 109, 97, 122, 101] => lookup_815_11(acc),
            [105, 115, 45, 97, 45, 108, 105, 98, 101, 114, 97, 108] => lookup_815_12(acc),
            [98, 108, 111, 120, 99, 109, 115] => lookup_815_13(acc),
            [119, 112, 101, 110, 103, 105, 110, 101, 112, 111, 119, 101, 114, 101, 100] => {
                lookup_815_14(labels, acc)
            }
            [102, 114, 111, 109, 45, 110, 99] => lookup_815_15(acc),
            [105, 115, 45, 97, 110, 45, 97, 110, 97, 114, 99, 104, 105, 115, 116] => {
                lookup_815_16(acc)
            }
            [102, 114, 111, 109, 45, 109, 110] => lookup_815_17(acc),
            [97, 112, 112, 115, 112, 97, 99, 101, 104, 111, 115, 116, 101, 100] => {
                lookup_815_18(acc)
            }
            [107, 114] => lookup_815_19(acc),
            [99, 111] => lookup_815_20(acc),
            [102, 114, 111, 109, 45, 115, 99] => lookup_815_21(acc),
            [97, 112, 112, 99, 104, 105, 122, 105] => lookup_815_22(acc),
            [105, 115, 45, 97, 45, 114, 101, 112, 117, 98, 108, 105, 99, 97, 110] => {
                lookup_815_23(acc)
            }
            [104, 117] => lookup_815_24(acc),
            [100, 111, 110, 116, 101, 120, 105, 115, 116] => lookup_815_25(acc),
            [105, 115, 45, 97, 45, 115, 116, 117, 100, 101, 110, 116] => lookup_815_26(acc),
            [102, 114, 111, 109, 45, 109, 116] => lookup_815_27(acc),
            [105, 115, 45, 115, 108, 105, 99, 107] => lookup_815_28(acc),
            [102, 114, 111, 109, 45, 112, 114] => lookup_815_29(acc),
            [100, 97, 116, 116, 111, 108, 111, 99, 97, 108] => lookup_815_30(acc),
            [111, 110, 102, 97, 98, 114, 105, 99, 97] => lookup_815_31(acc),
            [100, 111, 101, 115, 110, 116, 101, 120, 105, 115, 116] => lookup_815_32(acc),
            [100, 121, 110, 45, 111, 45, 115, 97, 117, 114] => lookup_815_33(acc),
            [105, 115, 45, 99, 101, 114, 116, 105, 102, 105, 101, 100] => lookup_815_34(acc),
            [102, 114, 101, 101, 98, 111, 120, 45, 111, 115] => lookup_815_35(acc),
            [110, 102, 115, 104, 111, 115, 116] => lookup_815_36(acc),
            [111, 119, 110, 112, 114, 111, 118, 105, 100, 101, 114] => lookup_815_37(acc),
            [102, 114, 111, 109, 45, 110, 101] => lookup_815_38(acc),
            [103, 111, 116, 100, 110, 115] => lookup_815_39(acc),
            [99, 110] => lookup_815_40(acc),
            [117, 107] => lookup_815_41(acc),
            [105, 115, 45, 97, 45, 110, 117, 114, 115, 101] => lookup_815_42(acc),
            [102, 114, 111, 109, 45, 116, 110] => lookup_815_43(acc),
            [102, 114, 97, 109, 101, 114, 99, 97, 110, 118, 97, 115] => lookup_815_44(acc),
            [115, 101, 114, 118, 101, 115, 97, 114, 99, 97, 115, 109] => lookup_815_45(acc),
            [107, 105, 108, 97, 116, 105, 114, 111, 110] => lookup_815_46(acc),
            [109, 121, 113, 110, 97, 112, 99, 108, 111, 117, 100] => lookup_815_47(acc),
            [114, 101, 110, 100, 101, 114] => lookup_815_48(info, labels, acc),
            [105, 115, 45, 97, 45, 99, 97, 116, 101, 114, 101, 114] => lookup_815_49(acc),
            [49, 107, 97, 112, 112] => lookup_815_50(acc),
            [102, 97, 109, 105, 108, 121, 100, 115] => lookup_815_51(acc),
            [119, 111, 108, 116, 108, 97, 98, 45, 100, 101, 109, 111] => lookup_815_52(acc),
            [100, 97, 116, 116, 111, 119, 101, 98] => lookup_815_53(acc),
            [102, 114, 101, 101, 109, 121, 105, 112] => lookup_815_54(acc),
            [115, 109, 117, 115, 104, 99, 100, 110] => lookup_815_55(acc),
            [102, 97, 115, 116, 118, 112, 115, 45, 115, 101, 114, 118, 101, 114] => {
                lookup_815_56(acc)
            }
            [102, 114, 111, 109, 45, 118, 116] => lookup_815_57(acc),
            [119, 111, 114, 107, 105, 115, 98, 111, 114, 105, 110, 103] => lookup_815_58(acc),
            [112, 108, 97, 116, 116, 101, 114, 45, 97, 112, 112] => lookup_815_59(acc),
            [100, 121, 110, 100, 110, 115, 45, 112, 105, 99, 115] => lookup_815_60(acc),
            [102, 114, 111, 109, 45, 97, 114] => lookup_815_61(acc),
            [102, 114, 111, 109, 45, 105, 100] => lookup_815_62(acc),
            [105, 115, 45, 97, 45, 99, 104, 101, 102] => lookup_815_63(acc),
            [102, 114, 111, 109, 45, 97, 107] => lookup_815_64(acc),
            [105, 115, 115, 109, 97, 114, 116, 101, 114, 116, 104, 97, 110, 121, 111, 117] => {
                lookup_815_65(acc)
            }
            [113, 97, 50] => lookup_815_66(acc),
            [109, 97, 115, 115, 105, 118, 101, 103, 114, 105, 100] => {
                lookup_815_67(info, labels, acc)
            }
            [121, 111, 108, 97, 115, 105, 116, 101] => lookup_815_68(acc),
            [104, 111, 115, 116, 101, 100, 45, 98, 121, 45, 112, 114, 101, 118, 105, 100, 101, 114] => {
                lookup_815_69(info, labels, acc)
            }
            [105, 107, 45, 115, 101, 114, 118, 101, 114] => lookup_815_70(info, labels, acc),
            [105, 115, 97, 45, 103, 101, 101, 107] => lookup_815_71(acc),
            [100, 101] => lookup_815_72(acc),
            [100, 110, 115, 100, 111, 106, 111] => lookup_815_73(acc),
            [104, 111, 109, 101, 117, 110, 105, 120] => lookup_815_74(acc),
            [100, 121, 110, 97, 108, 105, 97, 115] => lookup_815_75(acc),
            [101, 115, 116, 45, 97, 45, 108, 97, 45, 109, 97, 105, 115, 111, 110] => {
                lookup_815_76(acc)
            }
            [105, 115, 45, 97, 45, 99, 117, 98, 105, 99, 108, 101, 45, 115, 108, 97, 118, 101] => {
                lookup_815_77(acc)
            }
            [105, 115, 45, 97, 45, 100, 101, 115, 105, 103, 110, 101, 114] => lookup_815_78(acc),
            [115, 116, 100, 108, 105, 98] => lookup_815_79(info, labels, acc),
            [114, 117] => lookup_815_80(acc),
            [112, 111, 105, 110, 116, 50, 116, 104, 105, 115] => lookup_815_81(acc),
            [105, 115, 45, 97, 45, 99, 111, 110, 115, 101, 114, 118, 97, 116, 105, 118, 101] => {
                lookup_815_82(acc)
            }
            [104, 111, 98, 98, 121, 45, 115, 105, 116, 101] => lookup_815_83(acc),
            [103, 101, 110, 116, 108, 101, 110, 116, 97, 112, 105, 115] => lookup_815_84(acc),
            [105, 115, 45, 97, 45, 100, 101, 109, 111, 99, 114, 97, 116] => lookup_815_85(acc),
            [109, 121, 115, 104, 111, 112, 98, 108, 111, 99, 107, 115] => lookup_815_86(acc),
            [97, 119, 115, 109, 112, 112, 108] => lookup_815_87(acc),
            [101, 115, 116, 45, 109, 111, 110, 45, 98, 108, 111, 103, 117, 101, 117, 114] => {
                lookup_815_88(acc)
            }
            [102, 114, 111, 109, 45, 99, 97] => lookup_815_89(acc),
            [102, 114, 111, 109, 45, 110, 104] => lookup_815_90(acc),
            [105, 115, 45, 97, 45, 100, 111, 99, 116, 111, 114] => lookup_815_91(acc),
            [105, 115, 97, 45, 104, 111, 99, 107, 101, 121, 110, 117, 116] => lookup_815_92(acc),
            [107, 97, 115, 115, 101, 114, 118, 101, 114] => lookup_815_93(acc),
            [100, 121, 110, 100, 110, 115, 45, 105, 112] => lookup_815_94(acc),
            [102, 98, 115, 98, 120] => lookup_815_95(info, labels, acc),
            [98, 111, 117, 110, 116, 121, 45, 102, 117, 108, 108] => lookup_815_96(labels, acc),
            [100, 111, 111, 109, 100, 110, 115] => lookup_815_97(acc),
            [102, 114, 111, 109, 45, 100, 101] => lookup_815_98(acc),
            [105, 115, 45, 97, 45, 112, 101, 114, 115, 111, 110, 97, 108, 116, 114, 97, 105, 110, 101, 114] => {
                lookup_815_99(acc)
            }
            [102, 114, 111, 109, 45, 105, 97] => lookup_815_100(acc),
            [105, 115, 45, 97, 110, 45, 101, 110, 103, 105, 110, 101, 101, 114] => {
                lookup_815_101(acc)
            }
            [108, 111, 115, 101, 121, 111, 117, 114, 105, 112] => lookup_815_102(acc),
            [102, 105, 114, 101, 119, 97, 108, 108, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_815_103(acc)
            }
            [101, 115, 116, 45, 108, 101, 45, 112, 97, 116, 114, 111, 110] => lookup_815_104(acc),
            [111, 117, 116, 115, 121, 115, 116, 101, 109, 115, 99, 108, 111, 117, 100] => {
                lookup_815_105(acc)
            }
            [119, 97, 102, 102, 108, 101, 99, 101, 108, 108] => lookup_815_106(acc),
            [102, 114, 111, 109, 45, 109, 111] => lookup_815_107(acc),
            [102, 114, 111, 109, 45, 110, 100] => lookup_815_108(acc),
            [101, 108, 97, 115, 116, 105, 99, 98, 101, 97, 110, 115, 116, 97, 108, 107] => {
                lookup_815_109(labels, acc)
            }
            [102, 114, 101, 101, 98, 111, 120, 111, 115] => lookup_815_110(acc),
            [102, 114, 111, 109, 45, 111, 107] => lookup_815_111(acc),
            [105, 115, 45, 97, 45, 109, 117, 115, 105, 99, 105, 97, 110] => lookup_815_112(acc),
            [105, 115, 45, 105, 110, 116, 111, 45, 97, 110, 105, 109, 101] => lookup_815_113(acc),
            [97, 102, 114, 105, 99, 97] => lookup_815_114(acc),
            [102, 114, 111, 109, 45, 99, 116] => lookup_815_115(acc),
            [105, 115, 45, 105, 110, 116, 111, 45, 99, 97, 114, 116, 111, 111, 110, 115] => {
                lookup_815_116(acc)
            }
            [97, 100, 111, 98, 101, 97, 101, 109, 99, 108, 111, 117, 100] => {
                lookup_815_117(labels, acc)
            }
            [112, 105, 120, 111, 108, 105, 110, 111] => lookup_815_118(acc),
            [105, 115, 45, 97, 110, 45, 101, 110, 116, 101, 114, 116, 97, 105, 110, 101, 114] => {
                lookup_815_119(acc)
            }
            [119, 105, 116, 104, 103, 111, 111, 103, 108, 101] => lookup_815_120(acc),
            [115, 101, 114, 118, 101, 112, 105, 99, 115] => lookup_815_121(acc),
            [109, 101, 120] => lookup_815_122(acc),
            [109, 121, 97, 115, 117, 115, 116, 111, 114] => lookup_815_123(acc),
            [103, 111, 116, 112, 97, 110, 116, 104, 101, 111, 110] => lookup_815_124(acc),
            [105, 115, 45, 97, 45, 108, 108, 97, 109, 97] => lookup_815_125(acc),
            [100, 110, 115, 97, 108, 105, 97, 115] => lookup_815_126(acc),
            [109, 121, 116, 104, 105, 99, 45, 98, 101, 97, 115, 116, 115] => {
                lookup_815_127(info, labels, acc)
            }
            [105, 109, 112, 101, 114, 116, 114, 105, 120] => lookup_815_128(acc),
            [99, 108, 111, 117, 100, 115, 119, 105, 116, 99, 104, 101, 115] => {
                lookup_815_129(info, labels, acc)
            }
            [98, 112, 108, 97, 99, 101, 100] => lookup_815_130(acc),
            [48, 101, 109, 109] => lookup_815_131(info, labels, acc),
            [102, 114, 111, 109, 45, 116, 120] => lookup_815_132(acc),
            [105, 115, 45, 97, 45, 103, 117, 114, 117] => lookup_815_133(acc),
            [111, 111, 103, 117, 121] => lookup_815_134(acc),
            [112, 97, 103, 101, 120, 108] => lookup_815_135(acc),
            [112, 108, 97, 121, 115, 116, 97, 116, 105, 111, 110, 45, 99, 108, 111, 117, 100] => {
                lookup_815_136(acc)
            }
            [102, 114, 111, 109, 45, 117, 116] => lookup_815_137(acc),
            [102, 114, 111, 109, 45, 119, 118] => lookup_815_138(acc),
            [105, 115, 45, 97, 45, 108, 97, 119, 121, 101, 114] => lookup_815_139(acc),
            [102, 114, 111, 109, 45, 119, 105] => lookup_815_140(acc),
            [119, 112, 109, 117, 99, 100, 110] => lookup_815_141(acc),
            [105, 115, 45, 97, 110, 45, 97, 99, 116, 111, 114] => lookup_815_142(acc),
            [104, 111, 115, 116, 101, 117, 114] => lookup_815_143(info, labels, acc),
            [111, 114, 115, 105, 116, 101, 115] => lookup_815_144(acc),
            [103, 105, 105, 122, 101] => lookup_815_145(acc),
            [109, 121, 115, 101, 99, 117, 114, 105, 116, 121, 99, 97, 109, 101, 114, 97] => {
                lookup_815_146(acc)
            }
            [104, 101, 114, 111, 107, 117, 97, 112, 112] => lookup_815_147(acc),
            [105, 115, 45, 97, 45, 98, 111, 111, 107, 107, 101, 101, 112, 101, 114] => {
                lookup_815_148(acc)
            }
            [109, 121, 116, 117, 108, 101, 97, 112] => lookup_815_149(acc),
            [115, 101, 114, 118, 101, 102, 116, 112] => lookup_815_150(acc),
            [104, 111, 109, 101, 115, 101, 99, 117, 114, 105, 116, 121, 112, 99] => {
                lookup_815_151(acc)
            }
            [112, 114, 103, 109, 114] => lookup_815_152(info, labels, acc),
            [97, 112, 112, 108, 105, 110, 122, 105] => lookup_815_153(acc),
            [100, 121, 110, 100, 110, 115, 45, 114, 101, 109, 111, 116, 101] => lookup_815_154(acc),
            [115, 101, 108, 102, 105, 112] => lookup_815_155(acc),
            [115, 101, 114, 118, 101, 109, 112, 51] => lookup_815_156(acc),
            [99, 105, 115, 99, 111, 102, 114, 101, 97, 107] => lookup_815_157(acc),
            [102, 114, 111, 109, 45, 110, 106] => lookup_815_158(acc),
            [100, 97, 109, 110, 115, 101, 114, 118, 101, 114] => lookup_815_159(acc),
            [115, 105, 110, 97, 97, 112, 112] => lookup_815_160(acc),
            [115, 116, 97, 99, 107, 104, 101, 114, 111, 45, 110, 101, 116, 119, 111, 114, 107] => {
                lookup_815_161(acc)
            }
            [115, 104, 111, 112, 105, 116, 115, 105, 116, 101] => lookup_815_162(acc),
            [120, 110, 98, 97, 121] => lookup_815_163(labels, acc),
            [122, 97] => lookup_815_164(acc),
            [102, 114, 111, 109, 45, 109, 105] => lookup_815_165(acc),
            [115, 101, 114, 118, 101, 98, 98, 115] => lookup_815_166(acc),
            [116, 101, 97, 99, 104, 101, 115, 45, 121, 111, 103, 97] => lookup_815_167(acc),
            [109, 105, 110, 105, 115, 101, 114, 118, 101, 114] => lookup_815_168(acc),
            [110, 101, 97, 116, 45, 117, 114, 108] => lookup_815_169(acc),
            [104, 111, 109, 101, 108, 105, 110, 117, 120] => lookup_815_170(acc),
            [109, 121, 97, 99, 116, 105, 118, 101, 100, 105, 114, 101, 99, 116, 111, 114, 121] => {
                lookup_815_171(acc)
            }
            [115, 101, 114, 118, 101, 103, 97, 109, 101] => lookup_815_172(acc),
            [102, 114, 111, 109, 45, 109, 115] => lookup_815_173(acc),
            [100, 121, 110, 100, 110, 115, 45, 109, 97, 105, 108] => lookup_815_174(acc),
            [105, 115, 45, 97, 45, 98, 108, 111, 103, 103, 101, 114] => lookup_815_175(acc),
            [102, 114, 111, 109, 45, 119, 97] => lookup_815_176(acc),
            [98, 114] => lookup_815_177(acc),
            [112, 97, 103, 101, 102, 114, 111, 110, 116, 97, 112, 112] => lookup_815_178(acc),
            [105, 115, 45, 97, 45, 115, 111, 99, 105, 97, 108, 105, 115, 116] => {
                lookup_815_179(acc)
            }
            [101, 118, 101, 110, 110, 111, 100, 101] => lookup_815_180(info, labels, acc),
            [103, 98] => lookup_815_181(acc),
            [116, 101, 109, 112, 45, 100, 110, 115] => lookup_815_182(acc),
            [102, 114, 111, 109, 45, 100, 99] => lookup_815_183(acc),
            [105, 115, 45, 97, 45, 99, 112, 97] => lookup_815_184(acc),
            [119, 97, 102, 97, 105, 99, 108, 111, 117, 100] => lookup_815_185(info, labels, acc),
            [116, 104, 105, 110, 103, 100, 117, 115, 116, 100, 97, 116, 97] => lookup_815_186(acc),
            [101, 115, 116, 45, 97, 45, 108, 97, 45, 109, 97, 115, 105, 111, 110] => {
                lookup_815_187(acc)
            }
            [116, 114, 121, 45, 115, 110, 111, 119, 112, 108, 111, 119] => lookup_815_188(acc),
            [102, 114, 111, 109, 45, 107, 115] => lookup_815_189(acc),
            [102, 114, 111, 109, 45, 97, 108] => lookup_815_190(acc),
            [102, 114, 111, 109, 45, 105, 108] => lookup_815_191(acc),
            [105, 115, 45, 97, 45, 108, 105, 98, 101, 114, 116, 97, 114, 105, 97, 110] => {
                lookup_815_192(acc)
            }
            [105, 115, 45, 97, 45, 112, 104, 111, 116, 111, 103, 114, 97, 112, 104, 101, 114] => {
                lookup_815_193(acc)
            }
            [97, 112, 112, 115, 112, 97, 99, 101, 117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => {
                lookup_815_194(acc)
            }
            [105, 115, 45, 97, 45, 112, 108, 97, 121, 101, 114] => lookup_815_195(acc),
            [103, 111, 111, 103, 108, 101, 99, 111, 100, 101] => lookup_815_196(acc),
            [108, 111, 103, 111, 105, 112] => lookup_815_197(acc),
            [100, 121, 110, 110, 115] => lookup_815_198(acc),
            [105, 115, 45, 97, 45, 98, 117, 108, 108, 115, 45, 102, 97, 110] => lookup_815_199(acc),
            [100, 114, 101, 97, 109, 104, 111, 115, 116, 101, 114, 115] => lookup_815_200(acc),
            [105, 115, 45, 97, 110, 45, 97, 99, 99, 111, 117, 110, 116, 97, 110, 116] => {
                lookup_815_201(acc)
            }
            [102, 114, 111, 109, 45, 112, 97] => lookup_815_202(acc),
            [105, 97, 109, 97, 108, 108, 97, 109, 97] => lookup_815_203(acc),
            [100, 97, 116, 116, 111, 114, 101, 108, 97, 121] => lookup_815_204(acc),
            [119, 114, 105, 116, 101, 115, 116, 104, 105, 115, 98, 108, 111, 103] => {
                lookup_815_205(acc)
            }
            [102, 114, 111, 109, 45, 109, 97] => lookup_815_206(acc),
            [102, 114, 111, 109, 45, 118, 97] => lookup_815_207(acc),
            [115, 101, 108, 108, 115, 45, 102, 111, 114, 45, 108, 101, 115, 115] => {
                lookup_815_208(acc)
            }
            [108, 105, 110, 111, 100, 101, 111, 98, 106, 101, 99, 116, 115] => {
                lookup_815_209(info, labels, acc)
            }
            [108, 105, 107, 101, 115, 99, 97, 110, 100, 121] => lookup_815_210(acc),
            [109, 101, 116, 101, 111, 114, 97, 112, 112] => lookup_815_211(labels, acc),
            [115, 107, 121, 103, 101, 97, 114, 97, 112, 112] => lookup_815_212(acc),
            [98, 97, 114, 115, 121, 99, 101, 110, 116, 101, 114] => lookup_815_213(acc),
            [116, 111, 119, 110, 110, 101, 119, 115, 45, 115, 116, 97, 103, 105, 110, 103] => {
                lookup_815_214(acc)
            }
            [105, 115, 45, 97, 45, 108, 97, 110, 100, 115, 99, 97, 112, 101, 114] => {
                lookup_815_215(acc)
            }
            [99, 108, 105, 99, 107, 101, 116, 99, 108, 111, 117, 100] => lookup_815_216(acc),
            [111, 110, 114, 101, 110, 100, 101, 114] => lookup_815_217(acc),
            [100, 121, 110, 100, 110, 115, 45, 119, 111, 114, 107] => lookup_815_218(acc),
            [97, 112, 112, 115, 112, 111, 116] => lookup_815_219(labels, acc),
            [104, 111, 109, 101, 115, 101, 99, 117, 114, 105, 116, 121, 109, 97, 99] => {
                lookup_815_220(acc)
            }
            [105, 100, 110, 98, 108, 111, 103, 103, 101, 114] => lookup_815_221(acc),
            [102, 114, 111, 109, 45, 119, 121] => lookup_815_222(acc),
            [105, 115, 45, 97, 45, 112, 97, 105, 110, 116, 101, 114] => lookup_815_223(acc),
            [102, 114, 111, 109, 45, 111, 104] => lookup_815_224(acc),
            [102, 114, 111, 109, 45, 114, 105] => lookup_815_225(acc),
            [102, 114, 111, 109, 45, 107, 121] => lookup_815_226(acc),
            [105, 115, 45, 97, 45, 103, 114, 101, 101, 110] => lookup_815_227(acc),
            [104, 101, 114, 111, 107, 117, 115, 115, 108] => lookup_815_228(acc),
            [115, 101, 114, 118, 101, 104, 116, 116, 112] => lookup_815_229(acc),
            [98, 101, 116, 97, 105, 110, 97, 98, 111, 120] => lookup_815_230(acc),
            [115, 101, 114, 118, 101, 113, 117, 97, 107, 101] => lookup_815_231(acc),
            [104, 111, 115, 116, 101, 100, 112, 105] => lookup_815_232(acc),
            [119, 112, 100, 101, 118, 99, 108, 111, 117, 100] => lookup_815_233(acc),
            [100, 121, 110, 100, 110, 115, 45, 104, 111, 109, 101] => lookup_815_234(acc),
            [105, 115, 45, 97, 45, 103, 101, 101, 107] => lookup_815_235(acc),
            [111, 112, 101, 114, 97, 117, 110, 105, 116, 101] => lookup_815_236(acc),
            [105, 115, 45, 97, 45, 116, 104, 101, 114, 97, 112, 105, 115, 116] => {
                lookup_815_237(acc)
            }
            [103, 101, 110, 116, 97, 112, 112, 115] => lookup_815_238(acc),
            [97, 108, 112, 104, 97, 45, 109, 121, 113, 110, 97, 112, 99, 108, 111, 117, 100] => {
                lookup_815_239(acc)
            }
            [117, 121] => lookup_815_240(acc),
            [113, 117, 105, 99, 107, 115, 121, 116, 101, 115] => lookup_815_241(acc),
            [113, 98, 117, 115, 101, 114] => lookup_815_242(acc),
            [105, 110, 100, 111, 119, 97, 112, 98, 108, 111, 103] => lookup_815_243(acc),
            [102, 114, 111, 109, 45, 102, 108] => lookup_815_244(acc),
            [102, 114, 111, 109, 45, 110, 109] => lookup_815_245(acc),
            [105, 115, 45, 103, 111, 110, 101] => lookup_815_246(acc),
            [113, 99] => lookup_815_247(acc),
            [115, 97, 118, 101, 115, 45, 116, 104, 101, 45, 119, 104, 97, 108, 101, 115] => {
                lookup_815_248(acc)
            }
            [98, 108, 111, 103, 115, 121, 116, 101] => lookup_815_249(acc),
            [106, 100, 101, 118, 99, 108, 111, 117, 100] => lookup_815_250(acc),
            [100, 121, 110, 100, 110, 115, 45, 111, 102, 102, 105, 99, 101] => lookup_815_251(acc),
            [115, 116, 117, 102, 102, 116, 111, 114, 101, 97, 100] => lookup_815_252(acc),
            [113, 117, 97, 108, 105, 102, 105, 111, 97, 112, 112] => lookup_815_253(acc),
            [98, 97, 108, 101, 110, 97, 45, 100, 101, 118, 105, 99, 101, 115] => {
                lookup_815_254(acc)
            }
            [102, 97, 115, 116, 108, 121, 45, 116, 101, 114, 114, 97, 114, 105, 117, 109] => {
                lookup_815_255(acc)
            }
            [100, 100, 110, 115, 103, 101, 101, 107] => lookup_815_256(acc),
            [100, 121, 110, 100, 110, 115, 45, 98, 108, 111, 103] => lookup_815_257(acc),
            [119, 112, 104, 111, 115, 116, 101, 100, 109, 97, 105, 108] => lookup_815_258(acc),
            [98, 97, 114, 115, 121, 111, 110, 108, 105, 110, 101] => lookup_815_259(acc),
            [115, 101, 114, 118, 101, 101, 120, 99, 104, 97, 110, 103, 101] => lookup_815_260(acc),
            [116, 114, 121, 99, 108, 111, 117, 100, 102, 108, 97, 114, 101] => lookup_815_261(acc),
            [105, 115, 45, 97, 45, 110, 97, 115, 99, 97, 114, 102, 97, 110] => lookup_815_262(acc),
            [115, 101, 114, 118, 101, 105, 114, 99] => lookup_815_263(acc),
            [105, 115, 45, 97, 45, 116, 101, 97, 99, 104, 101, 114] => lookup_815_264(acc),
            [100, 121, 110, 100, 110, 115, 45, 119, 105, 107, 105] => lookup_815_265(acc),
            [102, 114, 111, 109, 45, 109, 100] => lookup_815_266(acc),
            [109, 121, 100, 111, 98, 105, 115, 115] => lookup_815_267(acc),
            [103, 105, 116, 104, 117, 98, 117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => {
                lookup_815_268(acc)
            }
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_815_269(info, labels, acc),
            [104, 101, 97, 108, 116, 104, 45, 99, 97, 114, 101, 114, 101, 102, 111, 114, 109] => {
                lookup_815_270(acc)
            }
            [115, 101, 114, 118, 101, 104, 117, 109, 111, 117, 114] => lookup_815_271(acc),
            [115, 105, 109, 112, 108, 101, 45, 117, 114, 108] => lookup_815_272(acc),
            [117, 115] => lookup_815_273(acc),
            [105, 115, 45, 119, 105, 116, 104, 45, 116, 104, 101, 98, 97, 110, 100] => {
                lookup_815_274(acc)
            }
            [109, 121, 118, 110, 99] => lookup_815_275(acc),
            [102, 114, 111, 109, 45, 111, 114] => lookup_815_276(acc),
            [111, 98, 115, 101, 114, 118, 97, 98, 108, 101, 117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => {
                lookup_815_277(info, labels, acc)
            }
            [105, 115, 45, 108, 101, 101, 116] => lookup_815_278(acc),
            [99, 111, 100, 101, 115, 112, 111, 116] => lookup_815_279(acc),
            [105, 115, 45, 97, 45, 104, 97, 114, 100, 45, 119, 111, 114, 107, 101, 114] => {
                lookup_815_280(acc)
            }
            [115, 112, 97, 99, 101, 45, 116, 111, 45, 114, 101, 110, 116] => lookup_815_281(acc),
            [100, 121, 110, 100, 110, 115, 45, 102, 114, 101, 101] => lookup_815_282(acc),
            [99, 101, 99, 104, 105, 114, 101] => lookup_815_283(acc),
            [108, 112, 117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => lookup_815_284(acc),
            [104, 107] => lookup_815_285(acc),
            [114, 101, 109, 111, 116, 101, 119, 100] => lookup_815_286(acc),
            [102, 114, 111, 109, 45, 110, 118] => lookup_815_287(acc),
            [105, 115, 45, 105, 110, 116, 111, 45, 103, 97, 109, 101, 115] => lookup_815_288(acc),
            [115, 101, 114, 118, 101, 98, 101, 101, 114] => lookup_815_289(acc),
            [110, 101, 116, 45, 102, 114, 101, 97, 107, 115] => lookup_815_290(acc),
            [52, 117] => lookup_815_291(acc),
            [103, 111, 111, 103, 108, 101, 97, 112, 105, 115] => lookup_815_292(acc),
            [108, 105, 110, 111, 100, 101] => lookup_815_293(info, labels, acc),
            [119, 105, 97, 114, 100, 119, 101, 98] => lookup_815_294(info, labels, acc),
            [112, 103, 102, 111, 103] => lookup_815_295(acc),
            [102, 105, 114, 101, 98, 97, 115, 101, 97, 112, 112] => lookup_815_296(acc),
            [103, 108, 101, 101, 122, 101] => lookup_815_297(acc),
            [116, 104, 101, 119, 111, 114, 107, 112, 99] => lookup_815_298(acc),
            [105, 109, 112, 101, 114, 116, 114, 105, 120, 99, 100, 110] => lookup_815_299(acc),
            [108, 105, 107, 101, 115, 45, 112, 105, 101] => lookup_815_300(acc),
            [115, 99, 114, 121, 115, 101, 99] => lookup_815_301(acc),
            [105, 115, 45, 97, 45, 104, 117, 110, 116, 101, 114] => lookup_815_302(acc),
            [119, 105, 116, 104, 121, 111, 117, 116, 117, 98, 101] => lookup_815_303(acc),
            [100, 115, 109, 121, 110, 97, 115] => lookup_815_304(acc),
            [105, 115, 45, 110, 111, 116, 45, 99, 101, 114, 116, 105, 102, 105, 101, 100] => {
                lookup_815_305(acc)
            }
            [103, 114] => lookup_815_306(acc),
            [111, 110, 45, 97, 112, 116, 105, 98, 108, 101] => lookup_815_307(acc),
            [103, 101, 116, 109, 121, 105, 112] => lookup_815_308(acc),
            [97, 119, 115, 103, 108, 111, 98, 97, 108, 97, 99, 99, 101, 108, 101, 114, 97, 116, 111, 114] => {
                lookup_815_309(acc)
            }
            [101, 108, 97, 115, 116, 121, 99, 111] => lookup_815_310(labels, acc),
            [100, 121, 110, 100, 110, 115, 45, 97, 116, 45, 104, 111, 109, 101] => {
                lookup_815_311(acc)
            }
            [98, 108, 111, 103, 100, 110, 115] => lookup_815_312(acc),
            [105, 115, 45, 97, 110, 45, 97, 114, 116, 105, 115, 116] => lookup_815_313(acc),
            [109, 121, 100, 97, 116, 116, 111] => lookup_815_314(acc),
            [105, 115, 45, 97, 45, 116, 101, 99, 104, 105, 101] => lookup_815_315(acc),
            [100, 100, 110, 115, 102, 114, 101, 101] => lookup_815_316(acc),
            [110, 111] => lookup_815_317(acc),
            [99, 108, 111, 117, 100, 99, 111, 110, 116, 114, 111, 108, 97, 112, 112] => {
                lookup_815_318(acc)
            }
            [98, 117, 105, 108, 116, 119, 105, 116, 104, 100, 97, 114, 107] => lookup_815_319(acc),
            [100, 100, 110, 115, 107, 105, 110, 103] => lookup_815_320(acc),
            [105, 115, 45, 97, 45, 97, 110, 97, 114, 99, 104, 105, 115, 116] => lookup_815_321(acc),
            [115, 101, 114, 118, 101, 112, 50, 112] => lookup_815_322(acc),
            [100, 101, 118, 45, 109, 121, 113, 110, 97, 112, 99, 108, 111, 117, 100] => {
                lookup_815_323(acc)
            }
            [102, 114, 111, 109, 45, 115, 100] => lookup_815_324(acc),
            [100, 105, 116, 99, 104, 121, 111, 117, 114, 105, 112] => lookup_815_325(acc),
            [115, 101, 114, 118, 101, 104, 97, 108, 102, 108, 105, 102, 101] => lookup_815_326(acc),
            [114, 104, 99, 108, 111, 117, 100] => lookup_815_327(acc),
            [100, 114, 97, 121, 100, 100, 110, 115] => lookup_815_328(acc),
            [115, 97] => lookup_815_329(acc),
            [105, 115, 45, 117, 98, 101, 114, 108, 101, 101, 116] => lookup_815_330(acc),
            [107, 111, 122, 111, 119] => lookup_815_331(acc),
            [109, 121, 115, 104, 111, 112, 105, 102, 121] => lookup_815_332(acc),
            [118, 105, 112, 115, 105, 110, 97, 97, 112, 112] => lookup_815_333(acc),
            [105, 115, 45, 97, 45, 114, 111, 99, 107, 115, 116, 97, 114] => lookup_815_334(acc),
            [100, 121, 110, 100, 110, 115, 45, 119, 101, 98] => lookup_815_335(acc),
            [100, 111, 112, 97, 97, 115] => lookup_815_336(acc),
            [109, 121, 114, 97, 118, 101, 110, 100, 98] => lookup_815_337(acc),
            [101, 117] => lookup_815_338(acc),
            [48, 48, 49, 119, 119, 119] => lookup_815_339(acc),
            [106, 112, 110] => lookup_815_340(acc),
            [105, 115, 45, 105, 110, 116, 111, 45, 99, 97, 114, 115] => lookup_815_341(acc),
            [112, 117, 98, 108, 105, 115, 104, 112, 114, 111, 120, 121] => lookup_815_342(acc),
            [111, 110, 116, 104, 101, 119, 105, 102, 105] => lookup_815_343(acc),
            [100, 121, 110, 100, 110, 115, 45, 97, 116, 45, 119, 111, 114, 107] => {
                lookup_815_344(acc)
            }
            [51, 117, 116, 105, 108, 105, 116, 105, 101, 115] => lookup_815_345(acc),
            [113, 117, 105, 112, 101, 108, 101, 109, 101, 110, 116, 115] => {
                lookup_815_346(info, labels, acc)
            }
            [102, 114, 111, 109, 45, 104, 105] => lookup_815_347(acc),
            [109, 121, 105, 112, 104, 111, 115, 116] => lookup_815_348(acc),
            [102, 114, 111, 109, 45, 103, 97] => lookup_815_349(acc),
            [102, 114, 111, 109, 45, 105, 110] => lookup_815_350(acc),
            [105, 115, 45, 97, 45, 102, 105, 110, 97, 110, 99, 105, 97, 108, 97, 100, 118, 105, 115, 111, 114] => {
                lookup_815_351(acc)
            }
            [115, 101, 108, 108, 115, 45, 102, 111, 114, 45, 117] => lookup_815_352(acc),
            [100, 100, 110, 115, 108, 105, 118, 101] => lookup_815_353(acc),
            [115, 101, 114, 118, 101, 99, 111, 117, 110, 116, 101, 114, 115, 116, 114, 105, 107, 101] => {
                lookup_815_354(acc)
            }
            [112, 108, 101, 115, 107, 110, 115] => lookup_815_355(acc),
            [104, 105, 100, 111, 114, 97] => lookup_815_356(acc),
            [103, 101, 101, 107, 103, 97, 108, 97, 120, 121] => lookup_815_357(acc),
            [97, 109, 97, 122, 111, 110, 97, 119, 115] => lookup_815_358(info, labels, acc),
            [100, 121, 110, 100, 110, 115, 45, 115, 101, 114, 118, 101, 114] => lookup_815_359(acc),
            [109, 121, 100, 114, 111, 98, 111] => lookup_815_360(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_816() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_817() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_819_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_819_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_819_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_819_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_819_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_819_3<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 108, 99] => lookup_819_3_0(acc),
            [108, 116, 100] => lookup_819_3_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_819_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_819_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_819_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_819_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_819_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_819<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 116] => lookup_819_0(acc),
            [97, 99] => lookup_819_1(acc),
            [116, 118] => lookup_819_2(acc),
            [99, 111] => lookup_819_3(labels, acc),
            [110, 101, 116] => lookup_819_4(acc),
            [111, 114, 103] => lookup_819_5(acc),
            [99, 111, 109] => lookup_819_6(acc),
            [114, 111] => lookup_819_7(acc),
            [110, 111, 109] => lookup_819_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_820_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_820_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_820_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_820_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_820_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_820_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_820_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_820_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_820_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_820_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_820_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_820_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_820_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_820_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_820<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 97, 109] => lookup_820_0(acc),
            [103, 111, 107] => lookup_820_1(acc),
            [101, 100, 117] => lookup_820_2(acc),
            [98, 105, 122] => lookup_820_3(acc),
            [119, 101, 98] => lookup_820_4(acc),
            [103, 111, 110] => lookup_820_5(acc),
            [110, 101, 116] => lookup_820_6(acc),
            [111, 114, 103] => lookup_820_7(acc),
            [103, 111, 115] => lookup_820_8(acc),
            [99, 111, 109] => lookup_820_9(acc),
            [103, 111, 118] => lookup_820_10(acc),
            [105, 110, 102, 111] => lookup_820_11(acc),
            [103, 111, 98] => lookup_820_12(acc),
            [103, 111, 112] => lookup_820_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_821() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_822() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_823() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_824_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_824_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_824_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_824_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_824_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_824_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_824_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_824<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_824_0(acc),
            [111, 114, 103] => lookup_824_1(acc),
            [115, 99, 104] => lookup_824_2(acc),
            [103, 111, 118] => lookup_824_3(acc),
            [101, 100, 117] => lookup_824_4(acc),
            [99, 111, 109] => lookup_824_5(acc),
            [109, 101] => lookup_824_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_825() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_826() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_827() -> Info {
    Info {
        len: 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_828() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_829() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_830() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 25usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 29usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 28usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_158(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_162(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_163(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_164(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_165(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_166(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_167(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_168(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_169(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_170(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_171(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_172(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_173(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_174(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_175(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_176(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_177(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_178(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_179(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_180(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_181(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_182(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_183(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_184(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_185(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_186(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_187(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_188(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_189(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_190(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_191(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_192(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_193(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_194(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_195(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_196(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_197(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_198(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_199(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_200(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_201(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_202(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_203(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_204(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_205(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_206(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_207(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_208(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_209(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_210(acc: usize) -> Info {
    Info {
        len: acc + 1 + 36usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_211(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_212(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_213(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_214(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_215(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_216(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_217(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_218(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_219(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_220(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_221(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_222(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_223(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_224(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_225(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_226(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_227(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_228(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_229(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_230(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_231(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_232(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_233(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_234(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_235(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_236(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_237(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_238(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_239(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_240(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_241(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_242(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_243(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_244(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_245(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_246(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_247(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_248(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_249(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_250(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_251(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_252(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_253(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_254(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_255(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_256(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_257(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_258(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_259(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_260(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_261(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_262(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_263(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_264(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_265(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_266(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_267(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_268(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_269(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_270(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_271(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_272(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_273(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_274(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_275(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_276(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_277(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_278(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_279(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_280(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_281(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_282(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_283(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_284(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_285(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_286(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_287(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_288(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_289(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_290(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_291(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_292(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_293(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_294(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_295(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_296(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_297(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_298(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_299(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_300(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_301(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_302(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_303(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_304(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_305(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_306(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_307(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_308(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_309(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_310(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_311(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_312(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_313(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_314(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_315(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_316(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_317(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_318(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_319(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_320(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_321(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_322(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_323(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_324(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_325(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_326(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_327(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_328(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_329(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_330(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_331(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_332(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_333(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_334(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_335(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_336(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_337(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_338(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_339(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_340(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_341(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_342(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_343(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_344(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_345(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_346(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_347(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_348(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_349(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_350(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_351(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_352(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_353(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_354(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_355(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_356(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_357(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_358(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_359(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_360(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_361(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_362(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_363(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_364(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_365(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_366(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_367(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_368(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_369(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_370(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_371(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_372(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_373(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_374(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_375(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_376(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_377(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_378(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_379(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_380(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_381(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_382(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_383(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_384(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_385(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_386(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_387(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_388(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_389(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_390(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_391(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_392(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_393(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_394(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_395(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_396(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_397(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_398(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_399(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_400(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_401(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_402(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_403(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_404(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_405(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_406(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_407(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_408(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_409(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_410(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_411(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_412(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_413(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_414(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_415(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_416(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_417(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_418(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_419(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_420(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_421(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_422(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_423(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_424(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_425(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_426(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_427(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_428(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_429(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_430(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_431(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_432(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_433(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_434(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_435(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_436(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_437(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_438(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_439(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_440(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_441(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_442(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_443(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_444(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_445(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_446(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_447(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_448(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_449(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_450(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_451(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_452(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_453(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_454(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_455(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_456(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_457(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_458(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_459(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_460(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_461(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_462(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_463(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_464(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_465(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_466(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_467(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_468(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_469(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_470(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_471(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_472(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_473(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_474(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_475(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_476(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_477(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_478(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_479(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_480(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_481(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_482(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_483(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_484(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_485(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_486(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_487(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_488(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_489(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_490(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_491(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_492(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_493(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_494(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_495(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_496(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_497(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_498(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_499(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_500(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_501(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_502(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_503(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_504(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_505(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_506(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_507(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_508(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_509(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_510(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_511(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_512(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_513(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_514(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_515(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_516(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_517(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_518(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_519(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_520(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_521(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_522(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_523(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_524(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_525(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_526(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_527(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_528(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_529(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_530(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_531(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_532(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_533(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_534(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_535(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_536(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_537(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_538(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_539(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_540(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_541(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_542(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_543(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_544(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_545(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_546(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_547(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_548(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_549(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832_550(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 97, 108, 122, 98, 117, 114, 103] => lookup_832_0(acc),
            [97, 109, 101, 114, 105, 99, 97, 110, 97, 110, 116, 105, 113, 117, 101, 115] => {
                lookup_832_1(acc)
            }
            [101, 110, 118, 105, 114, 111, 110, 109, 101, 110, 116, 97, 108, 99, 111, 110, 115, 101, 114, 118, 97, 116, 105, 111, 110] => {
                lookup_832_2(acc)
            }
            [112, 108, 97, 110, 101, 116, 97, 114, 105, 117, 109] => lookup_832_3(acc),
            [115, 99, 105, 101, 110, 99, 101, 99, 101, 110, 116, 101, 114] => lookup_832_4(acc),
            [101, 100, 117, 99, 97, 116, 105, 111, 110, 97, 108] => lookup_832_5(acc),
            [108, 97, 98, 111, 114] => lookup_832_6(acc),
            [99, 111, 114, 114, 101, 105, 111, 115, 45, 101, 45, 116, 101, 108, 101, 99, 111, 109, 117, 110, 105, 99, 97, 195, 167, 195, 181, 101, 115] => {
                lookup_832_7(acc)
            }
            [118, 105, 108, 108, 97, 103, 101] => lookup_832_8(acc),
            [99, 97, 115, 116, 108, 101] => lookup_832_9(acc),
            [115, 104, 101, 114, 98, 114, 111, 111, 107, 101] => lookup_832_10(acc),
            [97, 109, 101, 114, 105, 99, 97, 110] => lookup_832_11(acc),
            [98, 97, 117, 101, 114, 110] => lookup_832_12(acc),
            [99, 97, 114, 116, 111, 111, 110, 97, 114, 116] => lookup_832_13(acc),
            [112, 108, 97, 110, 116, 115] => lookup_832_14(acc),
            [115, 97, 105, 110, 116, 108, 111, 117, 105, 115] => lookup_832_15(acc),
            [97, 114, 116, 97, 110, 100, 100, 101, 115, 105, 103, 110] => lookup_832_16(acc),
            [101, 97, 115, 116, 97, 102, 114, 105, 99, 97] => lookup_832_17(acc),
            [99, 114, 101, 97, 116, 105, 111, 110] => lookup_832_18(acc),
            [112, 111, 115, 116, 115, 45, 97, 110, 100, 45, 116, 101, 108, 101, 99, 111, 109, 109, 117, 110, 105, 99, 97, 116, 105, 111, 110, 115] => {
                lookup_832_19(acc)
            }
            [115, 111, 99, 105, 101, 116, 121] => lookup_832_20(acc),
            [115, 97, 110, 116, 97, 102, 101] => lookup_832_21(acc),
            [118, 97, 110, 116, 97, 97] => lookup_832_22(acc),
            [103, 114, 97, 110, 100, 114, 97, 112, 105, 100, 115] => lookup_832_23(acc),
            [114, 101, 115, 101, 97, 114, 99, 104] => lookup_832_24(acc),
            [97, 115, 109, 97, 116, 97, 114, 116] => lookup_832_25(acc),
            [99, 111, 117, 110, 116, 114, 121, 101, 115, 116, 97, 116, 101] => lookup_832_26(acc),
            [98, 114, 105, 115, 116, 111, 108] => lookup_832_27(acc),
            [115, 116, 117, 116, 116, 103, 97, 114, 116] => lookup_832_28(acc),
            [102, 97, 109, 105, 108, 121] => lookup_832_29(acc),
            [102, 105, 108, 109] => lookup_832_30(acc),
            [105, 110, 100, 105, 97, 110] => lookup_832_31(acc),
            [116, 111, 114, 105, 110, 111] => lookup_832_32(acc),
            [112, 104, 111, 116, 111, 103, 114, 97, 112, 104, 121] => lookup_832_33(acc),
            [99, 114, 97, 102, 116, 115] => lookup_832_34(acc),
            [99, 97, 112, 101, 98, 114, 101, 116, 111, 110] => lookup_832_35(acc),
            [109, 105, 108, 105, 116, 97, 114, 121] => lookup_832_36(acc),
            [115, 117, 114, 103, 101, 111, 110, 115, 104, 97, 108, 108] => lookup_832_37(acc),
            [112, 97, 108, 97, 99, 101] => lookup_832_38(acc),
            [115, 97, 110, 116, 97, 99, 114, 117, 122] => lookup_832_39(acc),
            [115, 111, 108, 111, 103, 110, 101] => lookup_832_40(acc),
            [108, 97, 110, 99, 97, 115, 104, 105, 114, 101] => lookup_832_41(acc),
            [99, 105, 118, 105, 108, 119, 97, 114] => lookup_832_42(acc),
            [104, 101, 108, 108, 97, 115] => lookup_832_43(acc),
            [109, 97, 110, 99, 104, 101, 115, 116, 101, 114] => lookup_832_44(acc),
            [115, 97, 115, 107, 97, 116, 99, 104, 101, 119, 97, 110] => lookup_832_45(acc),
            [115, 97, 108, 101, 109] => lookup_832_46(acc),
            [112, 105, 116, 116, 115, 98, 117, 114, 103, 104] => lookup_832_47(acc),
            [107, 111, 101, 98, 101, 110, 104, 97, 118, 110] => lookup_832_48(acc),
            [97, 109, 98, 101, 114] => lookup_832_49(acc),
            [106, 101, 119, 105, 115, 104, 97, 114, 116] => lookup_832_50(acc),
            [111, 114, 101, 103, 111, 110, 116, 114, 97, 105, 108] => lookup_832_51(acc),
            [104, 111, 114, 111, 108, 111, 103, 121] => lookup_832_52(acc),
            [117, 115, 99, 111, 117, 110, 116, 114, 121, 101, 115, 116, 97, 116, 101] => {
                lookup_832_53(acc)
            }
            [99, 114, 97, 110, 98, 114, 111, 111, 107] => lookup_832_54(acc),
            [116, 101, 108, 101, 118, 105, 115, 105, 111, 110] => lookup_832_55(acc),
            [112, 97, 100, 101, 114, 98, 111, 114, 110] => lookup_832_56(acc),
            [110, 111, 114, 116, 104] => lookup_832_57(acc),
            [98, 101, 114, 103, 98, 97, 117] => lookup_832_58(acc),
            [111, 110, 108, 105, 110, 101] => lookup_832_59(acc),
            [107, 117, 110, 115, 116, 115, 97, 109, 109, 108, 117, 110, 103] => lookup_832_60(acc),
            [100, 105, 110, 111, 115, 97, 117, 114] => lookup_832_61(acc),
            [118, 97, 108, 108, 101, 121] => lookup_832_62(acc),
            [100, 101, 112, 111, 116] => lookup_832_63(acc),
            [116, 114, 111, 108, 108, 101, 121] => lookup_832_64(acc),
            [109, 101, 100, 105, 97] => lookup_832_65(acc),
            [111, 109, 97, 104, 97] => lookup_832_66(acc),
            [100, 101, 115, 105, 103, 110] => lookup_832_67(acc),
            [97, 114, 116, 115] => lookup_832_68(acc),
            [121, 111, 114, 107, 115, 104, 105, 114, 101] => lookup_832_69(acc),
            [98, 114, 117, 120, 101, 108, 108, 101, 115] => lookup_832_70(acc),
            [109, 117, 101, 110, 115, 116, 101, 114] => lookup_832_71(acc),
            [110, 97, 118, 97, 108] => lookup_832_72(acc),
            [109, 117, 115, 101, 117, 109, 118, 101, 114, 101, 110, 105, 103, 105, 110, 103] => {
                lookup_832_73(acc)
            }
            [122, 111, 111, 108, 111, 103, 105, 99, 97, 108] => lookup_832_74(acc),
            [104, 97, 114, 118, 101, 115, 116, 99, 101, 108, 101, 98, 114, 97, 116, 105, 111, 110] => {
                lookup_832_75(acc)
            }
            [115, 116, 101, 105, 101, 114, 109, 97, 114, 107] => lookup_832_76(acc),
            [99, 111, 108, 100, 119, 97, 114] => lookup_832_77(acc),
            [97, 110, 100] => lookup_832_78(acc),
            [101, 110, 103, 108, 97, 110, 100] => lookup_832_79(acc),
            [99, 111, 97, 115, 116, 97, 108, 100, 101, 102, 101, 110, 99, 101] => {
                lookup_832_80(acc)
            }
            [99, 97, 100, 97, 113, 117, 101, 115] => lookup_832_81(acc),
            [109, 105, 108, 108] => lookup_832_82(acc),
            [109, 117, 101, 110, 99, 104, 101, 110] => lookup_832_83(acc),
            [99, 111, 108, 117, 109, 98, 105, 97] => lookup_832_84(acc),
            [101, 109, 98, 114, 111, 105, 100, 101, 114, 121] => lookup_832_85(acc),
            [106, 117, 100, 97, 105, 99, 97] => lookup_832_86(acc),
            [101, 120, 104, 105, 98, 105, 116, 105, 111, 110] => lookup_832_87(acc),
            [114, 111, 99, 107, 97, 114, 116] => lookup_832_88(acc),
            [97, 114, 98, 111, 114, 101, 116, 117, 109] => lookup_832_89(acc),
            [112, 111, 114, 116, 97, 108] => lookup_832_90(acc),
            [97, 114, 116, 100, 101, 99, 111] => lookup_832_91(acc),
            [102, 114, 97, 110, 99, 97, 105, 115, 101] => lookup_832_92(acc),
            [97, 103, 114, 105, 99, 117, 108, 116, 117, 114, 101] => lookup_832_93(acc),
            [117, 110, 105, 118, 101, 114, 115, 105, 116, 121] => lookup_832_94(acc),
            [117, 115, 97] => lookup_832_95(acc),
            [99, 111, 110, 118, 101, 110, 116] => lookup_832_96(acc),
            [99, 111, 109, 109, 117, 110, 105, 99, 97, 116, 105, 111, 110] => lookup_832_97(acc),
            [100, 97, 108, 108, 97, 115] => lookup_832_98(acc),
            [105, 110, 100, 105, 97, 110, 97, 112, 111, 108, 105, 115] => lookup_832_99(acc),
            [103, 114, 97, 122] => lookup_832_100(acc),
            [100, 101, 116, 114, 111, 105, 116] => lookup_832_101(acc),
            [117, 115, 97, 114, 116, 115] => lookup_832_102(acc),
            [115, 116, 111, 99, 107, 104, 111, 108, 109] => lookup_832_103(acc),
            [112, 97, 108, 109, 115, 112, 114, 105, 110, 103, 115] => lookup_832_104(acc),
            [115, 111, 117, 116, 104, 119, 101, 115, 116] => lookup_832_105(acc),
            [115, 101, 116, 116, 108, 101, 114, 115] => lookup_832_106(acc),
            [99, 111, 108, 108, 101, 99, 116, 105, 111, 110] => lookup_832_107(acc),
            [103, 105, 101, 115, 115, 101, 110] => lookup_832_108(acc),
            [99, 97, 110] => lookup_832_109(acc),
            [109, 105, 110, 101, 114, 115] => lookup_832_110(acc),
            [102, 105, 101, 108, 100] => lookup_832_111(acc),
            [115, 97, 110, 100, 105, 101, 103, 111] => lookup_832_112(acc),
            [115, 101, 97, 112, 111, 114, 116] => lookup_832_113(acc),
            [99, 111, 108, 117, 109, 98, 117, 115] => lookup_832_114(acc),
            [110, 97, 116, 117, 114, 104, 105, 115, 116, 111, 114, 105, 115, 99, 104, 101, 115] => {
                lookup_832_115(acc)
            }
            [115, 104, 101, 108, 108] => lookup_832_116(acc),
            [99, 104, 105, 108, 100, 114, 101, 110, 115] => lookup_832_117(acc),
            [97, 115, 115, 97, 115, 115, 105, 110, 97, 116, 105, 111, 110] => lookup_832_118(acc),
            [116, 97, 110, 107] => lookup_832_119(acc),
            [106, 117, 101, 100, 105, 115, 99, 104, 101, 115] => lookup_832_120(acc),
            [98, 105, 108, 108] => lookup_832_121(acc),
            [101, 112, 105, 108, 101, 112, 115, 121] => lookup_832_122(acc),
            [101, 116, 104, 110, 111, 108, 111, 103, 121] => lookup_832_123(acc),
            [97, 110, 116, 104, 114, 111, 112, 111, 108, 111, 103, 121] => lookup_832_124(acc),
            [99, 101, 110, 116, 101, 114] => lookup_832_125(acc),
            [105, 109, 97, 103, 101, 97, 110, 100, 115, 111, 117, 110, 100] => lookup_832_126(acc),
            [109, 101, 100, 105, 122, 105, 110, 104, 105, 115, 116, 111, 114, 105, 115, 99, 104, 101, 115] => {
                lookup_832_127(acc)
            }
            [112, 104, 105, 108, 97, 116, 101, 108, 121] => lookup_832_128(acc),
            [102, 111, 114, 116, 109, 105, 115, 115, 111, 117, 108, 97] => lookup_832_129(acc),
            [98, 117, 105, 108, 100, 105, 110, 103] => lookup_832_130(acc),
            [101, 110, 99, 121, 99, 108, 111, 112, 101, 100, 105, 99] => lookup_832_131(acc),
            [112, 108, 97, 110, 116, 97, 116, 105, 111, 110] => lookup_832_132(acc),
            [112, 117, 98, 111, 108] => lookup_832_133(acc),
            [97, 116, 108, 97, 110, 116, 97] => lookup_832_134(acc),
            [110, 97, 117, 109, 98, 117, 114, 103] => lookup_832_135(acc),
            [115, 112, 97, 99, 101] => lookup_832_136(acc),
            [101, 108, 118, 101, 110, 100, 114, 101, 108, 108] => lookup_832_137(acc),
            [114, 111, 109, 97] => lookup_832_138(acc),
            [104, 117, 109, 97, 110, 105, 116, 105, 101, 115] => lookup_832_139(acc),
            [97, 114, 99, 104, 97, 101, 111, 108, 111, 103, 121] => lookup_832_140(acc),
            [109, 101, 100, 105, 99, 97, 108] => lookup_832_141(acc),
            [117, 115, 104, 105, 115, 116, 111, 114, 121] => lookup_832_142(acc),
            [119, 105, 108, 108, 105, 97, 109, 115, 98, 117, 114, 103] => lookup_832_143(acc),
            [99, 111, 109, 112, 117, 116, 101, 114] => lookup_832_144(acc),
            [103, 101, 111, 114, 103, 105, 97] => lookup_832_145(acc),
            [119, 101, 115, 116, 101, 114, 110] => lookup_832_146(acc),
            [99, 121, 98, 101, 114] => lookup_832_147(acc),
            [97, 109, 98, 117, 108, 97, 110, 99, 101] => lookup_832_148(acc),
            [105, 110, 116, 101, 108, 108, 105, 103, 101, 110, 99, 101] => lookup_832_149(acc),
            [118, 101, 114, 115, 97, 105, 108, 108, 101, 115] => lookup_832_150(acc),
            [102, 105, 110, 101, 97, 114, 116] => lookup_832_151(acc),
            [119, 97, 108, 101, 115] => lookup_832_152(acc),
            [112, 114, 111, 106, 101, 99, 116] => lookup_832_153(acc),
            [97, 120, 105, 115] => lookup_832_154(acc),
            [109, 97, 100] => lookup_832_155(acc),
            [115, 97, 116, 120] => lookup_832_156(acc),
            [102, 97, 114, 109, 101, 114, 115] => lookup_832_157(acc),
            [110, 97, 116, 105, 111, 110, 97, 108, 102, 105, 114, 101, 97, 114, 109, 115] => {
                lookup_832_158(acc)
            }
            [102, 97, 114, 109] => lookup_832_159(acc),
            [103, 108, 97, 115, 115] => lookup_832_160(acc),
            [116, 104, 101, 97, 116, 101, 114] => lookup_832_161(acc),
            [108, 111, 115, 97, 110, 103, 101, 108, 101, 115] => lookup_832_162(acc),
            [110, 97, 116, 117, 114, 101] => lookup_832_163(acc),
            [119, 104, 97, 108, 105, 110, 103] => lookup_832_164(acc),
            [115, 99, 104, 111, 107, 111, 108, 97, 100, 101, 110] => lookup_832_165(acc),
            [109, 111, 110, 101, 121] => lookup_832_166(acc),
            [109, 97, 100, 114, 105, 100] => lookup_832_167(acc),
            [108, 111, 99, 97, 108, 104, 105, 115, 116, 111, 114, 121] => lookup_832_168(acc),
            [106, 101, 114, 117, 115, 97, 108, 101, 109] => lookup_832_169(acc),
            [97, 114, 116, 99, 101, 110, 116, 101, 114] => lookup_832_170(acc),
            [98, 105, 114, 100, 97, 114, 116] => lookup_832_171(acc),
            [109, 97, 110, 115, 105, 111, 110] => lookup_832_172(acc),
            [97, 113, 117, 97, 114, 105, 117, 109] => lookup_832_173(acc),
            [112, 111, 114, 116, 108, 97, 110, 100] => lookup_832_174(acc),
            [115, 99, 104, 119, 101, 105, 122] => lookup_832_175(acc),
            [97, 117, 115, 116, 114, 97, 108, 105, 97] => lookup_832_176(acc),
            [208, 184, 208, 186, 208, 190, 208, 188] => lookup_832_177(acc),
            [110, 101, 119, 115, 112, 97, 112, 101, 114] => lookup_832_178(acc),
            [119, 105, 108, 100, 108, 105, 102, 101] => lookup_832_179(acc),
            [111, 110, 116, 97, 114, 105, 111] => lookup_832_180(acc),
            [97, 114, 116, 103, 97, 108, 108, 101, 114, 121] => lookup_832_181(acc),
            [97, 110, 116, 104, 114, 111] => lookup_832_182(acc),
            [118, 105, 114, 116, 117, 101, 108] => lookup_832_183(acc),
            [108, 117, 120, 101, 109, 98, 111, 117, 114, 103] => lookup_832_184(acc),
            [104, 97, 109, 98, 117, 114, 103] => lookup_832_185(acc),
            [115, 97, 110, 116, 97, 98, 97, 114, 98, 97, 114, 97] => lookup_832_186(acc),
            [115, 116, 97, 116, 101] => lookup_832_187(acc),
            [103, 117, 101, 114, 110, 115, 101, 121] => lookup_832_188(acc),
            [108, 97, 106, 111, 108, 108, 97] => lookup_832_189(acc),
            [116, 114, 97, 110, 115, 112, 111, 114, 116] => lookup_832_190(acc),
            [97, 117, 116, 111, 109, 111, 116, 105, 118, 101] => lookup_832_191(acc),
            [100, 101, 108, 109, 101, 110, 104, 111, 114, 115, 116] => lookup_832_192(acc),
            [115, 99, 105, 101, 110, 99, 101, 115] => lookup_832_193(acc),
            [108, 105, 110, 122] => lookup_832_194(acc),
            [99, 104, 105, 99, 97, 103, 111] => lookup_832_195(acc),
            [113, 117, 101, 98, 101, 99] => lookup_832_196(acc),
            [109, 111, 115, 99, 111, 119] => lookup_832_197(acc),
            [98, 114, 97, 110, 100, 121, 119, 105, 110, 101, 118, 97, 108, 108, 101, 121] => {
                lookup_832_198(acc)
            }
            [101, 100, 117, 99, 97, 116, 105, 111, 110] => lookup_832_199(acc),
            [98, 101, 114, 108, 105, 110] => lookup_832_200(acc),
            [98, 101, 108, 108, 101, 118, 117, 101] => lookup_832_201(acc),
            [103, 101, 109, 111, 108, 111, 103, 105, 99, 97, 108] => lookup_832_202(acc),
            [98, 114, 105, 116, 105, 115, 104] => lookup_832_203(acc),
            [108, 105, 118, 105, 110, 103] => lookup_832_204(acc),
            [109, 97, 110, 120] => lookup_832_205(acc),
            [102, 111, 117, 110, 100, 97, 116, 105, 111, 110] => lookup_832_206(acc),
            [103, 108, 97, 115] => lookup_832_207(acc),
            [98, 111, 116, 97, 110, 121] => lookup_832_208(acc),
            [99, 104, 114, 105, 115, 116, 105, 97, 110, 115, 98, 117, 114, 103] => {
                lookup_832_209(acc)
            }
            [120, 110, 45, 45, 99, 111, 114, 114, 101, 105, 111, 115, 45, 101, 45, 116, 101, 108, 101, 99, 111, 109, 117, 110, 105, 99, 97, 101, 115, 45, 103, 104, 99, 50, 57, 97] => {
                lookup_832_210(acc)
            }
            [105, 114, 97, 113] => lookup_832_211(acc),
            [109, 97, 110, 115, 105, 111, 110, 115] => lookup_832_212(acc),
            [98, 105, 114, 116, 104, 112, 108, 97, 99, 101] => lookup_832_213(acc),
            [108, 111, 117, 118, 114, 101] => lookup_832_214(acc),
            [118, 105, 107, 105, 110, 103] => lookup_832_215(acc),
            [99, 105, 110, 101, 109, 97] => lookup_832_216(acc),
            [119, 97, 115, 104, 105, 110, 103, 116, 111, 110, 100, 99] => lookup_832_217(acc),
            [115, 101, 116, 116, 108, 101, 109, 101, 110, 116] => lookup_832_218(acc),
            [98, 114, 97, 115, 105, 108] => lookup_832_219(acc),
            [109, 97, 114, 105, 116, 105, 109, 111] => lookup_832_220(acc),
            [102, 108, 97, 110, 100, 101, 114, 115] => lookup_832_221(acc),
            [98, 101, 97, 117, 120, 97, 114, 116, 115] => lookup_832_222(acc),
            [109, 117, 115, 105, 99] => lookup_832_223(acc),
            [115, 116, 97, 114, 110, 98, 101, 114, 103] => lookup_832_224(acc),
            [103, 101, 111, 108, 111, 103, 121] => lookup_832_225(acc),
            [109, 105, 115, 115, 105, 108, 101] => lookup_832_226(acc),
            [104, 105, 115, 116, 111, 114, 105, 99, 104, 111, 117, 115, 101, 115] => {
                lookup_832_227(acc)
            }
            [98, 101, 101, 108, 100, 101, 110, 103, 101, 108, 117, 105, 100] => lookup_832_228(acc),
            [99, 111, 115, 116, 117, 109, 101] => lookup_832_229(acc),
            [97, 109, 115, 116, 101, 114, 100, 97, 109] => lookup_832_230(acc),
            [121, 111, 114, 107] => lookup_832_231(acc),
            [112, 105, 108, 111, 116, 115] => lookup_832_232(acc),
            [98, 97, 114, 99, 101, 108, 111, 110, 97] => lookup_832_233(acc),
            [98, 97, 115, 101, 108] => lookup_832_234(acc),
            [101, 115, 115, 101, 120] => lookup_832_235(acc),
            [109, 101, 115, 97, 118, 101, 114, 100, 101] => lookup_832_236(acc),
            [119, 97, 114] => lookup_832_237(acc),
            [115, 99, 104, 108, 101, 115, 105, 115, 99, 104, 101, 115] => lookup_832_238(acc),
            [114, 101, 115, 105, 115, 116, 97, 110, 99, 101] => lookup_832_239(acc),
            [117, 116, 97, 104] => lookup_832_240(acc),
            [101, 110, 116, 111, 109, 111, 108, 111, 103, 121] => lookup_832_241(acc),
            [105, 110, 116, 101, 114, 97, 99, 116, 105, 118, 101] => lookup_832_242(acc),
            [97, 110, 110, 101, 102, 114, 97, 110, 107] => lookup_832_243(acc),
            [109, 111, 109, 97] => lookup_832_244(acc),
            [117, 108, 109] => lookup_832_245(acc),
            [119, 111, 114, 107, 115, 104, 111, 112] => lookup_832_246(acc),
            [112, 104, 105, 108, 97, 100, 101, 108, 112, 104, 105, 97, 97, 114, 101, 97] => {
                lookup_832_247(acc)
            }
            [112, 97, 115, 97, 100, 101, 110, 97] => lookup_832_248(acc),
            [115, 99, 105, 101, 110, 99, 101, 45, 102, 105, 99, 116, 105, 111, 110] => {
                lookup_832_249(acc)
            }
            [119, 105, 110, 100, 109, 105, 108, 108] => lookup_832_250(acc),
            [97, 110, 116, 105, 113, 117, 101, 115] => lookup_832_251(acc),
            [109, 97, 108, 108, 111, 114, 99, 97] => lookup_832_252(acc),
            [101, 97, 115, 116, 99, 111, 97, 115, 116] => lookup_832_253(acc),
            [98, 114, 117, 110, 101, 108] => lookup_832_254(acc),
            [108, 101, 119, 105, 115, 109, 105, 108, 108, 101, 114] => lookup_832_255(acc),
            [99, 97, 115, 116, 114, 101, 115] => lookup_832_256(acc),
            [115, 99, 104, 111, 111, 108] => lookup_832_257(acc),
            [97, 114, 116, 115, 97, 110, 100, 99, 114, 97, 102, 116, 115] => lookup_832_258(acc),
            [115, 119, 101, 100, 101, 110] => lookup_832_259(acc),
            [104, 105, 115, 116, 111, 114, 105, 115, 99, 104, 101, 115] => lookup_832_260(acc),
            [109, 105, 115, 115, 111, 117, 108, 97] => lookup_832_261(acc),
            [98, 101, 114, 110] => lookup_832_262(acc),
            [114, 111, 99, 104, 101, 115, 116, 101, 114] => lookup_832_263(acc),
            [99, 111, 109, 109, 117, 110, 105, 99, 97, 116, 105, 111, 110, 115] => {
                lookup_832_264(acc)
            }
            [98, 97, 108, 101] => lookup_832_265(acc),
            [110, 97, 116, 117, 114, 97, 108, 104, 105, 115, 116, 111, 114, 121, 109, 117, 115, 101, 117, 109] => {
                lookup_832_266(acc)
            }
            [100, 111, 108, 108, 115] => lookup_832_267(acc),
            [98, 97, 116, 104, 115] => lookup_832_268(acc),
            [115, 116, 97, 116, 105, 111, 110] => lookup_832_269(acc),
            [100, 101, 108, 97, 119, 97, 114, 101] => lookup_832_270(acc),
            [109, 111, 110, 109, 111, 117, 116, 104] => lookup_832_271(acc),
            [105, 108, 108, 117, 115, 116, 114, 97, 116, 105, 111, 110] => lookup_832_272(acc),
            [98, 97, 103, 104, 100, 97, 100] => lookup_832_273(acc),
            [109, 111, 110, 116, 114, 101, 97, 108] => lookup_832_274(acc),
            [120, 110, 45, 45, 108, 110, 115, 45, 113, 108, 97] => lookup_832_275(acc),
            [105, 110, 100, 105, 97, 110, 97] => lookup_832_276(acc),
            [98, 117, 115] => lookup_832_277(acc),
            [107, 117, 110, 115, 116] => lookup_832_278(acc),
            [110, 114, 119] => lookup_832_279(acc),
            [116, 114, 117, 115, 116] => lookup_832_280(acc),
            [115, 118, 105, 122, 122, 101, 114, 97] => lookup_832_281(acc),
            [115, 111, 117, 110, 100, 97, 110, 100, 118, 105, 115, 105, 111, 110] => {
                lookup_832_282(acc)
            }
            [110, 111, 114, 102, 111, 108, 107] => lookup_832_283(acc),
            [102, 114, 97, 110, 122, 105, 115, 107, 97, 110, 101, 114] => lookup_832_284(acc),
            [109, 101, 101, 114, 101, 115] => lookup_832_285(acc),
            [102, 114, 97, 110, 107, 102, 117, 114, 116] => lookup_832_286(acc),
            [110, 97, 116, 117, 117, 114, 119, 101, 116, 101, 110, 115, 99, 104, 97, 112, 112, 101, 110] => {
                lookup_832_287(acc)
            }
            [117, 115, 103, 97, 114, 100, 101, 110] => lookup_832_288(acc),
            [110, 101, 119, 112, 111, 114, 116] => lookup_832_289(acc),
            [110, 97, 116, 105, 111, 110, 97, 108, 104, 101, 114, 105, 116, 97, 103, 101] => {
                lookup_832_290(acc)
            }
            [116, 101, 120, 97, 115] => lookup_832_291(acc),
            [98, 97, 115, 101, 98, 97, 108, 108] => lookup_832_292(acc),
            [112, 114, 101, 115, 115] => lookup_832_293(acc),
            [104, 111, 117, 115, 101] => lookup_832_294(acc),
            [97, 109, 101, 114, 105, 99, 97, 110, 97] => lookup_832_295(acc),
            [106, 102, 107] => lookup_832_296(acc),
            [111, 99, 101, 97, 110, 111, 103, 114, 97, 112, 104, 105, 99] => lookup_832_297(acc),
            [109, 105, 100, 97, 116, 108, 97, 110, 116, 105, 99] => lookup_832_298(acc),
            [109, 97, 114, 121, 108, 97, 110, 100] => lookup_832_299(acc),
            [110, 97, 116, 117, 114, 97, 108, 104, 105, 115, 116, 111, 114, 121] => {
                lookup_832_300(acc)
            }
            [117, 104, 114, 101, 110] => lookup_832_301(acc),
            [118, 105, 114, 103, 105, 110, 105, 97] => lookup_832_302(acc),
            [118, 108, 97, 97, 110, 100, 101, 114, 101, 110] => lookup_832_303(acc),
            [99, 117, 108, 116, 117, 114, 97, 108, 99, 101, 110, 116, 101, 114] => {
                lookup_832_304(acc)
            }
            [104, 101, 114, 105, 116, 97, 103, 101] => lookup_832_305(acc),
            [99, 105, 118, 105, 108, 105, 122, 97, 116, 105, 111, 110] => lookup_832_306(acc),
            [97, 99, 97, 100, 101, 109, 121] => lookup_832_307(acc),
            [100, 111, 110, 111, 115, 116, 105, 97] => lookup_832_308(acc),
            [103, 97, 116, 101, 119, 97, 121] => lookup_832_309(acc),
            [110, 97, 116, 117, 114, 97, 108, 115, 99, 105, 101, 110, 99, 101, 115] => {
                lookup_832_310(acc)
            }
            [110, 101, 119, 106, 101, 114, 115, 101, 121] => lookup_832_311(acc),
            [116, 99, 109] => lookup_832_312(acc),
            [116, 101, 108, 101, 107, 111, 109, 109, 117, 110, 105, 107, 97, 116, 105, 111, 110] => {
                lookup_832_313(acc)
            }
            [101, 115, 116, 97, 116, 101] => lookup_832_314(acc),
            [97, 114, 99, 104, 105, 116, 101, 99, 116, 117, 114, 101] => lookup_832_315(acc),
            [110, 97, 116, 105, 111, 110, 97, 108] => lookup_832_316(acc),
            [120, 110, 45, 45, 99, 111, 109, 117, 110, 105, 99, 97, 101, 115, 45, 118, 54, 97, 50, 111] => {
                lookup_832_317(acc)
            }
            [98, 97, 100, 97, 106, 111, 122] => lookup_832_318(acc),
            [114, 105, 111, 100, 101, 106, 97, 110, 101, 105, 114, 111] => lookup_832_319(acc),
            [98, 117, 115, 104, 101, 121] => lookup_832_320(acc),
            [98, 101, 114, 107, 101, 108, 101, 121] => lookup_832_321(acc),
            [115, 99, 104, 111, 101, 110, 98, 114, 117, 110, 110] => lookup_832_322(acc),
            [115, 117, 105, 115, 115, 101] => lookup_832_323(acc),
            [108, 105, 110, 99, 111, 108, 110] => lookup_832_324(acc),
            [104, 105, 115, 116, 111, 105, 114, 101] => lookup_832_325(acc),
            [110, 105, 101, 112, 99, 101] => lookup_832_326(acc),
            [99, 104, 105, 114, 111, 112, 114, 97, 99, 116, 105, 99] => lookup_832_327(acc),
            [97, 117, 115, 116, 105, 110] => lookup_832_328(acc),
            [115, 117, 114, 114, 101, 121] => lookup_832_329(acc),
            [100, 105, 115, 99, 111, 118, 101, 114, 121] => lookup_832_330(acc),
            [116, 101, 120, 116, 105, 108, 101] => lookup_832_331(acc),
            [117, 115, 99, 117, 108, 116, 117, 114, 101] => lookup_832_332(acc),
            [99, 97, 108, 105, 102, 111, 114, 110, 105, 97] => lookup_832_333(acc),
            [107, 111, 101, 108, 110] => lookup_832_334(acc),
            [100, 117, 114, 104, 97, 109] => lookup_832_335(acc),
            [100, 97, 116, 97, 98, 97, 115, 101] => lookup_832_336(acc),
            [97, 108, 97, 98, 97, 109, 97] => lookup_832_337(acc),
            [99, 105, 114, 99, 117, 115] => lookup_832_338(acc),
            [104, 101, 97, 108, 116, 104] => lookup_832_339(acc),
            [104, 101, 108, 115, 105, 110, 107, 105] => lookup_832_340(acc),
            [104, 97, 108, 108, 111, 102, 102, 97, 109, 101] => lookup_832_341(acc),
            [109, 117, 115, 101, 117, 109, 99, 101, 110, 116, 101, 114] => lookup_832_342(acc),
            [97, 115, 115, 105, 115, 105] => lookup_832_343(acc),
            [102, 97, 114, 109, 101, 113, 117, 105, 112, 109, 101, 110, 116] => lookup_832_344(acc),
            [115, 97, 110, 102, 114, 97, 110, 99, 105, 115, 99, 111] => lookup_832_345(acc),
            [99, 108, 111, 99, 107] => lookup_832_346(acc),
            [101, 108, 98, 117, 114, 103] => lookup_832_347(acc),
            [99, 111, 97, 108] => lookup_832_348(acc),
            [122, 111, 111, 108, 111, 103, 121] => lookup_832_349(acc),
            [120, 110, 45, 45, 104, 49, 97, 101, 103, 104] => lookup_832_350(acc),
            [99, 105, 110, 99, 105, 110, 110, 97, 116, 105] => lookup_832_351(acc),
            [99, 111, 108, 111, 114, 97, 100, 111, 112, 108, 97, 116, 101, 97, 117] => {
                lookup_832_352(acc)
            }
            [102, 114, 111, 103] => lookup_832_353(acc),
            [119, 101, 115, 116, 102, 97, 108, 101, 110] => lookup_832_354(acc),
            [109, 105, 110, 110, 101, 115, 111, 116, 97] => lookup_832_355(acc),
            [112, 111, 114, 116, 108, 108, 105, 103, 97, 116] => lookup_832_356(acc),
            [115, 112, 121] => lookup_832_357(acc),
            [119, 97, 108, 108, 111, 110, 105, 101] => lookup_832_358(acc),
            [99, 97, 114, 114, 105, 101, 114] => lookup_832_359(acc),
            [109, 111, 100, 101, 114, 110] => lookup_832_360(acc),
            [112, 97, 99, 105, 102, 105, 99] => lookup_832_361(acc),
            [100, 100, 114] => lookup_832_362(acc),
            [98, 105, 98, 108, 101] => lookup_832_363(acc),
            [102, 105, 110, 108, 97, 110, 100] => lookup_832_364(acc),
            [99, 111, 117, 110, 116, 121] => lookup_832_365(acc),
            [100, 101, 99, 111, 114, 97, 116, 105, 118, 101, 97, 114, 116, 115] => {
                lookup_832_366(acc)
            }
            [102, 105, 110, 101, 97, 114, 116, 115] => lookup_832_367(acc),
            [99, 97, 110, 97, 100, 97] => lookup_832_368(acc),
            [103, 97, 114, 100, 101, 110] => lookup_832_369(acc),
            [117, 115, 97, 110, 116, 105, 113, 117, 101, 115] => lookup_832_370(acc),
            [99, 111, 112, 101, 110, 104, 97, 103, 101, 110] => lookup_832_371(acc),
            [112, 117, 98, 108, 105, 99] => lookup_832_372(acc),
            [107, 97, 114, 97, 116, 101] => lookup_832_373(acc),
            [116, 111, 117, 99, 104] => lookup_832_374(acc),
            [108, 111, 121, 97, 108, 105, 115, 116] => lookup_832_375(acc),
            [99, 111, 109, 109, 117, 110, 105, 116, 121] => lookup_832_376(acc),
            [115, 107, 105] => lookup_832_377(acc),
            [105, 110, 100, 105, 97, 110, 109, 97, 114, 107, 101, 116] => lookup_832_378(acc),
            [111, 120, 102, 111, 114, 100] => lookup_832_379(acc),
            [101, 110, 118, 105, 114, 111, 110, 109, 101, 110, 116] => lookup_832_380(acc),
            [99, 117, 108, 116, 117, 114, 101] => lookup_832_381(acc),
            [115, 99, 105, 101, 110, 99, 101, 115, 110, 97, 116, 117, 114, 101, 108, 108, 101, 115] => {
                lookup_832_382(acc)
            }
            [98, 111, 115, 116, 111, 110] => lookup_832_383(acc),
            [115, 121, 100, 110, 101, 121] => lookup_832_384(acc),
            [99, 111, 114, 118, 101, 116, 116, 101] => lookup_832_385(acc),
            [116, 101, 99, 104, 110, 111, 108, 111, 103, 121] => lookup_832_386(acc),
            [102, 117, 114, 110, 105, 116, 117, 114, 101] => lookup_832_387(acc),
            [115, 116, 101, 97, 109] => lookup_832_388(acc),
            [99, 111, 114, 112, 111, 114, 97, 116, 105, 111, 110] => lookup_832_389(acc),
            [99, 104, 105, 108, 100, 114, 101, 110, 115, 103, 97, 114, 100, 101, 110] => {
                lookup_832_390(acc)
            }
            [111, 99, 101, 97, 110, 111, 103, 114, 97, 112, 104, 105, 113, 117, 101] => {
                lookup_832_391(acc)
            }
            [115, 105, 108, 107] => lookup_832_392(acc),
            [116, 111, 112, 111, 108, 111, 103, 121] => lookup_832_393(acc),
            [116, 105, 109, 101, 107, 101, 101, 112, 105, 110, 103] => lookup_832_394(acc),
            [98, 114, 117, 115, 115, 101, 108, 115] => lookup_832_395(acc),
            [104, 105, 115, 116, 111, 114, 105, 99, 97, 108, 115, 111, 99, 105, 101, 116, 121] => {
                lookup_832_396(acc)
            }
            [109, 111, 110, 116, 105, 99, 101, 108, 108, 111] => lookup_832_397(acc),
            [97, 109, 101, 114, 105, 99, 97, 110, 97, 114, 116] => lookup_832_398(acc),
            [99, 104, 101, 108, 116, 101, 110, 104, 97, 109] => lookup_832_399(acc),
            [106, 101, 102, 102, 101, 114, 115, 111, 110] => lookup_832_400(acc),
            [110, 97, 116, 105, 118, 101, 97, 109, 101, 114, 105, 99, 97, 110] => {
                lookup_832_401(acc)
            }
            [117, 115, 104, 117, 97, 105, 97] => lookup_832_402(acc),
            [99, 97, 115, 97, 100, 101, 108, 97, 109, 111, 110, 101, 100, 97] => {
                lookup_832_403(acc)
            }
            [115, 99, 105, 101, 110, 99, 101, 97, 110, 100, 104, 105, 115, 116, 111, 114, 121] => {
                lookup_832_404(acc)
            }
            [102, 105, 103, 117, 101, 114, 101, 115] => lookup_832_405(acc),
            [99, 111, 108, 111, 110, 105, 97, 108, 119, 105, 108, 108, 105, 97, 109, 115, 98, 117, 114, 103] => {
                lookup_832_406(acc)
            }
            [106, 111, 117, 114, 110, 97, 108, 105, 115, 109] => lookup_832_407(acc),
            [115, 97, 118, 97, 110, 110, 97, 104, 103, 97] => lookup_832_408(acc),
            [100, 101, 110, 109, 97, 114, 107] => lookup_832_409(acc),
            [215, 153, 215, 168, 215, 149, 215, 169, 215, 156, 215, 153, 215, 157] => {
                lookup_832_410(acc)
            }
            [110, 101, 119, 121, 111, 114, 107] => lookup_832_411(acc),
            [97, 114, 116, 101, 100, 117, 99, 97, 116, 105, 111, 110] => lookup_832_412(acc),
            [109, 117, 108, 104, 111, 117, 115, 101] => lookup_832_413(acc),
            [102, 111, 114, 99, 101] => lookup_832_414(acc),
            [112, 97, 108, 101, 111] => lookup_832_415(acc),
            [112, 104, 97, 114, 109, 97, 99, 121] => lookup_832_416(acc),
            [97, 115, 115, 111, 99, 105, 97, 116, 105, 111, 110] => lookup_832_417(acc),
            [104, 97, 119, 97, 105, 105] => lookup_832_418(acc),
            [115, 116, 112, 101, 116, 101, 114, 115, 98, 117, 114, 103] => lookup_832_419(acc),
            [111, 116, 97, 103, 111] => lookup_832_420(acc),
            [107, 105, 100, 115] => lookup_832_421(acc),
            [106, 97, 109, 105, 115, 111, 110] => lookup_832_422(acc),
            [106, 117, 105, 102] => lookup_832_423(acc),
            [112, 114, 101, 115, 101, 114, 118, 97, 116, 105, 111, 110] => lookup_832_424(acc),
            [98, 111, 110, 110] => lookup_832_425(acc),
            [115, 99, 105, 101, 110, 99, 101, 97, 110, 100, 105, 110, 100, 117, 115, 116, 114, 121] => {
                lookup_832_426(acc)
            }
            [99, 111, 100, 121] => lookup_832_427(acc),
            [99, 101, 108, 116, 105, 99] => lookup_832_428(acc),
            [100, 97, 108, 105] => lookup_832_429(acc),
            [98, 111, 116, 97, 110, 105, 99, 103, 97, 114, 100, 101, 110] => lookup_832_430(acc),
            [97, 105, 114] => lookup_832_431(acc),
            [97, 114, 116] => lookup_832_432(acc),
            [102, 114, 105, 98, 111, 117, 114, 103] => lookup_832_433(acc),
            [104, 105, 115, 116, 111, 114, 105, 99, 97, 108] => lookup_832_434(acc),
            [97, 118, 105, 97, 116, 105, 111, 110] => lookup_832_435(acc),
            [105, 114, 111, 110] => lookup_832_436(acc),
            [107, 117, 110, 115, 116, 117, 110, 100, 100, 101, 115, 105, 103, 110] => {
                lookup_832_437(acc)
            }
            [106, 101, 119, 101, 108, 114, 121] => lookup_832_438(acc),
            [108, 111, 110, 100, 111, 110] => lookup_832_439(acc),
            [102, 111, 114, 116, 119, 111, 114, 116, 104] => lookup_832_440(acc),
            [109, 97, 114, 98, 117, 114, 103] => lookup_832_441(acc),
            [108, 97, 114, 115, 115, 111, 110] => lookup_832_442(acc),
            [99, 111, 110, 116, 101, 109, 112, 111, 114, 97, 114, 121] => lookup_832_443(acc),
            [110, 121, 110, 121] => lookup_832_444(acc),
            [115, 99, 105, 101, 110, 99, 101, 104, 105, 115, 116, 111, 114, 121] => {
                lookup_832_445(acc)
            }
            [115, 116, 97, 100, 116] => lookup_832_446(acc),
            [99, 121, 109, 114, 117] => lookup_832_447(acc),
            [102, 114, 101, 105, 98, 117, 114, 103] => lookup_832_448(acc),
            [114, 117, 115, 115, 105, 97] => lookup_832_449(acc),
            [115, 99, 111, 116, 108, 97, 110, 100] => lookup_832_450(acc),
            [116, 114, 117, 115, 116, 101, 101] => lookup_832_451(acc),
            [110, 121, 99] => lookup_832_452(acc),
            [104, 105, 115, 116, 111, 114, 121] => lookup_832_453(acc),
            [97, 105, 114, 103, 117, 97, 114, 100] => lookup_832_454(acc),
            [97, 114, 99, 104, 97, 101, 111, 108, 111, 103, 105, 99, 97, 108] => {
                lookup_832_455(acc)
            }
            [98, 117, 114, 103, 104, 111, 102] => lookup_832_456(acc),
            [98, 97, 108, 116, 105, 109, 111, 114, 101] => lookup_832_457(acc),
            [102, 105, 108, 97, 116, 101, 108, 105, 97] => lookup_832_458(acc),
            [102, 108, 111, 114, 105, 100, 97] => lookup_832_459(acc),
            [108, 97, 98, 111, 117, 114] => lookup_832_460(acc),
            [109, 111, 116, 111, 114, 99, 121, 99, 108, 101] => lookup_832_461(acc),
            [109, 117, 115, 101, 101, 116] => lookup_832_462(acc),
            [111, 112, 101, 110, 97, 105, 114] => lookup_832_463(acc),
            [99, 111, 110, 116, 101, 109, 112, 111, 114, 97, 114, 121, 97, 114, 116] => {
                lookup_832_464(acc)
            }
            [112, 97, 110, 97, 109, 97] => lookup_832_465(acc),
            [112, 108, 97, 122, 97] => lookup_832_466(acc),
            [115, 97, 108, 118, 97, 100, 111, 114, 100, 97, 108, 105] => lookup_832_467(acc),
            [115, 113, 117, 97, 114, 101] => lookup_832_468(acc),
            [103, 101, 101, 108, 118, 105, 110, 99, 107] => lookup_832_469(acc),
            [99, 105, 118, 105, 108, 105, 115, 97, 116, 105, 111, 110] => lookup_832_470(acc),
            [115, 116, 97, 116, 101, 111, 102, 100, 101, 108, 97, 119, 97, 114, 101] => {
                lookup_832_471(acc)
            }
            [98, 97, 104, 110] => lookup_832_472(acc),
            [109, 117, 110, 99, 105, 101] => lookup_832_473(acc),
            [98, 114, 111, 97, 100, 99, 97, 115, 116] => lookup_832_474(acc),
            [119, 97, 116, 99, 104, 45, 97, 110, 100, 45, 99, 108, 111, 99, 107] => {
                lookup_832_475(acc)
            }
            [98, 114, 105, 116, 105, 115, 104, 99, 111, 108, 117, 109, 98, 105, 97] => {
                lookup_832_476(acc)
            }
            [98, 114, 117, 115, 115, 101, 108] => lookup_832_477(acc),
            [115, 105, 98, 101, 110, 105, 107] => lookup_832_478(acc),
            [98, 105, 108, 98, 97, 111] => lookup_832_479(acc),
            [104, 97, 110, 100, 115, 111, 110] => lookup_832_480(acc),
            [119, 97, 116, 99, 104, 97, 110, 100, 99, 108, 111, 99, 107] => lookup_832_481(acc),
            [109, 105, 110, 105, 110, 103] => lookup_832_482(acc),
            [110, 101, 98, 114, 97, 115, 107, 97] => lookup_832_483(acc),
            [112, 114, 101, 115, 105, 100, 105, 111] => lookup_832_484(acc),
            [115, 116, 106, 111, 104, 110] => lookup_832_485(acc),
            [97, 108, 97, 115, 107, 97] => lookup_832_486(acc),
            [106, 101, 119, 105, 115, 104] => lookup_832_487(acc),
            [120, 110, 45, 45, 57, 100, 98, 104, 98, 108, 103, 54, 100, 105] => lookup_832_488(acc),
            [107, 97, 114, 105, 107, 97, 116, 117, 114] => lookup_832_489(acc),
            [99, 104, 105, 108, 100, 114, 101, 110] => lookup_832_490(acc),
            [109, 97, 114, 105, 116, 105, 109, 101] => lookup_832_491(acc),
            [99, 117, 108, 116, 117, 114, 97, 108] => lookup_832_492(acc),
            [112, 104, 111, 101, 110, 105, 120] => lookup_832_493(acc),
            [99, 111, 109, 117, 110, 105, 99, 97, 195, 167, 195, 181, 101, 115] => {
                lookup_832_494(acc)
            }
            [98, 111, 116, 97, 110, 105, 99, 97, 108, 103, 97, 114, 100, 101, 110] => {
                lookup_832_495(acc)
            }
            [118, 105, 114, 116, 117, 97, 108] => lookup_832_496(acc),
            [110, 101, 119, 109, 101, 120, 105, 99, 111] => lookup_832_497(acc),
            [116, 111, 119, 110] => lookup_832_498(acc),
            [99, 104, 97, 116, 116, 97, 110, 111, 111, 103, 97] => lookup_832_499(acc),
            [116, 105, 109, 101] => lookup_832_500(acc),
            [108, 105, 118, 105, 110, 103, 104, 105, 115, 116, 111, 114, 121] => {
                lookup_832_501(acc)
            }
            [101, 105, 115, 101, 110, 98, 97, 104, 110] => lookup_832_502(acc),
            [115, 116, 97, 108, 98, 97, 110, 115] => lookup_832_503(acc),
            [108, 195, 164, 110, 115] => lookup_832_504(acc),
            [104, 105, 115, 116, 111, 114, 105, 115, 99, 104] => lookup_832_505(acc),
            [104, 101, 105, 109, 97, 116, 117, 110, 100, 117, 104, 114, 101, 110] => {
                lookup_832_506(acc)
            }
            [115, 107, 111, 108, 101] => lookup_832_507(acc),
            [97, 115, 116, 114, 111, 110, 111, 109, 121] => lookup_832_508(acc),
            [102, 114, 101, 101, 109, 97, 115, 111, 110, 114, 121] => lookup_832_509(acc),
            [108, 117, 122, 101, 114, 110] => lookup_832_510(acc),
            [110, 101, 119, 104, 97, 109, 112, 115, 104, 105, 114, 101] => lookup_832_511(acc),
            [99, 111, 109, 112, 117, 116, 101, 114, 104, 105, 115, 116, 111, 114, 121] => {
                lookup_832_512(acc)
            }
            [112, 104, 105, 108, 97, 100, 101, 108, 112, 104, 105, 97] => lookup_832_513(acc),
            [99, 97, 109, 98, 114, 105, 100, 103, 101] => lookup_832_514(acc),
            [99, 104, 111, 99, 111, 108, 97, 116, 101] => lookup_832_515(acc),
            [101, 120, 101, 116, 101, 114] => lookup_832_516(acc),
            [104, 105, 115, 116, 111, 114, 121, 111, 102, 115, 99, 105, 101, 110, 99, 101] => {
                lookup_832_517(acc)
            }
            [106, 117, 100, 121, 103, 97, 114, 108, 97, 110, 100] => lookup_832_518(acc),
            [109, 105, 99, 104, 105, 103, 97, 110] => lookup_832_519(acc),
            [111, 114, 101, 103, 111, 110] => lookup_832_520(acc),
            [121, 111, 117, 116, 104] => lookup_832_521(acc),
            [104, 101, 109, 98, 121, 103, 100, 115, 102, 111, 114, 98, 117, 110, 100] => {
                lookup_832_522(acc)
            }
            [109, 97, 114, 121, 108, 104, 117, 114, 115, 116] => lookup_832_523(acc),
            [103, 111, 114, 103, 101] => lookup_832_524(acc),
            [110, 101, 117, 101, 115] => lookup_832_525(acc),
            [117, 115, 100, 101, 99, 111, 114, 97, 116, 105, 118, 101, 97, 114, 116, 115] => {
                lookup_832_526(acc)
            }
            [99, 108, 105, 110, 116, 111, 110] => lookup_832_527(acc),
            [116, 114, 101, 101] => lookup_832_528(acc),
            [105, 115, 108, 101, 111, 102, 109, 97, 110] => lookup_832_529(acc),
            [102, 117, 110, 100, 97, 99, 105, 111] => lookup_832_530(acc),
            [109, 101, 109, 111, 114, 105, 97, 108] => lookup_832_531(acc),
            [114, 97, 105, 108, 114, 111, 97, 100] => lookup_832_532(acc),
            [117, 110, 100, 101, 114, 115, 101, 97] => lookup_832_533(acc),
            [102, 97, 114, 109, 115, 116, 101, 97, 100] => lookup_832_534(acc),
            [108, 97, 110, 115] => lookup_832_535(acc),
            [108, 117, 99, 101, 114, 110, 101] => lookup_832_536(acc),
            [117, 115, 108, 105, 118, 105, 110, 103, 104, 105, 115, 116, 111, 114, 121] => {
                lookup_832_537(acc)
            }
            [118, 111, 108, 107, 101, 110, 107, 117, 110, 100, 101] => lookup_832_538(acc),
            [108, 97, 110, 100, 101, 115] => lookup_832_539(acc),
            [103, 97, 108, 108, 101, 114, 121] => lookup_832_540(acc),
            [114, 97, 105, 108, 119, 97, 121] => lookup_832_541(acc),
            [121, 111, 115, 101, 109, 105, 116, 101] => lookup_832_542(acc),
            [101, 103, 121, 112, 116, 105, 97, 110] => lookup_832_543(acc),
            [115, 99, 105, 101, 110, 99, 101, 99, 101, 110, 116, 101, 114, 115] => {
                lookup_832_544(acc)
            }
            [112, 97, 114, 105, 115] => lookup_832_545(acc),
            [117, 118, 105, 99] => lookup_832_546(acc),
            [115, 111, 117, 116, 104, 99, 97, 114, 111, 108, 105, 110, 97] => lookup_832_547(acc),
            [115, 99, 105, 101, 110, 99, 101] => lookup_832_548(acc),
            [98, 111, 116, 97, 110, 105, 99, 97, 108] => lookup_832_549(acc),
            [99, 104, 101, 115, 97, 112, 101, 97, 107, 101, 98, 97, 121] => lookup_832_550(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_833() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_834_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_834<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 110, 100, 105, 101] => lookup_834_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_835_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_835_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_835_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_835_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_835_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_835_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_835_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_835<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_835_0(acc),
            [97, 108, 99, 101, 115] => lookup_835_1(info, labels, acc),
            [116, 108, 111, 110] => lookup_835_2(acc),
            [97, 122, 105, 109, 117, 116, 104] => lookup_835_3(acc),
            [97, 114, 118, 111] => lookup_835_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_836() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_837() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_838() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_839() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_840() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_841_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_841_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_841_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_841_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_841<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_841_0(acc),
            [103, 105, 116, 112, 97, 103, 101] => lookup_841_1(acc),
            [110, 111, 109] => lookup_841_2(acc),
            [103, 105, 116, 97, 112, 112] => lookup_841_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_842() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_843() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_844() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_845() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_846_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_846_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_846_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_846_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_846_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_846_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_846_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_846_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_846_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_846_0(acc),
            [101, 100, 117] => lookup_846_1(acc),
            [110, 97, 109, 101] => lookup_846_2(acc),
            [109, 105, 108] => lookup_846_3(acc),
            [110, 101, 116] => lookup_846_4(acc),
            [111, 114, 103] => lookup_846_5(acc),
            [115, 99, 104] => lookup_846_6(acc),
            [103, 111, 118] => lookup_846_7(acc),
            [99, 111, 109] => lookup_846_8(acc),
            [110, 111, 109] => lookup_846_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_847_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_847<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_847_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_848() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_849() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_850() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_852() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_853() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_854() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_855() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_856() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_857() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_858() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_860() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_861() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_862() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_0_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_0_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_0_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_0_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_0_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_0_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_0_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_0_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_0_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_0_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_0_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_0_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_0_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_0_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_0_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_0_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_0_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_0_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_0_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_0_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_0_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_0_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_0_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_0_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_0_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_0_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_0_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_0_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_0_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_0_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_0_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_0_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_0_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_0_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_0_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 105, 102, 117] => lookup_863_0_0(acc),
            [116, 97, 106, 105, 109, 105] => lookup_863_0_1(acc),
            [97, 110, 112, 97, 99, 104, 105] => lookup_863_0_2(acc),
            [121, 97, 109, 97, 103, 97, 116, 97] => lookup_863_0_3(acc),
            [107, 97, 115, 97, 104, 97, 114, 97] => lookup_863_0_4(acc),
            [107, 97, 107, 97, 109, 105, 103, 97, 104, 97, 114, 97] => lookup_863_0_5(acc),
            [107, 97, 119, 97, 117, 101] => lookup_863_0_6(acc),
            [104, 97, 115, 104, 105, 109, 97] => lookup_863_0_7(acc),
            [121, 97, 111, 116, 115, 117] => lookup_863_0_8(acc),
            [103, 105, 110, 97, 110] => lookup_863_0_9(acc),
            [107, 97, 110, 105] => lookup_863_0_10(acc),
            [109, 111, 116, 111, 115, 117] => lookup_863_0_11(acc),
            [111, 103, 97, 107, 105] => lookup_863_0_12(acc),
            [109, 105, 122, 117, 110, 97, 109, 105] => lookup_863_0_13(acc),
            [115, 97, 107, 97, 104, 111, 103, 105] => lookup_863_0_14(acc),
            [109, 105, 110, 111] => lookup_863_0_15(acc),
            [115, 104, 105, 114, 97, 107, 97, 119, 97] => lookup_863_0_16(acc),
            [103, 111, 100, 111] => lookup_863_0_17(acc),
            [119, 97, 110, 111, 117, 99, 104, 105] => lookup_863_0_18(acc),
            [107, 97, 115, 97, 109, 97, 116, 115, 117] => lookup_863_0_19(acc),
            [121, 111, 114, 111] => lookup_863_0_20(acc),
            [103, 117, 106, 111] => lookup_863_0_21(acc),
            [105, 107, 101, 100, 97] => lookup_863_0_22(acc),
            [109, 105, 116, 97, 107, 101] => lookup_863_0_23(acc),
            [104, 105, 103, 97, 115, 104, 105, 115, 104, 105, 114, 97, 107, 97, 119, 97] => {
                lookup_863_0_24(acc)
            }
            [115, 101, 107, 105] => lookup_863_0_25(acc),
            [104, 105, 99, 104, 105, 115, 111] => lookup_863_0_26(acc),
            [116, 97, 107, 97, 121, 97, 109, 97] => lookup_863_0_27(acc),
            [104, 105, 100, 97] => lookup_863_0_28(acc),
            [109, 105, 110, 111, 107, 97, 109, 111] => lookup_863_0_29(acc),
            [115, 101, 107, 105, 103, 97, 104, 97, 114, 97] => lookup_863_0_30(acc),
            [105, 98, 105, 103, 97, 119, 97] => lookup_863_0_31(acc),
            [110, 97, 107, 97, 116, 115, 117, 103, 97, 119, 97] => lookup_863_0_32(acc),
            [116, 97, 114, 117, 105] => lookup_863_0_33(acc),
            [116, 111, 109, 105, 107, 97] => lookup_863_0_34(acc),
            [116, 111, 107, 105] => lookup_863_0_35(acc),
            [101, 110, 97] => lookup_863_0_36(acc),
            [107, 105, 116, 97, 103, 97, 116, 97] => lookup_863_0_37(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_7_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_7_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_7_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_7_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_7_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_7_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_7_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_7_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_7_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_7_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_7_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_7_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_7_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_7_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_7_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_7_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_7_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_7_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_7_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_7_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_7_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_7_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_7_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_7_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_7_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_7_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_7_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_7_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_7_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_7<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 117, 114, 97] => lookup_863_7_0(acc),
            [107, 105, 121, 111, 107, 97, 119, 97] => lookup_863_7_1(acc),
            [110, 97, 107, 97, 105] => lookup_863_7_2(acc),
            [97, 116, 115, 117, 103, 105] => lookup_863_7_3(acc),
            [121, 97, 109, 97, 116, 111] => lookup_863_7_4(acc),
            [111, 105] => lookup_863_7_5(acc),
            [107, 97, 109, 97, 107, 117, 114, 97] => lookup_863_7_6(acc),
            [109, 97, 116, 115, 117, 100, 97] => lookup_863_7_7(acc),
            [122, 97, 109, 97] => lookup_863_7_8(acc),
            [109, 105, 110, 97, 109, 105, 97, 115, 104, 105, 103, 97, 114, 97] => {
                lookup_863_7_9(acc)
            }
            [122, 117, 115, 104, 105] => lookup_863_7_10(acc),
            [104, 97, 100, 97, 110, 111] => lookup_863_7_11(acc),
            [111, 105, 115, 111] => lookup_863_7_12(acc),
            [115, 97, 109, 117, 107, 97, 119, 97] => lookup_863_7_13(acc),
            [116, 115, 117, 107, 117, 105] => lookup_863_7_14(acc),
            [121, 97, 109, 97, 107, 105, 116, 97] => lookup_863_7_15(acc),
            [97, 121, 97, 115, 101] => lookup_863_7_16(acc),
            [102, 117, 106, 105, 115, 97, 119, 97] => lookup_863_7_17(acc),
            [121, 111, 107, 111, 115, 117, 107, 97] => lookup_863_7_18(acc),
            [101, 98, 105, 110, 97] => lookup_863_7_19(acc),
            [105, 115, 101, 104, 97, 114, 97] => lookup_863_7_20(acc),
            [104, 97, 107, 111, 110, 101] => lookup_863_7_21(acc),
            [99, 104, 105, 103, 97, 115, 97, 107, 105] => lookup_863_7_22(acc),
            [104, 105, 114, 97, 116, 115, 117, 107, 97] => lookup_863_7_23(acc),
            [107, 97, 105, 115, 101, 105] => lookup_863_7_24(acc),
            [111, 100, 97, 119, 97, 114, 97] => lookup_863_7_25(acc),
            [121, 117, 103, 97, 119, 97, 114, 97] => lookup_863_7_26(acc),
            [110, 105, 110, 111, 109, 105, 121, 97] => lookup_863_7_27(acc),
            [97, 105, 107, 97, 119, 97] => lookup_863_7_28(acc),
            [115, 97, 103, 97, 109, 105, 104, 97, 114, 97] => lookup_863_7_29(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_13<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 97, 116, 101] => lookup_863_13_0(acc),
            [102, 117, 114, 117, 100, 111, 110, 111] => lookup_863_13_1(acc),
            [107, 117, 110, 105, 109, 105] => lookup_863_13_2(acc),
            [107, 105, 116, 97, 107, 97, 116, 97] => lookup_863_13_3(acc),
            [110, 105, 115, 104, 105, 97, 105, 122, 117] => lookup_863_13_4(acc),
            [121, 97, 109, 97, 116, 111] => lookup_863_13_5(acc),
            [121, 117, 103, 97, 119, 97] => lookup_863_13_6(acc),
            [105, 110, 97, 119, 97, 115, 104, 105, 114, 111] => lookup_863_13_7(acc),
            [105, 119, 97, 107, 105] => lookup_863_13_8(acc),
            [104, 97, 110, 97, 119, 97] => lookup_863_13_9(acc),
            [97, 105, 122, 117, 109, 105, 115, 97, 116, 111] => lookup_863_13_10(acc),
            [115, 104, 105, 109, 111, 103, 111] => lookup_863_13_11(acc),
            [116, 97, 110, 97, 103, 117, 114, 97] => lookup_863_13_12(acc),
            [102, 117, 107, 117, 115, 104, 105, 109, 97] => lookup_863_13_13(acc),
            [110, 97, 110, 103, 111] => lookup_863_13_14(acc),
            [121, 97, 109, 97, 116, 115, 117, 114, 105] => lookup_863_13_15(acc),
            [115, 104, 105, 114, 97, 107, 97, 119, 97] => lookup_863_13_16(acc),
            [107, 97, 119, 97, 109, 97, 116, 97] => lookup_863_13_17(acc),
            [121, 97, 98, 117, 107, 105] => lookup_863_13_18(acc),
            [121, 97, 110, 97, 105, 122, 117] => lookup_863_13_19(acc),
            [107, 111, 114, 105, 121, 97, 109, 97] => lookup_863_13_20(acc),
            [105, 122, 117, 109, 105, 122, 97, 107, 105] => lookup_863_13_21(acc),
            [105, 115, 104, 105, 107, 97, 119, 97] => lookup_863_13_22(acc),
            [110, 105, 115, 104, 105, 103, 111] => lookup_863_13_23(acc),
            [111, 107, 117, 109, 97] => lookup_863_13_24(acc),
            [107, 105, 116, 97, 115, 104, 105, 111, 98, 97, 114, 97] => lookup_863_13_25(acc),
            [97, 115, 97, 107, 97, 119, 97] => lookup_863_13_26(acc),
            [102, 117, 116, 97, 98, 97] => lookup_863_13_27(acc),
            [107, 111, 111, 114, 105] => lookup_863_13_28(acc),
            [104, 105, 114, 97, 116, 97] => lookup_863_13_29(acc),
            [97, 105, 122, 117, 98, 97, 110, 103, 101] => lookup_863_13_30(acc),
            [107, 97, 103, 97, 109, 105, 105, 115, 104, 105] => lookup_863_13_31(acc),
            [109, 105, 115, 104, 105, 109, 97] => lookup_863_13_32(acc),
            [110, 97, 109, 105, 101] => lookup_863_13_33(acc),
            [107, 97, 110, 101, 121, 97, 109, 97] => lookup_863_13_34(acc),
            [109, 105, 104, 97, 114, 117] => lookup_863_13_35(acc),
            [115, 97, 109, 101, 103, 97, 119, 97] => lookup_863_13_36(acc),
            [115, 117, 107, 97, 103, 97, 119, 97] => lookup_863_13_37(acc),
            [116, 97, 109, 97, 107, 97, 119, 97] => lookup_863_13_38(acc),
            [104, 105, 114, 111, 110, 111] => lookup_863_13_39(acc),
            [111, 109, 111, 116, 101, 103, 111] => lookup_863_13_40(acc),
            [98, 97, 110, 100, 97, 105] => lookup_863_13_41(acc),
            [111, 116, 97, 109, 97] => lookup_863_13_42(acc),
            [111, 110, 111] => lookup_863_13_43(acc),
            [97, 105, 122, 117, 119, 97, 107, 97, 109, 97, 116, 115, 117] => lookup_863_13_44(acc),
            [115, 104, 111, 119, 97] => lookup_863_13_45(acc),
            [116, 101, 110, 101, 105] => lookup_863_13_46(acc),
            [104, 105, 103, 97, 115, 104, 105] => lookup_863_13_47(acc),
            [115, 111, 109, 97] => lookup_863_13_48(acc),
            [105, 105, 116, 97, 116, 101] => lookup_863_13_49(acc),
            [116, 97, 105, 115, 104, 105, 110] => lookup_863_13_50(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_17<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 122, 117, 109, 105] => lookup_863_17_0(acc),
            [109, 105, 110, 111, 104] => lookup_863_17_1(acc),
            [115, 101, 110, 110, 97, 110] => lookup_863_17_2(acc),
            [107, 105, 115, 104, 105, 119, 97, 100, 97] => lookup_863_17_3(acc),
            [115, 104, 105, 109, 97, 109, 111, 116, 111] => lookup_863_17_4(acc),
            [116, 97, 105, 115, 104, 105] => lookup_863_17_5(acc),
            [115, 117, 105, 116, 97] => lookup_863_17_6(acc),
            [99, 104, 117, 111] => lookup_863_17_7(acc),
            [110, 101, 121, 97, 103, 97, 119, 97] => lookup_863_17_8(acc),
            [107, 97, 110, 97, 110] => lookup_863_17_9(acc),
            [110, 105, 115, 104, 105] => lookup_863_17_10(acc),
            [116, 97, 107, 97, 116, 115, 117, 107, 105] => lookup_863_17_11(acc),
            [107, 117, 109, 97, 116, 111, 114, 105] => lookup_863_17_12(acc),
            [116, 111, 121, 111, 110, 97, 107, 97] => lookup_863_17_13(acc),
            [104, 105, 103, 97, 115, 104, 105, 111, 115, 97, 107, 97] => lookup_863_17_14(acc),
            [105, 98, 97, 114, 97, 107, 105] => lookup_863_17_15(acc),
            [97, 98, 101, 110, 111] => lookup_863_17_16(acc),
            [104, 105, 103, 97, 115, 104, 105, 121, 111, 100, 111, 103, 97, 119, 97] => {
                lookup_863_17_17(acc)
            }
            [110, 111, 115, 101] => lookup_863_17_18(acc),
            [109, 97, 116, 115, 117, 98, 97, 114, 97] => lookup_863_17_19(acc),
            [107, 97, 116, 97, 110, 111] => lookup_863_17_20(acc),
            [107, 97, 115, 104, 105, 119, 97, 114, 97] => lookup_863_17_21(acc),
            [107, 105, 116, 97] => lookup_863_17_22(acc),
            [111, 115, 97, 107, 97, 115, 97, 121, 97, 109, 97] => lookup_863_17_23(acc),
            [116, 97, 106, 105, 114, 105] => lookup_863_17_24(acc),
            [116, 111, 110, 100, 97, 98, 97, 121, 97, 115, 104, 105] => lookup_863_17_25(acc),
            [116, 111, 121, 111, 110, 111] => lookup_863_17_26(acc),
            [105, 107, 101, 100, 97] => lookup_863_17_27(acc),
            [107, 97, 119, 97, 99, 104, 105, 110, 97, 103, 97, 110, 111] => lookup_863_17_28(acc),
            [109, 105, 110, 97, 116, 111] => lookup_863_17_29(acc),
            [115, 97, 121, 97, 109, 97] => lookup_863_17_30(acc),
            [104, 105, 103, 97, 115, 104, 105, 115, 117, 109, 105, 121, 111, 115, 104, 105] => {
                lookup_863_17_31(acc)
            }
            [121, 97, 111] => lookup_863_17_32(acc),
            [102, 117, 106, 105, 105, 100, 101, 114, 97] => lookup_863_17_33(acc),
            [115, 104, 105, 106, 111, 110, 97, 119, 97, 116, 101] => lookup_863_17_34(acc),
            [115, 97, 107, 97, 105] => lookup_863_17_35(acc),
            [116, 97, 100, 97, 111, 107, 97] => lookup_863_17_36(acc),
            [109, 105, 115, 97, 107, 105] => lookup_863_17_37(acc),
            [105, 122, 117, 109, 105, 111, 116, 115, 117] => lookup_863_17_38(acc),
            [104, 97, 110, 110, 97, 110] => lookup_863_17_39(acc),
            [104, 105, 114, 97, 107, 97, 116, 97] => lookup_863_17_40(acc),
            [107, 97, 100, 111, 109, 97] => lookup_863_17_41(acc),
            [105, 122, 117, 109, 105, 115, 97, 110, 111] => lookup_863_17_42(acc),
            [107, 97, 105, 122, 117, 107, 97] => lookup_863_17_43(acc),
            [109, 111, 114, 105, 103, 117, 99, 104, 105] => lookup_863_17_44(acc),
            [116, 97, 107, 97, 105, 115, 104, 105] => lookup_863_17_45(acc),
            [115, 101, 116, 116, 115, 117] => lookup_863_17_46(acc),
            [104, 97, 98, 105, 107, 105, 110, 111] => lookup_863_17_47(acc),
            [100, 97, 105, 116, 111] => lookup_863_17_48(acc),
            [99, 104, 105, 104, 97, 121, 97, 97, 107, 97, 115, 97, 107, 97] => {
                lookup_863_17_49(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_18_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_18_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_18_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_18_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_18_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_18_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_18_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_18_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_18_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_18_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_18_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_18_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_18_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_18_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_18_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_18_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_18_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_18_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_18_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_18_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_18_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_18_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_18_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_18_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_18_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_18_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_18_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_18_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_18_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_18_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_18<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 115, 101] => lookup_863_18_0(acc),
            [115, 117, 122, 117, 107, 97] => lookup_863_18_1(acc),
            [119, 97, 116, 97, 114, 97, 105] => lookup_863_18_2(acc),
            [109, 105, 110, 97, 109, 105, 105, 115, 101] => lookup_863_18_3(acc),
            [105, 110, 97, 98, 101] => lookup_863_18_4(acc),
            [121, 111, 107, 107, 97, 105, 99, 104, 105] => lookup_863_18_5(acc),
            [116, 97, 100, 111] => lookup_863_18_6(acc),
            [109, 97, 116, 115, 117, 115, 97, 107, 97] => lookup_863_18_7(acc),
            [109, 105, 121, 97, 109, 97] => lookup_863_18_8(acc),
            [97, 115, 97, 104, 105] => lookup_863_18_9(acc),
            [116, 111, 98, 97] => lookup_863_18_10(acc),
            [117, 114, 101, 115, 104, 105, 110, 111] => lookup_863_18_11(acc),
            [116, 97, 105, 107, 105] => lookup_863_18_12(acc),
            [116, 97, 109, 97, 107, 105] => lookup_863_18_13(acc),
            [116, 115, 117] => lookup_863_18_14(acc),
            [109, 101, 105, 119, 97] => lookup_863_18_15(acc),
            [110, 97, 98, 97, 114, 105] => lookup_863_18_16(acc),
            [107, 105, 104, 111] => lookup_863_18_17(acc),
            [107, 105, 115, 111, 115, 97, 107, 105] => lookup_863_18_18(acc),
            [107, 105, 119, 97] => lookup_863_18_19(acc),
            [107, 111, 109, 111, 110, 111] => lookup_863_18_20(acc),
            [117, 100, 111, 110, 111] => lookup_863_18_21(acc),
            [115, 104, 105, 109, 97] => lookup_863_18_22(acc),
            [107, 117, 109, 97, 110, 111] => lookup_863_18_23(acc),
            [107, 97, 109, 101, 121, 97, 109, 97] => lookup_863_18_24(acc),
            [107, 97, 119, 97, 103, 111, 101] => lookup_863_18_25(acc),
            [109, 105, 115, 117, 103, 105] => lookup_863_18_26(acc),
            [107, 117, 119, 97, 110, 97] => lookup_863_18_27(acc),
            [116, 97, 107, 105] => lookup_863_18_28(acc),
            [109, 105, 104, 97, 109, 97] => lookup_863_18_29(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_19_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_19<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 97, 116, 111, 114, 105] => lookup_863_19_0(acc),
            [109, 97, 116, 115, 117, 100, 111] => lookup_863_19_1(acc),
            [111, 110, 106, 117, 107, 117] => lookup_863_19_2(acc),
            [110, 97, 103, 97, 114, 101, 121, 97, 109, 97] => lookup_863_19_3(acc),
            [102, 117, 110, 97, 98, 97, 115, 104, 105] => lookup_863_19_4(acc),
            [107, 97, 109, 111, 103, 97, 119, 97] => lookup_863_19_5(acc),
            [105, 99, 104, 105, 107, 97, 119, 97] => lookup_863_19_6(acc),
            [110, 97, 114, 105, 116, 97] => lookup_863_19_7(acc),
            [107, 105, 115, 97, 114, 97, 122, 117] => lookup_863_19_8(acc),
            [107, 97, 115, 104, 105, 119, 97] => lookup_863_19_9(acc),
            [102, 117, 116, 116, 115, 117] => lookup_863_19_10(acc),
            [117, 114, 97, 121, 97, 115, 117] => lookup_863_19_11(acc),
            [110, 111, 100, 97] => lookup_863_19_12(acc),
            [115, 104, 105, 114, 97, 107, 111] => lookup_863_19_13(acc),
            [107, 97, 109, 97, 103, 97, 121, 97] => lookup_863_19_14(acc),
            [110, 97, 114, 97, 115, 104, 105, 110, 111] => lookup_863_19_15(acc),
            [109, 105, 100, 111, 114, 105] => lookup_863_19_16(acc),
            [99, 104, 111, 115, 101, 105] => lookup_863_19_17(acc),
            [99, 104, 111, 110, 97, 110] => lookup_863_19_18(acc),
            [107, 97, 116, 115, 117, 117, 114, 97] => lookup_863_19_19(acc),
            [116, 97, 107, 111] => lookup_863_19_20(acc),
            [116, 111, 103, 97, 110, 101] => lookup_863_19_21(acc),
            [121, 111, 107, 97, 105, 99, 104, 105, 98, 97] => lookup_863_19_22(acc),
            [109, 105, 104, 97, 109, 97] => lookup_863_19_23(acc),
            [105, 99, 104, 105, 110, 111, 109, 105, 121, 97] => lookup_863_19_24(acc),
            [105, 110, 122, 97, 105] => lookup_863_19_25(acc),
            [99, 104, 117, 111] => lookup_863_19_26(acc),
            [115, 111, 100, 101, 103, 97, 117, 114, 97] => lookup_863_19_27(acc),
            [121, 97, 99, 104, 105, 109, 97, 116, 97] => lookup_863_19_28(acc),
            [97, 115, 97, 104, 105] => lookup_863_19_29(acc),
            [107, 111, 122, 97, 107, 105] => lookup_863_19_30(acc),
            [115, 104, 105, 114, 111, 105] => lookup_863_19_31(acc),
            [111, 116, 97, 107, 105] => lookup_863_19_32(acc),
            [115, 97, 107, 117, 114, 97] => lookup_863_19_33(acc),
            [99, 104, 111, 115, 104, 105] => lookup_863_19_34(acc),
            [107, 105, 109, 105, 116, 115, 117] => lookup_863_19_35(acc),
            [105, 99, 104, 105, 104, 97, 114, 97] => lookup_863_19_36(acc),
            [97, 98, 105, 107, 111] => lookup_863_19_37(acc),
            [107, 117, 106, 117, 107, 117, 114, 105] => lookup_863_19_38(acc),
            [111, 109, 105, 103, 97, 119, 97] => lookup_863_19_39(acc),
            [116, 97, 116, 101, 121, 97, 109, 97] => lookup_863_19_40(acc),
            [105, 115, 117, 109, 105] => lookup_863_19_41(acc),
            [109, 105, 110, 97, 109, 105, 98, 111, 115, 111] => lookup_863_19_42(acc),
            [116, 111, 104, 110, 111, 115, 104, 111] => lookup_863_19_43(acc),
            [116, 111, 109, 105, 115, 97, 116, 111] => lookup_863_19_44(acc),
            [121, 97, 99, 104, 105, 121, 111] => lookup_863_19_45(acc),
            [115, 97, 107, 97, 101] => lookup_863_19_46(acc),
            [115, 111, 115, 97] => lookup_863_19_47(acc),
            [121, 111, 107, 111, 115, 104, 105, 98, 97, 104, 105, 107, 97, 114, 105] => {
                lookup_863_19_48(acc)
            }
            [111, 97, 109, 105, 115, 104, 105, 114, 97, 115, 97, 116, 111] => lookup_863_19_49(acc),
            [109, 117, 116, 115, 117, 122, 97, 119, 97] => lookup_863_19_50(acc),
            [115, 104, 105, 109, 111, 102, 117, 115, 97] => lookup_863_19_51(acc),
            [109, 111, 98, 97, 114, 97] => lookup_863_19_52(acc),
            [110, 97, 103, 97, 114, 97] => lookup_863_19_53(acc),
            [107, 121, 111, 110, 97, 110] => lookup_863_19_54(acc),
            [115, 104, 105, 115, 117, 105] => lookup_863_19_55(acc),
            [104, 97, 110, 97, 109, 105, 103, 97, 119, 97] => lookup_863_19_56(acc),
            [121, 111, 116, 115, 117, 107, 97, 105, 100, 111] => lookup_863_19_57(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_20_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_20_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_20_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_20_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_20_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_20_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_20_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_20_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_20_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_20_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_20_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_20_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_20_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_20_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_20_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_20_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_20_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_20_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_20_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_20_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_20_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_20_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_20_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_20_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_20_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_20_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_20_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_20_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_20_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_20_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_20_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_20_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_20<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 104, 105, 98, 97, 116, 97] => lookup_863_20_0(acc),
            [114, 105, 102, 117] => lookup_863_20_1(acc),
            [109, 117, 114, 97, 116, 97] => lookup_863_20_2(acc),
            [115, 104, 105, 107, 97, 109, 97] => lookup_863_20_3(acc),
            [116, 97, 103, 97, 106, 111] => lookup_863_20_4(acc),
            [111, 115, 97, 107, 105] => lookup_863_20_5(acc),
            [111, 103, 97, 119, 97, 114, 97] => lookup_863_20_6(acc),
            [102, 117, 114, 117, 107, 97, 119, 97] => lookup_863_20_7(acc),
            [115, 104, 105, 114, 111, 105, 115, 104, 105] => lookup_863_20_8(acc),
            [107, 97, 107, 117, 100, 97] => lookup_863_20_9(acc),
            [115, 101, 109, 105, 110, 101] => lookup_863_20_10(acc),
            [119, 97, 107, 117, 121, 97] => lookup_863_20_11(acc),
            [109, 97, 116, 115, 117, 115, 104, 105, 109, 97] => lookup_863_20_12(acc),
            [109, 97, 114, 117, 109, 111, 114, 105] => lookup_863_20_13(acc),
            [116, 111, 109, 101] => lookup_863_20_14(acc),
            [110, 97, 116, 111, 114, 105] => lookup_863_20_15(acc),
            [111, 110, 97, 103, 97, 119, 97] => lookup_863_20_16(acc),
            [105, 115, 104, 105, 110, 111, 109, 97, 107, 105] => lookup_863_20_17(acc),
            [116, 111, 109, 105, 121, 97] => lookup_863_20_18(acc),
            [115, 104, 105, 111, 103, 97, 109, 97] => lookup_863_20_19(acc),
            [119, 97, 116, 97, 114, 105] => lookup_863_20_20(acc),
            [121, 97, 109, 97, 109, 111, 116, 111] => lookup_863_20_21(acc),
            [109, 105, 110, 97, 109, 105, 115, 97, 110, 114, 105, 107, 117] => {
                lookup_863_20_22(acc)
            }
            [116, 97, 105, 119, 97] => lookup_863_20_23(acc),
            [107, 97, 119, 97, 115, 97, 107, 105] => lookup_863_20_24(acc),
            [111, 104, 105, 114, 97] => lookup_863_20_25(acc),
            [105, 119, 97, 110, 117, 109, 97] => lookup_863_20_26(acc),
            [107, 97, 109, 105] => lookup_863_20_27(acc),
            [122, 97, 111] => lookup_863_20_28(acc),
            [104, 105, 103, 97, 115, 104, 105, 109, 97, 116, 115, 117, 115, 104, 105, 109, 97] => {
                lookup_863_20_29(acc)
            }
            [109, 105, 115, 97, 116, 111] => lookup_863_20_30(acc),
            [115, 104, 105, 99, 104, 105, 107, 97, 115, 104, 117, 107, 117] => {
                lookup_863_20_31(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_24<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 111, 103, 97] => lookup_863_24_0(acc),
            [109, 105, 121, 97, 107, 111] => lookup_863_24_1(acc),
            [110, 105, 115, 104, 105] => lookup_863_24_2(acc),
            [115, 97, 115, 97, 103, 117, 114, 105] => lookup_863_24_3(acc),
            [111, 110, 103, 97] => lookup_863_24_4(acc),
            [100, 97, 122, 97, 105, 102, 117] => lookup_863_24_5(acc),
            [111, 107, 97, 119, 97] => lookup_863_24_6(acc),
            [116, 97, 99, 104, 105, 97, 114, 97, 105] => lookup_863_24_7(acc),
            [116, 97, 107, 97, 116, 97] => lookup_863_24_8(acc),
            [116, 111, 104, 111] => lookup_863_24_9(acc),
            [110, 97, 107, 97, 103, 97, 119, 97] => lookup_863_24_10(acc),
            [107, 117, 114, 97, 116, 101] => lookup_863_24_11(acc),
            [111, 107, 97, 103, 97, 107, 105] => lookup_863_24_12(acc),
            [110, 111, 103, 97, 116, 97] => lookup_863_24_13(acc),
            [104, 97, 107, 97, 116, 97] => lookup_863_24_14(acc),
            [107, 117, 114, 111, 103, 105] => lookup_863_24_15(acc),
            [109, 105, 121, 97, 119, 97, 107, 97] => lookup_863_24_16(acc),
            [121, 97, 110, 97, 103, 97, 119, 97] => lookup_863_24_17(acc),
            [115, 97, 105, 103, 97, 119, 97] => lookup_863_24_18(acc),
            [99, 104, 105, 107, 117, 104, 111] => lookup_863_24_19(acc),
            [116, 111, 121, 111, 116, 115, 117] => lookup_863_24_20(acc),
            [107, 97, 104, 111] => lookup_863_24_21(acc),
            [107, 117, 114, 117, 109, 101] => lookup_863_24_22(acc),
            [111, 116, 111] => lookup_863_24_23(acc),
            [117, 107, 105, 104, 97] => lookup_863_24_24(acc),
            [115, 104, 105, 110, 121, 111, 115, 104, 105, 116, 111, 109, 105] => {
                lookup_863_24_25(acc)
            }
            [99, 104, 105, 107, 117, 122, 101, 110] => lookup_863_24_26(acc),
            [104, 105, 115, 97, 121, 97, 109, 97] => lookup_863_24_27(acc),
            [115, 104, 105, 110, 103, 117] => lookup_863_24_28(acc),
            [115, 111, 101, 100, 97] => lookup_863_24_29(acc),
            [121, 97, 109, 97, 100, 97] => lookup_863_24_30(acc),
            [104, 105, 103, 97, 115, 104, 105] => lookup_863_24_31(acc),
            [116, 97, 103, 97, 119, 97] => lookup_863_24_32(acc),
            [117, 109, 105] => lookup_863_24_33(acc),
            [107, 97, 115, 117, 103, 97] => lookup_863_24_34(acc),
            [109, 105, 122, 117, 109, 97, 107, 105] => lookup_863_24_35(acc),
            [111, 103, 111, 114, 105] => lookup_863_24_36(acc),
            [99, 104, 117, 111] => lookup_863_24_37(acc),
            [109, 117, 110, 97, 107, 97, 116, 97] => lookup_863_24_38(acc),
            [104, 105, 114, 111, 107, 97, 119, 97] => lookup_863_24_39(acc),
            [110, 97, 107, 97, 109, 97] => lookup_863_24_40(acc),
            [109, 105, 121, 97, 109, 97] => lookup_863_24_41(acc),
            [107, 101, 105, 115, 101, 110] => lookup_863_24_42(acc),
            [116, 115, 117, 105, 107, 105] => lookup_863_24_43(acc),
            [99, 104, 105, 107, 117, 106, 111] => lookup_863_24_44(acc),
            [105, 105, 122, 117, 107, 97] => lookup_863_24_45(acc),
            [109, 105, 110, 97, 109, 105] => lookup_863_24_46(acc),
            [115, 117, 101] => lookup_863_24_47(acc),
            [111, 110, 111, 106, 111] => lookup_863_24_48(acc),
            [105, 110, 97, 116, 115, 117, 107, 105] => lookup_863_24_49(acc),
            [107, 97, 119, 97, 114, 97] => lookup_863_24_50(acc),
            [111, 109, 117, 116, 97] => lookup_863_24_51(acc),
            [97, 115, 104, 105, 121, 97] => lookup_863_24_52(acc),
            [107, 97, 115, 117, 121, 97] => lookup_863_24_53(acc),
            [99, 104, 105, 107, 117, 115, 104, 105, 110, 111] => lookup_863_24_54(acc),
            [115, 104, 111, 110, 97, 105] => lookup_863_24_55(acc),
            [117, 115, 117, 105] => lookup_863_24_56(acc),
            [98, 117, 122, 101, 110] => lookup_863_24_57(acc),
            [102, 117, 107, 117, 99, 104, 105] => lookup_863_24_58(acc),
            [111, 107, 105] => lookup_863_24_59(acc),
            [121, 117, 107, 117, 104, 97, 115, 104, 105] => lookup_863_24_60(acc),
            [121, 97, 109, 101] => lookup_863_24_61(acc),
            [99, 104, 105, 107, 117, 103, 111] => lookup_863_24_62(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_25_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_25<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 114, 105, 109, 97] => lookup_863_25_0(acc),
            [99, 104, 111, 102, 117] => lookup_863_25_1(acc),
            [111, 115, 104, 105, 109, 97] => lookup_863_25_2(acc),
            [102, 117, 99, 104, 117] => lookup_863_25_3(acc),
            [102, 117, 115, 115, 97] => lookup_863_25_4(acc),
            [104, 105, 110, 111] => lookup_863_25_5(acc),
            [109, 105, 116, 97, 107, 97] => lookup_863_25_6(acc),
            [109, 117, 115, 97, 115, 104, 105, 110, 111] => lookup_863_25_7(acc),
            [101, 100, 111, 103, 97, 119, 97] => lookup_863_25_8(acc),
            [104, 105, 103, 97, 115, 104, 105, 107, 117, 114, 117, 109, 101] => {
                lookup_863_25_9(acc)
            }
            [105, 116, 97, 98, 97, 115, 104, 105] => lookup_863_25_10(acc),
            [107, 111, 100, 97, 105, 114, 97] => lookup_863_25_11(acc),
            [111, 107, 117, 116, 97, 109, 97] => lookup_863_25_12(acc),
            [107, 111, 116, 111] => lookup_863_25_13(acc),
            [115, 104, 105, 110, 106, 117, 107, 117] => lookup_863_25_14(acc),
            [107, 111, 117, 122, 117, 115, 104, 105, 109, 97] => lookup_863_25_15(acc),
            [98, 117, 110, 107, 121, 111] => lookup_863_25_16(acc),
            [109, 117, 115, 97, 115, 104, 105, 109, 117, 114, 97, 121, 97, 109, 97] => {
                lookup_863_25_17(acc)
            }
            [104, 105, 103, 97, 115, 104, 105, 121, 97, 109, 97, 116, 111] => lookup_863_25_18(acc),
            [111, 116, 97] => lookup_863_25_19(acc),
            [97, 114, 97, 107, 97, 119, 97] => lookup_863_25_20(acc),
            [107, 97, 116, 115, 117, 115, 104, 105, 107, 97] => lookup_863_25_21(acc),
            [107, 117, 110, 105, 116, 97, 99, 104, 105] => lookup_863_25_22(acc),
            [111, 109, 101] => lookup_863_25_23(acc),
            [111, 103, 97, 115, 97, 119, 97, 114, 97] => lookup_863_25_24(acc),
            [110, 97, 107, 97, 110, 111] => lookup_863_25_25(acc),
            [109, 97, 99, 104, 105, 100, 97] => lookup_863_25_26(acc),
            [104, 97, 109, 117, 114, 97] => lookup_863_25_27(acc),
            [99, 104, 117, 111] => lookup_863_25_28(acc),
            [116, 97, 109, 97] => lookup_863_25_29(acc),
            [115, 104, 105, 110, 97, 103, 97, 119, 97] => lookup_863_25_30(acc),
            [97, 107, 105, 115, 104, 105, 109, 97] => lookup_863_25_31(acc),
            [116, 111, 115, 104, 105, 109, 97] => lookup_863_25_32(acc),
            [107, 105, 116, 97] => lookup_863_25_33(acc),
            [104, 97, 99, 104, 105, 111, 106, 105] => lookup_863_25_34(acc),
            [115, 117, 103, 105, 110, 97, 109, 105] => lookup_863_25_35(acc),
            [116, 97, 99, 104, 105, 107, 97, 119, 97] => lookup_863_25_36(acc),
            [104, 97, 99, 104, 105, 106, 111] => lookup_863_25_37(acc),
            [104, 105, 110, 111, 104, 97, 114, 97] => lookup_863_25_38(acc),
            [116, 97, 105, 116, 111] => lookup_863_25_39(acc),
            [109, 105, 110, 97, 116, 111] => lookup_863_25_40(acc),
            [104, 105, 103, 97, 115, 104, 105, 109, 117, 114, 97, 121, 97, 109, 97] => {
                lookup_863_25_41(acc)
            }
            [104, 105, 110, 111, 100, 101] => lookup_863_25_42(acc),
            [107, 111, 107, 117, 98, 117, 110, 106, 105] => lookup_863_25_43(acc),
            [115, 101, 116, 97, 103, 97, 121, 97] => lookup_863_25_44(acc),
            [97, 107, 105, 114, 117, 110, 111] => lookup_863_25_45(acc),
            [107, 105, 121, 111, 115, 101] => lookup_863_25_46(acc),
            [97, 100, 97, 99, 104, 105] => lookup_863_25_47(acc),
            [109, 105, 122, 117, 104, 111] => lookup_863_25_48(acc),
            [99, 104, 105, 121, 111, 100, 97] => lookup_863_25_49(acc),
            [97, 111, 103, 97, 115, 104, 105, 109, 97] => lookup_863_25_50(acc),
            [107, 111, 109, 97, 101] => lookup_863_25_51(acc),
            [109, 101, 103, 117, 114, 111] => lookup_863_25_52(acc),
            [107, 111, 103, 97, 110, 101, 105] => lookup_863_25_53(acc),
            [115, 117, 109, 105, 100, 97] => lookup_863_25_54(acc),
            [115, 104, 105, 98, 117, 121, 97] => lookup_863_25_55(acc),
            [105, 110, 97, 103, 105] => lookup_863_25_56(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_26_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_26_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_26_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_26_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_26_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_26_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_26_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_26_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_26_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_26_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_26_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_26_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_26_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_26_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_26_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_26_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_26_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_26_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_26_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_26_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_26_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_26_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_26_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_26_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_26_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_26<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 110, 111, 109, 105, 99, 104, 105] => lookup_863_26_0(acc),
            [102, 117, 99, 104, 117] => lookup_863_26_1(acc),
            [109, 105, 104, 97, 114, 97] => lookup_863_26_2(acc),
            [111, 116, 97, 107, 101] => lookup_863_26_3(acc),
            [115, 104, 111, 98, 97, 114, 97] => lookup_863_26_4(acc),
            [97, 115, 97, 109, 105, 110, 97, 109, 105] => lookup_863_26_5(acc),
            [107, 117, 114, 101] => lookup_863_26_6(acc),
            [100, 97, 105, 119, 97] => lookup_863_26_7(acc),
            [102, 117, 107, 117, 121, 97, 109, 97] => lookup_863_26_8(acc),
            [115, 101, 114, 97] => lookup_863_26_9(acc),
            [116, 97, 107, 101, 104, 97, 114, 97] => lookup_863_26_10(acc),
            [111, 115, 97, 107, 105, 107, 97, 109, 105, 106, 105, 109, 97] => lookup_863_26_11(acc),
            [104, 111, 110, 103, 111] => lookup_863_26_12(acc),
            [104, 105, 103, 97, 115, 104, 105, 104, 105, 114, 111, 115, 104, 105, 109, 97] => {
                lookup_863_26_13(acc)
            }
            [107, 97, 105, 116, 97] => lookup_863_26_14(acc),
            [107, 117, 109, 97, 110, 111] => lookup_863_26_15(acc),
            [110, 97, 107, 97] => lookup_863_26_16(acc),
            [109, 105, 121, 111, 115, 104, 105] => lookup_863_26_17(acc),
            [107, 117, 105] => lookup_863_26_18(acc),
            [106, 105, 110, 115, 101, 107, 105, 107, 111, 103, 101, 110] => lookup_863_26_19(acc),
            [115, 97, 107, 97] => lookup_863_26_20(acc),
            [104, 97, 116, 115, 117, 107, 97, 105, 99, 104, 105] => lookup_863_26_21(acc),
            [101, 116, 97, 106, 105, 109, 97] => lookup_863_26_22(acc),
            [115, 104, 105, 110, 105, 99, 104, 105] => lookup_863_26_23(acc),
            [115, 101, 114, 97, 110, 105, 115, 104, 105] => lookup_863_26_24(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_28_0(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_28_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_28<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_863_28_0(acc),
            wild => lookup_863_28_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_863_29_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_29_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_29_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_29_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_29_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_29_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_29_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_29_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_29_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_29_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_29_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_29_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_29_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_29_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_29_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_29_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_29_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_29_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_29_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_29_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_29_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_29_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_29_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_29_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_29_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_29_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_29_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_29_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_29_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_29_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_29_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_29<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 111, 107, 97] => lookup_863_29_0(acc),
            [107, 97, 109, 105, 110, 111, 107, 97, 119, 97] => lookup_863_29_1(acc),
            [115, 104, 105, 109, 111, 116, 115, 117, 107, 101] => lookup_863_29_2(acc),
            [105, 99, 104, 105, 107, 97, 105] => lookup_863_29_3(acc),
            [115, 97, 110, 111] => lookup_863_29_4(acc),
            [105, 119, 97, 102, 117, 110, 101] => lookup_863_29_5(acc),
            [110, 105, 115, 104, 105, 107, 97, 116, 97] => lookup_863_29_6(acc),
            [115, 97, 107, 117, 114, 97] => lookup_863_29_7(acc),
            [111, 104, 116, 97, 119, 97, 114, 97] => lookup_863_29_8(acc),
            [110, 97, 115, 117, 115, 104, 105, 111, 98, 97, 114, 97] => lookup_863_29_9(acc),
            [110, 111, 103, 105] => lookup_863_29_10(acc),
            [121, 97, 105, 116, 97] => lookup_863_29_11(acc),
            [98, 97, 116, 111] => lookup_863_29_12(acc),
            [109, 105, 98, 117] => lookup_863_29_13(acc),
            [117, 116, 115, 117, 110, 111, 109, 105, 121, 97] => lookup_863_29_14(acc),
            [104, 97, 103, 97] => lookup_863_29_15(acc),
            [110, 97, 115, 117] => lookup_863_29_16(acc),
            [107, 97, 110, 117, 109, 97] => lookup_863_29_17(acc),
            [107, 97, 114, 97, 115, 117, 121, 97, 109, 97] => lookup_863_29_18(acc),
            [115, 104, 105, 111, 121, 97] => lookup_863_29_19(acc),
            [116, 115, 117, 103, 97] => lookup_863_29_20(acc),
            [116, 97, 107, 97, 110, 101, 122, 97, 119, 97] => lookup_863_29_21(acc),
            [111, 104, 105, 114, 97] => lookup_863_29_22(acc),
            [111, 121, 97, 109, 97] => lookup_863_29_23(acc),
            [109, 111, 116, 101, 103, 105] => lookup_863_29_24(acc),
            [109, 97, 115, 104, 105, 107, 111] => lookup_863_29_25(acc),
            [116, 111, 99, 104, 105, 103, 105] => lookup_863_29_26(acc),
            [110, 105, 107, 107, 111] => lookup_863_29_27(acc),
            [107, 117, 114, 111, 105, 115, 111] => lookup_863_29_28(acc),
            [97, 115, 104, 105, 107, 97, 103, 97] => lookup_863_29_29(acc),
            [117, 106, 105, 105, 101] => lookup_863_29_30(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_32_0(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_32_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_32<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_863_32_0(acc),
            wild => lookup_863_32_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_863_33_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_33_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_33_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_33_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_33_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_33_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_33_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_33_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_33_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_33_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_33_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_33_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_33_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_33_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_33_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_33_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_33<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 115, 104, 105, 109, 97] => lookup_863_33_0(acc),
            [109, 105, 116, 111, 117] => lookup_863_33_1(acc),
            [104, 105, 107, 97, 114, 105] => lookup_863_33_2(acc),
            [115, 104, 105, 109, 111, 110, 111, 115, 101, 107, 105] => lookup_863_33_3(acc),
            [116, 97, 98, 117, 115, 101] => lookup_863_33_4(acc),
            [121, 117, 117] => lookup_863_33_5(acc),
            [115, 104, 117, 110, 97, 110] => lookup_863_33_6(acc),
            [105, 119, 97, 107, 117, 110, 105] => lookup_863_33_7(acc),
            [97, 98, 117] => lookup_863_33_8(acc),
            [107, 117, 100, 97, 109, 97, 116, 115, 117] => lookup_863_33_9(acc),
            [116, 111, 107, 117, 121, 97, 109, 97] => lookup_863_33_10(acc),
            [110, 97, 103, 97, 116, 111] => lookup_863_33_11(acc),
            [104, 97, 103, 105] => lookup_863_33_12(acc),
            [104, 111, 102, 117] => lookup_863_33_13(acc),
            [117, 98, 101] => lookup_863_33_14(acc),
            [116, 111, 121, 111, 116, 97] => lookup_863_33_15(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_36_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_36_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_36_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_36_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_36_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_36_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_36_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_36_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_36_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_36_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_36_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_36_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_36_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_36_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_36_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_36_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_36_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_36_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_36_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_36_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_36_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_36_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_36_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_36<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 104, 105, 109, 97, 110, 101] => lookup_863_36_0(acc),
            [105, 122, 117, 109, 111] => lookup_863_36_1(acc),
            [117, 110, 110, 97, 110] => lookup_863_36_2(acc),
            [121, 97, 107, 117, 109, 111] => lookup_863_36_3(acc),
            [103, 111, 116, 115, 117] => lookup_863_36_4(acc),
            [97, 107, 97, 103, 105] => lookup_863_36_5(acc),
            [111, 104, 100, 97] => lookup_863_36_6(acc),
            [97, 109, 97] => lookup_863_36_7(acc),
            [110, 105, 115, 104, 105, 110, 111, 115, 104, 105, 109, 97] => lookup_863_36_8(acc),
            [111, 107, 105, 110, 111, 115, 104, 105, 109, 97] => lookup_863_36_9(acc),
            [107, 97, 107, 105, 110, 111, 107, 105] => lookup_863_36_10(acc),
            [104, 105, 103, 97, 115, 104, 105, 105, 122, 117, 109, 111] => lookup_863_36_11(acc),
            [111, 107, 117, 105, 122, 117, 109, 111] => lookup_863_36_12(acc),
            [109, 97, 115, 117, 100, 97] => lookup_863_36_13(acc),
            [121, 97, 115, 117, 103, 105] => lookup_863_36_14(acc),
            [116, 97, 109, 97, 121, 117] => lookup_863_36_15(acc),
            [104, 97, 109, 97, 100, 97] => lookup_863_36_16(acc),
            [109, 97, 116, 115, 117, 101] => lookup_863_36_17(acc),
            [116, 115, 117, 119, 97, 110, 111] => lookup_863_36_18(acc),
            [121, 97, 116, 115, 117, 107, 97] => lookup_863_36_19(acc),
            [104, 105, 107, 97, 119, 97] => lookup_863_36_20(acc),
            [109, 105, 115, 97, 116, 111] => lookup_863_36_21(acc),
            [104, 105, 107, 105, 109, 105] => lookup_863_36_22(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_38_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_38_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_38_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_38_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_38_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_38_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_38_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_38_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_38_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_38_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_38_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_38_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_38_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_38_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_38_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_38_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_38_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_38_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_38_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_38_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_38_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_38_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_38_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_38_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_38_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_38_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_38_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_38_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_38_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_38_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_38_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_38_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_38_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_38_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_38<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 97, 109, 117, 114, 111, 103, 97, 119, 97] => lookup_863_38_0(acc),
            [107, 97, 119, 97, 110, 105, 115, 104, 105] => lookup_863_38_1(acc),
            [121, 97, 109, 97, 103, 97, 116, 97] => lookup_863_38_2(acc),
            [121, 97, 109, 97, 110, 111, 98, 101] => lookup_863_38_3(acc),
            [116, 111, 122, 97, 119, 97] => lookup_863_38_4(acc),
            [110, 97, 103, 97, 105] => lookup_863_38_5(acc),
            [97, 115, 97, 104, 105] => lookup_863_38_6(acc),
            [109, 105, 107, 97, 119, 97] => lookup_863_38_7(acc),
            [107, 97, 104, 111, 107, 117] => lookup_863_38_8(acc),
            [110, 105, 115, 104, 105, 107, 97, 119, 97] => lookup_863_38_9(acc),
            [111, 98, 97, 110, 97, 122, 97, 119, 97] => lookup_863_38_10(acc),
            [111, 104, 107, 117, 114, 97] => lookup_863_38_11(acc),
            [115, 97, 107, 101, 103, 97, 119, 97] => lookup_863_38_12(acc),
            [116, 101, 110, 100, 111] => lookup_863_38_13(acc),
            [115, 97, 103, 97, 101] => lookup_863_38_14(acc),
            [121, 111, 110, 101, 122, 97, 119, 97] => lookup_863_38_15(acc),
            [116, 97, 107, 97, 104, 97, 116, 97] => lookup_863_38_16(acc),
            [105, 105, 100, 101] => lookup_863_38_17(acc),
            [109, 117, 114, 97, 121, 97, 109, 97] => lookup_863_38_18(acc),
            [107, 97, 109, 105, 110, 111, 121, 97, 109, 97] => lookup_863_38_19(acc),
            [107, 97, 110, 101, 121, 97, 109, 97] => lookup_863_38_20(acc),
            [110, 97, 110, 121, 111] => lookup_863_38_21(acc),
            [111, 101] => lookup_863_38_22(acc),
            [115, 104, 111, 110, 97, 105] => lookup_863_38_23(acc),
            [104, 105, 103, 97, 115, 104, 105, 110, 101] => lookup_863_38_24(acc),
            [116, 115, 117, 114, 117, 111, 107, 97] => lookup_863_38_25(acc),
            [121, 117, 122, 97] => lookup_863_38_26(acc),
            [111, 103, 117, 110, 105] => lookup_863_38_27(acc),
            [111, 105, 115, 104, 105, 100, 97] => lookup_863_38_28(acc),
            [110, 97, 107, 97, 121, 97, 109, 97] => lookup_863_38_29(acc),
            [102, 117, 110, 97, 103, 97, 116, 97] => lookup_863_38_30(acc),
            [115, 104, 105, 114, 97, 116, 97, 107, 97] => lookup_863_38_31(acc),
            [115, 104, 105, 110, 106, 111] => lookup_863_38_32(acc),
            [115, 97, 107, 97, 116, 97] => lookup_863_38_33(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_46_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_46_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_46_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_46_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_46_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_46_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_46_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_46_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_46_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_46_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_46_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_46_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_46_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_46_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_46_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_46_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_46_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_46_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_46_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_46_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_46_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_46_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_46_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_46_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_46_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_46_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_46_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_46_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_46_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_46_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_46_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_46_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_46_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_46_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_46_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_46_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_46_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_46_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_46<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 97, 115, 104, 105, 104, 97, 114, 97] => lookup_863_46_0(acc),
            [121, 111, 115, 104, 105, 110, 111] => lookup_863_46_1(acc),
            [115, 97, 110, 103, 111] => lookup_863_46_2(acc),
            [107, 97, 110, 109, 97, 107, 105] => lookup_863_46_3(acc),
            [111, 121, 111, 100, 111] => lookup_863_46_4(acc),
            [104, 101, 103, 117, 114, 105] => lookup_863_46_5(acc),
            [116, 97, 107, 97, 116, 111, 114, 105] => lookup_863_46_6(acc),
            [116, 97, 119, 97, 114, 97, 109, 111, 116, 111] => lookup_863_46_7(acc),
            [107, 97, 116, 115, 117, 114, 97, 103, 105] => lookup_863_46_8(acc),
            [111, 106, 105] => lookup_863_46_9(acc),
            [115, 104, 105, 109, 111, 105, 99, 104, 105] => lookup_863_46_10(acc),
            [110, 97, 114, 97] => lookup_863_46_11(acc),
            [103, 111, 115, 101] => lookup_863_46_12(acc),
            [115, 104, 105, 109, 111, 107, 105, 116, 97, 121, 97, 109, 97] => lookup_863_46_13(acc),
            [116, 101, 110, 107, 97, 119, 97] => lookup_863_46_14(acc),
            [116, 101, 110, 114, 105] => lookup_863_46_15(acc),
            [121, 97, 109, 97, 116, 111, 107, 111, 114, 105, 121, 97, 109, 97] => {
                lookup_863_46_16(acc)
            }
            [107, 97, 109, 105, 107, 105, 116, 97, 121, 97, 109, 97] => lookup_863_46_17(acc),
            [104, 105, 103, 97, 115, 104, 105, 121, 111, 115, 104, 105, 110, 111] => {
                lookup_863_46_18(acc)
            }
            [107, 97, 119, 97, 105] => lookup_863_46_19(acc),
            [109, 105, 121, 97, 107, 101] => lookup_863_46_20(acc),
            [117, 100, 97] => lookup_863_46_21(acc),
            [121, 97, 109, 97, 122, 111, 101] => lookup_863_46_22(acc),
            [115, 111, 110, 105] => lookup_863_46_23(acc),
            [109, 105, 116, 115, 117, 101] => lookup_863_46_24(acc),
            [111, 117, 100, 97] => lookup_863_46_25(acc),
            [115, 97, 107, 117, 114, 97, 105] => lookup_863_46_26(acc),
            [121, 97, 109, 97, 116, 111, 116, 97, 107, 97, 100, 97] => lookup_863_46_27(acc),
            [97, 110, 100, 111] => lookup_863_46_28(acc),
            [105, 107, 111, 109, 97] => lookup_863_46_29(acc),
            [107, 117, 114, 111, 116, 97, 107, 105] => lookup_863_46_30(acc),
            [107, 97, 119, 97, 107, 97, 109, 105] => lookup_863_46_31(acc),
            [110, 111, 115, 101, 103, 97, 119, 97] => lookup_863_46_32(acc),
            [107, 97, 115, 104, 105, 98, 97] => lookup_863_46_33(acc),
            [107, 111, 114, 121, 111] => lookup_863_46_34(acc),
            [105, 107, 97, 114, 117, 103, 97] => lookup_863_46_35(acc),
            [115, 104, 105, 110, 106, 111] => lookup_863_46_36(acc),
            [107, 97, 119, 97, 110, 105, 115, 104, 105] => lookup_863_46_37(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_47_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_47_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_47_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_47_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_47_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_47_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_47_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_47_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_47_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_47_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_47_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_47_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_47_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_47_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_47_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_47_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_47_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_47_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_47_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_47_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_47_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_47_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_47<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 98, 97, 109, 97] => lookup_863_47_0(acc),
            [109, 97, 116, 115, 117, 117, 114, 97] => lookup_863_47_1(acc),
            [103, 111, 116, 111] => lookup_863_47_2(acc),
            [116, 115, 117, 115, 104, 105, 109, 97] => lookup_863_47_3(acc),
            [105, 107, 105] => lookup_863_47_4(acc),
            [102, 117, 116, 115, 117] => lookup_863_47_5(acc),
            [117, 110, 122, 101, 110] => lookup_863_47_6(acc),
            [111, 109, 117, 114, 97] => lookup_863_47_7(acc),
            [105, 115, 97, 104, 97, 121, 97] => lookup_863_47_8(acc),
            [115, 104, 105, 109, 97, 98, 97, 114, 97] => lookup_863_47_9(acc),
            [110, 97, 103, 97, 115, 97, 107, 105] => lookup_863_47_10(acc),
            [115, 104, 105, 110, 107, 97, 109, 105, 103, 111, 116, 111] => lookup_863_47_11(acc),
            [115, 97, 105, 107, 97, 105] => lookup_863_47_12(acc),
            [115, 97, 115, 101, 98, 111] => lookup_863_47_13(acc),
            [116, 111, 103, 105, 116, 115, 117] => lookup_863_47_14(acc),
            [111, 115, 101, 116, 111] => lookup_863_47_15(acc),
            [104, 97, 115, 97, 109, 105] => lookup_863_47_16(acc),
            [107, 97, 119, 97, 116, 97, 110, 97] => lookup_863_47_17(acc),
            [115, 101, 105, 104, 105] => lookup_863_47_18(acc),
            [99, 104, 105, 106, 105, 119, 97] => lookup_863_47_19(acc),
            [104, 105, 114, 97, 100, 111] => lookup_863_47_20(acc),
            [107, 117, 99, 104, 105, 110, 111, 116, 115, 117] => lookup_863_47_21(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_52_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_52_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_52_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_52_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_52_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_52_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_52_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_52_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_52_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_52_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_52_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_52_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_52_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_52_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_52_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_52_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_52_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_52<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 97, 114, 117, 116, 111] => lookup_863_52_0(acc),
            [107, 111, 109, 97, 116, 115, 117, 115, 104, 105, 109, 97] => lookup_863_52_1(acc),
            [97, 105, 122, 117, 109, 105] => lookup_863_52_2(acc),
            [119, 97, 106, 105, 107, 105] => lookup_863_52_3(acc),
            [105, 99, 104, 105, 98, 97] => lookup_863_52_4(acc),
            [115, 104, 105, 115, 104, 105, 107, 117, 105] => lookup_863_52_5(acc),
            [109, 117, 103, 105] => lookup_863_52_6(acc),
            [109, 97, 116, 115, 117, 115, 104, 105, 103, 101] => lookup_863_52_7(acc),
            [107, 97, 105, 110, 97, 110] => lookup_863_52_8(acc),
            [97, 110, 97, 110] => lookup_863_52_9(acc),
            [105, 116, 97, 110, 111] => lookup_863_52_10(acc),
            [109, 105, 109, 97] => lookup_863_52_11(acc),
            [109, 105, 110, 97, 109, 105] => lookup_863_52_12(acc),
            [109, 105, 121, 111, 115, 104, 105] => lookup_863_52_13(acc),
            [110, 97, 107, 97, 103, 97, 119, 97] => lookup_863_52_14(acc),
            [115, 97, 110, 97, 103, 111, 99, 104, 105] => lookup_863_52_15(acc),
            [116, 111, 107, 117, 115, 104, 105, 109, 97] => lookup_863_52_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_54_0(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_54_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_54<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_863_54_0(acc),
            wild => lookup_863_54_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_863_55_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_55_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_55_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_55_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_55_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_55_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_55_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_55_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_55_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_55_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_55_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_55_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_55_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_55_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_55_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_55_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_55_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_55_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_55_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_55_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_55_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_55_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_55_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_55_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_55_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_55_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_55_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_55_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_55_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_55_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_55_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_55<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 111, 115, 97, 115, 104, 105, 109, 105, 122, 117] => lookup_863_55_0(acc),
            [111, 116, 111, 121, 111] => lookup_863_55_1(acc),
            [111, 116, 115, 117, 107, 105] => lookup_863_55_2(acc),
            [110, 97, 110, 107, 111, 107, 117] => lookup_863_55_3(acc),
            [117, 109, 97, 106, 105] => lookup_863_55_4(acc),
            [121, 97, 115, 117, 100, 97] => lookup_863_55_5(acc),
            [111, 107, 97, 119, 97] => lookup_863_55_6(acc),
            [105, 110, 111] => lookup_863_55_7(acc),
            [109, 117, 114, 111, 116, 111] => lookup_863_55_8(acc),
            [110, 97, 104, 97, 114, 105] => lookup_863_55_9(acc),
            [115, 117, 107, 117, 109, 111] => lookup_863_55_10(acc),
            [104, 105, 100, 97, 107, 97] => lookup_863_55_11(acc),
            [107, 111, 99, 104, 105] => lookup_863_55_12(acc),
            [116, 111, 115, 97] => lookup_863_55_13(acc),
            [110, 105, 115, 104, 105, 116, 111, 115, 97] => lookup_863_55_14(acc),
            [110, 105, 121, 111, 100, 111, 103, 97, 119, 97] => lookup_863_55_15(acc),
            [97, 107, 105] => lookup_863_55_16(acc),
            [109, 111, 116, 111, 121, 97, 109, 97] => lookup_863_55_17(acc),
            [107, 105, 116, 97, 103, 97, 119, 97] => lookup_863_55_18(acc),
            [115, 97, 107, 97, 119, 97] => lookup_863_55_19(acc),
            [104, 105, 103, 97, 115, 104, 105, 116, 115, 117, 110, 111] => lookup_863_55_20(acc),
            [109, 105, 104, 97, 114, 97] => lookup_863_55_21(acc),
            [116, 115, 117, 110, 111] => lookup_863_55_22(acc),
            [121, 117, 115, 117, 104, 97, 114, 97] => lookup_863_55_23(acc),
            [103, 101, 105, 115, 101, 105] => lookup_863_55_24(acc),
            [115, 117, 115, 97, 107, 105] => lookup_863_55_25(acc),
            [116, 111, 121, 111] => lookup_863_55_26(acc),
            [107, 97, 103, 97, 109, 105] => lookup_863_55_27(acc),
            [107, 97, 109, 105] => lookup_863_55_28(acc),
            [111, 99, 104, 105] => lookup_863_55_29(acc),
            [110, 97, 107, 97, 109, 117, 114, 97] => lookup_863_55_30(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_59_0(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_59_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_59<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_863_59_0(acc),
            wild => lookup_863_59_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_863_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_66_0(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_66_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_66<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_863_66_0(acc),
            wild => lookup_863_66_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_863_67_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_67_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_67_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_67_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_67_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_67_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_67_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_67_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_67_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_67_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_67_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_67_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_67_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_67_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_67_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_67_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_67_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_67_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_67_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_67_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_67_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_67_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_67_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_67_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_67_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_67_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_67_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_67_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_67_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_67_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_67_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_67<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 97, 105, 122, 117, 114, 117] => lookup_863_67_0(acc),
            [117, 106, 105] => lookup_863_67_1(acc),
            [107, 105, 122, 117] => lookup_863_67_2(acc),
            [121, 97, 119, 97, 116, 97] => lookup_863_67_3(acc),
            [106, 111, 121, 111] => lookup_863_67_4(acc),
            [116, 97, 110, 97, 98, 101] => lookup_863_67_5(acc),
            [107, 117, 109, 105, 121, 97, 109, 97] => lookup_863_67_6(acc),
            [107, 97, 109, 101, 111, 107, 97] => lookup_863_67_7(acc),
            [105, 100, 101] => lookup_863_67_8(acc),
            [107, 121, 111, 116, 97, 109, 98, 97] => lookup_863_67_9(acc),
            [107, 121, 111, 116, 97, 110, 97, 98, 101] => lookup_863_67_10(acc),
            [97, 121, 97, 98, 101] => lookup_863_67_11(acc),
            [107, 105, 116, 97] => lookup_863_67_12(acc),
            [109, 105, 110, 97, 109, 105] => lookup_863_67_13(acc),
            [109, 105, 110, 97, 109, 105, 121, 97, 109, 97, 115, 104, 105, 114, 111] => {
                lookup_863_67_14(acc)
            }
            [110, 97, 103, 97, 111, 107, 97, 107, 121, 111] => lookup_863_67_15(acc),
            [107, 97, 109, 111] => lookup_863_67_16(acc),
            [121, 97, 109, 97, 115, 104, 105, 110, 97] => lookup_863_67_17(acc),
            [110, 97, 107, 97, 103, 121, 111] => lookup_863_67_18(acc),
            [109, 117, 107, 111] => lookup_863_67_19(acc),
            [109, 105, 121, 97, 122, 117] => lookup_863_67_20(acc),
            [115, 101, 105, 107, 97] => lookup_863_67_21(acc),
            [117, 106, 105, 116, 97, 119, 97, 114, 97] => lookup_863_67_22(acc),
            [105, 110, 101] => lookup_863_67_23(acc),
            [110, 97, 110, 116, 97, 110] => lookup_863_67_24(acc),
            [102, 117, 107, 117, 99, 104, 105, 121, 97, 109, 97] => lookup_863_67_25(acc),
            [119, 97, 122, 117, 107, 97] => lookup_863_67_26(acc),
            [111, 121, 97, 109, 97, 122, 97, 107, 105] => lookup_863_67_27(acc),
            [115, 97, 107, 121, 111] => lookup_863_67_28(acc),
            [107, 121, 111, 116, 97, 110, 103, 111] => lookup_863_67_29(acc),
            [104, 105, 103, 97, 115, 104, 105, 121, 97, 109, 97] => lookup_863_67_30(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_72_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_72_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_72_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_72_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_72_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_72_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_72_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_72_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_72_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_72_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_72_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_72_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_72_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_72_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_72_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_72_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_72_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_72_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_72_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_72_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_72_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_72_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_72_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_72<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 110, 97, 109, 97, 116, 97] => lookup_863_72_0(acc),
            [115, 117, 109, 111, 116, 111] => lookup_863_72_1(acc),
            [117, 116, 111] => lookup_863_72_2(acc),
            [121, 97, 109, 97, 103, 97] => lookup_863_72_3(acc),
            [109, 105, 110, 97, 109, 105, 111, 103, 117, 110, 105] => lookup_863_72_4(acc),
            [97, 109, 97, 107, 117, 115, 97] => lookup_863_72_5(acc),
            [107, 105, 107, 117, 99, 104, 105] => lookup_863_72_6(acc),
            [110, 105, 115, 104, 105, 104, 97, 114, 97] => lookup_863_72_7(acc),
            [121, 97, 109, 97, 116, 111] => lookup_863_72_8(acc),
            [121, 97, 116, 115, 117, 115, 104, 105, 114, 111] => lookup_863_72_9(acc),
            [107, 97, 109, 105, 97, 109, 97, 107, 117, 115, 97] => lookup_863_72_10(acc),
            [97, 115, 111] => lookup_863_72_11(acc),
            [103, 121, 111, 107, 117, 116, 111] => lookup_863_72_12(acc),
            [117, 107, 105] => lookup_863_72_13(acc),
            [111, 103, 117, 110, 105] => lookup_863_72_14(acc),
            [107, 117, 109, 97, 109, 111, 116, 111] => lookup_863_72_15(acc),
            [116, 97, 107, 97, 109, 111, 114, 105] => lookup_863_72_16(acc),
            [97, 114, 97, 111] => lookup_863_72_17(acc),
            [111, 122, 117] => lookup_863_72_18(acc),
            [109, 97, 115, 104, 105, 107, 105] => lookup_863_72_19(acc),
            [109, 105, 102, 117, 110, 101] => lookup_863_72_20(acc),
            [110, 97, 103, 97, 115, 117] => lookup_863_72_21(acc),
            [99, 104, 111, 121, 111] => lookup_863_72_22(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_73_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_73_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_73_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_73_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_73_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_73_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_73_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_73_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_73_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_73_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_73_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_73_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_73_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_73_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_73_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_73_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_73_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_73_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_73_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_73_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_73_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_73_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_73_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_73_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_73_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_73_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_73_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_73_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_73_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_73<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 105, 116, 97, 121, 97, 109, 97] => lookup_863_73_0(acc),
            [104, 105, 114, 111, 103, 97, 119, 97] => lookup_863_73_1(acc),
            [107, 105, 110, 111, 107, 97, 119, 97] => lookup_863_73_2(acc),
            [116, 97, 110, 97, 98, 101] => lookup_863_73_3(acc),
            [107, 97, 116, 115, 117, 114, 97, 103, 105] => lookup_863_73_4(acc),
            [116, 97, 105, 106, 105] => lookup_863_73_5(acc),
            [107, 111, 121, 97] => lookup_863_73_6(acc),
            [105, 110, 97, 109, 105] => lookup_863_73_7(acc),
            [103, 111, 98, 111] => lookup_863_73_8(acc),
            [121, 117, 114, 97] => lookup_863_73_9(acc),
            [105, 119, 97, 100, 101] => lookup_863_73_10(acc),
            [107, 97, 105, 110, 97, 110] => lookup_863_73_11(acc),
            [107, 105, 109, 105, 110, 111] => lookup_863_73_12(acc),
            [121, 117, 97, 115, 97] => lookup_863_73_13(acc),
            [104, 105, 100, 97, 107, 97] => lookup_863_73_14(acc),
            [115, 104, 105, 114, 97, 104, 97, 109, 97] => lookup_863_73_15(acc),
            [107, 117, 100, 111, 121, 97, 109, 97] => lookup_863_73_16(acc),
            [97, 114, 105, 100, 97] => lookup_863_73_17(acc),
            [107, 111, 122, 97] => lookup_863_73_18(acc),
            [104, 97, 115, 104, 105, 109, 111, 116, 111] => lookup_863_73_19(acc),
            [107, 111, 122, 97, 103, 97, 119, 97] => lookup_863_73_20(acc),
            [107, 97, 109, 105, 116, 111, 110, 100, 97] => lookup_863_73_21(acc),
            [97, 114, 105, 100, 97, 103, 97, 119, 97] => lookup_863_73_22(acc),
            [107, 117, 115, 104, 105, 109, 111, 116, 111] => lookup_863_73_23(acc),
            [110, 97, 99, 104, 105, 107, 97, 116, 115, 117, 117, 114, 97] => lookup_863_73_24(acc),
            [115, 104, 105, 110, 103, 117] => lookup_863_73_25(acc),
            [119, 97, 107, 97, 121, 97, 109, 97] => lookup_863_73_26(acc),
            [109, 105, 115, 97, 116, 111] => lookup_863_73_27(acc),
            [109, 105, 104, 97, 109, 97] => lookup_863_73_28(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_80_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_80_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_80_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_80_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_80_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_80_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_80_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_80_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_80_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_80_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_80_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_80_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_80_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_80<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 97, 110, 98, 117] => lookup_863_80_0(acc),
            [107, 111, 116, 111, 117, 114, 97] => lookup_863_80_1(acc),
            [107, 97, 119, 97, 104, 97, 114, 97] => lookup_863_80_2(acc),
            [110, 105, 99, 104, 105, 110, 97, 110] => lookup_863_80_3(acc),
            [104, 105, 110, 111] => lookup_863_80_4(acc),
            [119, 97, 107, 97, 115, 97] => lookup_863_80_5(acc),
            [99, 104, 105, 122, 117] => lookup_863_80_6(acc),
            [107, 111, 103, 101] => lookup_863_80_7(acc),
            [109, 105, 115, 97, 115, 97] => lookup_863_80_8(acc),
            [116, 111, 116, 116, 111, 114, 105] => lookup_863_80_9(acc),
            [115, 97, 107, 97, 105, 109, 105, 110, 97, 116, 111] => lookup_863_80_10(acc),
            [121, 97, 122, 117] => lookup_863_80_11(acc),
            [121, 111, 110, 97, 103, 111] => lookup_863_80_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_82_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_82_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_82_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_82_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_82_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_82_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_82_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_82_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_82_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_82_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_82_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_82_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_82_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_82_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_82_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_82_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_82_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_82_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_82_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_82_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_82_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_82_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_82_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_82_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_82_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_82_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_82_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_82_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_82<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 121, 111, 119, 97] => lookup_863_82_0(acc),
            [109, 105, 116, 97, 110, 101] => lookup_863_82_1(acc),
            [104, 111, 110, 106, 121, 111] => lookup_863_82_2(acc),
            [109, 111, 114, 105, 121, 111, 115, 104, 105] => lookup_863_82_3(acc),
            [102, 117, 106, 105, 115, 97, 116, 111] => lookup_863_82_4(acc),
            [104, 97, 99, 104, 105, 114, 111, 103, 97, 116, 97] => lookup_863_82_5(acc),
            [107, 97, 109, 105, 111, 107, 97] => lookup_863_82_6(acc),
            [107, 111, 115, 97, 107, 97] => lookup_863_82_7(acc),
            [110, 105, 107, 97, 104, 111] => lookup_863_82_8(acc),
            [104, 97, 112, 112, 111, 117] => lookup_863_82_9(acc),
            [110, 111, 115, 104, 105, 114, 111] => lookup_863_82_10(acc),
            [111, 100, 97, 116, 101] => lookup_863_82_11(acc),
            [107, 105, 116, 97, 97, 107, 105, 116, 97] => lookup_863_82_12(acc),
            [111, 103, 97] => lookup_863_82_13(acc),
            [104, 111, 110, 106, 111] => lookup_863_82_14(acc),
            [111, 103, 97, 116, 97] => lookup_863_82_15(acc),
            [115, 101, 109, 98, 111, 107, 117] => lookup_863_82_16(acc),
            [100, 97, 105, 115, 101, 110] => lookup_863_82_17(acc),
            [121, 111, 107, 111, 116, 101] => lookup_863_82_18(acc),
            [121, 117, 114, 105, 104, 111, 110, 106, 111] => lookup_863_82_19(acc),
            [104, 105, 103, 97, 115, 104, 105, 110, 97, 114, 117, 115, 101] => {
                lookup_863_82_20(acc)
            }
            [105, 107, 97, 119, 97] => lookup_863_82_21(acc),
            [107, 97, 116, 97, 103, 97, 109, 105] => lookup_863_82_22(acc),
            [107, 97, 109, 105, 107, 111, 97, 110, 105] => lookup_863_82_23(acc),
            [109, 105, 115, 97, 116, 111] => lookup_863_82_24(acc),
            [107, 97, 122, 117, 110, 111] => lookup_863_82_25(acc),
            [97, 107, 105, 116, 97] => lookup_863_82_26(acc),
            [103, 111, 106, 111, 109, 101] => lookup_863_82_27(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_83_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_83<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 97, 114, 117, 105, 122, 97, 119, 97] => lookup_863_83_0(acc),
            [105, 105, 121, 97, 109, 97] => lookup_863_83_1(acc),
            [109, 97, 116, 115, 117, 107, 97, 119, 97] => lookup_863_83_2(acc),
            [107, 111, 109, 97, 103, 97, 110, 101] => lookup_863_83_3(acc),
            [109, 111, 99, 104, 105, 122, 117, 107, 105] => lookup_863_83_4(acc),
            [121, 97, 109, 97, 110, 111, 117, 99, 104, 105] => lookup_863_83_5(acc),
            [115, 104, 105, 109, 111, 115, 117, 119, 97] => lookup_863_83_6(acc),
            [111, 109, 97, 99, 104, 105] => lookup_863_83_7(acc),
            [99, 104, 105, 110, 111] => lookup_863_83_8(acc),
            [115, 97, 107, 97, 107, 105] => lookup_863_83_9(acc),
            [111, 111, 107, 117, 119, 97] => lookup_863_83_10(acc),
            [110, 97, 107, 97, 103, 97, 119, 97] => lookup_863_83_11(acc),
            [111, 98, 117, 115, 101] => lookup_863_83_12(acc),
            [109, 105, 110, 97, 109, 105, 109, 97, 107, 105] => lookup_863_83_13(acc),
            [121, 97, 115, 97, 107, 97] => lookup_863_83_14(acc),
            [110, 97, 103, 97, 119, 97] => lookup_863_83_15(acc),
            [115, 104, 105, 111, 106, 105, 114, 105] => lookup_863_83_16(acc),
            [111, 107, 97, 121, 97] => lookup_863_83_17(acc),
            [116, 97, 107, 97, 121, 97, 109, 97] => lookup_863_83_18(acc),
            [117, 101, 100, 97] => lookup_863_83_19(acc),
            [105, 105, 100, 97] => lookup_863_83_20(acc),
            [109, 105, 121, 97, 100, 97] => lookup_863_83_21(acc),
            [109, 105, 110, 97, 109, 105, 97, 105, 107, 105] => lookup_863_83_22(acc),
            [97, 103, 101, 109, 97, 116, 115, 117] => lookup_863_83_23(acc),
            [116, 97, 116, 115, 117, 110, 111] => lookup_863_83_24(acc),
            [115, 97, 107, 117, 104, 111] => lookup_863_83_25(acc),
            [115, 104, 105, 110, 97, 110, 111, 109, 97, 99, 104, 105] => lookup_863_83_26(acc),
            [116, 97, 107, 97, 109, 111, 114, 105] => lookup_863_83_27(acc),
            [99, 104, 105, 107, 117, 104, 111, 107, 117] => lookup_863_83_28(acc),
            [109, 97, 116, 115, 117, 109, 111, 116, 111] => lookup_863_83_29(acc),
            [111, 111, 115, 104, 105, 107, 97] => lookup_863_83_30(acc),
            [116, 97, 116, 101, 115, 104, 105, 110, 97] => lookup_863_83_31(acc),
            [104, 105, 114, 97, 121, 97] => lookup_863_83_32(acc),
            [109, 105, 110, 111, 119, 97] => lookup_863_83_33(acc),
            [111, 116, 97, 114, 105] => lookup_863_83_34(acc),
            [110, 97, 107, 97, 110, 111] => lookup_863_83_35(acc),
            [121, 97, 109, 97, 103, 97, 116, 97] => lookup_863_83_36(acc),
            [121, 97, 115, 117, 111, 107, 97] => lookup_863_83_37(acc),
            [107, 105, 115, 111, 102, 117, 107, 117, 115, 104, 105, 109, 97] => {
                lookup_863_83_38(acc)
            }
            [115, 117, 119, 97] => lookup_863_83_39(acc),
            [97, 115, 97, 104, 105] => lookup_863_83_40(acc),
            [115, 117, 122, 97, 107, 97] => lookup_863_83_41(acc),
            [111, 116, 97, 107, 105] => lookup_863_83_42(acc),
            [99, 104, 105, 107, 117, 109, 97] => lookup_863_83_43(acc),
            [105, 105, 106, 105, 109, 97] => lookup_863_83_44(acc),
            [109, 105, 97, 115, 97] => lookup_863_83_45(acc),
            [111, 109, 105] => lookup_863_83_46(acc),
            [109, 105, 121, 111, 116, 97] => lookup_863_83_47(acc),
            [105, 107, 117, 115, 97, 107, 97] => lookup_863_83_48(acc),
            [97, 111, 107, 105] => lookup_863_83_49(acc),
            [105, 107, 101, 100, 97] => lookup_863_83_50(acc),
            [104, 97, 107, 117, 98, 97] => lookup_863_83_51(acc),
            [97, 99, 104, 105] => lookup_863_83_52(acc),
            [107, 105, 116, 97, 97, 105, 107, 105] => lookup_863_83_53(acc),
            [105, 105, 122, 117, 110, 97] => lookup_863_83_54(acc),
            [110, 111, 122, 97, 119, 97, 111, 110, 115, 101, 110] => lookup_863_83_55(acc),
            [107, 105, 115, 111] => lookup_863_83_56(acc),
            [111, 103, 97, 119, 97] => lookup_863_83_57(acc),
            [97, 122, 117, 109, 105, 110, 111] => lookup_863_83_58(acc),
            [107, 97, 119, 97, 107, 97, 109, 105] => lookup_863_83_59(acc),
            [115, 97, 107, 97, 101] => lookup_863_83_60(acc),
            [115, 97, 107, 117] => lookup_863_83_61(acc),
            [102, 117, 106, 105, 109, 105] => lookup_863_83_62(acc),
            [116, 97, 107, 97, 103, 105] => lookup_863_83_63(acc),
            [104, 97, 114, 97] => lookup_863_83_64(acc),
            [107, 111, 109, 111, 114, 111] => lookup_863_83_65(acc),
            [116, 111, 103, 97, 107, 117, 115, 104, 105] => lookup_863_83_66(acc),
            [116, 111, 103, 117, 114, 97] => lookup_863_83_67(acc),
            [116, 111, 109, 105] => lookup_863_83_68(acc),
            [97, 110, 97, 110] => lookup_863_83_69(acc),
            [109, 105, 110, 97, 109, 105, 109, 105, 110, 111, 119, 97] => lookup_863_83_70(acc),
            [105, 110, 97] => lookup_863_83_71(acc),
            [110, 97, 103, 105, 115, 111] => lookup_863_83_72(acc),
            [119, 97, 100, 97] => lookup_863_83_73(acc),
            [110, 97, 103, 97, 110, 111] => lookup_863_83_74(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_92_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_92_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_92_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_92_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_92_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_92_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_92_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_92_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_92_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_92_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_92_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_92_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_92_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_92_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_92_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_92_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_92_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_92_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_92_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_92_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_92_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_92_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_92_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_92<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 97, 107, 97, 116, 115, 117, 107, 105] => lookup_863_92_0(acc),
            [103, 97, 109, 111] => lookup_863_92_1(acc),
            [109, 111, 114, 105, 121, 97, 109, 97] => lookup_863_92_2(acc),
            [110, 111, 116, 111, 103, 97, 119, 97] => lookup_863_92_3(acc),
            [111, 109, 105, 104, 97, 99, 104, 105, 109, 97, 110] => lookup_863_92_4(acc),
            [114, 121, 117, 111, 104] => lookup_863_92_5(acc),
            [107, 117, 115, 97, 116, 115, 117] => lookup_863_92_6(acc),
            [109, 97, 105, 98, 97, 114, 97] => lookup_863_92_7(acc),
            [116, 111, 114, 97, 104, 105, 109, 101] => lookup_863_92_8(acc),
            [107, 111, 110, 97, 110] => lookup_863_92_9(acc),
            [110, 97, 103, 97, 104, 97, 109, 97] => lookup_863_92_10(acc),
            [111, 116, 115, 117] => lookup_863_92_11(acc),
            [110, 105, 115, 104, 105, 97, 122, 97, 105] => lookup_863_92_12(acc),
            [121, 97, 115, 117] => lookup_863_92_13(acc),
            [107, 111, 115, 101, 105] => lookup_863_92_14(acc),
            [107, 111, 116, 111] => lookup_863_92_15(acc),
            [114, 105, 116, 116, 111] => lookup_863_92_16(acc),
            [104, 105, 103, 97, 115, 104, 105, 111, 109, 105] => lookup_863_92_17(acc),
            [104, 105, 107, 111, 110, 101] => lookup_863_92_18(acc),
            [107, 111, 107, 97] => lookup_863_92_19(acc),
            [116, 97, 107, 97, 115, 104, 105, 109, 97] => lookup_863_92_20(acc),
            [97, 105, 115, 104, 111] => lookup_863_92_21(acc),
            [116, 111, 121, 111, 115, 97, 116, 111] => lookup_863_92_22(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_93_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_93_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_93_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_93_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_93_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_93_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_93_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_93_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_93_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_93_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_93_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_93_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_93_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_93_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_93_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_93_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_93_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_93_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_93_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_93_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_93_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_93_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_93<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 116, 97, 121, 97, 110, 97, 103, 105] => lookup_863_93_0(acc),
            [107, 117, 114, 111, 105, 115, 104, 105] => lookup_863_93_1(acc),
            [110, 97, 107, 97, 100, 111, 109, 97, 114, 105] => lookup_863_93_2(acc),
            [114, 111, 107, 117, 110, 111, 104, 101] => lookup_863_93_3(acc),
            [109, 117, 116, 115, 117] => lookup_863_93_4(acc),
            [104, 97, 115, 104, 105, 107, 97, 109, 105] => lookup_863_93_5(acc),
            [104, 97, 99, 104, 105, 110, 111, 104, 101] => lookup_863_93_6(acc),
            [111, 105, 114, 97, 115, 101] => lookup_863_93_7(acc),
            [111, 119, 97, 110, 105] => lookup_863_93_8(acc),
            [115, 104, 105, 99, 104, 105, 110, 111, 104, 101] => lookup_863_93_9(acc),
            [115, 104, 105, 110, 103, 111] => lookup_863_93_10(acc),
            [116, 97, 107, 107, 111] => lookup_863_93_11(acc),
            [115, 97, 110, 110, 111, 104, 101] => lookup_863_93_12(acc),
            [116, 115, 117, 103, 97, 114, 117] => lookup_863_93_13(acc),
            [103, 111, 110, 111, 104, 101] => lookup_863_93_14(acc),
            [97, 111, 109, 111, 114, 105] => lookup_863_93_15(acc),
            [116, 111, 119, 97, 100, 97] => lookup_863_93_16(acc),
            [104, 105, 114, 111, 115, 97, 107, 105] => lookup_863_93_17(acc),
            [104, 105, 114, 97, 110, 97, 105] => lookup_863_93_18(acc),
            [116, 115, 117, 114, 117, 116, 97] => lookup_863_93_19(acc),
            [110, 111, 104, 101, 106, 105] => lookup_863_93_20(acc),
            [109, 105, 115, 97, 119, 97] => lookup_863_93_21(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_99_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_99_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_99_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_99_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_99_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_99_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_99_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_99_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_99_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_99_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_99_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_99_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_99_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_99_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_99_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_99_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_99_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_99_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_99_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_99_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_99_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_99_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_99_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_99_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_99_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_99_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_99<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 101, 110, 107, 97, 105] => lookup_863_99_0(acc),
            [105, 109, 97, 114, 105] => lookup_863_99_1(acc),
            [102, 117, 107, 117, 100, 111, 109, 105] => lookup_863_99_2(acc),
            [104, 97, 109, 97, 116, 97, 109, 97] => lookup_863_99_3(acc),
            [107, 121, 117, 114, 97, 103, 105] => lookup_863_99_4(acc),
            [107, 105, 121, 97, 109, 97] => lookup_863_99_5(acc),
            [107, 105, 116, 97, 104, 97, 116, 97] => lookup_863_99_6(acc),
            [107, 97, 115, 104, 105, 109, 97] => lookup_863_99_7(acc),
            [107, 97, 109, 105, 109, 105, 110, 101] => lookup_863_99_8(acc),
            [121, 111, 115, 104, 105, 110, 111, 103, 97, 114, 105] => lookup_863_99_9(acc),
            [111, 117, 99, 104, 105] => lookup_863_99_10(acc),
            [104, 105, 122, 101, 110] => lookup_863_99_11(acc),
            [115, 104, 105, 114, 111, 105, 115, 104, 105] => lookup_863_99_12(acc),
            [111, 109, 97, 99, 104, 105] => lookup_863_99_13(acc),
            [97, 114, 105, 97, 107, 101] => lookup_863_99_14(acc),
            [107, 97, 110, 122, 97, 107, 105] => lookup_863_99_15(acc),
            [110, 105, 115, 104, 105, 97, 114, 105, 116, 97] => lookup_863_99_16(acc),
            [116, 97, 107, 117] => lookup_863_99_17(acc),
            [107, 97, 114, 97, 116, 115, 117] => lookup_863_99_18(acc),
            [116, 97, 114, 97] => lookup_863_99_19(acc),
            [116, 111, 115, 117] => lookup_863_99_20(acc),
            [107, 105, 116, 97, 103, 97, 116, 97] => lookup_863_99_21(acc),
            [107, 111, 117, 104, 111, 107, 117] => lookup_863_99_22(acc),
            [97, 114, 105, 116, 97] => lookup_863_99_23(acc),
            [111, 103, 105] => lookup_863_99_24(acc),
            [115, 97, 103, 97] => lookup_863_99_25(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_102_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_102_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_102_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_102_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_102_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_102_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_102_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_102_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_102_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_102_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_102_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_102_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_102_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_102_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_102_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_102<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 97, 116, 115, 117, 121, 97, 109, 97] => lookup_863_102_0(acc),
            [105, 107, 101, 100, 97] => lookup_863_102_1(acc),
            [111, 98, 97, 109, 97] => lookup_863_102_2(acc),
            [102, 117, 107, 117, 105] => lookup_863_102_3(acc),
            [101, 105, 104, 101, 105, 106, 105] => lookup_863_102_4(acc),
            [111, 104, 105] => lookup_863_102_5(acc),
            [116, 97, 107, 97, 104, 97, 109, 97] => lookup_863_102_6(acc),
            [115, 97, 107, 97, 105] => lookup_863_102_7(acc),
            [101, 99, 104, 105, 122, 101, 110] => lookup_863_102_8(acc),
            [111, 110, 111] => lookup_863_102_9(acc),
            [119, 97, 107, 97, 115, 97] => lookup_863_102_10(acc),
            [109, 105, 110, 97, 109, 105, 101, 99, 104, 105, 122, 101, 110] => {
                lookup_863_102_11(acc)
            }
            [116, 115, 117, 114, 117, 103, 97] => lookup_863_102_12(acc),
            [115, 97, 98, 97, 101] => lookup_863_102_13(acc),
            [109, 105, 104, 97, 109, 97] => lookup_863_102_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_104_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_104_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_104_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_104_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_104_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_104_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_104_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_104_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_104_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_104_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_104_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_104_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_104_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_104_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_104_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_104_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_104_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_104_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_104_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_104_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_104_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_104_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_104_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_104_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_104_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_104_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_104_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_104_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_104_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_104_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_104_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_104_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_104_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_104_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_104<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 121, 97, 107, 111] => lookup_863_104_0(acc),
            [107, 117, 122, 117, 109, 97, 107, 105] => lookup_863_104_1(acc),
            [109, 111, 114, 105, 111, 107, 97] => lookup_863_104_2(acc),
            [111, 102, 117, 110, 97, 116, 111] => lookup_863_104_3(acc),
            [114, 105, 107, 117, 122, 101, 110, 116, 97, 107, 97, 116, 97] => lookup_863_104_4(acc),
            [115, 104, 105, 119, 97] => lookup_863_104_5(acc),
            [116, 97, 110, 111, 104, 97, 116, 97] => lookup_863_104_6(acc),
            [105, 119, 97, 105, 122, 117, 109, 105] => lookup_863_104_7(acc),
            [107, 97, 119, 97, 105] => lookup_863_104_8(acc),
            [102, 117, 100, 97, 105] => lookup_863_104_9(acc),
            [105, 99, 104, 105, 110, 111, 115, 101, 107, 105] => lookup_863_104_10(acc),
            [110, 105, 110, 111, 104, 101] => lookup_863_104_11(acc),
            [115, 104, 105, 122, 117, 107, 117, 105, 115, 104, 105] => lookup_863_104_12(acc),
            [115, 117, 109, 105, 116, 97] => lookup_863_104_13(acc),
            [121, 97, 104, 97, 98, 97] => lookup_863_104_14(acc),
            [107, 105, 116, 97, 107, 97, 109, 105] => lookup_863_104_15(acc),
            [104, 105, 114, 97, 105, 122, 117, 109, 105] => lookup_863_104_16(acc),
            [107, 97, 114, 117, 109, 97, 105] => lookup_863_104_17(acc),
            [102, 117, 106, 105, 115, 97, 119, 97] => lookup_863_104_18(acc),
            [106, 111, 98, 111, 106, 105] => lookup_863_104_19(acc),
            [110, 111, 100, 97] => lookup_863_104_20(acc),
            [116, 111, 110, 111] => lookup_863_104_21(acc),
            [105, 119, 97, 116, 101] => lookup_863_104_22(acc),
            [104, 97, 110, 97, 109, 97, 107, 105] => lookup_863_104_23(acc),
            [111, 115, 104, 117] => lookup_863_104_24(acc),
            [104, 105, 114, 111, 110, 111] => lookup_863_104_25(acc),
            [105, 99, 104, 105, 110, 111, 104, 101] => lookup_863_104_26(acc),
            [121, 97, 109, 97, 100, 97] => lookup_863_104_27(acc),
            [111, 116, 115, 117, 99, 104, 105] => lookup_863_104_28(acc),
            [107, 117, 106, 105] => lookup_863_104_29(acc),
            [109, 105, 122, 117, 115, 97, 119, 97] => lookup_863_104_30(acc),
            [107, 117, 110, 111, 104, 101] => lookup_863_104_31(acc),
            [107, 97, 110, 101, 103, 97, 115, 97, 107, 105] => lookup_863_104_32(acc),
            [107, 97, 109, 97, 105, 115, 104, 105] => lookup_863_104_33(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_105_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_105_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_105_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_105_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_105_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_105_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_105_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_105_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_105_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_105_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_105_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_105_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_105_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_105_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_105_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_105_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_105_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_105_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_105_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_105_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_105_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_105_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_105_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_105_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_105_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_105_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_105_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_105<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 105, 106, 111] => lookup_863_105_0(acc),
            [107, 105, 116, 97, 103, 97, 119, 97] => lookup_863_105_1(acc),
            [115, 104, 105, 105, 98, 97] => lookup_863_105_2(acc),
            [107, 97, 100, 111, 103, 97, 119, 97] => lookup_863_105_3(acc),
            [97, 121, 97] => lookup_863_105_4(acc),
            [109, 105, 121, 97, 107, 111, 110, 111, 106, 111] => lookup_863_105_5(acc),
            [107, 105, 116, 97, 107, 97, 116, 97] => lookup_863_105_6(acc),
            [110, 111, 98, 101, 111, 107, 97] => lookup_863_105_7(acc),
            [109, 105, 121, 97, 122, 97, 107, 105] => lookup_863_105_8(acc),
            [115, 104, 105, 110, 116, 111, 109, 105] => lookup_863_105_9(acc),
            [110, 105, 115, 104, 105, 109, 101, 114, 97] => lookup_863_105_10(acc),
            [116, 97, 107, 97, 110, 97, 98, 101] => lookup_863_105_11(acc),
            [116, 115, 117, 110, 111] => lookup_863_105_12(acc),
            [109, 111, 114, 111, 116, 115, 117, 107, 97] => lookup_863_105_13(acc),
            [115, 97, 105, 116, 111] => lookup_863_105_14(acc),
            [107, 111, 98, 97, 121, 97, 115, 104, 105] => lookup_863_105_15(acc),
            [101, 98, 105, 110, 111] => lookup_863_105_16(acc),
            [116, 97, 107, 97, 104, 97, 114, 117] => lookup_863_105_17(acc),
            [110, 105, 99, 104, 105, 110, 97, 110] => lookup_863_105_18(acc),
            [107, 117, 110, 105, 116, 111, 109, 105] => lookup_863_105_19(acc),
            [104, 121, 117, 103, 97] => lookup_863_105_20(acc),
            [107, 97, 119, 97, 109, 105, 110, 97, 109, 105] => lookup_863_105_21(acc),
            [109, 105, 109, 97, 116, 97] => lookup_863_105_22(acc),
            [116, 97, 107, 97, 122, 97, 107, 105] => lookup_863_105_23(acc),
            [107, 105, 116, 97, 117, 114, 97] => lookup_863_105_24(acc),
            [107, 117, 115, 104, 105, 109, 97] => lookup_863_105_25(acc),
            [103, 111, 107, 97, 115, 101] => lookup_863_105_26(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_106_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_106_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_106_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_106_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_106_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_106_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_106_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_106_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_106_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_106_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_106_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_106_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_106_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_106_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_106_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_106_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_106_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_106_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_106_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_106_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_106_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_106_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_106_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_106_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_106_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_106_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_106_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_106_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_106_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_106_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_106_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_106_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_106_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_106_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_106_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_106_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_106<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 116, 97, 109, 105] => lookup_863_106_0(acc),
            [107, 97, 107, 101, 103, 97, 119, 97] => lookup_863_106_1(acc),
            [102, 117, 106, 105, 110, 111, 109, 105, 121, 97] => lookup_863_106_2(acc),
            [105, 116, 111] => lookup_863_106_3(acc),
            [105, 119, 97, 116, 97] => lookup_863_106_4(acc),
            [105, 122, 117] => lookup_863_106_5(acc),
            [115, 104, 105, 109, 105, 122, 117] => lookup_863_106_6(acc),
            [121, 111, 115, 104, 105, 100, 97] => lookup_863_106_7(acc),
            [97, 114, 97, 105] => lookup_863_106_8(acc),
            [115, 104, 105, 109, 97, 100, 97] => lookup_863_106_9(acc),
            [104, 97, 105, 98, 97, 114, 97] => lookup_863_106_10(acc),
            [102, 117, 107, 117, 114, 111, 105] => lookup_863_106_11(acc),
            [102, 117, 106, 105, 101, 100, 97] => lookup_863_106_12(acc),
            [109, 105, 110, 97, 109, 105, 105, 122, 117] => lookup_863_106_13(acc),
            [115, 104, 105, 109, 111, 100, 97] => lookup_863_106_14(acc),
            [109, 97, 116, 115, 117, 122, 97, 107, 105] => lookup_863_106_15(acc),
            [107, 111, 115, 97, 105] => lookup_863_106_16(acc),
            [107, 97, 119, 97, 110, 101, 104, 111, 110] => lookup_863_106_17(acc),
            [102, 117, 106, 105] => lookup_863_106_18(acc),
            [107, 97, 119, 97, 122, 117] => lookup_863_106_19(acc),
            [107, 97, 110, 110, 97, 109, 105] => lookup_863_106_20(acc),
            [107, 105, 107, 117, 103, 97, 119, 97] => lookup_863_106_21(acc),
            [109, 105, 115, 104, 105, 109, 97] => lookup_863_106_22(acc),
            [110, 117, 109, 97, 122, 117] => lookup_863_106_23(acc),
            [115, 104, 105, 122, 117, 111, 107, 97] => lookup_863_106_24(acc),
            [109, 97, 107, 105, 110, 111, 104, 97, 114, 97] => lookup_863_106_25(acc),
            [104, 105, 103, 97, 115, 104, 105, 105, 122, 117] => lookup_863_106_26(acc),
            [102, 117, 106, 105, 107, 97, 119, 97] => lookup_863_106_27(acc),
            [121, 97, 105, 122, 117] => lookup_863_106_28(acc),
            [104, 97, 109, 97, 109, 97, 116, 115, 117] => lookup_863_106_29(acc),
            [103, 111, 116, 101, 109, 98, 97] => lookup_863_106_30(acc),
            [105, 122, 117, 110, 111, 107, 117, 110, 105] => lookup_863_106_31(acc),
            [109, 111, 114, 105, 109, 97, 99, 104, 105] => lookup_863_106_32(acc),
            [110, 105, 115, 104, 105, 105, 122, 117] => lookup_863_106_33(acc),
            [115, 117, 115, 111, 110, 111] => lookup_863_106_34(acc),
            [111, 109, 97, 101, 122, 97, 107, 105] => lookup_863_106_35(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_110_0(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_110_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_110<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_863_110_0(acc),
            wild => lookup_863_110_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_863_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_119<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 97, 119, 97, 110, 105, 115, 104, 105] => lookup_863_119_0(acc),
            [104, 97, 114, 105, 109, 97] => lookup_863_119_1(acc),
            [97, 111, 103, 97, 107, 105] => lookup_863_119_2(acc),
            [116, 97, 105, 115, 104, 105] => lookup_863_119_3(acc),
            [116, 97, 107, 97, 115, 97, 103, 111] => lookup_863_119_4(acc),
            [115, 97, 110, 110, 97, 110] => lookup_863_119_5(acc),
            [116, 97, 107, 105, 110, 111] => lookup_863_119_6(acc),
            [116, 97, 109, 98, 97] => lookup_863_119_7(acc),
            [121, 111, 107, 97] => lookup_863_119_8(acc),
            [115, 97, 121, 111] => lookup_863_119_9(acc),
            [97, 109, 97, 103, 97, 115, 97, 107, 105] => lookup_863_119_10(acc),
            [107, 97, 109, 105, 107, 97, 119, 97] => lookup_863_119_11(acc),
            [121, 111, 107, 97, 119, 97] => lookup_863_119_12(acc),
            [104, 105, 109, 101, 106, 105] => lookup_863_119_13(acc),
            [105, 99, 104, 105, 107, 97, 119, 97] => lookup_863_119_14(acc),
            [107, 97, 115, 97, 105] => lookup_863_119_15(acc),
            [97, 105, 111, 105] => lookup_863_119_16(acc),
            [116, 97, 107, 97, 114, 97, 122, 117, 107, 97] => lookup_863_119_17(acc),
            [115, 117, 109, 111, 116, 111] => lookup_863_119_18(acc),
            [116, 97, 107, 97] => lookup_863_119_19(acc),
            [115, 97, 115, 97, 121, 97, 109, 97] => lookup_863_119_20(acc),
            [103, 111, 115, 104, 105, 107, 105] => lookup_863_119_21(acc),
            [115, 104, 105, 115, 111] => lookup_863_119_22(acc),
            [121, 97, 115, 104, 105, 114, 111] => lookup_863_119_23(acc),
            [97, 115, 97, 103, 111] => lookup_863_119_24(acc),
            [97, 107, 97, 115, 104, 105] => lookup_863_119_25(acc),
            [97, 115, 104, 105, 121, 97] => lookup_863_119_26(acc),
            [107, 97, 107, 111, 103, 97, 119, 97] => lookup_863_119_27(acc),
            [107, 97, 109, 105, 103, 111, 114, 105] => lookup_863_119_28(acc),
            [97, 107, 111] => lookup_863_119_29(acc),
            [109, 105, 110, 97, 109, 105, 97, 119, 97, 106, 105] => lookup_863_119_30(acc),
            [115, 97, 110, 100, 97] => lookup_863_119_31(acc),
            [116, 97, 116, 115, 117, 110, 111] => lookup_863_119_32(acc),
            [109, 105, 107, 105] => lookup_863_119_33(acc),
            [116, 111, 121, 111, 111, 107, 97] => lookup_863_119_34(acc),
            [110, 105, 115, 104, 105, 110, 111, 109, 105, 121, 97] => lookup_863_119_35(acc),
            [102, 117, 107, 117, 115, 97, 107, 105] => lookup_863_119_36(acc),
            [105, 110, 97, 103, 97, 119, 97] => lookup_863_119_37(acc),
            [111, 110, 111] => lookup_863_119_38(acc),
            [115, 104, 105, 110, 103, 117] => lookup_863_119_39(acc),
            [97, 119, 97, 106, 105] => lookup_863_119_40(acc),
            [121, 97, 98, 117] => lookup_863_119_41(acc),
            [115, 104, 105, 110, 111, 110, 115, 101, 110] => lookup_863_119_42(acc),
            [110, 105, 115, 104, 105, 119, 97, 107, 105] => lookup_863_119_43(acc),
            [105, 116, 97, 109, 105] => lookup_863_119_44(acc),
            [107, 97, 115, 117, 103, 97] => lookup_863_119_45(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_120_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_120_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_120_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_120_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_120_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_120_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_120_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_120_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_120_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_120_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_120_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_120_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_120_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_120_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_120_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_120_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_120_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_120_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_120_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_120_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_120_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_120_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_120_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_120_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_120<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [117, 110, 97, 122, 117, 107, 105] => lookup_863_120_0(acc),
            [102, 117, 110, 97, 104, 97, 115, 104, 105] => lookup_863_120_1(acc),
            [116, 97, 105, 114, 97] => lookup_863_120_2(acc),
            [102, 117, 99, 104, 117] => lookup_863_120_3(acc),
            [102, 117, 107, 117, 109, 105, 116, 115, 117] => lookup_863_120_4(acc),
            [107, 117, 114, 111, 98, 101] => lookup_863_120_5(acc),
            [110, 121, 117, 122, 101, 110] => lookup_863_120_6(acc),
            [111, 121, 97, 98, 101] => lookup_863_120_7(acc),
            [116, 111, 110, 97, 109, 105] => lookup_863_120_8(acc),
            [116, 111, 121, 97, 109, 97] => lookup_863_120_9(acc),
            [110, 97, 107, 97, 110, 105, 105, 107, 97, 119, 97] => lookup_863_120_10(acc),
            [97, 115, 97, 104, 105] => lookup_863_120_11(acc),
            [106, 111, 104, 97, 110, 97] => lookup_863_120_12(acc),
            [105, 110, 97, 109, 105] => lookup_863_120_13(acc),
            [110, 97, 110, 116, 111] => lookup_863_120_14(acc),
            [104, 105, 109, 105] => lookup_863_120_15(acc),
            [105, 109, 105, 122, 117] => lookup_863_120_16(acc),
            [107, 97, 109, 105, 105, 99, 104, 105] => lookup_863_120_17(acc),
            [117, 111, 122, 117] => lookup_863_120_18(acc),
            [116, 97, 107, 97, 111, 107, 97] => lookup_863_120_19(acc),
            [121, 97, 109, 97, 100, 97] => lookup_863_120_20(acc),
            [110, 97, 109, 101, 114, 105, 107, 97, 119, 97] => lookup_863_120_21(acc),
            [116, 111, 103, 97] => lookup_863_120_22(acc),
            [116, 97, 116, 101, 121, 97, 109, 97] => lookup_863_120_23(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_125<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 105, 116, 97, 110, 97, 107, 97, 103, 117, 115, 117, 107, 117] => {
                lookup_863_125_0(acc)
            }
            [103, 117, 115, 104, 105, 107, 97, 109, 105] => lookup_863_125_1(acc),
            [116, 97, 107, 101, 116, 111, 109, 105] => lookup_863_125_2(acc),
            [107, 117, 109, 101, 106, 105, 109, 97] => lookup_863_125_3(acc),
            [116, 97, 114, 97, 109, 97] => lookup_863_125_4(acc),
            [105, 116, 111, 109, 97, 110] => lookup_863_125_5(acc),
            [105, 122, 101, 110, 97] => lookup_863_125_6(acc),
            [110, 105, 115, 104, 105, 104, 97, 114, 97] => lookup_863_125_7(acc),
            [121, 111, 109, 105, 116, 97, 110] => lookup_863_125_8(acc),
            [103, 105, 110, 111, 122, 97] => lookup_863_125_9(acc),
            [111, 107, 105, 110, 97, 119, 97] => lookup_863_125_10(acc),
            [110, 97, 110, 106, 111] => lookup_863_125_11(acc),
            [116, 111, 109, 105, 103, 117, 115, 117, 107, 117] => lookup_863_125_12(acc),
            [117, 114, 97, 115, 111, 101] => lookup_863_125_13(acc),
            [110, 97, 107, 97, 103, 117, 115, 117, 107, 117] => lookup_863_125_14(acc),
            [111, 103, 105, 109, 105] => lookup_863_125_15(acc),
            [109, 111, 116, 111, 98, 117] => lookup_863_125_16(acc),
            [105, 115, 104, 105, 107, 97, 119, 97] => lookup_863_125_17(acc),
            [122, 97, 109, 97, 109, 105] => lookup_863_125_18(acc),
            [104, 97, 101, 98, 97, 114, 117] => lookup_863_125_19(acc),
            [110, 97, 104, 97] => lookup_863_125_20(acc),
            [110, 97, 107, 105, 106, 105, 110] => lookup_863_125_21(acc),
            [111, 110, 110, 97] => lookup_863_125_22(acc),
            [121, 111, 110, 97, 103, 117, 110, 105] => lookup_863_125_23(acc),
            [103, 105, 110, 111, 119, 97, 110] => lookup_863_125_24(acc),
            [104, 105, 114, 97, 114, 97] => lookup_863_125_25(acc),
            [105, 115, 104, 105, 103, 97, 107, 105] => lookup_863_125_26(acc),
            [105, 104, 101, 121, 97] => lookup_863_125_27(acc),
            [121, 111, 110, 97, 98, 97, 114, 117] => lookup_863_125_28(acc),
            [117, 114, 117, 109, 97] => lookup_863_125_29(acc),
            [107, 105, 110] => lookup_863_125_30(acc),
            [107, 97, 100, 101, 110, 97] => lookup_863_125_31(acc),
            [109, 105, 110, 97, 109, 105, 100, 97, 105, 116, 111] => lookup_863_125_32(acc),
            [107, 105, 116, 97, 100, 97, 105, 116, 111] => lookup_863_125_33(acc),
            [107, 117, 110, 105, 103, 97, 109, 105] => lookup_863_125_34(acc),
            [115, 104, 105, 109, 111, 106, 105] => lookup_863_125_35(acc),
            [121, 97, 101, 115, 101] => lookup_863_125_36(acc),
            [97, 103, 117, 110, 105] => lookup_863_125_37(acc),
            [116, 111, 107, 97, 115, 104, 105, 107, 105] => lookup_863_125_38(acc),
            [104, 105, 103, 97, 115, 104, 105] => lookup_863_125_39(acc),
            [116, 111, 110, 97, 107, 105] => lookup_863_125_40(acc),
            [110, 97, 103, 111] => lookup_863_125_41(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_126_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_126<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 103, 117, 99, 104, 105] => lookup_863_126_0(acc),
            [107, 105, 114, 97] => lookup_863_126_1(acc),
            [115, 104, 105, 116, 97, 114, 97] => lookup_863_126_2(acc),
            [107, 97, 114, 105, 121, 97] => lookup_863_126_3(acc),
            [116, 97, 104, 97, 114, 97] => lookup_863_126_4(acc),
            [116, 111, 121, 111, 97, 107, 101] => lookup_863_126_5(acc),
            [107, 111, 116, 97] => lookup_863_126_6(acc),
            [111, 98, 117] => lookup_863_126_7(acc),
            [111, 119, 97, 114, 105, 97, 115, 97, 104, 105] => lookup_863_126_8(acc),
            [99, 104, 105, 116, 97] => lookup_863_126_9(acc),
            [107, 111, 110, 97, 110] => lookup_863_126_10(acc),
            [111, 107, 97, 122, 97, 107, 105] => lookup_863_126_11(acc),
            [99, 104, 105, 114, 121, 117] => lookup_863_126_12(acc),
            [115, 101, 116, 111] => lookup_863_126_13(acc),
            [105, 110, 97, 122, 97, 119, 97] => lookup_863_126_14(acc),
            [116, 97, 107, 97, 104, 97, 109, 97] => lookup_863_126_15(acc),
            [104, 97, 122, 117] => lookup_863_126_16(acc),
            [116, 111, 121, 111, 104, 97, 115, 104, 105] => lookup_863_126_17(acc),
            [97, 105, 115, 97, 105] => lookup_863_126_18(acc),
            [111, 104, 97, 114, 117] => lookup_863_126_19(acc),
            [116, 111, 107, 97, 105] => lookup_863_126_20(acc),
            [116, 111, 121, 111, 110, 101] => lookup_863_126_21(acc),
            [116, 111, 121, 111, 116, 97] => lookup_863_126_22(acc),
            [109, 105, 121, 111, 115, 104, 105] => lookup_863_126_23(acc),
            [115, 104, 105, 110, 115, 104, 105, 114, 111] => lookup_863_126_24(acc),
            [107, 97, 115, 117, 103, 97, 105] => lookup_863_126_25(acc),
            [104, 97, 110, 100, 97] => lookup_863_126_26(acc),
            [105, 119, 97, 107, 117, 114, 97] => lookup_863_126_27(acc),
            [116, 111, 107, 111, 110, 97, 109, 101] => lookup_863_126_28(acc),
            [116, 111, 101, 105] => lookup_863_126_29(acc),
            [105, 115, 115, 104, 105, 107, 105] => lookup_863_126_30(acc),
            [97, 115, 117, 107, 101] => lookup_863_126_31(acc),
            [116, 111, 121, 111, 107, 97, 119, 97] => lookup_863_126_32(acc),
            [116, 115, 117, 115, 104, 105, 109, 97] => lookup_863_126_33(acc),
            [104, 101, 107, 105, 110, 97, 110] => lookup_863_126_34(acc),
            [107, 105, 121, 111, 115, 117] => lookup_863_126_35(acc),
            [97, 109, 97] => lookup_863_126_36(acc),
            [116, 111, 98, 105, 115, 104, 105, 109, 97] => lookup_863_126_37(acc),
            [97, 110, 106, 111] => lookup_863_126_38(acc),
            [103, 97, 109, 97, 103, 111, 114, 105] => lookup_863_126_39(acc),
            [107, 97, 110, 105, 101] => lookup_863_126_40(acc),
            [110, 105, 115, 104, 105, 111] => lookup_863_126_41(acc),
            [102, 117, 115, 111] => lookup_863_126_42(acc),
            [104, 105, 103, 97, 115, 104, 105, 117, 114, 97] => lookup_863_126_43(acc),
            [110, 105, 115, 115, 104, 105, 110] => lookup_863_126_44(acc),
            [105, 110, 117, 121, 97, 109, 97] => lookup_863_126_45(acc),
            [116, 111, 103, 111] => lookup_863_126_46(acc),
            [107, 111, 109, 97, 107, 105] => lookup_863_126_47(acc),
            [121, 97, 116, 111, 109, 105] => lookup_863_126_48(acc),
            [115, 104, 105, 107, 97, 116, 115, 117] => lookup_863_126_49(acc),
            [109, 105, 104, 97, 109, 97] => lookup_863_126_50(acc),
            [105, 99, 104, 105, 110, 111, 109, 105, 121, 97] => lookup_863_126_51(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_129<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [106, 111, 115, 111] => lookup_863_129_0(acc),
            [116, 111, 110, 101] => lookup_863_129_1(acc),
            [117, 115, 104, 105, 107, 117] => lookup_863_129_2(acc),
            [107, 111, 103, 97] => lookup_863_129_3(acc),
            [111, 109, 105, 116, 97, 109, 97] => lookup_863_129_4(acc),
            [115, 111, 119, 97] => lookup_863_129_5(acc),
            [121, 97, 109, 97, 103, 97, 116, 97] => lookup_863_129_6(acc),
            [105, 119, 97, 109, 97] => lookup_863_129_7(acc),
            [105, 116, 97, 107, 111] => lookup_863_129_8(acc),
            [107, 97, 109, 105, 115, 117] => lookup_863_129_9(acc),
            [115, 117, 105, 102, 117] => lookup_863_129_10(acc),
            [97, 115, 97, 104, 105] => lookup_863_129_11(acc),
            [104, 105, 116, 97, 99, 104, 105, 111, 109, 105, 121, 97] => lookup_863_129_12(acc),
            [105, 98, 97, 114, 97, 107, 105] => lookup_863_129_13(acc),
            [110, 97, 107, 97] => lookup_863_129_14(acc),
            [116, 111, 109, 111, 98, 101] => lookup_863_129_15(acc),
            [116, 111, 107, 97, 105] => lookup_863_129_16(acc),
            [116, 111, 114, 105, 100, 101] => lookup_863_129_17(acc),
            [98, 97, 110, 100, 111] => lookup_863_129_18(acc),
            [105, 110, 97, 115, 104, 105, 107, 105] => lookup_863_129_19(acc),
            [114, 121, 117, 103, 97, 115, 97, 107, 105] => lookup_863_129_20(acc),
            [116, 97, 109, 97, 116, 115, 117, 107, 117, 114, 105] => lookup_863_129_21(acc),
            [121, 97, 99, 104, 105, 121, 111] => lookup_863_129_22(acc),
            [107, 97, 115, 97, 109, 97] => lookup_863_129_23(acc),
            [116, 115, 117, 107, 117, 98, 97] => lookup_863_129_24(acc),
            [115, 104, 105, 109, 111, 100, 97, 116, 101] => lookup_863_129_25(acc),
            [100, 97, 105, 103, 111] => lookup_863_129_26(acc),
            [104, 105, 116, 97, 99, 104, 105, 110, 97, 107, 97] => lookup_863_129_27(acc),
            [109, 111, 114, 105, 121, 97] => lookup_863_129_28(acc),
            [107, 97, 115, 104, 105, 109, 97] => lookup_863_129_29(acc),
            [111, 103, 97, 119, 97] => lookup_863_129_30(acc),
            [115, 97, 107, 97, 105] => lookup_863_129_31(acc),
            [116, 115, 117, 99, 104, 105, 117, 114, 97] => lookup_863_129_32(acc),
            [109, 105, 104, 111] => lookup_863_129_33(acc),
            [104, 105, 116, 97, 99, 104, 105, 111, 116, 97] => lookup_863_129_34(acc),
            [97, 109, 105] => lookup_863_129_35(acc),
            [104, 105, 116, 97, 99, 104, 105] => lookup_863_129_36(acc),
            [99, 104, 105, 107, 117, 115, 101, 105] => lookup_863_129_37(acc),
            [110, 97, 109, 101, 103, 97, 116, 97] => lookup_863_129_38(acc),
            [115, 97, 107, 117, 114, 97, 103, 97, 119, 97] => lookup_863_129_39(acc),
            [116, 97, 107, 97, 104, 97, 103, 105] => lookup_863_129_40(acc),
            [117, 99, 104, 105, 104, 97, 114, 97] => lookup_863_129_41(acc),
            [121, 97, 119, 97, 114, 97] => lookup_863_129_42(acc),
            [102, 117, 106, 105, 115, 104, 105, 114, 111] => lookup_863_129_43(acc),
            [105, 110, 97] => lookup_863_129_44(acc),
            [115, 104, 105, 114, 111, 115, 97, 116, 111] => lookup_863_129_45(acc),
            [111, 97, 114, 97, 105] => lookup_863_129_46(acc),
            [121, 117, 107, 105] => lookup_863_129_47(acc),
            [115, 104, 105, 109, 111, 116, 115, 117, 109, 97] => lookup_863_129_48(acc),
            [109, 105, 116, 111] => lookup_863_129_49(acc),
            [107, 97, 115, 117, 109, 105, 103, 97, 117, 114, 97] => lookup_863_129_50(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_131_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_131_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_131_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_131_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_131_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_131_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_131_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_131_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_131_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_131_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_131_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_131_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_131_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_131_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_131_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_131_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_131_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_131_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_131_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_131<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 97, 107, 101, 116, 97] => lookup_863_131_0(acc),
            [117, 115, 97] => lookup_863_131_1(acc),
            [104, 105, 116, 97] => lookup_863_131_2(acc),
            [121, 117, 102, 117] => lookup_863_131_3(acc),
            [116, 115, 117, 107, 117, 109, 105] => lookup_863_131_4(acc),
            [104, 97, 115, 97, 109, 97] => lookup_863_131_5(acc),
            [115, 97, 105, 107, 105] => lookup_863_131_6(acc),
            [107, 97, 109, 105, 116, 115, 117, 101] => lookup_863_131_7(acc),
            [111, 105, 116, 97] => lookup_863_131_8(acc),
            [104, 105, 109, 101, 115, 104, 105, 109, 97] => lookup_863_131_9(acc),
            [98, 101, 112, 112, 117] => lookup_863_131_10(acc),
            [98, 117, 110, 103, 111, 111, 110, 111] => lookup_863_131_11(acc),
            [107, 117, 106, 117] => lookup_863_131_12(acc),
            [107, 117, 110, 105, 115, 97, 107, 105] => lookup_863_131_13(acc),
            [104, 105, 106, 105] => lookup_863_131_14(acc),
            [107, 117, 115, 117] => lookup_863_131_15(acc),
            [117, 115, 117, 107, 105] => lookup_863_131_16(acc),
            [98, 117, 110, 103, 111, 116, 97, 107, 97, 100, 97] => lookup_863_131_17(acc),
            [107, 111, 107, 111, 110, 111, 101] => lookup_863_131_18(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_132_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_132_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_132_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_132_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_132_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_132_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_132_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_132_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_132_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_132_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_132_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_132_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_132_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_132_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_132_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_132<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [117, 116, 97, 122, 117] => lookup_863_132_0(acc),
            [116, 97, 107, 97, 109, 97, 116, 115, 117] => lookup_863_132_1(acc),
            [107, 111, 116, 111, 104, 105, 114, 97] => lookup_863_132_2(acc),
            [116, 97, 100, 111, 116, 115, 117] => lookup_863_132_3(acc),
            [104, 105, 103, 97, 115, 104, 105, 107, 97, 103, 97, 119, 97] => lookup_863_132_4(acc),
            [97, 121, 97, 103, 97, 119, 97] => lookup_863_132_5(acc),
            [116, 111, 110, 111, 115, 104, 111] => lookup_863_132_6(acc),
            [117, 99, 104, 105, 110, 111, 109, 105] => lookup_863_132_7(acc),
            [115, 97, 110, 117, 107, 105] => lookup_863_132_8(acc),
            [107, 97, 110, 111, 110, 106, 105] => lookup_863_132_9(acc),
            [109, 97, 110, 110, 111] => lookup_863_132_10(acc),
            [109, 97, 114, 117, 103, 97, 109, 101] => lookup_863_132_11(acc),
            [122, 101, 110, 116, 115, 117, 106, 105] => lookup_863_132_12(acc),
            [109, 105, 116, 111, 121, 111] => lookup_863_132_13(acc),
            [110, 97, 111, 115, 104, 105, 109, 97] => lookup_863_132_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_133_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_133_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_133_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_133_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_133_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_133_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_133_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_133_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_133_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_133_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_133_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_133_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_133_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_133_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_133_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_133_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_133_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_133_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_133_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_133_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_133_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_133_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_133_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_133_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_133_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_133_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_133_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_133_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_133_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_133_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_133_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_133_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_133_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_133_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_133<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 104, 105, 98, 97, 116, 97] => lookup_863_133_0(acc),
            [105, 116, 111, 105, 103, 97, 119, 97] => lookup_863_133_1(acc),
            [115, 101, 105, 114, 111, 117] => lookup_863_133_2(acc),
            [109, 105, 116, 115, 117, 107, 101] => lookup_863_133_3(acc),
            [103, 111, 115, 101, 110] => lookup_863_133_4(acc),
            [115, 97, 110, 106, 111] => lookup_863_133_5(acc),
            [111, 106, 105, 121, 97] => lookup_863_133_6(acc),
            [109, 117, 105, 107, 97] => lookup_863_133_7(acc),
            [121, 117, 122, 97, 119, 97] => lookup_863_133_8(acc),
            [111, 109, 105] => lookup_863_133_9(acc),
            [110, 105, 105, 103, 97, 116, 97] => lookup_863_133_10(acc),
            [116, 97, 105, 110, 97, 105] => lookup_863_133_11(acc),
            [107, 97, 109, 111] => lookup_863_133_12(acc),
            [116, 111, 99, 104, 105, 111] => lookup_863_133_13(acc),
            [110, 97, 103, 97, 111, 107, 97] => lookup_863_133_14(acc),
            [97, 103, 97, 110, 111] => lookup_863_133_15(acc),
            [115, 101, 107, 105, 107, 97, 119, 97] => lookup_863_133_16(acc),
            [116, 115, 117, 98, 97, 109, 101] => lookup_863_133_17(acc),
            [121, 111, 105, 116, 97] => lookup_863_133_18(acc),
            [115, 97, 100, 111] => lookup_863_133_19(acc),
            [115, 101, 105, 114, 111] => lookup_863_133_20(acc),
            [107, 97, 114, 105, 119, 97] => lookup_863_133_21(acc),
            [109, 121, 111, 107, 111] => lookup_863_133_22(acc),
            [117, 111, 110, 117, 109, 97] => lookup_863_133_23(acc),
            [107, 97, 115, 104, 105, 119, 97, 122, 97, 107, 105] => lookup_863_133_24(acc),
            [97, 103, 97] => lookup_863_133_25(acc),
            [105, 122, 117, 109, 111, 122, 97, 107, 105] => lookup_863_133_26(acc),
            [109, 105, 110, 97, 109, 105, 117, 111, 110, 117, 109, 97] => lookup_863_133_27(acc),
            [109, 117, 114, 97, 107, 97, 109, 105] => lookup_863_133_28(acc),
            [116, 115, 117, 110, 97, 110] => lookup_863_133_29(acc),
            [121, 97, 104, 105, 107, 111] => lookup_863_133_30(acc),
            [106, 111, 101, 116, 115, 117] => lookup_863_133_31(acc),
            [116, 111, 107, 97, 109, 97, 99, 104, 105] => lookup_863_133_32(acc),
            [116, 97, 103, 97, 109, 105] => lookup_863_133_33(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_136_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_136_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_136_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_136_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_136_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_136_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_136_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_136_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_136_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_136_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_136_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_136_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_136_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_136_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_136_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_136_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_136_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_136_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_136_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_136<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 97, 103, 97] => lookup_863_136_0(acc),
            [104, 97, 107, 117, 115, 97, 110] => lookup_863_136_1(acc),
            [97, 110, 97, 109, 105, 122, 117] => lookup_863_136_2(acc),
            [110, 111, 110, 111, 105, 99, 104, 105] => lookup_863_136_3(acc),
            [119, 97, 106, 105, 109, 97] => lookup_863_136_4(acc),
            [107, 97, 119, 97, 107, 105, 116, 97] => lookup_863_136_5(acc),
            [110, 111, 109, 105] => lookup_863_136_6(acc),
            [115, 117, 122, 117] => lookup_863_136_7(acc),
            [107, 111, 109, 97, 116, 115, 117] => lookup_863_136_8(acc),
            [116, 115, 117, 114, 117, 103, 105] => lookup_863_136_9(acc),
            [107, 97, 110, 97, 122, 97, 119, 97] => lookup_863_136_10(acc),
            [104, 97, 107, 117, 105] => lookup_863_136_11(acc),
            [110, 97, 107, 97, 110, 111, 116, 111] => lookup_863_136_12(acc),
            [107, 97, 104, 111, 107, 117] => lookup_863_136_13(acc),
            [110, 97, 110, 97, 111] => lookup_863_136_14(acc),
            [110, 111, 116, 111] => lookup_863_136_15(acc),
            [115, 104, 105, 107, 97] => lookup_863_136_16(acc),
            [116, 115, 117, 98, 97, 116, 97] => lookup_863_136_17(acc),
            [117, 99, 104, 105, 110, 97, 100, 97] => lookup_863_136_18(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_137_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_137_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_137_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_137_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_137_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_137_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_137_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_137_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_137_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_137_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_137_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_137_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_137_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_137_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_137_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_137_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_137_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_137_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_137_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_137_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_137_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_137_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_137_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_137_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_137_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_137_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_137<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 107, 97, 105, 119, 97] => lookup_863_137_0(acc),
            [115, 97, 116, 111, 115, 104, 111] => lookup_863_137_1(acc),
            [116, 115, 117, 121, 97, 109, 97] => lookup_863_137_2(acc),
            [115, 104, 111, 111] => lookup_863_137_3(acc),
            [119, 97, 107, 101] => lookup_863_137_4(acc),
            [121, 97, 107, 97, 103, 101] => lookup_863_137_5(acc),
            [97, 115, 97, 107, 117, 99, 104, 105] => lookup_863_137_6(acc),
            [107, 97, 103, 97, 109, 105, 110, 111] => lookup_863_137_7(acc),
            [107, 117, 109, 101, 110, 97, 110] => lookup_863_137_8(acc),
            [109, 105, 115, 97, 107, 105] => lookup_863_137_9(acc),
            [107, 105, 98, 105, 99, 104, 117, 111] => lookup_863_137_10(acc),
            [109, 97, 110, 105, 119, 97] => lookup_863_137_11(acc),
            [105, 98, 97, 114, 97] => lookup_863_137_12(acc),
            [116, 97, 107, 97, 104, 97, 115, 104, 105] => lookup_863_137_13(acc),
            [110, 105, 105, 109, 105] => lookup_863_137_14(acc),
            [107, 117, 114, 97, 115, 104, 105, 107, 105] => lookup_863_137_15(acc),
            [115, 101, 116, 111, 117, 99, 104, 105] => lookup_863_137_16(acc),
            [104, 97, 121, 97, 115, 104, 105, 109, 97] => lookup_863_137_17(acc),
            [115, 111, 106, 97] => lookup_863_137_18(acc),
            [110, 97, 103, 105] => lookup_863_137_19(acc),
            [98, 105, 122, 101, 110] => lookup_863_137_20(acc),
            [110, 105, 115, 104, 105, 97, 119, 97, 107, 117, 114, 97] => lookup_863_137_21(acc),
            [107, 97, 115, 97, 111, 107, 97] => lookup_863_137_22(acc),
            [116, 97, 109, 97, 110, 111] => lookup_863_137_23(acc),
            [115, 104, 105, 110, 106, 111] => lookup_863_137_24(acc),
            [111, 107, 97, 121, 97, 109, 97] => lookup_863_137_25(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_141<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 104, 105, 109, 105, 122, 117] => lookup_863_141_0(acc),
            [116, 111, 121, 111, 117, 114, 97] => lookup_863_141_1(acc),
            [115, 104, 105, 98, 101, 99, 104, 97] => lookup_863_141_2(acc),
            [110, 101, 109, 117, 114, 111] => lookup_863_141_3(acc),
            [114, 105, 115, 104, 105, 114, 105, 102, 117, 106, 105] => lookup_863_141_4(acc),
            [98, 105, 101, 105] => lookup_863_141_5(acc),
            [115, 104, 97, 107, 111, 116, 97, 110] => lookup_863_141_6(acc),
            [115, 104, 105, 109, 111, 107, 97, 119, 97] => lookup_863_141_7(acc),
            [111, 116, 111, 105, 110, 101, 112, 112, 117] => lookup_863_141_8(acc),
            [102, 117, 107, 117, 115, 104, 105, 109, 97] => lookup_863_141_9(acc),
            [116, 111, 109, 97, 107, 111, 109, 97, 105] => lookup_863_141_10(acc),
            [116, 97, 105, 107, 105] => lookup_863_141_11(acc),
            [99, 104, 105, 112, 112, 117, 98, 101, 116, 115, 117] => lookup_863_141_12(acc),
            [110, 97, 110, 97, 101] => lookup_863_141_13(acc),
            [110, 97, 107, 97, 103, 97, 119, 97] => lookup_863_141_14(acc),
            [97, 107, 107, 101, 115, 104, 105] => lookup_863_141_15(acc),
            [116, 97, 107, 105, 110, 111, 117, 101] => lookup_863_141_16(acc),
            [107, 121, 111, 119, 97] => lookup_863_141_17(acc),
            [115, 104, 105, 110, 115, 104, 105, 110, 111, 116, 115, 117] => lookup_863_141_18(acc),
            [115, 104, 105, 114, 97, 111, 105] => lookup_863_141_19(acc),
            [109, 111, 115, 101, 117, 115, 104, 105] => lookup_863_141_20(acc),
            [116, 111, 109, 97, 114, 105] => lookup_863_141_21(acc),
            [117, 116, 97, 115, 104, 105, 110, 97, 105] => lookup_863_141_22(acc),
            [111, 116, 111, 98, 101] => lookup_863_141_23(acc),
            [115, 104, 105, 110, 116, 111, 107, 117] => lookup_863_141_24(acc),
            [110, 97, 121, 111, 114, 111] => lookup_863_141_25(acc),
            [99, 104, 105, 116, 111, 115, 101] => lookup_863_141_26(acc),
            [115, 104, 105, 107, 97, 98, 101] => lookup_863_141_27(acc),
            [109, 97, 116, 115, 117, 109, 97, 101] => lookup_863_141_28(acc),
            [116, 111, 121, 97, 107, 111] => lookup_863_141_29(acc),
            [109, 117, 107, 97, 119, 97] => lookup_863_141_30(acc),
            [97, 107, 97, 98, 105, 114, 97] => lookup_863_141_31(acc),
            [107, 105, 109, 111, 98, 101, 116, 115, 117] => lookup_863_141_32(acc),
            [111, 116, 97, 114, 117] => lookup_863_141_33(acc),
            [121, 97, 107, 117, 109, 111] => lookup_863_141_34(acc),
            [119, 97, 115, 115, 97, 109, 117] => lookup_863_141_35(acc),
            [109, 111, 109, 98, 101, 116, 115, 117] => lookup_863_141_36(acc),
            [107, 117, 114, 105, 121, 97, 109, 97] => lookup_863_141_37(acc),
            [111, 98, 105, 114, 97] => lookup_863_141_38(acc),
            [97, 115, 115, 97, 98, 117] => lookup_863_141_39(acc),
            [114, 105, 115, 104, 105, 114, 105] => lookup_863_141_40(acc),
            [102, 117, 107, 97, 103, 97, 119, 97] => lookup_863_141_41(acc),
            [107, 105, 121, 111, 115, 97, 116, 111] => lookup_863_141_42(acc),
            [109, 97, 115, 104, 105, 107, 101] => lookup_863_141_43(acc),
            [110, 97, 110, 112, 111, 114, 111] => lookup_863_141_44(acc),
            [104, 111, 110, 98, 101, 116, 115, 117] => lookup_863_141_45(acc),
            [97, 98, 97, 115, 104, 105, 114, 105] => lookup_863_141_46(acc),
            [111, 107, 101, 116, 111] => lookup_863_141_47(acc),
            [109, 105, 110, 97, 109, 105, 102, 117, 114, 97, 110, 111] => lookup_863_141_48(acc),
            [116, 97, 107, 105, 107, 97, 119, 97] => lookup_863_141_49(acc),
            [107, 117, 114, 111, 109, 97, 116, 115, 117, 110, 97, 105] => lookup_863_141_50(acc),
            [107, 97, 121, 97, 98, 101] => lookup_863_141_51(acc),
            [110, 105, 107, 105] => lookup_863_141_52(acc),
            [111, 98, 105, 104, 105, 114, 111] => lookup_863_141_53(acc),
            [107, 117, 115, 104, 105, 114, 111] => lookup_863_141_54(acc),
            [115, 104, 105, 114, 105, 117, 99, 104, 105] => lookup_863_141_55(acc),
            [98, 105, 104, 111, 114, 111] => lookup_863_141_56(acc),
            [109, 117, 114, 111, 114, 97, 110] => lookup_863_141_57(acc),
            [97, 115, 104, 105, 98, 101, 116, 115, 117] => lookup_863_141_58(acc),
            [105, 119, 97, 109, 105, 122, 97, 119, 97] => lookup_863_141_59(acc),
            [107, 111, 115, 104, 105, 109, 105, 122, 117] => lookup_863_141_60(acc),
            [104, 111, 107, 117, 114, 121, 117] => lookup_863_141_61(acc),
            [115, 97, 114, 111, 109, 97] => lookup_863_141_62(acc),
            [116, 115, 117, 98, 101, 116, 115, 117] => lookup_863_141_63(acc),
            [98, 105, 102, 117, 107, 97] => lookup_863_141_64(acc),
            [105, 115, 104, 105, 107, 97, 114, 105] => lookup_863_141_65(acc),
            [116, 115, 117, 107, 105, 103, 97, 116, 97] => lookup_863_141_66(acc),
            [116, 101, 115, 104, 105, 107, 97, 103, 97] => lookup_863_141_67(acc),
            [101, 98, 101, 116, 115, 117] => lookup_863_141_68(acc),
            [114, 105, 107, 117, 98, 101, 116, 115, 117] => lookup_863_141_69(acc),
            [117, 114, 97, 107, 97, 119, 97] => lookup_863_141_70(acc),
            [101, 115, 97, 110] => lookup_863_141_71(acc),
            [107, 97, 109, 111, 101, 110, 97, 105] => lookup_863_141_72(acc),
            [111, 116, 111, 102, 117, 107, 101] => lookup_863_141_73(acc),
            [107, 97, 109, 105, 107, 97, 119, 97] => lookup_863_141_74(acc),
            [116, 111, 98, 101, 116, 115, 117] => lookup_863_141_75(acc),
            [107, 97, 109, 105, 102, 117, 114, 97, 110, 111] => lookup_863_141_76(acc),
            [101, 115, 97, 115, 104, 105] => lookup_863_141_77(acc),
            [115, 104, 105, 114, 97, 110, 117, 107, 97] => lookup_863_141_78(acc),
            [102, 117, 114, 117, 98, 105, 114, 97] => lookup_863_141_79(acc),
            [97, 115, 97, 104, 105, 107, 97, 119, 97] => lookup_863_141_80(acc),
            [105, 109, 97, 107, 97, 110, 101] => lookup_863_141_81(acc),
            [116, 111, 121, 111, 116, 111, 109, 105] => lookup_863_141_82(acc),
            [104, 97, 109, 97, 116, 111, 110, 98, 101, 116, 115, 117] => lookup_863_141_83(acc),
            [107, 117, 110, 110, 101, 112, 112, 117] => lookup_863_141_84(acc),
            [104, 97, 98, 111, 114, 111] => lookup_863_141_85(acc),
            [115, 117, 110, 97, 103, 97, 119, 97] => lookup_863_141_86(acc),
            [119, 97, 107, 107, 97, 110, 97, 105] => lookup_863_141_87(acc),
            [115, 104, 105, 107, 97, 111, 105] => lookup_863_141_88(acc),
            [110, 105, 105, 107, 97, 112, 112, 117] => lookup_863_141_89(acc),
            [98, 105, 114, 97, 116, 111, 114, 105] => lookup_863_141_90(acc),
            [104, 105, 103, 97, 115, 104, 105, 107, 97, 103, 117, 114, 97] => {
                lookup_863_141_91(acc)
            }
            [110, 105, 115, 104, 105, 111, 107, 111, 112, 112, 101] => lookup_863_141_92(acc),
            [110, 97, 105, 101] => lookup_863_141_93(acc),
            [111, 107, 111, 112, 112, 101] => lookup_863_141_94(acc),
            [115, 111, 98, 101, 116, 115, 117] => lookup_863_141_95(acc),
            [107, 101, 109, 98, 117, 99, 104, 105] => lookup_863_141_96(acc),
            [116, 111, 121, 97] => lookup_863_141_97(acc),
            [104, 111, 114, 111, 107, 97, 110, 97, 105] => lookup_863_141_98(acc),
            [105, 119, 97, 110, 97, 105] => lookup_863_141_99(acc),
            [121, 111, 105, 99, 104, 105] => lookup_863_141_100(acc),
            [101, 114, 105, 109, 111] => lookup_863_141_101(acc),
            [110, 111, 98, 111, 114, 105, 98, 101, 116, 115, 117] => lookup_863_141_102(acc),
            [97, 115, 104, 111, 114, 111] => lookup_863_141_103(acc),
            [107, 105, 116, 97, 104, 105, 114, 111, 115, 104, 105, 109, 97] => {
                lookup_863_141_104(acc)
            }
            [107, 105, 116, 97, 109, 105] => lookup_863_141_105(acc),
            [109, 105, 107, 97, 115, 97] => lookup_863_141_106(acc),
            [104, 97, 107, 111, 100, 97, 116, 101] => lookup_863_141_107(acc),
            [115, 104, 97, 114, 105] => lookup_863_141_108(acc),
            [100, 97, 116, 101] => lookup_863_141_109(acc),
            [107, 105, 107, 111, 110, 97, 105] => lookup_863_141_110(acc),
            [116, 111, 104, 109, 97] => lookup_863_141_111(acc),
            [97, 116, 115, 117, 109, 97] => lookup_863_141_112(acc),
            [110, 97, 107, 97, 115, 97, 116, 115, 117, 110, 97, 105] => lookup_863_141_113(acc),
            [107, 97, 109, 105, 115, 117, 110, 97, 103, 97, 119, 97] => lookup_863_141_114(acc),
            [117, 114, 121, 117] => lookup_863_141_115(acc),
            [104, 111, 114, 111, 110, 111, 98, 101] => lookup_863_141_116(acc),
            [116, 97, 107, 97, 115, 117] => lookup_863_141_117(acc),
            [114, 101, 98, 117, 110] => lookup_863_141_118(acc),
            [107, 117, 116, 99, 104, 97, 110] => lookup_863_141_119(acc),
            [102, 117, 114, 97, 110, 111] => lookup_863_141_120(acc),
            [101, 109, 98, 101, 116, 115, 117] => lookup_863_141_121(acc),
            [104, 105, 100, 97, 107, 97] => lookup_863_141_122(acc),
            [104, 111, 107, 117, 116, 111] => lookup_863_141_123(acc),
            [112, 105, 112, 112, 117] => lookup_863_141_124(acc),
            [115, 104, 105, 109, 97, 109, 97, 107, 105] => lookup_863_141_125(acc),
            [97, 98, 105, 114, 97] => lookup_863_141_126(acc),
            [104, 105, 114, 111, 111] => lookup_863_141_127(acc),
            [105, 107, 101, 100, 97] => lookup_863_141_128(acc),
            [107, 97, 109, 105, 115, 104, 105, 104, 111, 114, 111] => lookup_863_141_129(acc),
            [115, 104, 105, 98, 101, 116, 115, 117] => lookup_863_141_130(acc),
            [114, 97, 110, 107, 111, 115, 104, 105] => lookup_863_141_131(acc),
            [115, 97, 114, 117, 102, 117, 116, 115, 117] => lookup_863_141_132(acc),
            [101, 110, 105, 119, 97] => lookup_863_141_133(acc),
            [110, 97, 107, 97, 116, 111, 109, 98, 101, 116, 115, 117] => lookup_863_141_134(acc),
            [97, 105, 98, 101, 116, 115, 117] => lookup_863_141_135(acc),
            [104, 105, 103, 97, 115, 104, 105, 107, 97, 119, 97] => lookup_863_141_136(acc),
            [98, 105, 98, 97, 105] => lookup_863_141_137(acc),
            [111, 117, 109, 117] => lookup_863_141_138(acc),
            [110, 117, 109, 97, 116, 97] => lookup_863_141_139(acc),
            [111, 122, 111, 114, 97] => lookup_863_141_140(acc),
            [117, 114, 97, 117, 115, 117] => lookup_863_141_141(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_144_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_144_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_144_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_144_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_144_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_144_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_144_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_144_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_144_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_144_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_144_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_144_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_144_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_144_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_144_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_144_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_144_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_144_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_144_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_144_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_144_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_144_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_144_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_144_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_144_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_144_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_144_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_144_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_144<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 117, 101, 102, 117, 107, 105] => lookup_863_144_0(acc),
            [107, 97, 105] => lookup_863_144_1(acc),
            [111, 116, 115, 117, 107, 105] => lookup_863_144_2(acc),
            [109, 105, 110, 111, 98, 117] => lookup_863_144_3(acc),
            [102, 117, 106, 105, 121, 111, 115, 104, 105, 100, 97] => lookup_863_144_4(acc),
            [99, 104, 117, 111] => lookup_863_144_5(acc),
            [107, 111, 102, 117] => lookup_863_144_6(acc),
            [110, 105, 114, 97, 115, 97, 107, 105] => lookup_863_144_7(acc),
            [102, 117, 106, 105, 107, 97, 119, 97, 103, 117, 99, 104, 105, 107, 111] => {
                lookup_863_144_8(acc)
            }
            [110, 97, 107, 97, 109, 105, 99, 104, 105] => lookup_863_144_9(acc),
            [104, 97, 121, 97, 107, 97, 119, 97] => lookup_863_144_10(acc),
            [110, 105, 115, 104, 105, 107, 97, 116, 115, 117, 114, 97] => lookup_863_144_11(acc),
            [110, 97, 114, 117, 115, 97, 119, 97] => lookup_863_144_12(acc),
            [100, 111, 115, 104, 105] => lookup_863_144_13(acc),
            [102, 117, 106, 105, 107, 97, 119, 97] => lookup_863_144_14(acc),
            [109, 105, 110, 97, 109, 105, 45, 97, 108, 112, 115] => lookup_863_144_15(acc),
            [110, 97, 110, 98, 117] => lookup_863_144_16(acc),
            [111, 115, 104, 105, 110, 111] => lookup_863_144_17(acc),
            [105, 99, 104, 105, 107, 97, 119, 97, 109, 105, 115, 97, 116, 111] => {
                lookup_863_144_18(acc)
            }
            [115, 104, 111, 119, 97] => lookup_863_144_19(acc),
            [107, 111, 115, 117, 103, 101] => lookup_863_144_20(acc),
            [116, 115, 117, 114, 117] => lookup_863_144_21(acc),
            [117, 101, 110, 111, 104, 97, 114, 97] => lookup_863_144_22(acc),
            [121, 97, 109, 97, 110, 97, 107, 97, 107, 111] => lookup_863_144_23(acc),
            [121, 97, 109, 97, 110, 97, 115, 104, 105] => lookup_863_144_24(acc),
            [104, 111, 107, 117, 116, 111] => lookup_863_144_25(acc),
            [107, 111, 115, 104, 117] => lookup_863_144_26(acc),
            [116, 97, 98, 97, 121, 97, 109, 97] => lookup_863_144_27(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_148_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_148_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_148_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_148_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_148_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_148_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_148_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_148_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_148_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_148_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_148_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_148_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_148_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_148_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_148_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_148_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_148_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_148_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_148_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_148_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_148<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 122, 117, 109, 105] => lookup_863_148_0(acc),
            [109, 97, 107, 117, 114, 97, 122, 97, 107, 105] => lookup_863_148_1(acc),
            [97, 107, 117, 110, 101] => lookup_863_148_2(acc),
            [97, 109, 97, 109, 105] => lookup_863_148_3(acc),
            [116, 97, 114, 117, 109, 105, 122, 117] => lookup_863_148_4(acc),
            [105, 115, 101, 110] => lookup_863_148_5(acc),
            [115, 97, 116, 115, 117, 109, 97, 115, 101, 110, 100, 97, 105] => lookup_863_148_6(acc),
            [107, 105, 110, 107, 111] => lookup_863_148_7(acc),
            [115, 111, 111] => lookup_863_148_8(acc),
            [104, 105, 111, 107, 105] => lookup_863_148_9(acc),
            [110, 105, 115, 104, 105, 110, 111, 111, 109, 111, 116, 101] => lookup_863_148_10(acc),
            [107, 97, 103, 111, 115, 104, 105, 109, 97] => lookup_863_148_11(acc),
            [121, 117, 115, 117, 105] => lookup_863_148_12(acc),
            [109, 105, 110, 97, 109, 105, 116, 97, 110, 101] => lookup_863_148_13(acc),
            [107, 111, 117, 121, 97, 109, 97] => lookup_863_148_14(acc),
            [107, 97, 119, 97, 110, 97, 98, 101] => lookup_863_148_15(acc),
            [105, 115, 97] => lookup_863_148_16(acc),
            [109, 97, 116, 115, 117, 109, 111, 116, 111] => lookup_863_148_17(acc),
            [110, 97, 107, 97, 116, 97, 110, 101] => lookup_863_148_18(acc),
            [107, 97, 110, 111, 121, 97] => lookup_863_148_19(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_149_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_149_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_149_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_149_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_149_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_149_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_149_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_149_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_149_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_149_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_149_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_149_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_149_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_149_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_149_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_149_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_149_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_149_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_149_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_149_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_149_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_149_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_149<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 97, 109, 105, 107, 97, 116, 97] => lookup_863_149_0(acc),
            [121, 97, 119, 97, 116, 97, 104, 97, 109, 97] => lookup_863_149_1(acc),
            [107, 97, 109, 105, 106, 105, 109, 97] => lookup_863_149_2(acc),
            [105, 107, 97, 116, 97] => lookup_863_149_3(acc),
            [115, 101, 105, 121, 111] => lookup_863_149_4(acc),
            [116, 111, 98, 101] => lookup_863_149_5(acc),
            [109, 97, 115, 97, 107, 105] => lookup_863_149_6(acc),
            [109, 97, 116, 115, 117, 110, 111] => lookup_863_149_7(acc),
            [109, 97, 116, 115, 117, 121, 97, 109, 97] => lookup_863_149_8(acc),
            [115, 104, 105, 107, 111, 107, 117, 99, 104, 117, 111] => lookup_863_149_9(acc),
            [97, 105, 110, 97, 110] => lookup_863_149_10(acc),
            [104, 111, 110, 97, 105] => lookup_863_149_11(acc),
            [107, 117, 109, 97, 107, 111, 103, 101, 110] => lookup_863_149_12(acc),
            [107, 105, 104, 111, 107, 117] => lookup_863_149_13(acc),
            [105, 109, 97, 98, 97, 114, 105] => lookup_863_149_14(acc),
            [116, 111, 111, 110] => lookup_863_149_15(acc),
            [110, 105, 105, 104, 97, 109, 97] => lookup_863_149_16(acc),
            [111, 122, 117] => lookup_863_149_17(acc),
            [105, 121, 111] => lookup_863_149_18(acc),
            [117, 99, 104, 105, 107, 111] => lookup_863_149_19(acc),
            [115, 97, 105, 106, 111] => lookup_863_149_20(acc),
            [117, 119, 97, 106, 105, 109, 97] => lookup_863_149_21(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_150_0(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_150_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_150<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_863_150_0(acc),
            wild => lookup_863_150_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_863_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_153_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_153_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_153_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_153_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_153_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_153_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_153_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_153_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_153_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_153_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_153_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_153_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_153_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_153_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_153_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_153_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_153_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_153_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_153_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_153_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_153_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_153_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_153_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_153_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_153_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_153_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_153_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_153_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_153_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_153_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_153_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_153_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_153_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_153_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_153_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_153_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_153<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 97, 101, 98, 97, 115, 104, 105] => lookup_863_153_0(acc),
            [107, 97, 119, 97, 98, 97] => lookup_863_153_1(acc),
            [115, 104, 105, 109, 111, 110, 105, 116, 97] => lookup_863_153_2(acc),
            [109, 105, 110, 97, 107, 97, 109, 105] => lookup_863_153_3(acc),
            [105, 116, 97, 107, 117, 114, 97] => lookup_863_153_4(acc),
            [116, 111, 109, 105, 111, 107, 97] => lookup_863_153_5(acc),
            [117, 101, 110, 111] => lookup_863_153_6(acc),
            [116, 115, 117, 109, 97, 103, 111, 105] => lookup_863_153_7(acc),
            [107, 97, 110, 114, 97] => lookup_863_153_8(acc),
            [110, 97, 110, 109, 111, 107, 117] => lookup_863_153_9(acc),
            [109, 101, 105, 119, 97] => lookup_863_153_10(acc),
            [115, 104, 105, 110, 116, 111] => lookup_863_153_11(acc),
            [102, 117, 106, 105, 111, 107, 97] => lookup_863_153_12(acc),
            [111, 105, 122, 117, 109, 105] => lookup_863_153_13(acc),
            [116, 97, 107, 97, 121, 97, 109, 97] => lookup_863_153_14(acc),
            [107, 117, 115, 97, 116, 115, 117] => lookup_863_153_15(acc),
            [107, 97, 116, 97, 115, 104, 105, 110, 97] => lookup_863_153_16(acc),
            [111, 114, 97] => lookup_863_153_17(acc),
            [116, 115, 117, 107, 105, 121, 111, 110, 111] => lookup_863_153_18(acc),
            [116, 97, 107, 97, 115, 97, 107, 105] => lookup_863_153_19(acc),
            [121, 111, 115, 104, 105, 111, 107, 97] => lookup_863_153_20(acc),
            [105, 115, 101, 115, 97, 107, 105] => lookup_863_153_21(acc),
            [107, 105, 114, 121, 117] => lookup_863_153_22(acc),
            [111, 116, 97] => lookup_863_153_23(acc),
            [109, 105, 100, 111, 114, 105] => lookup_863_153_24(acc),
            [107, 97, 110, 110, 97] => lookup_863_153_25(acc),
            [99, 104, 105, 121, 111, 100, 97] => lookup_863_153_26(acc),
            [115, 104, 111, 119, 97] => lookup_863_153_27(acc),
            [110, 97, 103, 97, 110, 111, 104, 97, 114, 97] => lookup_863_153_28(acc),
            [104, 105, 103, 97, 115, 104, 105, 97, 103, 97, 116, 115, 117, 109, 97] => {
                lookup_863_153_29(acc)
            }
            [97, 110, 110, 97, 107, 97] => lookup_863_153_30(acc),
            [110, 97, 107, 97, 110, 111, 106, 111] => lookup_863_153_31(acc),
            [110, 117, 109, 97, 116, 97] => lookup_863_153_32(acc),
            [115, 104, 105, 98, 117, 107, 97, 119, 97] => lookup_863_153_33(acc),
            [116, 97, 109, 97, 109, 117, 114, 97] => lookup_863_153_34(acc),
            [116, 97, 116, 101, 98, 97, 121, 97, 115, 104, 105] => lookup_863_153_35(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_154_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_154<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 97, 109, 101, 103, 97, 119, 97] => lookup_863_154_0(acc),
            [104, 105, 103, 97, 115, 104, 105, 99, 104, 105, 99, 104, 105, 98, 117] => {
                lookup_863_154_1(acc)
            }
            [107, 111, 117, 110, 111, 115, 117] => lookup_863_154_2(acc),
            [105, 119, 97, 116, 115, 117, 107, 105] => lookup_863_154_3(acc),
            [107, 117, 107, 105] => lookup_863_154_4(acc),
            [114, 97, 110, 122, 97, 110] => lookup_863_154_5(acc),
            [107, 111, 115, 104, 105, 103, 97, 121, 97] => lookup_863_154_6(acc),
            [121, 111, 115, 104, 105, 100, 97] => lookup_863_154_7(acc),
            [121, 111, 115, 104, 105, 109, 105] => lookup_863_154_8(acc),
            [107, 97, 109, 105, 107, 97, 119, 97] => lookup_863_154_9(acc),
            [121, 111, 107, 111, 122, 101] => lookup_863_154_10(acc),
            [109, 105, 121, 97, 115, 104, 105, 114, 111] => lookup_863_154_11(acc),
            [121, 97, 115, 104, 105, 111] => lookup_863_154_12(acc),
            [116, 111, 100, 97] => lookup_863_154_13(acc),
            [121, 111, 110, 111] => lookup_863_154_14(acc),
            [109, 105, 121, 111, 115, 104, 105] => lookup_863_154_15(acc),
            [119, 97, 114, 97, 98, 105] => lookup_863_154_16(acc),
            [110, 105, 105, 122, 97] => lookup_863_154_17(acc),
            [105, 114, 117, 109, 97] => lookup_863_154_18(acc),
            [104, 97, 116, 111, 103, 97, 121, 97] => lookup_863_154_19(acc),
            [107, 97, 119, 97, 103, 117, 99, 104, 105] => lookup_863_154_20(acc),
            [109, 111, 114, 111, 121, 97, 109, 97] => lookup_863_154_21(acc),
            [114, 121, 111, 107, 97, 109, 105] => lookup_863_154_22(acc),
            [107, 117, 109, 97, 103, 97, 121, 97] => lookup_863_154_23(acc),
            [116, 111, 107, 105, 103, 97, 119, 97] => lookup_863_154_24(acc),
            [104, 97, 110, 121, 117] => lookup_863_154_25(acc),
            [109, 105, 110, 97, 110, 111] => lookup_863_154_26(acc),
            [116, 111, 107, 111, 114, 111, 122, 97, 119, 97] => lookup_863_154_27(acc),
            [121, 111, 115, 104, 105, 107, 97, 119, 97] => lookup_863_154_28(acc),
            [104, 111, 110, 106, 111] => lookup_863_154_29(acc),
            [97, 114, 97, 107, 97, 119, 97] => lookup_863_154_30(acc),
            [111, 103, 111, 115, 101] => lookup_863_154_31(acc),
            [107, 97, 119, 97, 103, 111, 101] => lookup_863_154_32(acc),
            [115, 97, 107, 97, 100, 111] => lookup_863_154_33(acc),
            [117, 114, 97, 119, 97] => lookup_863_154_34(acc),
            [110, 97, 103, 97, 116, 111, 114, 111] => lookup_863_154_35(acc),
            [107, 97, 119, 97, 106, 105, 109, 97] => lookup_863_154_36(acc),
            [107, 97, 109, 105, 115, 97, 116, 111] => lookup_863_154_37(acc),
            [107, 97, 122, 111] => lookup_863_154_38(acc),
            [104, 97, 116, 111, 121, 97, 109, 97] => lookup_863_154_39(acc),
            [115, 104, 105, 107, 105] => lookup_863_154_40(acc),
            [111, 103, 97, 110, 111] => lookup_863_154_41(acc),
            [111, 116, 97, 107, 105] => lookup_863_154_42(acc),
            [104, 97, 110, 110, 111] => lookup_863_154_43(acc),
            [97, 115, 97, 107, 97] => lookup_863_154_44(acc),
            [111, 109, 105, 121, 97] => lookup_863_154_45(acc),
            [109, 97, 116, 115, 117, 98, 117, 115, 104, 105] => lookup_863_154_46(acc),
            [104, 105, 100, 97, 107, 97] => lookup_863_154_47(acc),
            [102, 117, 106, 105, 109, 105, 110, 111] => lookup_863_154_48(acc),
            [107, 97, 115, 117, 107, 97, 98, 101] => lookup_863_154_49(acc),
            [115, 104, 105, 114, 97, 111, 107, 97] => lookup_863_154_50(acc),
            [111, 107, 101, 103, 97, 119, 97] => lookup_863_154_51(acc),
            [102, 117, 107, 97, 121, 97] => lookup_863_154_52(acc),
            [115, 97, 121, 97, 109, 97] => lookup_863_154_53(acc),
            [104, 97, 115, 117, 100, 97] => lookup_863_154_54(acc),
            [104, 105, 103, 97, 115, 104, 105, 109, 97, 116, 115, 117, 121, 97, 109, 97] => {
                lookup_863_154_55(acc)
            }
            [115, 111, 107, 97] => lookup_863_154_56(acc),
            [111, 103, 97, 119, 97] => lookup_863_154_57(acc),
            [107, 97, 109, 105, 105, 122, 117, 109, 105] => lookup_863_154_58(acc),
            [116, 115, 117, 114, 117, 103, 97, 115, 104, 105, 109, 97] => lookup_863_154_59(acc),
            [102, 117, 106, 105, 109, 105] => lookup_863_154_60(acc),
            [115, 97, 116, 116, 101] => lookup_863_154_61(acc),
            [99, 104, 105, 99, 104, 105, 98, 117] => lookup_863_154_62(acc),
            [115, 97, 105, 116, 97, 109, 97] => lookup_863_154_63(acc),
            [105, 110, 97] => lookup_863_154_64(acc),
            [121, 111, 114, 105, 105] => lookup_863_154_65(acc),
            [107, 105, 116, 97, 109, 111, 116, 111] => lookup_863_154_66(acc),
            [109, 105, 115, 97, 116, 111] => lookup_863_154_67(acc),
            [115, 117, 103, 105, 116, 111] => lookup_863_154_68(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_158_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_158_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_158_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [117, 115, 101, 114] => lookup_863_158_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_158<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 101, 104, 105, 114, 110] => lookup_863_158_0(acc),
            [97, 115, 101, 105, 110, 101, 116] => lookup_863_158_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 105, 102, 117] => lookup_863_0(labels, acc),
            [228, 186, 172, 233, 131, 189] => lookup_863_1(acc),
            [231, 166, 143, 228, 186, 149] => lookup_863_2(acc),
            [233, 171, 152, 231, 159, 165] => lookup_863_3(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_863_4(acc),
            [120, 110, 45, 45, 48, 116, 114, 113, 55, 112, 55, 110, 110] => lookup_863_5(acc),
            [230, 132, 155, 229, 170, 155] => lookup_863_6(acc),
            [107, 97, 110, 97, 103, 97, 119, 97] => lookup_863_7(labels, acc),
            [229, 178, 144, 233, 152, 156] => lookup_863_8(acc),
            [120, 110, 45, 45, 53, 114, 116, 112, 52, 57, 99] => lookup_863_9(acc),
            [120, 110, 45, 45, 100, 106, 116, 121, 52, 107] => lookup_863_10(acc),
            [120, 110, 45, 45, 110, 116, 115, 113, 49, 55, 103] => lookup_863_11(acc),
            [111, 114] => lookup_863_12(acc),
            [102, 117, 107, 117, 115, 104, 105, 109, 97] => lookup_863_13(labels, acc),
            [231, 165, 158, 229, 165, 136, 229, 183, 157] => lookup_863_14(acc),
            [120, 110, 45, 45, 52, 112, 118, 120, 115] => lookup_863_15(acc),
            [99, 111] => lookup_863_16(acc),
            [111, 115, 97, 107, 97] => lookup_863_17(labels, acc),
            [109, 105, 101] => lookup_863_18(labels, acc),
            [99, 104, 105, 98, 97] => lookup_863_19(labels, acc),
            [109, 105, 121, 97, 103, 105] => lookup_863_20(labels, acc),
            [120, 110, 45, 45, 113, 113, 113, 116, 49, 49, 109] => lookup_863_21(acc),
            [229, 146, 140, 230, 173, 140, 229, 177, 177] => lookup_863_22(acc),
            [120, 110, 45, 45, 49, 99, 116, 119, 111] => lookup_863_23(acc),
            [102, 117, 107, 117, 111, 107, 97] => lookup_863_24(labels, acc),
            [116, 111, 107, 121, 111] => lookup_863_25(labels, acc),
            [104, 105, 114, 111, 115, 104, 105, 109, 97] => lookup_863_26(labels, acc),
            [120, 110, 45, 45, 114, 104, 116, 51, 100] => lookup_863_27(acc),
            [115, 97, 112, 112, 111, 114, 111] => lookup_863_28(info, labels, acc),
            [116, 111, 99, 104, 105, 103, 105] => lookup_863_29(labels, acc),
            [120, 110, 45, 45, 101, 104, 113, 122, 53, 54, 110] => lookup_863_30(acc),
            [229, 159, 188, 231, 142, 137] => lookup_863_31(acc),
            [107, 111, 98, 101] => lookup_863_32(info, labels, acc),
            [121, 97, 109, 97, 103, 117, 99, 104, 105] => lookup_863_33(labels, acc),
            [229, 165, 136, 232, 137, 175] => lookup_863_34(acc),
            [233, 166, 153, 229, 183, 157] => lookup_863_35(acc),
            [115, 104, 105, 109, 97, 110, 101] => lookup_863_36(labels, acc),
            [230, 160, 131, 230, 156, 168] => lookup_863_37(acc),
            [121, 97, 109, 97, 103, 97, 116, 97] => lookup_863_38(labels, acc),
            [120, 110, 45, 45, 53, 106, 115, 48, 52, 53, 100] => lookup_863_39(acc),
            [120, 110, 45, 45, 49, 108, 113, 115, 48, 51, 110] => lookup_863_40(acc),
            [230, 187, 139, 232, 179, 128] => lookup_863_41(acc),
            [231, 190, 164, 233, 166, 172] => lookup_863_42(acc),
            [231, 134, 138, 230, 156, 172] => lookup_863_43(acc),
            [233, 179, 165, 229, 143, 150] => lookup_863_44(acc),
            [233, 157, 146, 230, 163, 174] => lookup_863_45(acc),
            [110, 97, 114, 97] => lookup_863_46(labels, acc),
            [110, 97, 103, 97, 115, 97, 107, 105] => lookup_863_47(labels, acc),
            [229, 175, 140, 229, 177, 177] => lookup_863_48(acc),
            [229, 177, 177, 229, 189, 162] => lookup_863_49(acc),
            [120, 110, 45, 45, 117, 117, 119, 117, 53, 56, 97] => lookup_863_50(acc),
            [233, 149, 183, 233, 135, 142] => lookup_863_51(acc),
            [116, 111, 107, 117, 115, 104, 105, 109, 97] => lookup_863_52(labels, acc),
            [120, 110, 45, 45, 49, 108, 113, 115, 55, 49, 100] => lookup_863_53(acc),
            [107, 105, 116, 97, 107, 121, 117, 115, 104, 117] => lookup_863_54(info, labels, acc),
            [107, 111, 99, 104, 105] => lookup_863_55(labels, acc),
            [117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => lookup_863_56(acc),
            [120, 110, 45, 45, 53, 114, 116, 113, 51, 52, 107] => lookup_863_57(acc),
            [97, 99] => lookup_863_58(acc),
            [121, 111, 107, 111, 104, 97, 109, 97] => lookup_863_59(info, labels, acc),
            [120, 110, 45, 45, 114, 110, 121, 51, 49, 104] => lookup_863_60(acc),
            [229, 164, 167, 229, 136, 134] => lookup_863_61(acc),
            [233, 157, 153, 229, 178, 161] => lookup_863_62(acc),
            [120, 110, 45, 45, 101, 108, 113, 113, 49, 54, 104] => lookup_863_63(acc),
            [120, 110, 45, 45, 116, 111, 114, 49, 51, 49, 111] => lookup_863_64(acc),
            [120, 110, 45, 45, 101, 102, 118, 110, 57, 115] => lookup_863_65(acc),
            [107, 97, 119, 97, 115, 97, 107, 105] => lookup_863_66(info, labels, acc),
            [107, 121, 111, 116, 111] => lookup_863_67(labels, acc),
            [120, 110, 45, 45, 107, 108, 116, 112, 55, 100] => lookup_863_68(acc),
            [229, 178, 161, 229, 177, 177] => lookup_863_69(acc),
            [101, 100] => lookup_863_70(acc),
            [228, 189, 144, 232, 179, 128] => lookup_863_71(acc),
            [107, 117, 109, 97, 109, 111, 116, 111] => lookup_863_72(labels, acc),
            [119, 97, 107, 97, 121, 97, 109, 97] => lookup_863_73(labels, acc),
            [229, 174, 174, 229, 180, 142] => lookup_863_74(acc),
            [231, 167, 139, 231, 148, 176] => lookup_863_75(acc),
            [233, 149, 183, 229, 180, 142] => lookup_863_76(acc),
            [120, 110, 45, 45, 107, 98, 114, 113, 55, 111] => lookup_863_77(acc),
            [231, 159, 179, 229, 183, 157] => lookup_863_78(acc),
            [230, 132, 155, 231, 159, 165] => lookup_863_79(acc),
            [116, 111, 116, 116, 111, 114, 105] => lookup_863_80(labels, acc),
            [120, 110, 45, 45, 117, 105, 115, 116, 50, 50, 104] => lookup_863_81(acc),
            [97, 107, 105, 116, 97] => lookup_863_82(labels, acc),
            [110, 97, 103, 97, 110, 111] => lookup_863_83(labels, acc),
            [120, 110, 45, 45, 110, 116, 115, 111, 48, 105, 113, 120, 51, 97] => lookup_863_84(acc),
            [229, 133, 181, 229, 186, 171] => lookup_863_85(acc),
            [120, 110, 45, 45, 100, 106, 114, 115, 55, 50, 100, 54, 117, 121] => lookup_863_86(acc),
            [120, 110, 45, 45, 52, 105, 116, 49, 54, 56, 100] => lookup_863_87(acc),
            [120, 110, 45, 45, 55, 116, 48, 97, 50, 54, 52, 99] => lookup_863_88(acc),
            [229, 140, 151, 230, 181, 183, 233, 129, 147] => lookup_863_89(acc),
            [120, 110, 45, 45, 107, 108, 116, 121, 53, 120] => lookup_863_90(acc),
            [230, 150, 176, 230, 189, 159] => lookup_863_91(acc),
            [115, 104, 105, 103, 97] => lookup_863_92(labels, acc),
            [97, 111, 109, 111, 114, 105] => lookup_863_93(labels, acc),
            [231, 166, 143, 229, 179, 182] => lookup_863_94(acc),
            [232, 140, 168, 229, 159, 142] => lookup_863_95(acc),
            [229, 177, 177, 229, 143, 163] => lookup_863_96(acc),
            [229, 190, 179, 229, 179, 182] => lookup_863_97(acc),
            [229, 186, 131, 229, 179, 182] => lookup_863_98(acc),
            [115, 97, 103, 97] => lookup_863_99(labels, acc),
            [120, 110, 45, 45, 114, 104, 116, 54, 49, 101] => lookup_863_100(acc),
            [103, 111] => lookup_863_101(acc),
            [102, 117, 107, 117, 105] => lookup_863_102(labels, acc),
            [120, 110, 45, 45, 50, 109, 52, 97, 49, 53, 101] => lookup_863_103(acc),
            [105, 119, 97, 116, 101] => lookup_863_104(labels, acc),
            [109, 105, 121, 97, 122, 97, 107, 105] => lookup_863_105(labels, acc),
            [115, 104, 105, 122, 117, 111, 107, 97] => lookup_863_106(labels, acc),
            [120, 110, 45, 45, 54, 98, 116, 119, 53, 97] => lookup_863_107(acc),
            [120, 110, 45, 45, 110, 105, 116, 50, 50, 53, 107] => lookup_863_108(acc),
            [120, 110, 45, 45, 56, 112, 118, 114, 52, 117] => lookup_863_109(acc),
            [115, 101, 110, 100, 97, 105] => lookup_863_110(info, labels, acc),
            [120, 110, 45, 45, 107, 108, 116, 120, 57, 97] => lookup_863_111(acc),
            [120, 110, 45, 45, 56, 108, 116, 114, 54, 50, 107] => lookup_863_112(acc),
            [120, 110, 45, 45, 102, 54, 113, 120, 53, 51, 97] => lookup_863_113(acc),
            [103, 114] => lookup_863_114(acc),
            [228, 184, 137, 233, 135, 141] => lookup_863_115(acc),
            [229, 174, 174, 229, 159, 142] => lookup_863_116(acc),
            [229, 141, 131, 232, 145, 137] => lookup_863_117(acc),
            [120, 110, 45, 45, 122, 98, 120, 48, 50, 53, 100] => lookup_863_118(acc),
            [104, 121, 111, 103, 111] => lookup_863_119(labels, acc),
            [116, 111, 121, 97, 109, 97] => lookup_863_120(labels, acc),
            [231, 166, 143, 229, 178, 161] => lookup_863_121(acc),
            [120, 110, 45, 45, 107, 55, 121, 110, 57, 53, 101] => lookup_863_122(acc),
            [229, 177, 177, 230, 162, 168] => lookup_863_123(acc),
            [120, 110, 45, 45, 118, 103, 117, 52, 48, 50, 99] => lookup_863_124(acc),
            [111, 107, 105, 110, 97, 119, 97] => lookup_863_125(labels, acc),
            [97, 105, 99, 104, 105] => lookup_863_126(labels, acc),
            [120, 110, 45, 45, 51, 50, 118, 112, 51, 48, 104] => lookup_863_127(acc),
            [120, 110, 45, 45, 117, 105, 115, 122, 51, 103] => lookup_863_128(acc),
            [105, 98, 97, 114, 97, 107, 105] => lookup_863_129(labels, acc),
            [230, 157, 177, 228, 186, 172] => lookup_863_130(acc),
            [111, 105, 116, 97] => lookup_863_131(labels, acc),
            [107, 97, 103, 97, 119, 97] => lookup_863_132(labels, acc),
            [110, 105, 105, 103, 97, 116, 97] => lookup_863_133(labels, acc),
            [120, 110, 45, 45, 112, 115, 115, 117, 51, 51, 108] => lookup_863_134(acc),
            [230, 178, 150, 231, 184, 132] => lookup_863_135(acc),
            [105, 115, 104, 105, 107, 97, 119, 97] => lookup_863_136(labels, acc),
            [111, 107, 97, 121, 97, 109, 97] => lookup_863_137(labels, acc),
            [120, 110, 45, 45, 99, 51, 115, 49, 52, 109] => lookup_863_138(acc),
            [229, 178, 169, 230, 137, 139] => lookup_863_139(acc),
            [233, 185, 191, 229, 133, 144, 229, 179, 182] => lookup_863_140(acc),
            [104, 111, 107, 107, 97, 105, 100, 111] => lookup_863_141(labels, acc),
            [108, 103] => lookup_863_142(acc),
            [120, 110, 45, 45, 100, 53, 113, 118, 55, 122, 56, 55, 54, 99] => lookup_863_143(acc),
            [121, 97, 109, 97, 110, 97, 115, 104, 105] => lookup_863_144(labels, acc),
            [229, 179, 182, 230, 160, 185] => lookup_863_145(acc),
            [229, 164, 167, 233, 152, 170] => lookup_863_146(acc),
            [120, 110, 45, 45, 52, 105, 116, 55, 57, 55, 107] => lookup_863_147(acc),
            [107, 97, 103, 111, 115, 104, 105, 109, 97] => lookup_863_148(labels, acc),
            [101, 104, 105, 109, 101] => lookup_863_149(labels, acc),
            [110, 97, 103, 111, 121, 97] => lookup_863_150(info, labels, acc),
            [97, 100] => lookup_863_151(acc),
            [120, 110, 45, 45, 54, 111, 114, 120, 50, 114] => lookup_863_152(acc),
            [103, 117, 110, 109, 97] => lookup_863_153(labels, acc),
            [115, 97, 105, 116, 97, 109, 97] => lookup_863_154(labels, acc),
            [120, 110, 45, 45, 114, 104, 116, 50, 55, 122] => lookup_863_155(acc),
            [120, 110, 45, 45, 107, 108, 116, 55, 56, 55, 100] => lookup_863_156(acc),
            [120, 110, 45, 45, 109, 107, 114, 117, 52, 53, 105] => lookup_863_157(acc),
            [110, 101] => lookup_863_158(labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_864() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_865() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_866() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_867_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_867_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_867_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_867_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_867_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_867_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_867_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_867_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_867_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_867_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_867_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_867_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_867_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_867_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_867_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_867_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_867_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_867<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 111, 114, 101] => lookup_867_0(acc),
            [119, 101, 98] => lookup_867_1(acc),
            [105, 110, 102, 111] => lookup_867_2(acc),
            [114, 101, 99] => lookup_867_3(acc),
            [99, 111, 109] => lookup_867_4(acc),
            [116, 101, 99] => lookup_867_5(acc),
            [97, 114, 116, 115] => lookup_867_6(acc),
            [101, 100, 117] => lookup_867_7(acc),
            [102, 105, 114, 109] => lookup_867_8(acc),
            [110, 101, 116] => lookup_867_9(acc),
            [111, 114, 103] => lookup_867_10(acc),
            [99, 111] => lookup_867_11(acc),
            [109, 105, 108] => lookup_867_12(acc),
            [103, 111, 118] => lookup_867_13(acc),
            [105, 110, 116] => lookup_867_14(acc),
            [103, 111, 98] => lookup_867_15(acc),
            [101, 49, 50] => lookup_867_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_868() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_869_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_869_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_869_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_869_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_869_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_869<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_869_0(acc),
            [110, 121, 109] => lookup_869_1(acc),
            [103, 111, 118] => lookup_869_2(acc),
            [101, 100, 117] => lookup_869_3(acc),
            [110, 121, 99] => lookup_869_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_870() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_871() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_873() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_874() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_875() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_876() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_877() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_879() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_880() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_881() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_882() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_883_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_883<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_883_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_884() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_885() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_886() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_887() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_888() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_889() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_890() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_891() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_892() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_893() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_894() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_895() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_896() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_897_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_897<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 111, 114] => lookup_897_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_898() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_899() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_900_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_900_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_900_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_900_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_900_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_900<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_900_0(acc),
            [103, 111, 118] => lookup_900_1(acc),
            [101, 100, 117] => lookup_900_2(acc),
            [99, 111, 109] => lookup_900_3(acc),
            [109, 105, 108] => lookup_900_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_901() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_903() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_905_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_905_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_905_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_905_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_905_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_905_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_905_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_905_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_905<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 117, 112, 99, 97, 107, 101] => lookup_905_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_905_1(acc),
            [101, 100, 117] => lookup_905_2(acc),
            [110, 101, 116] => lookup_905_3(acc),
            [111, 114, 103] => lookup_905_4(acc),
            [99, 111, 109] => lookup_905_5(acc),
            [103, 111, 118] => lookup_905_6(acc),
            [105, 110, 116] => lookup_905_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_906() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_907() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_909() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_910() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_911() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_912() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_913() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_914() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_915() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_916() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_917_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_917<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_917_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_918() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_920() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_921() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_922() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_923() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_924() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 23usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_925_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_76_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_925_76<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [106, 99] => lookup_925_76_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_925_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_925_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_925_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_158(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_162(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_163(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_164(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_165(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_166(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_167(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_168(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_169(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_170(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_171(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_172(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_173(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_174(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_175(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_176(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_177(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_178(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_179(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_180(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_181(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_182(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_183(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_184(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_185(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_186(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_187(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_188(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_189(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_190(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_191(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_192(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_193(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_194(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_195(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_196(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_197(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_198(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_199(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_200(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_201(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_202(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_203(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_204(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_205(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_206(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_207(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_208(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_209(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_210(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_211(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_212(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_213(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_214(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_215(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_216(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_217(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_218(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_219(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_220(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_221(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_222(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_223(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_224(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_225(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_226(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_227(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_228(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_229(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_230(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_231(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_232(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_233(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_234(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_235(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_236(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_237(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_238(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_239(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_240(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_241(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_242(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_243(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_244(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_245(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_246(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_247(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_248(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_249(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_250(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_251(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_252(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_253(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_254(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_255(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_256(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_257(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_258(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_259(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_260(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_261(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_262(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_263(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_264(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_265(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_266(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_267(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_268(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_269(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_270(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_271(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_272(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_273(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_274(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_275(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_276(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_277(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_278(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_279(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_280(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_281(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_282(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_283(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_284(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_285(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_286(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_287(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_288(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_289(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_290(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_291(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_292(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_293(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_294(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_295(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_296(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_297(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_298(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_299(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_300(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_301(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_302(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_303(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_304(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_305(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_306(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_307(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_308(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_309(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_310(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_311(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_312(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_313(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_314(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_315(acc: usize) -> Info {
    Info {
        len: acc + 1 + 24usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_316(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_317(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_318(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_319(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_320(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_321(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_322(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_323(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_324_0_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_925_324_0_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_925_324_0_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_925_324_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_925_324_0_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_925_324<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [111, 112, 101, 110] => lookup_925_324_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_925_325(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_326(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_327(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_328(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_329(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_330(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_331(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_332(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_333(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_334(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_335(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_336(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_337(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_338(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_339(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_340(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_341(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_342(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_925_343(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_344(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_345(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_346(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_347(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_348(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_349(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_350(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_351(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_352(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_353(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_354(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_355(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_356(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_357(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_358(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_359(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_360(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_361(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_362(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_363(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_364(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_365(acc: usize) -> Info {
    Info {
        len: acc + 1 + 24usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_366(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_367(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_368(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_369(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_370(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_371(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_372(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_373(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_374(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_375(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_376(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_377(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_378(acc: usize) -> Info {
    Info {
        len: acc + 1 + 25usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_379(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_380(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_381(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_382(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_383(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_384(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_385(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_386(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_387(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_388(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_389(acc: usize) -> Info {
    Info {
        len: acc + 1 + 23usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_390(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_391(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_392(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_393(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_394(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_395(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_396(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_397(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_398(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_399(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_400(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_401(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_402(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_403(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_404(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_405(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_406(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_407(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_408(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_409(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_410(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_411(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_412(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_413(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_414(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_415(acc: usize) -> Info {
    Info {
        len: acc + 1 + 23usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_416(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_417(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_418(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_419(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_420(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_421(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_422(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_423(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_424(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_925_425(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_426(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_427(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_428(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_429(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_430(acc: usize) -> Info {
    Info {
        len: acc + 1 + 24usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_431(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_432(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 97, 114] => lookup_925_0(acc),
            [105, 103, 108, 101, 115, 105, 97, 115, 45, 99, 97, 114, 98, 111, 110, 105, 97] => {
                lookup_925_1(acc)
            }
            [97, 112] => lookup_925_2(acc),
            [111, 108, 98, 105, 97, 45, 116, 101, 109, 112, 105, 111] => lookup_925_3(acc),
            [112, 99] => lookup_925_4(acc),
            [97, 113] => lookup_925_5(acc),
            [112, 101, 115, 99, 97, 114, 97] => lookup_925_6(acc),
            [108, 105, 103] => lookup_925_7(acc),
            [102, 118, 103] => lookup_925_8(acc),
            [97, 103, 114, 105, 103, 101, 110, 116, 111] => lookup_925_9(acc),
            [97, 108, 116, 111, 97, 100, 105, 103, 101] => lookup_925_10(acc),
            [97, 114] => lookup_925_11(acc),
            [98, 117, 108, 115, 97, 110] => lookup_925_12(acc),
            [98, 105, 101, 108, 108, 97] => lookup_925_13(acc),
            [98, 122] => lookup_925_14(acc),
            [112, 97, 118, 105, 97] => lookup_925_15(acc),
            [112, 101] => lookup_925_16(acc),
            [114, 103] => lookup_925_17(acc),
            [111, 114] => lookup_925_18(acc),
            [118, 97, 108, 45, 100, 45, 97, 111, 115, 116, 97] => lookup_925_19(acc),
            [115, 105] => lookup_925_20(acc),
            [117, 100] => lookup_925_21(acc),
            [108, 117, 99, 97, 110, 105, 97] => lookup_925_22(acc),
            [99, 111] => lookup_925_23(acc),
            [98, 111, 122, 101, 110, 45, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_925_24(acc)
            }
            [118, 97, 108, 100, 45, 97, 111, 115, 116, 97] => lookup_925_25(acc),
            [99, 111, 109, 111] => lookup_925_26(acc),
            [98, 97, 108, 115, 97, 110, 45, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_925_27(acc)
            }
            [101, 110] => lookup_925_28(acc),
            [107, 114] => lookup_925_29(acc),
            [103, 101, 110, 111, 118, 97] => lookup_925_30(acc),
            [109, 115] => lookup_925_31(acc),
            [98, 101, 108, 108, 117, 110, 111] => lookup_925_32(acc),
            [112, 110] => lookup_925_33(acc),
            [109, 110] => lookup_925_34(acc),
            [111, 103] => lookup_925_35(acc),
            [115, 105, 114, 97, 99, 117, 115, 97] => lookup_925_36(acc),
            [108, 101, 99, 99, 111] => lookup_925_37(acc),
            [118, 101] => lookup_925_38(acc),
            [118, 101, 114, 98, 97, 110, 105, 97] => lookup_925_39(acc),
            [97, 111, 115, 116, 97, 118, 97, 108, 108, 101, 121] => lookup_925_40(acc),
            [99, 97, 116, 97, 110, 122, 97, 114, 111] => lookup_925_41(acc),
            [103, 111, 114, 105, 122, 105, 97] => lookup_925_42(acc),
            [112, 111, 116, 101, 110, 122, 97] => lookup_925_43(acc),
            [118, 97, 108, 108, 195, 169, 101, 97, 111, 115, 116, 101] => lookup_925_44(acc),
            [102, 114, 105, 117, 108, 105, 45, 118, 101, 110, 101, 122, 105, 97, 103, 105, 117, 108, 105, 97] => {
                lookup_925_45(acc)
            }
            [98, 111, 108, 122, 97, 110, 111, 45, 97, 108, 116, 111, 97, 100, 105, 103, 101] => {
                lookup_925_46(acc)
            }
            [118, 97, 108, 108, 195, 169, 101, 45, 97, 111, 115, 116, 101] => lookup_925_47(acc),
            [99, 110] => lookup_925_48(acc),
            [112, 103] => lookup_925_49(acc),
            [118, 98] => lookup_925_50(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 116, 105, 114, 111, 108] => {
                lookup_925_51(acc)
            }
            [118, 97, 111] => lookup_925_52(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 97, 97, 100, 105, 103, 101] => {
                lookup_925_53(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 115, 100, 45, 116, 105, 114, 111, 108, 45, 54, 118, 98] => {
                lookup_925_54(acc)
            }
            [118, 97, 108, 45, 100, 97, 111, 115, 116, 97] => lookup_925_55(acc),
            [98, 110] => lookup_925_56(acc),
            [99, 97, 116, 97, 110, 105, 97] => lookup_925_57(acc),
            [108, 97, 115, 112, 101, 122, 105, 97] => lookup_925_58(acc),
            [115, 117, 101, 100, 116, 105, 114, 111, 108] => lookup_925_59(acc),
            [116, 114, 101, 110, 116, 105, 110, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_925_60(acc)
            }
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_925_61(acc),
            [116, 112] => lookup_925_62(acc),
            [112, 117, 103, 108, 105, 97] => lookup_925_63(acc),
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_925_64(acc)
            }
            [98, 97, 114, 108, 101, 116, 116, 97, 116, 114, 97, 110, 105, 97, 110, 100, 114, 105, 97] => {
                lookup_925_65(acc)
            }
            [116, 111, 114, 105, 110, 111] => lookup_925_66(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 45, 116, 105, 114, 111, 108] => {
                lookup_925_67(acc)
            }
            [105, 115] => lookup_925_68(acc),
            [117, 100, 105, 110, 101] => lookup_925_69(acc),
            [118, 97] => lookup_925_70(acc),
            [108, 111, 109, 98, 97, 114, 100, 121] => lookup_925_71(acc),
            [109, 101, 100, 105, 111, 99, 97, 109, 112, 105, 100, 97, 110, 111] => {
                lookup_925_72(acc)
            }
            [117, 109, 98, 114, 105, 97] => lookup_925_73(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 117, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_925_74(acc)
            }
            [98, 117, 108, 115, 97, 110, 45, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_925_75(acc)
            }
            [110, 101, 101, 110] => lookup_925_76(info, labels, acc),
            [118, 97, 108, 108, 101, 101, 45, 100, 45, 97, 111, 115, 116, 101] => {
                lookup_925_77(acc)
            }
            [102, 101, 114, 109, 111] => lookup_925_78(acc),
            [97, 111, 115, 116, 97, 45, 118, 97, 108, 108, 101, 121] => lookup_925_79(acc),
            [116, 101] => lookup_925_80(acc),
            [109, 111, 108] => lookup_925_81(acc),
            [114, 101, 103, 103, 105, 111, 45, 99, 97, 108, 97, 98, 114, 105, 97] => {
                lookup_925_82(acc)
            }
            [102, 114, 105, 117, 108, 105, 45, 118, 103, 105, 117, 108, 105, 97] => {
                lookup_925_83(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 195, 188, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_925_84(acc)
            }
            [54, 52, 45, 98] => lookup_925_85(acc),
            [108, 111, 109, 98, 97, 114, 100, 105, 97] => lookup_925_86(acc),
            [118, 97, 108, 108, 101, 101, 97, 111, 115, 116, 101] => lookup_925_87(acc),
            [108, 105, 118, 111, 114, 110, 111] => lookup_925_88(acc),
            [98, 103] => lookup_925_89(acc),
            [114, 105] => lookup_925_90(acc),
            [114, 105, 101, 116, 105] => lookup_925_91(acc),
            [120, 110, 45, 45, 118, 97, 108, 108, 101, 97, 111, 115, 116, 101, 45, 101, 55, 97] => {
                lookup_925_92(acc)
            }
            [101, 109, 105, 108, 105, 97, 45, 114, 111, 109, 97, 103, 110, 97] => {
                lookup_925_93(acc)
            }
            [102, 114, 105, 117, 108, 105, 118, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_925_94(acc)
            }
            [97, 110, 100, 114, 105, 97, 116, 114, 97, 110, 105, 98, 97, 114, 108, 101, 116, 116, 97] => {
                lookup_925_95(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_925_96(acc)
            }
            [116, 97, 97] => lookup_925_97(acc),
            [98, 111, 122, 101, 110] => lookup_925_98(acc),
            [99, 114, 111, 116, 111, 110, 101] => lookup_925_99(acc),
            [109, 97, 115, 115, 97, 99, 97, 114, 114, 97, 114, 97] => lookup_925_100(acc),
            [112, 114] => lookup_925_101(acc),
            [116, 114, 101, 110, 116, 111] => lookup_925_102(acc),
            [117, 114, 98, 105, 110, 111, 45, 112, 101, 115, 97, 114, 111] => lookup_925_103(acc),
            [98, 114, 101, 115, 99, 105, 97] => lookup_925_104(acc),
            [99, 101] => lookup_925_105(acc),
            [109, 111] => lookup_925_106(acc),
            [109, 111, 100, 101, 110, 97] => lookup_925_107(acc),
            [112, 97, 100, 111, 118, 97] => lookup_925_108(acc),
            [116, 97, 114, 97, 110, 116, 111] => lookup_925_109(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_925_110(acc)
            }
            [117, 109, 98] => lookup_925_111(acc),
            [99, 97] => lookup_925_112(acc),
            [98, 115] => lookup_925_113(acc),
            [99, 104] => lookup_925_114(acc),
            [120, 110, 45, 45, 115, 100, 116, 105, 114, 111, 108, 45, 110, 50, 97] => {
                lookup_925_115(acc)
            }
            [118, 101, 110, 101, 116, 111] => lookup_925_116(acc),
            [118, 105, 98, 111, 118, 97, 108, 101, 110, 116, 105, 97] => lookup_925_117(acc),
            [120, 110, 45, 45, 98, 117, 108, 115, 97, 110, 45, 115, 100, 116, 105, 114, 111, 108, 45, 110, 115, 98] => {
                lookup_925_118(acc)
            }
            [98, 105] => lookup_925_119(acc),
            [97, 110, 100, 114, 105, 97, 45, 116, 114, 97, 110, 105, 45, 98, 97, 114, 108, 101, 116, 116, 97] => {
                lookup_925_120(acc)
            }
            [102, 111, 114, 108, 195, 172, 99, 101, 115, 101, 110, 97] => lookup_925_121(acc),
            [103, 101, 110, 111, 97] => lookup_925_122(acc),
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 117, 101, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_925_123(acc)
            }
            [97, 111] => lookup_925_124(acc),
            [98, 111, 122, 101, 110, 45, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_925_125(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_925_126(acc)
            }
            [99, 97, 109, 112, 105, 100, 97, 110, 111, 109, 101, 100, 105, 111] => {
                lookup_925_127(acc)
            }
            [99, 101, 115, 101, 110, 97, 102, 111, 114, 108, 195, 172] => lookup_925_128(acc),
            [100, 101, 108, 108, 45, 111, 103, 108, 105, 97, 115, 116, 114, 97] => {
                lookup_925_129(acc)
            }
            [112, 97, 100, 117, 97] => lookup_925_130(acc),
            [115, 97, 118, 111, 110, 97] => lookup_925_131(acc),
            [103, 111] => lookup_925_132(acc),
            [115, 115] => lookup_925_133(acc),
            [116, 97] => lookup_925_134(acc),
            [118, 105] => lookup_925_135(acc),
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 117, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_925_136(acc)
            }
            [120, 110, 45, 45, 118, 97, 108, 108, 101, 45, 97, 111, 115, 116, 101, 45, 101, 98, 98] => {
                lookup_925_137(acc)
            }
            [97, 110, 100, 114, 105, 97, 45, 98, 97, 114, 108, 101, 116, 116, 97, 45, 116, 114, 97, 110, 105] => {
                lookup_925_138(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 115, 100, 116, 105, 114, 111, 108, 45, 110, 115, 98] => {
                lookup_925_139(acc)
            }
            [102, 114, 105, 117, 108, 105, 45, 118, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_925_140(acc)
            }
            [102, 101] => lookup_925_141(acc),
            [108, 111, 100, 105] => lookup_925_142(acc),
            [115, 195, 188, 100, 116, 105, 114, 111, 108] => lookup_925_143(acc),
            [116, 110] => lookup_925_144(acc),
            [116, 114, 97, 112, 97, 110, 105] => lookup_925_145(acc),
            [51, 50, 45, 98] => lookup_925_146(acc),
            [97, 103] => lookup_925_147(acc),
            [118, 101, 114, 99, 101, 108, 108, 105] => lookup_925_148(acc),
            [115, 105, 99] => lookup_925_149(acc),
            [110, 117, 111, 114, 111] => lookup_925_150(acc),
            [100, 101, 108, 108, 111, 103, 108, 105, 97, 115, 116, 114, 97] => lookup_925_151(acc),
            [99, 97, 108] => lookup_925_152(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_925_153(acc)
            }
            [118, 97, 108, 108, 101, 101, 100, 97, 111, 115, 116, 101] => lookup_925_154(acc),
            [120, 110, 45, 45, 102, 111, 114, 108, 99, 101, 115, 101, 110, 97, 45, 99, 56, 97] => {
                lookup_925_155(acc)
            }
            [114, 97] => lookup_925_156(acc),
            [99, 97, 114, 114, 97, 114, 97, 45, 109, 97, 115, 115, 97] => lookup_925_157(acc),
            [118, 101, 110, 101, 122, 105, 97] => lookup_925_158(acc),
            [115, 105, 99, 105, 108, 105, 97] => lookup_925_159(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_925_160(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_925_161(acc)
            }
            [97, 108] => lookup_925_162(acc),
            [116, 118] => lookup_925_163(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 117, 101, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_925_164(acc)
            }
            [102, 111, 114, 108, 105, 45, 99, 101, 115, 101, 110, 97] => lookup_925_165(acc),
            [102, 111, 103, 103, 105, 97] => lookup_925_166(acc),
            [98, 97] => lookup_925_167(acc),
            [109, 97, 110, 116, 111, 118, 97] => lookup_925_168(acc),
            [112, 105, 97, 99, 101, 110, 122, 97] => lookup_925_169(acc),
            [118, 114] => lookup_925_170(acc),
            [97, 114, 101, 122, 122, 111] => lookup_925_171(acc),
            [102, 114] => lookup_925_172(acc),
            [118, 100, 97] => lookup_925_173(acc),
            [108, 111, 109] => lookup_925_174(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 97, 108, 116, 111, 97, 100, 105, 103, 101] => {
                lookup_925_175(acc)
            }
            [98, 111] => lookup_925_176(acc),
            [109, 111, 108, 105, 115, 101] => lookup_925_177(acc),
            [98, 108] => lookup_925_178(acc),
            [108, 117, 99, 99, 97] => lookup_925_179(acc),
            [118, 97, 108, 108, 195, 169, 101, 100, 97, 111, 115, 116, 101] => lookup_925_180(acc),
            [109, 101, 100, 105, 111, 45, 99, 97, 109, 112, 105, 100, 97, 110, 111] => {
                lookup_925_181(acc)
            }
            [99, 104, 105, 101, 116, 105] => lookup_925_182(acc),
            [111, 108, 98, 105, 97, 116, 101, 109, 112, 105, 111] => lookup_925_183(acc),
            [108, 116] => lookup_925_184(acc),
            [112, 97] => lookup_925_185(acc),
            [112, 105] => lookup_925_186(acc),
            [114, 97, 118, 101, 110, 110, 97] => lookup_925_187(acc),
            [116, 114, 97, 110, 105, 45, 97, 110, 100, 114, 105, 97, 45, 98, 97, 114, 108, 101, 116, 116, 97] => {
                lookup_925_188(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_925_189(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 117, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_925_190(acc)
            }
            [116, 114, 97, 110, 105, 97, 110, 100, 114, 105, 97, 98, 97, 114, 108, 101, 116, 116, 97] => {
                lookup_925_191(acc)
            }
            [97, 111, 115, 116, 97] => lookup_925_192(acc),
            [98, 117, 108, 115, 97, 110, 45, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_925_193(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 97, 45, 97, 100, 105, 103, 101] => {
                lookup_925_194(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 115, 117, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_925_195(acc)
            }
            [97, 115, 99, 111, 108, 105, 112, 105, 99, 101, 110, 111] => lookup_925_196(acc),
            [114, 101, 103, 103, 105, 111, 45, 101, 109, 105, 108, 105, 97] => lookup_925_197(acc),
            [97, 113, 117, 105, 108, 97] => lookup_925_198(acc),
            [112, 105, 115, 97] => lookup_925_199(acc),
            [115, 112] => lookup_925_200(acc),
            [102, 114, 105, 117, 108, 105, 118, 101, 103, 105, 117, 108, 105, 97] => {
                lookup_925_201(acc)
            }
            [120, 110, 45, 45, 99, 101, 115, 101, 110, 97, 102, 111, 114, 108, 45, 105, 56, 97] => {
                lookup_925_202(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_925_203(acc)
            }
            [109, 97, 116, 101, 114, 97] => lookup_925_204(acc),
            [103, 114, 111, 115, 115, 101, 116, 111] => lookup_925_205(acc),
            [98, 114] => lookup_925_206(acc),
            [97, 98, 114] => lookup_925_207(acc),
            [97, 110, 99, 111, 110, 97] => lookup_925_208(acc),
            [120, 110, 45, 45, 99, 101, 115, 101, 110, 97, 45, 102, 111, 114, 108, 45, 109, 99, 98] => {
                lookup_925_209(acc)
            }
            [110, 117] => lookup_925_210(acc),
            [109, 111, 110, 122, 97, 45, 101, 45, 100, 101, 108, 108, 97, 45, 98, 114, 105, 97, 110, 122, 97] => {
                lookup_925_211(acc)
            }
            [115, 97, 115, 115, 97, 114, 105] => lookup_925_212(acc),
            [99, 97, 115, 101, 114, 116, 97] => lookup_925_213(acc),
            [103, 101] => lookup_925_214(acc),
            [112, 111] => lookup_925_215(acc),
            [112, 117, 103] => lookup_925_216(acc),
            [102, 101, 114, 114, 97, 114, 97] => lookup_925_217(acc),
            [102, 111, 114, 108, 105, 99, 101, 115, 101, 110, 97] => lookup_925_218(acc),
            [99, 97, 109, 112, 105, 100, 97, 110, 111, 45, 109, 101, 100, 105, 111] => {
                lookup_925_219(acc)
            }
            [114, 111, 109, 97] => lookup_925_220(acc),
            [114, 111, 109, 101] => lookup_925_221(acc),
            [116, 101, 114, 97, 109, 111] => lookup_925_222(acc),
            [118, 97, 108, 108, 195, 169, 101, 45, 100, 45, 97, 111, 115, 116, 101] => {
                lookup_925_223(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 45, 116, 105, 114, 111, 108] => {
                lookup_925_224(acc)
            }
            [97, 118] => lookup_925_225(acc),
            [109, 111, 110, 122, 97, 101, 100, 101, 108, 108, 97, 98, 114, 105, 97, 110, 122, 97] => {
                lookup_925_226(acc)
            }
            [108, 97, 122] => lookup_925_227(acc),
            [118, 97, 108, 108, 101, 97, 111, 115, 116, 97] => lookup_925_228(acc),
            [116, 117, 114, 105, 110] => lookup_925_229(acc),
            [118, 116] => lookup_925_230(acc),
            [101, 100, 117] => lookup_925_231(acc),
            [102, 114, 105, 117, 108, 105, 45, 118, 101, 103, 105, 117, 108, 105, 97] => {
                lookup_925_232(acc)
            }
            [112, 105, 101, 100, 109, 111, 110, 116] => lookup_925_233(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 97, 108, 116, 111, 45, 97, 100, 105, 103, 101] => {
                lookup_925_234(acc)
            }
            [98, 97, 108, 115, 97, 110] => lookup_925_235(acc),
            [118, 97, 108, 108, 101, 45, 100, 97, 111, 115, 116, 97] => lookup_925_236(acc),
            [109, 98] => lookup_925_237(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 97, 97, 100, 105, 103, 101] => {
                lookup_925_238(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_925_239(acc)
            }
            [109, 111, 110, 122, 97, 45, 98, 114, 105, 97, 110, 122, 97] => lookup_925_240(acc),
            [115, 105, 99, 105, 108, 121] => lookup_925_241(acc),
            [120, 110, 45, 45, 118, 97, 108, 108, 101, 100, 97, 111, 115, 116, 101, 45, 101, 98, 98] => {
                lookup_925_242(acc)
            }
            [97, 111, 115, 116, 101] => lookup_925_243(acc),
            [97, 116] => lookup_925_244(acc),
            [98, 111, 108, 111, 103, 110, 97] => lookup_925_245(acc),
            [98, 117, 108, 115, 97, 110, 45, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_925_246(acc)
            }
            [108, 117] => lookup_925_247(acc),
            [109, 105] => lookup_925_248(acc),
            [115, 97, 114, 100, 105, 110, 105, 97] => lookup_925_249(acc),
            [105, 103, 108, 101, 115, 105, 97, 115, 99, 97, 114, 98, 111, 110, 105, 97] => {
                lookup_925_250(acc)
            }
            [109, 101] => lookup_925_251(acc),
            [99, 97, 103, 108, 105, 97, 114, 105] => lookup_925_252(acc),
            [111, 114, 105, 115, 116, 97, 110, 111] => lookup_925_253(acc),
            [98, 97, 115] => lookup_925_254(acc),
            [111, 116] => lookup_925_255(acc),
            [112, 97, 108, 101, 114, 109, 111] => lookup_925_256(acc),
            [102, 109] => lookup_925_257(acc),
            [99, 105] => lookup_925_258(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 117, 101, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_925_259(acc)
            }
            [118, 97, 108, 108, 101, 101, 45, 97, 111, 115, 116, 101] => lookup_925_260(acc),
            [116, 114, 101, 110, 116, 105, 110, 115, 117, 101, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_925_261(acc)
            }
            [102, 105, 114, 101, 110, 122, 101] => lookup_925_262(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 97, 108, 116, 111, 97, 100, 105, 103, 101] => {
                lookup_925_263(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 115, 195, 188, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_925_264(acc)
            }
            [108, 97, 122, 105, 111] => lookup_925_265(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 195, 188, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_925_266(acc)
            }
            [109, 99] => lookup_925_267(acc),
            [109, 111, 110, 122, 97, 101, 98, 114, 105, 97, 110, 122, 97] => lookup_925_268(acc),
            [98, 97, 115, 105, 108, 105, 99, 97, 116, 97] => lookup_925_269(acc),
            [112, 114, 97, 116, 111] => lookup_925_270(acc),
            [98, 97, 114, 105] => lookup_925_271(acc),
            [114, 109] => lookup_925_272(acc),
            [114, 111] => lookup_925_273(acc),
            [98, 101, 114, 103, 97, 109, 111] => lookup_925_274(acc),
            [115, 111, 110, 100, 114, 105, 111] => lookup_925_275(acc),
            [116, 114, 97, 110, 105, 98, 97, 114, 108, 101, 116, 116, 97, 97, 110, 100, 114, 105, 97] => {
                lookup_925_276(acc)
            }
            [102, 114, 105, 117, 108, 105, 118, 101, 110, 101, 122, 105, 97, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_925_277(acc)
            }
            [98, 114, 105, 110, 100, 105, 115, 105] => lookup_925_278(acc),
            [98, 97, 108, 115, 97, 110, 45, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_925_279(acc)
            }
            [120, 110, 45, 45, 98, 111, 122, 101, 110, 45, 115, 100, 116, 105, 114, 111, 108, 45, 50, 111, 98] => {
                lookup_925_280(acc)
            }
            [99, 101, 115, 101, 110, 97, 45, 102, 111, 114, 108, 195, 172] => lookup_925_281(acc),
            [115, 97, 108, 101, 114, 110, 111] => lookup_925_282(acc),
            [115, 114] => lookup_925_283(acc),
            [116, 101, 114, 110, 105] => lookup_925_284(acc),
            [118, 101, 114, 111, 110, 97] => lookup_925_285(acc),
            [99, 97, 114, 98, 111, 110, 105, 97, 105, 103, 108, 101, 115, 105, 97, 115] => {
                lookup_925_286(acc)
            }
            [109, 97, 114] => lookup_925_287(acc),
            [101, 109, 114] => lookup_925_288(acc),
            [118, 101, 110] => lookup_925_289(acc),
            [99, 97, 114, 98, 111, 110, 105, 97, 45, 105, 103, 108, 101, 115, 105, 97, 115] => {
                lookup_925_290(acc)
            }
            [118, 97, 108, 108, 101, 100, 45, 97, 111, 115, 116, 97] => lookup_925_291(acc),
            [99, 111, 115, 101, 110, 122, 97] => lookup_925_292(acc),
            [108, 97, 113, 117, 105, 108, 97] => lookup_925_293(acc),
            [112, 111, 114, 100, 101, 110, 111, 110, 101] => lookup_925_294(acc),
            [112, 105, 115, 116, 111, 105, 97] => lookup_925_295(acc),
            [114, 99] => lookup_925_296(acc),
            [114, 101, 103, 103, 105, 111, 101, 109, 105, 108, 105, 97] => lookup_925_297(acc),
            [102, 114, 105, 117, 108, 105, 45, 118, 101, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_925_298(acc)
            }
            [102, 114, 105, 117, 108, 105, 45, 118, 101, 110, 101, 122, 105, 97, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_925_299(acc)
            }
            [116, 117, 115, 99, 97, 110, 121] => lookup_925_300(acc),
            [98, 97, 114, 108, 101, 116, 116, 97, 45, 116, 114, 97, 110, 105, 45, 97, 110, 100, 114, 105, 97] => {
                lookup_925_301(acc)
            }
            [98, 101, 110, 101, 118, 101, 110, 116, 111] => lookup_925_302(acc),
            [99, 122] => lookup_925_303(acc),
            [98, 116] => lookup_925_304(acc),
            [109, 97, 99, 101, 114, 97, 116, 97] => lookup_925_305(acc),
            [110, 97, 112, 108, 101, 115] => lookup_925_306(acc),
            [112, 101, 115, 97, 114, 111, 117, 114, 98, 105, 110, 111] => lookup_925_307(acc),
            [99, 97, 108, 116, 97, 110, 105, 115, 115, 101, 116, 116, 97] => lookup_925_308(acc),
            [112, 116] => lookup_925_309(acc),
            [115, 105, 101, 110, 97] => lookup_925_310(acc),
            [116, 114, 97, 110, 105, 45, 98, 97, 114, 108, 101, 116, 116, 97, 45, 97, 110, 100, 114, 105, 97] => {
                lookup_925_311(acc)
            }
            [99, 101, 115, 101, 110, 97, 102, 111, 114, 108, 105] => lookup_925_312(acc),
            [101, 109, 105, 108, 105, 97, 114, 111, 109, 97, 103, 110, 97] => lookup_925_313(acc),
            [97, 115, 99, 111, 108, 105, 45, 112, 105, 99, 101, 110, 111] => lookup_925_314(acc),
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 45, 115, 100, 45, 116, 105, 114, 111, 108, 45, 114, 122, 98] => {
                lookup_925_315(acc)
            }
            [99, 97, 109, 112, 97, 110, 105, 97] => lookup_925_316(acc),
            [102, 111, 114, 108, 195, 172, 45, 99, 101, 115, 101, 110, 97] => lookup_925_317(acc),
            [114, 101, 103, 103, 105, 111, 99, 97, 108, 97, 98, 114, 105, 97] => {
                lookup_925_318(acc)
            }
            [97, 98, 114, 117, 122, 122, 111] => lookup_925_319(acc),
            [117, 114, 98, 105, 110, 111, 112, 101, 115, 97, 114, 111] => lookup_925_320(acc),
            [118, 97, 114, 101, 115, 101] => lookup_925_321(acc),
            [118, 97, 108, 100, 97, 111, 115, 116, 97] => lookup_925_322(acc),
            [118, 99] => lookup_925_323(acc),
            [116, 105, 109] => lookup_925_324(info, labels, acc),
            [116, 115] => lookup_925_325(acc),
            [118, 97, 108, 108, 101, 100, 97, 111, 115, 116, 97] => lookup_925_326(acc),
            [98, 111, 122, 101, 110, 45, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_925_327(acc)
            }
            [108, 99] => lookup_925_328(acc),
            [105, 115, 101, 114, 110, 105, 97] => lookup_925_329(acc),
            [118, 115] => lookup_925_330(acc),
            [118, 118] => lookup_925_331(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 195, 188, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_925_332(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_925_333(acc)
            }
            [99, 101, 115, 101, 110, 97, 45, 102, 111, 114, 108, 105] => lookup_925_334(acc),
            [115, 97, 114, 100, 101, 103, 110, 97] => lookup_925_335(acc),
            [116, 114, 101, 110, 116, 105, 110, 111] => lookup_925_336(acc),
            [99, 98] => lookup_925_337(acc),
            [102, 108, 111, 114, 101, 110, 99, 101] => lookup_925_338(acc),
            [118, 97, 108, 108, 101, 45, 97, 111, 115, 116, 97] => lookup_925_339(acc),
            [99, 97, 109, 112, 111, 98, 97, 115, 115, 111] => lookup_925_340(acc),
            [105, 109, 112, 101, 114, 105, 97] => lookup_925_341(acc),
            [115, 121, 110, 99, 108, 111, 117, 100] => lookup_925_342(acc),
            [102, 114, 105, 117, 108, 105, 118, 103, 105, 117, 108, 105, 97] => lookup_925_343(acc),
            [110, 97] => lookup_925_344(acc),
            [112, 97, 114, 109, 97] => lookup_925_345(acc),
            [114, 110] => lookup_925_346(acc),
            [99, 117, 110, 101, 111] => lookup_925_347(acc),
            [99, 116] => lookup_925_348(acc),
            [99, 114] => lookup_925_349(acc),
            [97, 108, 116, 111, 45, 97, 100, 105, 103, 101] => lookup_925_350(acc),
            [112, 105, 101, 109, 111, 110, 116, 101] => lookup_925_351(acc),
            [116, 111, 115, 99, 97, 110, 97] => lookup_925_352(acc),
            [118, 97, 108, 108, 101, 45, 100, 45, 97, 111, 115, 116, 97] => lookup_925_353(acc),
            [108, 97, 116, 105, 110, 97] => lookup_925_354(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 116, 105, 114, 111, 108] => {
                lookup_925_355(acc)
            }
            [109, 105, 108, 97, 110] => lookup_925_356(acc),
            [115, 118] => lookup_925_357(acc),
            [97, 110, 100, 114, 105, 97, 98, 97, 114, 108, 101, 116, 116, 97, 116, 114, 97, 110, 105] => {
                lookup_925_358(acc)
            }
            [110, 111, 118, 97, 114, 97] => lookup_925_359(acc),
            [101, 110, 110, 97] => lookup_925_360(acc),
            [114, 111, 118, 105, 103, 111] => lookup_925_361(acc),
            [97, 108, 101, 115, 115, 97, 110, 100, 114, 105, 97] => lookup_925_362(acc),
            [108, 97, 45, 115, 112, 101, 122, 105, 97] => lookup_925_363(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 97, 45, 97, 100, 105, 103, 101] => {
                lookup_925_364(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 111, 115, 100, 45, 116, 105, 114, 111, 108, 45, 114, 122, 98] => {
                lookup_925_365(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 97, 108, 116, 111, 45, 97, 100, 105, 103, 101] => {
                lookup_925_366(acc)
            }
            [102, 105] => lookup_925_367(acc),
            [99, 108] => lookup_925_368(acc),
            [112, 117] => lookup_925_369(acc),
            [109, 116] => lookup_925_370(acc),
            [120, 110, 45, 45, 118, 97, 108, 108, 101, 45, 100, 45, 97, 111, 115, 116, 101, 45, 101, 104, 98] => {
                lookup_925_371(acc)
            }
            [99, 114, 101, 109, 111, 110, 97] => lookup_925_372(acc),
            [112, 118] => lookup_925_373(acc),
            [103, 114] => lookup_925_374(acc),
            [109, 97, 114, 99, 104, 101] => lookup_925_375(acc),
            [108, 101, 99, 99, 101] => lookup_925_376(acc),
            [102, 114, 105, 117, 108, 105, 118, 101, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_925_377(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 100, 45, 116, 105, 114, 111, 108, 45, 99, 51, 98] => {
                lookup_925_378(acc)
            }
            [112, 122] => lookup_925_379(acc),
            [112, 109, 110] => lookup_925_380(acc),
            [99, 115] => lookup_925_381(acc),
            [114, 105, 109, 105, 110, 105] => lookup_925_382(acc),
            [112, 101, 114, 117, 103, 105, 97] => lookup_925_383(acc),
            [116, 101, 109, 112, 105, 111, 45, 111, 108, 98, 105, 97] => lookup_925_384(acc),
            [116, 114] => lookup_925_385(acc),
            [102, 103] => lookup_925_386(acc),
            [108, 105] => lookup_925_387(acc),
            [109, 101, 115, 115, 105, 110, 97] => lookup_925_388(acc),
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 45, 115, 100, 116, 105, 114, 111, 108, 45, 55, 118, 98] => {
                lookup_925_389(acc)
            }
            [97, 118, 101, 108, 108, 105, 110, 111] => lookup_925_390(acc),
            [98, 97, 108, 115, 97, 110, 45, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_925_391(acc)
            }
            [97, 110] => lookup_925_392(acc),
            [116, 111, 115] => lookup_925_393(acc),
            [99, 97, 114, 114, 97, 114, 97, 109, 97, 115, 115, 97] => lookup_925_394(acc),
            [109, 111, 110, 122, 97, 98, 114, 105, 97, 110, 122, 97] => lookup_925_395(acc),
            [102, 114, 105, 117, 108, 105, 118, 101, 110, 101, 122, 105, 97, 103, 105, 117, 108, 105, 97] => {
                lookup_925_396(acc)
            }
            [110, 97, 112, 111, 108, 105] => lookup_925_397(acc),
            [99, 97, 109] => lookup_925_398(acc),
            [110, 111] => lookup_925_399(acc),
            [111, 103, 108, 105, 97, 115, 116, 114, 97] => lookup_925_400(acc),
            [109, 105, 108, 97, 110, 111] => lookup_925_401(acc),
            [112, 100] => lookup_925_402(acc),
            [112, 101, 115, 97, 114, 111, 45, 117, 114, 98, 105, 110, 111] => lookup_925_403(acc),
            [116, 101, 109, 112, 105, 111, 111, 108, 98, 105, 97] => lookup_925_404(acc),
            [114, 97, 103, 117, 115, 97] => lookup_925_405(acc),
            [97, 115, 116, 105] => lookup_925_406(acc),
            [116, 114, 101, 118, 105, 115, 111] => lookup_925_407(acc),
            [116, 114, 105, 101, 115, 116, 101] => lookup_925_408(acc),
            [115, 97] => lookup_925_409(acc),
            [118, 105, 116, 101, 114, 98, 111] => lookup_925_410(acc),
            [98, 111, 108, 122, 97, 110, 111] => lookup_925_411(acc),
            [99, 97, 108, 97, 98, 114, 105, 97] => lookup_925_412(acc),
            [116, 111] => lookup_925_413(acc),
            [118, 105, 99, 101, 110, 122, 97] => lookup_925_414(acc),
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 111, 115, 100, 116, 105, 114, 111, 108, 45, 55, 118, 98] => {
                lookup_925_415(acc)
            }
            [118, 105, 98, 111, 45, 118, 97, 108, 101, 110, 116, 105, 97] => lookup_925_416(acc),
            [118, 101, 110, 105, 99, 101] => lookup_925_417(acc),
            [108, 101] => lookup_925_418(acc),
            [102, 99] => lookup_925_419(acc),
            [108, 111] => lookup_925_420(acc),
            [109, 111, 110, 122, 97] => lookup_925_421(acc),
            [105, 109] => lookup_925_422(acc),
            [114, 101] => lookup_925_423(acc),
            [49, 54, 45, 98] => lookup_925_424(acc),
            [108, 105, 103, 117, 114, 105, 97] => lookup_925_425(acc),
            [109, 97, 115, 115, 97, 45, 99, 97, 114, 114, 97, 114, 97] => lookup_925_426(acc),
            [115, 111] => lookup_925_427(acc),
            [103, 111, 118] => lookup_925_428(acc),
            [120, 110, 45, 45, 98, 97, 108, 115, 97, 110, 45, 115, 100, 116, 105, 114, 111, 108, 45, 110, 115, 98] => {
                lookup_925_429(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 100, 116, 105, 114, 111, 108, 45, 115, 122, 98] => {
                lookup_925_430(acc)
            }
            [120, 110, 45, 45, 102, 111, 114, 108, 45, 99, 101, 115, 101, 110, 97, 45, 102, 99, 98] => {
                lookup_925_431(acc)
            }
            [102, 114, 111, 115, 105, 110, 111, 110, 101] => lookup_925_432(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_926() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_928() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_929() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_930() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_931() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_932() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_933() -> Info {
    Info {
        len: 33usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_934() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_936() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_937() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_938() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_939() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_940_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_940_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_940_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_940_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_940_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_940_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_940_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_940<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_940_0(acc),
            [111, 114, 103] => lookup_940_1(acc),
            [103, 111, 118] => lookup_940_2(acc),
            [101, 100, 117] => lookup_940_3(acc),
            [98, 105, 122] => lookup_940_4(acc),
            [99, 111, 109] => lookup_940_5(acc),
            [105, 110, 102, 111] => lookup_940_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_941() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_942() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_943_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_943_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_943_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_943_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_943_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_943_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_943_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_943_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_943<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 119, 109, 97, 105, 108] => lookup_943_0(acc),
            [102, 116, 112, 97, 99, 99, 101, 115, 115] => lookup_943_1(acc),
            [99, 115, 120] => lookup_943_2(acc),
            [102, 97, 110, 116, 97, 115, 121, 108, 101, 97, 103, 117, 101] => lookup_943_3(acc),
            [109, 121, 112, 104, 111, 116, 111, 115] => lookup_943_4(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_943_5(acc),
            [103, 97, 109, 101, 45, 115, 101, 114, 118, 101, 114] => lookup_943_6(acc),
            [115, 99, 114, 97, 112, 112, 105, 110, 103] => lookup_943_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_944_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_944_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_944_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_944<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 110, 102, 111] => lookup_944_0(acc),
            [97, 116, 104] => lookup_944_1(acc),
            [103, 111, 118] => lookup_944_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_945() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_946() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_947() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_948() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_949() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_950_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_950_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_950_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_950_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_950_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_950<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_950_0(acc),
            [111, 114, 103] => lookup_950_1(acc),
            [99, 111, 109] => lookup_950_2(acc),
            [101, 100, 117] => lookup_950_3(acc),
            [103, 111, 118] => lookup_950_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_951() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_952() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_953() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_954() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_955() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_956() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_957_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_957<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_957_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_958() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_959() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_960() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_961_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_961<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 104, 97, 116] => lookup_961_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_962_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_962_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_962_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_962_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_962_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_962_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_962_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_962_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_962<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_962_0(acc),
            [109, 105, 108] => lookup_962_1(acc),
            [110, 101, 116] => lookup_962_2(acc),
            [111, 114, 103] => lookup_962_3(acc),
            [99, 111] => lookup_962_4(acc),
            [99, 111, 109] => lookup_962_5(acc),
            [103, 111, 118] => lookup_962_6(acc),
            [110, 111, 109] => lookup_962_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_963() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_964() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_965() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_966() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_967() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_968() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_969_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_969<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 115, 115] => lookup_969_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_970() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_971() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_972() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_973() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_974() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_976() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_977() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_978() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 111, 49, 97, 99] => lookup_979_0(acc),
            [120, 110, 45, 45, 56, 48, 97, 117] => lookup_979_1(acc),
            [120, 110, 45, 45, 100, 49, 97, 116] => lookup_979_2(acc),
            [120, 110, 45, 45, 111, 49, 97, 99, 104] => lookup_979_3(acc),
            [120, 110, 45, 45, 99, 49, 97, 118, 103] => lookup_979_4(acc),
            [120, 110, 45, 45, 57, 48, 97, 122, 104] => lookup_979_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_980() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_981() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_982() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_983_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_983_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_983_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_983_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_983_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_983_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_983_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_983_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_983_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_983<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_983_0(acc),
            [97, 99] => lookup_983_1(acc),
            [109, 105, 108] => lookup_983_2(acc),
            [110, 101, 116] => lookup_983_3(acc),
            [111, 114, 103] => lookup_983_4(acc),
            [115, 99, 104] => lookup_983_5(acc),
            [103, 111, 118] => lookup_983_6(acc),
            [99, 111] => lookup_983_7(acc),
            [110, 111, 109] => lookup_983_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_984() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_985() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_986() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_987() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_988() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_989_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_989_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_989_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_989_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_989_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_989<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_989_0(acc),
            [111, 114, 103] => lookup_989_1(acc),
            [99, 111, 109] => lookup_989_2(acc),
            [110, 111, 109] => lookup_989_3(acc),
            [99, 111] => lookup_989_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_990() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_991() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_992_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_992_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_992_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_992_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_992_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_992_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_992_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_992_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_992_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_992_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_992_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_992_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_992_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_992_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_992<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [106, 111, 122, 105] => lookup_992_0(acc),
            [115, 101, 108, 102, 105, 112] => lookup_992_1(acc),
            [100, 115, 99, 108, 111, 117, 100] => lookup_992_2(acc),
            [109, 109, 97, 102, 97, 110] => lookup_992_3(acc),
            [102, 111, 114, 45, 115, 111, 109, 101] => lookup_992_4(acc),
            [119, 101, 98, 104, 111, 112] => lookup_992_5(acc),
            [111, 114, 120] => lookup_992_6(acc),
            [110, 111, 45, 105, 112] => lookup_992_7(acc),
            [109, 121, 102, 116, 112] => lookup_992_8(acc),
            [100, 121, 110, 100, 110, 115] => lookup_992_9(acc),
            [102, 111, 114, 45, 98, 101, 116, 116, 101, 114] => lookup_992_10(acc),
            [102, 111, 114, 45, 116, 104, 101] => lookup_992_11(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_992_12(acc),
            [102, 111, 114, 45, 109, 111, 114, 101] => lookup_992_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_993() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_994() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_995() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_996() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_997() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_998() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_999() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1000_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1000_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1000_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1000_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1000_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1000_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1000_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1000_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1000<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1000_0(acc),
            [101, 100, 117] => lookup_1000_1(acc),
            [109, 105, 108] => lookup_1000_2(acc),
            [110, 101, 116] => lookup_1000_3(acc),
            [111, 114, 103] => lookup_1000_4(acc),
            [103, 111, 118] => lookup_1000_5(acc),
            [99, 111, 109] => lookup_1000_6(acc),
            [110, 111, 109] => lookup_1000_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1001() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1002() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1003() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1004() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1005() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1006() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1007_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1007_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1007_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1007_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1007_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1007_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1007_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1007<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_1007_0(acc),
            [111, 114, 103] => lookup_1007_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1007_2(acc),
            [103, 111, 118] => lookup_1007_3(acc),
            [101, 100, 117] => lookup_1007_4(acc),
            [99, 111, 109] => lookup_1007_5(acc),
            [109, 105, 108] => lookup_1007_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1008() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1009() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1010() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1011_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1011_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1011_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1011_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1011_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1011_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1011_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1011_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1011_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1011_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1011_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1011<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 100] => lookup_1011_0(acc),
            [97, 99] => lookup_1011_1(acc),
            [120, 110, 45, 45, 109, 103, 98, 97, 51, 97, 52, 102, 114, 97] => lookup_1011_2(acc),
            [99, 111] => lookup_1011_3(acc),
            [110, 101, 116] => lookup_1011_4(acc),
            [111, 114, 103] => lookup_1011_5(acc),
            [115, 99, 104] => lookup_1011_6(acc),
            [103, 111, 118] => lookup_1011_7(acc),
            [120, 110, 45, 45, 109, 103, 98, 97, 51, 97, 52, 102, 49, 54, 97] => lookup_1011_8(acc),
            [216, 167, 219, 140, 216, 177, 216, 167, 217, 134] => lookup_1011_9(acc),
            [216, 167, 217, 138, 216, 177, 216, 167, 217, 134] => lookup_1011_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1012() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1013() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1014_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1014_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1014_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1014_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1014_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1014_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1014_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1014_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 104, 101, 114, 110, 105, 104, 105, 118] => lookup_1014_0(acc),
            [100, 111, 110, 101, 116, 115, 107] => lookup_1014_1(acc),
            [107, 104, 109, 101, 108, 110, 121, 116, 115, 107, 121, 105] => lookup_1014_2(acc),
            [109, 107] => lookup_1014_3(acc),
            [114, 111, 118, 110, 111] => lookup_1014_4(acc),
            [108, 116, 100] => lookup_1014_5(acc),
            [99, 114, 105, 109, 101, 97] => lookup_1014_6(acc),
            [114, 105, 118, 110, 101] => lookup_1014_7(acc),
            [100, 110, 101, 112, 114, 111, 112, 101, 116, 114, 111, 118, 115, 107] => {
                lookup_1014_8(acc)
            }
            [99, 104, 101, 114, 110, 111, 118, 116, 115, 121] => lookup_1014_9(acc),
            [122, 104, 105, 116, 111, 109, 105, 114] => lookup_1014_10(acc),
            [118] => lookup_1014_11(acc),
            [112, 112] => lookup_1014_12(acc),
            [122, 97, 112, 111, 114, 105, 122, 104, 122, 104, 105, 97] => lookup_1014_13(acc),
            [100, 110, 105, 112, 114, 111, 112, 101, 116, 114, 111, 118, 115, 107] => {
                lookup_1014_14(acc)
            }
            [101, 100, 117] => lookup_1014_15(acc),
            [105, 110] => lookup_1014_16(acc),
            [99, 104, 101, 114, 107, 97, 115, 115, 121] => lookup_1014_17(acc),
            [99, 114] => lookup_1014_18(acc),
            [110, 101, 116] => lookup_1014_19(acc),
            [111, 114, 103] => lookup_1014_20(acc),
            [105, 102] => lookup_1014_21(acc),
            [107, 104, 97, 114, 107, 105, 118] => lookup_1014_22(acc),
            [107, 114] => lookup_1014_23(acc),
            [108, 117, 103, 97, 110, 115, 107] => lookup_1014_24(acc),
            [107, 121, 105, 118] => lookup_1014_25(acc),
            [108, 118] => lookup_1014_26(acc),
            [111, 100] => lookup_1014_27(acc),
            [107, 105, 114, 111, 118, 111, 103, 114, 97, 100] => lookup_1014_28(acc),
            [112, 108] => lookup_1014_29(acc),
            [99, 104, 101, 114, 110, 105, 118, 116, 115, 105] => lookup_1014_30(acc),
            [107, 104] => lookup_1014_31(acc),
            [107, 104, 101, 114, 115, 111, 110] => lookup_1014_32(acc),
            [118, 105, 110, 110, 105, 99, 97] => lookup_1014_33(acc),
            [99, 104, 101, 114, 110, 105, 103, 111, 118] => lookup_1014_34(acc),
            [118, 105, 110, 110, 121, 116, 115, 105, 97] => lookup_1014_35(acc),
            [105, 118, 97, 110, 111, 45, 102, 114, 97, 110, 107, 105, 118, 115, 107] => {
                lookup_1014_36(acc)
            }
            [118, 110] => lookup_1014_37(acc),
            [122, 97, 112, 111, 114, 105, 122, 104, 122, 104, 101] => lookup_1014_38(acc),
            [99, 111] => lookup_1014_39(acc),
            [99, 104, 101, 114, 107, 97, 115, 121] => lookup_1014_40(acc),
            [99, 110] => lookup_1014_41(acc),
            [122, 112] => lookup_1014_42(acc),
            [118, 111, 108, 121, 110] => lookup_1014_43(acc),
            [115, 101, 98, 97, 115, 116, 111, 112, 111, 108] => lookup_1014_44(acc),
            [107, 104, 109, 101, 108, 110, 105, 116, 115, 107, 105, 121] => lookup_1014_45(acc),
            [98, 105, 122] => lookup_1014_46(acc),
            [107, 115] => lookup_1014_47(acc),
            [111, 100, 101, 115, 115, 97] => lookup_1014_48(acc),
            [105, 110, 102] => lookup_1014_49(acc),
            [112, 111, 108, 116, 97, 118, 97] => lookup_1014_50(acc),
            [115, 98] => lookup_1014_51(acc),
            [115, 117, 109, 121] => lookup_1014_52(acc),
            [109, 121, 107, 111, 108, 97, 105, 118] => lookup_1014_53(acc),
            [115, 109] => lookup_1014_54(acc),
            [107, 104, 97, 114, 107, 111, 118] => lookup_1014_55(acc),
            [110, 105, 107, 111, 108, 97, 101, 118] => lookup_1014_56(acc),
            [116, 101, 114, 110, 111, 112, 105, 108] => lookup_1014_57(acc),
            [117, 122] => lookup_1014_58(acc),
            [100, 110] => lookup_1014_59(acc),
            [107, 118] => lookup_1014_60(acc),
            [116, 101] => lookup_1014_61(acc),
            [121, 97, 108, 116, 97] => lookup_1014_62(acc),
            [108, 116] => lookup_1014_63(acc),
            [107, 114, 121, 109] => lookup_1014_64(acc),
            [114, 118] => lookup_1014_65(acc),
            [117, 122, 104, 103, 111, 114, 111, 100] => lookup_1014_66(acc),
            [99, 107] => lookup_1014_67(acc),
            [108, 103] => lookup_1014_68(acc),
            [108, 117, 116, 115, 107] => lookup_1014_69(acc),
            [122, 104, 121, 116, 111, 109, 121, 114] => lookup_1014_70(acc),
            [99, 111, 109] => lookup_1014_71(acc),
            [107, 109] => lookup_1014_72(acc),
            [99, 118] => lookup_1014_73(acc),
            [107, 105, 101, 118] => lookup_1014_74(acc),
            [115, 101, 118, 97, 115, 116, 111, 112, 111, 108] => lookup_1014_75(acc),
            [108, 118, 105, 118] => lookup_1014_76(acc),
            [99, 99] => lookup_1014_77(acc),
            [99, 120] => lookup_1014_78(acc),
            [103, 111, 118] => lookup_1014_79(acc),
            [100, 112] => lookup_1014_80(acc),
            [122, 116] => lookup_1014_81(acc),
            [111, 100, 101, 115, 97] => lookup_1014_82(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1015_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1015<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_1015_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1016() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1017() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1018() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1019() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1020() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1021() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1023() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1024() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1027() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1028() -> Info {
    Info {
        len: 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1029() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1030() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1031() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1032() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1033() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1034() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1035() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1036() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1037() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1038() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1039() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1040() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1041() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1042() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1043_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1043<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 109] => lookup_1043_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1044() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1045_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1045_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1045<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 109] => lookup_1045_0(acc),
            [97, 115, 115, 111] => lookup_1045_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1046_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1046_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1046_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1046_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1046_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1046_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1046_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1046_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1046_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1046_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1046_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1046_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1046_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1046_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1046_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1046<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 116, 100] => lookup_1046_0(acc),
            [97, 99] => lookup_1046_1(acc),
            [119, 101, 98] => lookup_1046_2(acc),
            [99, 111, 109] => lookup_1046_3(acc),
            [115, 111, 99] => lookup_1046_4(acc),
            [97, 115, 115, 110] => lookup_1046_5(acc),
            [103, 114, 112] => lookup_1046_6(acc),
            [101, 100, 117] => lookup_1046_7(acc),
            [110, 103, 111] => lookup_1046_8(acc),
            [110, 101, 116] => lookup_1046_9(acc),
            [111, 114, 103] => lookup_1046_10(acc),
            [115, 99, 104] => lookup_1046_11(acc),
            [103, 111, 118] => lookup_1046_12(acc),
            [104, 111, 116, 101, 108] => lookup_1046_13(acc),
            [105, 110, 116] => lookup_1046_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1047() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1048_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1048<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [121, 98, 111] => lookup_1048_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1049_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1049<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [121, 98, 111] => lookup_1049_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1050_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1050<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1050_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1051_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1051_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1051_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1051_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1051_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1051_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [117, 107] => lookup_1051_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1051_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1051_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1051_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [100, 101] => lookup_1051_3_0(acc),
            [99, 104] => lookup_1051_3_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1051_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1051_4_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1051_4_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1051_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [117, 115] => lookup_1051_4_0(acc),
            [99, 97] => lookup_1051_4_1(acc),
            [117, 107] => lookup_1051_4_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1051_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1051_6_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1051_6<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1051_6_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1051_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1051_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1051_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1051_10_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1051_10<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [105, 116, 49, 45, 101, 117, 114] => lookup_1051_10_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1051_11_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1051_11<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [101, 115, 45, 49] => lookup_1051_11_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1051_12_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1051_12_1_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1051_12_1_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [105, 116, 49] => lookup_1051_12_1_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1051_12_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [101, 117, 114] => lookup_1051_12_1_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1051_12<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [105, 116, 49] => lookup_1051_12_0(acc),
            [97, 114, 117, 98, 97] => lookup_1051_12_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1051_13_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1051_13_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1051_13<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 110] => lookup_1051_13_0(acc),
            [117, 107] => lookup_1051_13_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1051_14_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1051_14<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1051_14_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1051_15_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1051_15<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [118, 105, 112] => lookup_1051_15_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1051_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1051_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1051_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1051_19_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1051_19<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1051_19_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1051_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1051_21_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1051_21<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1051_21_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1051<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 97, 116, 105, 99, 115] => lookup_1051_0(info, labels, acc),
            [118, 111, 111, 114, 108, 111, 112, 101, 114] => lookup_1051_1(acc),
            [112, 114, 105, 109, 101, 116, 101, 108] => lookup_1051_2(labels, acc),
            [116, 114, 101, 110, 100, 104, 111, 115, 116, 105, 110, 103] => {
                lookup_1051_3(info, labels, acc)
            }
            [114, 101, 99, 108, 97, 105, 109] => lookup_1051_4(info, labels, acc),
            [118, 97, 112, 111, 114] => lookup_1051_5(acc),
            [111, 110, 45, 114, 97, 110, 99, 104, 101, 114] => lookup_1051_6(info, labels, acc),
            [116, 114, 97, 102, 102, 105, 99, 112, 108, 101, 120] => lookup_1051_7(acc),
            [106, 101, 108, 101] => lookup_1051_8(acc),
            [108, 105, 110, 107, 121, 97, 114, 100] => lookup_1051_9(acc),
            [106, 101, 110, 118, 45, 97, 114, 117, 98, 97, 98, 105, 122] => {
                lookup_1051_10(info, labels, acc)
            }
            [97, 120, 97, 114, 110, 101, 116] => lookup_1051_11(info, labels, acc),
            [106, 101, 110, 118, 45, 97, 114, 117, 98, 97] => lookup_1051_12(info, labels, acc),
            [111, 120, 97] => lookup_1051_13(labels, acc),
            [98, 97, 110, 122, 97, 105] => lookup_1051_14(info, labels, acc),
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_1051_15(info, labels, acc),
            [112, 101, 114, 115, 112, 101, 99, 116, 97] => lookup_1051_16(acc),
            [107, 117, 108, 101, 117, 118, 101, 110] => lookup_1051_17(acc),
            [117, 114, 111, 119, 110] => lookup_1051_18(acc),
            [109, 97, 103, 101, 110, 116, 111, 115, 105, 116, 101] => {
                lookup_1051_19(info, labels, acc)
            }
            [100, 105, 97, 100, 101, 109] => lookup_1051_20(acc),
            [115, 101, 110, 115, 105, 111, 115, 105, 116, 101] => lookup_1051_21(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1052() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1053() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1054() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1056() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1057() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1058() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1059_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1059_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1059_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1059_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1059_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1059_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1059_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1059_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1059_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1059_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1059<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1059_0(acc),
            [111, 120] => lookup_1059_1(acc),
            [97, 99] => lookup_1059_2(acc),
            [101, 100, 117] => lookup_1059_3(acc),
            [105, 110] => lookup_1059_4(acc),
            [99, 111] => lookup_1059_5(acc),
            [117, 97] => lookup_1059_6(acc),
            [111, 114, 103] => lookup_1059_7(acc),
            [103, 111, 118] => lookup_1059_8(acc),
            [110, 111, 109] => lookup_1059_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1060() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1061() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1062_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1062_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1062_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1062<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [117, 98, 101, 114] => lookup_1062_0(acc),
            [120, 115, 52, 97, 108, 108] => lookup_1062_1(acc),
            [109, 121, 102, 97, 115, 116] => lookup_1062_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1063() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1064() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1065() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1066() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1067() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1068() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1069() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1070() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1071() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1072() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1073_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1073_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [103, 105, 116, 45, 112, 97, 103, 101, 115] => lookup_1073_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1073<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [114, 105, 116] => lookup_1073_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1074() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1075() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1076() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1077() -> Info {
    Info {
        len: 23usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1078() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1079() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1080() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1081() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1082() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1083() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1085() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1086_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1086_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1086<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1086_0(acc),
            [110, 121, 109] => lookup_1086_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1087() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1088() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1089() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1090() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_1091_0(acc),
            [111, 114, 103] => lookup_1091_1(acc),
            [103, 111, 118] => lookup_1091_2(acc),
            [101, 100, 117] => lookup_1091_3(acc),
            [98, 105, 122] => lookup_1091_4(acc),
            [99, 111, 109] => lookup_1091_5(acc),
            [105, 110, 102, 111] => lookup_1091_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1092() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1093() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1094_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1094_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1094_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1094_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1094_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1094<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_1094_0(acc),
            [111, 114, 103] => lookup_1094_1(acc),
            [99, 111, 109] => lookup_1094_2(acc),
            [101, 100, 117] => lookup_1094_3(acc),
            [114, 97, 100, 105, 111] => lookup_1094_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1095() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1096_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1096<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 111, 114, 106] => lookup_1096_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1097() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1098() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1099() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1100() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1101_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1101<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 114, 100, 112, 111, 108] => lookup_1101_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1102() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1103() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1104() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1105() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1106() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1107_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1107_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1107_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 101, 114, 118, 105, 99, 101] => lookup_1107_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1107<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_1107_0(acc),
            [103, 111, 118] => lookup_1107_1(labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1108() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1109() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1110_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1110_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1110_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1110_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [122] => lookup_1110_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1110_1(acc),
            [99, 111, 110, 102] => lookup_1110_2(acc),
            [109] => lookup_1110_3(acc),
            [98, 100] => lookup_1110_4(acc),
            [107, 111, 109, 102, 111, 114, 98] => lookup_1110_5(acc),
            [108] => lookup_1110_6(acc),
            [116, 109] => lookup_1110_7(acc),
            [121] => lookup_1110_8(acc),
            [102, 104, 115, 107] => lookup_1110_9(acc),
            [98] => lookup_1110_10(acc),
            [110, 97, 116, 117, 114, 98, 114, 117, 107, 115, 103, 121, 109, 110] => {
                lookup_1110_11(acc)
            }
            [112, 112] => lookup_1110_12(acc),
            [114] => lookup_1110_13(acc),
            [115] => lookup_1110_14(acc),
            [107, 111, 109, 109, 117, 110, 97, 108, 102, 111, 114, 98, 117, 110, 100] => {
                lookup_1110_15(acc)
            }
            [111, 114, 103] => lookup_1110_16(acc),
            [98, 114, 97, 110, 100] => lookup_1110_17(acc),
            [100] => lookup_1110_18(acc),
            [102] => lookup_1110_19(acc),
            [104] => lookup_1110_20(acc),
            [117] => lookup_1110_21(acc),
            [112] => lookup_1110_22(acc),
            [105, 111, 112, 115, 121, 115] => lookup_1110_23(acc),
            [97, 99] => lookup_1110_24(acc),
            [120] => lookup_1110_25(acc),
            [105] => lookup_1110_26(acc),
            [99] => lookup_1110_27(acc),
            [110] => lookup_1110_28(acc),
            [102, 104, 118] => lookup_1110_29(acc),
            [102, 104] => lookup_1110_30(acc),
            [112, 114, 101, 115, 115] => lookup_1110_31(acc),
            [99, 111, 109] => lookup_1110_32(acc),
            [107, 111, 109, 118, 117, 120] => lookup_1110_33(acc),
            [112, 97, 114, 116, 105] => lookup_1110_34(acc),
            [119] => lookup_1110_35(acc),
            [97] => lookup_1110_36(acc),
            [108, 97, 110, 98, 105, 98] => lookup_1110_37(acc),
            [103] => lookup_1110_38(acc),
            [107] => lookup_1110_39(acc),
            [116] => lookup_1110_40(acc),
            [111] => lookup_1110_41(acc),
            [101] => lookup_1110_42(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1111() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1112_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1112_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1112_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1112_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1112_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1112<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_1112_0(acc),
            [111, 114, 103] => lookup_1112_1(acc),
            [103, 111, 118] => lookup_1112_2(acc),
            [101, 100, 117] => lookup_1112_3(acc),
            [99, 111, 109] => lookup_1112_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1113() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1114() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1115() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1116() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1118() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1119() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1120_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1120_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1120_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1120_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1120_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1120_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_1120_0(acc),
            [111, 114, 103] => lookup_1120_1(acc),
            [99, 111, 109] => lookup_1120_2(acc),
            [103, 111, 118] => lookup_1120_3(acc),
            [101, 100, 117] => lookup_1120_4(acc),
            [110, 111, 109] => lookup_1120_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1121_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1121_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1121_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1121_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1121_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1121_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1121_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1121_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1121_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1121_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1121_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1121_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1121_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1121<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1121_0(acc),
            [110, 121, 109] => lookup_1121_1(acc),
            [102, 105, 110] => lookup_1121_2(acc),
            [101, 100, 117] => lookup_1121_3(acc),
            [112, 114, 111] => lookup_1121_4(acc),
            [105, 110, 102, 111] => lookup_1121_5(acc),
            [110, 101, 116] => lookup_1121_6(acc),
            [109, 101, 100] => lookup_1121_7(acc),
            [111, 114, 103] => lookup_1121_8(acc),
            [99, 111, 109] => lookup_1121_9(acc),
            [103, 111, 118] => lookup_1121_10(acc),
            [109, 105, 108] => lookup_1121_11(acc),
            [103, 111, 98] => lookup_1121_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1122() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1123() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1124() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1125() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1126() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1127() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1128() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1129() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1130() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1131() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1132_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1132_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1132_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1132_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1132_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1132_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1132_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1132<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 111, 112] => lookup_1132_0(acc),
            [109, 105, 108] => lookup_1132_1(acc),
            [110, 101, 116] => lookup_1132_2(acc),
            [103, 111, 118] => lookup_1132_3(acc),
            [97, 99] => lookup_1132_4(acc),
            [111, 114, 103] => lookup_1132_5(acc),
            [99, 111] => lookup_1132_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1133() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1134() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1135() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1136() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1137() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1138() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1139() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1140() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1141_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1141_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 111, 110, 100, 111, 110] => lookup_1141_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1141<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 97, 112, 112, 115] => lookup_1141_0(labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1142_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1142_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1142_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1142_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1142_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1142_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1142_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1142_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1142_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1142<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114] => lookup_1142_0(acc),
            [101, 100] => lookup_1142_1(acc),
            [103, 111] => lookup_1142_2(acc),
            [99, 111] => lookup_1142_3(acc),
            [120, 52, 52, 51] => lookup_1142_4(acc),
            [98, 101, 108, 97, 117] => lookup_1142_5(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_1142_6(acc),
            [110, 111, 109] => lookup_1142_7(acc),
            [110, 101] => lookup_1142_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1143_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1143<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1143_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1144() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1145() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1146() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1147() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1148() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1149_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1149_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1149_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1149_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1149_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1149<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_1149_0(acc),
            [111, 114, 103] => lookup_1149_1(acc),
            [103, 111, 118] => lookup_1149_2(acc),
            [99, 111, 109] => lookup_1149_3(acc),
            [101, 100, 117] => lookup_1149_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1150() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1151() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1152() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1153() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1154_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1154<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 105, 99, 101, 97, 98, 108, 101] => lookup_1154_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1155_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1155<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_1155_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1156() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1157() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1158() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1159() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1160() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1161() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1162() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1163() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1164() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1165() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1166_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1166_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1166_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1166_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1166_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1166<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_1166_0(acc),
            [111, 114, 103] => lookup_1166_1(acc),
            [99, 111, 109] => lookup_1166_2(acc),
            [101, 100, 117] => lookup_1166_3(acc),
            [103, 111, 118] => lookup_1166_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1167() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1168_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1168_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1168_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1168_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1168_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1168_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1168_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1168_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1168_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1168_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1168_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1168_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1168_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1168_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1168_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1168_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1168<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1168_0(acc),
            [103, 101, 110] => lookup_1168_1(acc),
            [97, 99] => lookup_1168_2(acc),
            [119, 101, 98] => lookup_1168_3(acc),
            [114, 101, 115] => lookup_1168_4(acc),
            [105, 110, 100] => lookup_1168_5(acc),
            [98, 97, 114, 115, 121] => lookup_1168_6(acc),
            [101, 100, 117] => lookup_1168_7(acc),
            [99, 111] => lookup_1168_8(acc),
            [110, 101, 116] => lookup_1168_9(acc),
            [111, 114, 103] => lookup_1168_10(acc),
            [110, 105, 99] => lookup_1168_11(acc),
            [102, 105, 114, 109] => lookup_1168_12(acc),
            [103, 111, 118] => lookup_1168_13(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_1168_14(acc),
            [109, 105, 108] => lookup_1168_15(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1169_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1169_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1169_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1169_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1169_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1169_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1169_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1169_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1169_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1169_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1169<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 110, 102] => lookup_1169_0(acc),
            [105, 100] => lookup_1169_1(acc),
            [101, 100, 117] => lookup_1169_2(acc),
            [109, 105, 108] => lookup_1169_3(acc),
            [110, 101, 116] => lookup_1169_4(acc),
            [111, 114, 103] => lookup_1169_5(acc),
            [97, 115, 110] => lookup_1169_6(acc),
            [103, 111, 118] => lookup_1169_7(acc),
            [99, 111, 109] => lookup_1169_8(acc),
            [110, 111, 109] => lookup_1169_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1170_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1170_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1170_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1170_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1170_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1170_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1170_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1170<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 97] => lookup_1170_0(acc),
            [102, 105] => lookup_1170_1(acc),
            [101, 100] => lookup_1170_2(acc),
            [97, 99] => lookup_1170_3(acc),
            [103, 111] => lookup_1170_4(acc),
            [111, 114] => lookup_1170_5(acc),
            [99, 111] => lookup_1170_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1171() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1172() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1173_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1173_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1173_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1173_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1173_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1173_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1173_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1173_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1173_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1173_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1173_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1173_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1173_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1173_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1173_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1173_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1173_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1173_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1173_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1173_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_158(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1173_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_162(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_163(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_164(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_165(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_166(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_167(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_168(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_169(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_170<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 117, 112] => lookup_1173_170_0(acc),
            [112, 105, 119] => lookup_1173_170_1(acc),
            [97, 112] => lookup_1173_170_2(acc),
            [112, 111] => lookup_1173_170_3(acc),
            [112, 115, 115, 101] => lookup_1173_170_4(acc),
            [119, 105, 119] => lookup_1173_170_5(acc),
            [111, 117, 109] => lookup_1173_170_6(acc),
            [119, 117, 111, 122] => lookup_1173_170_7(acc),
            [105, 115] => lookup_1173_170_8(acc),
            [119, 105, 102] => lookup_1173_170_9(acc),
            [115, 100, 110] => lookup_1173_170_10(acc),
            [119, 105, 111, 115] => lookup_1173_170_11(acc),
            [117, 103] => lookup_1173_170_12(acc),
            [112, 117, 112] => lookup_1173_170_13(acc),
            [112, 115, 112] => lookup_1173_170_14(acc),
            [107, 112, 112, 115, 112] => lookup_1173_170_15(acc),
            [115, 116, 97, 114, 111, 115, 116, 119, 111] => lookup_1173_170_16(acc),
            [117, 119] => lookup_1173_170_17(acc),
            [115, 114] => lookup_1173_170_18(acc),
            [105, 99] => lookup_1173_170_19(acc),
            [117, 103, 105, 109] => lookup_1173_170_20(acc),
            [115, 107, 111] => lookup_1173_170_21(acc),
            [107, 119, 112] => lookup_1173_170_22(acc),
            [112, 97] => lookup_1173_170_23(acc),
            [115, 97] => lookup_1173_170_24(acc),
            [119, 105, 116, 100] => lookup_1173_170_25(acc),
            [107, 111, 110, 115, 117, 108, 97, 116] => lookup_1173_170_26(acc),
            [117, 112, 111, 119] => lookup_1173_170_27(acc),
            [119, 122, 109, 105, 117, 119] => lookup_1173_170_28(acc),
            [117, 109, 105, 103] => lookup_1173_170_29(acc),
            [107, 109, 112, 115, 112] => lookup_1173_170_30(acc),
            [109, 119] => lookup_1173_170_31(acc),
            [119, 115, 107, 114] => lookup_1173_170_32(acc),
            [122, 112] => lookup_1173_170_33(acc),
            [114, 122, 103, 119] => lookup_1173_170_34(acc),
            [119, 105, 110, 98] => lookup_1173_170_35(acc),
            [112, 105, 110, 98] => lookup_1173_170_36(acc),
            [111, 105, 114, 109] => lookup_1173_170_37(acc),
            [119, 115, 97] => lookup_1173_170_38(acc),
            [115, 111] => lookup_1173_170_39(acc),
            [103, 114, 105, 119] => lookup_1173_170_40(acc),
            [117, 109] => lookup_1173_170_41(acc),
            [117, 122, 115] => lookup_1173_170_42(acc),
            [117, 112, 112, 111] => lookup_1173_170_43(acc),
            [117, 115] => lookup_1173_170_44(acc),
            [119, 105, 105, 104] => lookup_1173_170_45(acc),
            [107, 119, 112, 115, 112] => lookup_1173_170_46(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1173_171(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_172(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173_173(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 107, 108, 101, 112] => lookup_1173_0(acc),
            [115, 122, 99, 122, 101, 99, 105, 110] => lookup_1173_1(acc),
            [103, 114, 97, 106, 101, 119, 111] => lookup_1173_2(acc),
            [115, 108, 117, 112, 115, 107] => lookup_1173_3(acc),
            [105, 110, 102, 111] => lookup_1173_4(acc),
            [115, 111, 112, 111, 116] => lookup_1173_5(acc),
            [116, 111, 117, 114, 105, 115, 109] => lookup_1173_6(acc),
            [112, 117, 108, 97, 119, 121] => lookup_1173_7(acc),
            [119, 97, 119] => lookup_1173_8(acc),
            [110, 111, 119, 97, 114, 117, 100, 97] => lookup_1173_9(acc),
            [114, 122, 101, 115, 122, 111, 119] => lookup_1173_10(acc),
            [122, 97, 99, 104, 112, 111, 109, 111, 114] => lookup_1173_11(acc),
            [110, 105, 101, 114, 117, 99, 104, 111, 109, 111, 115, 99, 105] => lookup_1173_12(acc),
            [109, 97, 122, 111, 119, 115, 122, 101] => lookup_1173_13(acc),
            [122, 103, 111, 114, 122, 101, 108, 101, 99] => lookup_1173_14(acc),
            [115, 101, 106, 110, 121] => lookup_1173_15(acc),
            [101, 100, 117] => lookup_1173_16(acc),
            [99, 111] => lookup_1173_17(acc),
            [110, 101, 116] => lookup_1173_18(acc),
            [111, 114, 103] => lookup_1173_19(acc),
            [114, 101, 97, 108, 101, 115, 116, 97, 116, 101] => lookup_1173_20(acc),
            [103, 108, 111, 103, 111, 119] => lookup_1173_21(acc),
            [107, 97, 116, 111, 119, 105, 99, 101] => lookup_1173_22(acc),
            [112, 114, 117, 115, 122, 107, 111, 119] => lookup_1173_23(acc),
            [107, 97, 115, 122, 117, 98, 121] => lookup_1173_24(acc),
            [98, 101, 101, 112] => lookup_1173_25(acc),
            [111, 112, 111, 108, 101] => lookup_1173_26(acc),
            [108, 117, 98, 108, 105, 110] => lookup_1173_27(acc),
            [110, 121, 115, 97] => lookup_1173_28(acc),
            [109, 97, 108, 111, 112, 111, 108, 115, 107, 97] => lookup_1173_29(acc),
            [115, 117, 119, 97, 108, 107, 105] => lookup_1173_30(acc),
            [115, 122, 107, 111, 108, 97] => lookup_1173_31(acc),
            [97, 116, 109] => lookup_1173_32(acc),
            [112, 111, 100, 108, 97, 115, 105, 101] => lookup_1173_33(acc),
            [109, 101, 100] => lookup_1173_34(acc),
            [119, 97, 114, 109, 105, 97] => lookup_1173_35(acc),
            [119, 111, 100, 122, 105, 115, 108, 97, 119] => lookup_1173_36(acc),
            [99, 122, 101, 108, 97, 100, 122] => lookup_1173_37(acc),
            [107, 111, 110, 115, 107, 111, 119, 111, 108, 97] => lookup_1173_38(acc),
            [108, 105, 109, 97, 110, 111, 119, 97] => lookup_1173_39(acc),
            [122, 97, 114, 111, 119] => lookup_1173_40(acc),
            [115, 104, 111, 112, 97, 114, 101, 110, 97] => lookup_1173_41(acc),
            [119, 114, 111, 99] => lookup_1173_42(acc),
            [99, 122, 101, 115, 116] => lookup_1173_43(acc),
            [112, 105, 115, 122] => lookup_1173_44(acc),
            [108, 101, 99, 122, 110, 97] => lookup_1173_45(acc),
            [115, 119, 105, 101, 98, 111, 100, 122, 105, 110] => lookup_1173_46(acc),
            [107, 111, 98, 105, 101, 114, 122, 121, 99, 101] => lookup_1173_47(acc),
            [98, 111, 108, 101, 115, 108, 97, 119, 105, 101, 99] => lookup_1173_48(acc),
            [115, 116, 97, 108, 111, 119, 97, 45, 119, 111, 108, 97] => lookup_1173_49(acc),
            [119, 101, 103, 114, 111, 119] => lookup_1173_50(acc),
            [119, 108, 111, 99, 108, 97, 119, 101, 107] => lookup_1173_51(acc),
            [111, 108, 115, 122, 116, 121, 110] => lookup_1173_52(acc),
            [122, 103, 111, 114, 97] => lookup_1173_53(acc),
            [103, 109, 105, 110, 97] => lookup_1173_54(acc),
            [111, 115, 116, 114, 111, 119, 119, 108, 107, 112] => lookup_1173_55(acc),
            [107, 114, 97, 115, 110, 105, 107] => lookup_1173_56(acc),
            [97, 114, 116] => lookup_1173_57(acc),
            [103, 100, 97] => lookup_1173_58(acc),
            [115, 101, 120] => lookup_1173_59(acc),
            [110, 97, 107, 108, 111] => lookup_1173_60(acc),
            [97, 103, 114, 111] => lookup_1173_61(acc),
            [98, 97, 98, 105, 97, 45, 103, 111, 114, 97] => lookup_1173_62(acc),
            [106, 103, 111, 114, 97] => lookup_1173_63(acc),
            [98, 101, 115, 107, 105, 100, 121] => lookup_1173_64(acc),
            [112, 105, 108, 97] => lookup_1173_65(acc),
            [108, 117, 98, 105, 110] => lookup_1173_66(acc),
            [112, 114, 122, 101, 119, 111, 114, 115, 107] => lookup_1173_67(acc),
            [107, 97, 122, 105, 109, 105, 101, 114, 122, 45, 100, 111, 108, 110, 121] => {
                lookup_1173_68(acc)
            }
            [108, 117, 107, 111, 119] => lookup_1173_69(acc),
            [98, 105, 97, 108, 111, 119, 105, 101, 122, 97] => lookup_1173_70(acc),
            [108, 97, 112, 121] => lookup_1173_71(acc),
            [98, 105, 97, 108, 121, 115, 116, 111, 107] => lookup_1173_72(acc),
            [112, 111, 122, 110, 97, 110] => lookup_1173_73(acc),
            [115, 104, 111, 112] => lookup_1173_74(acc),
            [103, 111, 114, 108, 105, 99, 101] => lookup_1173_75(acc),
            [107, 101, 112, 110, 111] => lookup_1173_76(acc),
            [98, 121, 100, 103, 111, 115, 122, 99, 122] => lookup_1173_77(acc),
            [108, 111, 119, 105, 99, 122] => lookup_1173_78(acc),
            [112, 114, 105, 118] => lookup_1173_79(acc),
            [115, 122, 99, 122, 121, 116, 110, 111] => lookup_1173_80(acc),
            [117, 115, 116, 107, 97] => lookup_1173_81(acc),
            [116, 103, 111, 114, 121] => lookup_1173_82(acc),
            [99, 105, 101, 115, 122, 121, 110] => lookup_1173_83(acc),
            [111, 108, 97, 119, 97] => lookup_1173_84(acc),
            [119, 97, 114, 115, 122, 97, 119, 97] => lookup_1173_85(acc),
            [109, 97, 108, 98, 111, 114, 107] => lookup_1173_86(acc),
            [101, 108, 107] => lookup_1173_87(acc),
            [106, 101, 108, 101, 110, 105, 97, 45, 103, 111, 114, 97] => lookup_1173_88(acc),
            [116, 121, 99, 104, 121] => lookup_1173_89(acc),
            [119, 105, 101, 108, 117, 110] => lookup_1173_90(acc),
            [116, 109] => lookup_1173_91(acc),
            [116, 117, 114, 101, 107] => lookup_1173_92(acc),
            [122, 97, 107, 111, 112, 97, 110, 101] => lookup_1173_93(acc),
            [109, 97, 122, 117, 114, 121] => lookup_1173_94(acc),
            [109, 101, 100, 105, 97] => lookup_1173_95(acc),
            [112, 111, 119, 105, 97, 116] => lookup_1173_96(acc),
            [98, 121, 116, 111, 109] => lookup_1173_97(acc),
            [112, 111, 109, 111, 114, 122, 101] => lookup_1173_98(acc),
            [100, 108, 117, 103, 111, 108, 101, 107, 97] => lookup_1173_99(acc),
            [116, 97, 114, 110, 111, 98, 114, 122, 101, 103] => lookup_1173_100(acc),
            [122, 97, 103, 97, 110] => lookup_1173_101(acc),
            [109, 105, 108] => lookup_1173_102(acc),
            [97, 117, 116, 111] => lookup_1173_103(acc),
            [97, 117, 103, 117, 115, 116, 111, 119] => lookup_1173_104(acc),
            [112, 111, 108, 107, 111, 119, 105, 99, 101] => lookup_1173_105(acc),
            [111, 108, 101, 99, 107, 111] => lookup_1173_106(acc),
            [108, 101, 103, 110, 105, 99, 97] => lookup_1173_107(acc),
            [115, 116, 97, 114, 103, 97, 114, 100] => lookup_1173_108(acc),
            [119, 111, 108, 111, 109, 105, 110] => lookup_1173_109(acc),
            [108, 117, 98, 97, 114, 116, 111, 119] => lookup_1173_110(acc),
            [103, 108, 105, 119, 105, 99, 101] => lookup_1173_111(acc),
            [103, 100, 121, 110, 105, 97] => lookup_1173_112(acc),
            [117, 110, 105, 99, 108, 111, 117, 100] => lookup_1173_113(acc),
            [109, 105, 101, 108, 101, 99] => lookup_1173_114(acc),
            [116, 114, 97, 118, 101, 108] => lookup_1173_115(acc),
            [114, 97, 100, 111, 109] => lookup_1173_116(acc),
            [115, 111, 115] => lookup_1173_117(acc),
            [98, 105, 101, 108, 97, 119, 97] => lookup_1173_118(acc),
            [105, 108, 97, 119, 97] => lookup_1173_119(acc),
            [114, 121, 98, 110, 105, 107] => lookup_1173_120(acc),
            [109, 97, 105, 108] => lookup_1173_121(acc),
            [107, 101, 116, 114, 122, 121, 110] => lookup_1173_122(acc),
            [112, 114, 111, 99, 104, 111, 119, 105, 99, 101] => lookup_1173_123(acc),
            [114, 101, 108] => lookup_1173_124(acc),
            [98, 105, 122] => lookup_1173_125(acc),
            [114, 97, 119, 97, 45, 109, 97, 122] => lookup_1173_126(acc),
            [107, 111, 108, 111, 98, 114, 122, 101, 103] => lookup_1173_127(acc),
            [109, 105, 97, 115, 116, 97] => lookup_1173_128(acc),
            [107, 97, 114, 116, 117, 122, 121] => lookup_1173_129(acc),
            [115, 107, 111, 99, 122, 111, 119] => lookup_1173_130(acc),
            [107, 97, 108, 105, 115, 122] => lookup_1173_131(acc),
            [119, 108, 111, 99, 108] => lookup_1173_132(acc),
            [103, 100, 97, 110, 115, 107] => lookup_1173_133(acc),
            [108, 101, 98, 111, 114, 107] => lookup_1173_134(acc),
            [115, 119, 105, 100, 110, 105, 99, 97] => lookup_1173_135(acc),
            [115, 97, 110, 111, 107] => lookup_1173_136(acc),
            [112, 111, 100, 104, 97, 108, 101] => lookup_1173_137(acc),
            [98, 105, 101, 115, 122, 99, 122, 97, 100, 121] => lookup_1173_138(acc),
            [107, 114, 97, 107, 111, 119] => lookup_1173_139(acc),
            [97, 105, 100] => lookup_1173_140(acc),
            [109, 105, 101, 108, 110, 111] => lookup_1173_141(acc),
            [115, 119, 105, 110, 111, 117, 106, 115, 99, 105, 101] => lookup_1173_142(acc),
            [108, 111, 109, 122, 97] => lookup_1173_143(acc),
            [111, 115, 116, 114, 111, 119, 105, 101, 99] => lookup_1173_144(acc),
            [107, 117, 116, 110, 111] => lookup_1173_145(acc),
            [116, 97, 114, 103, 105] => lookup_1173_146(acc),
            [101, 108, 98, 108, 97, 103] => lookup_1173_147(acc),
            [115, 108, 97, 115, 107] => lookup_1173_148(acc),
            [110, 111, 109] => lookup_1173_149(acc),
            [107, 108, 111, 100, 122, 107, 111] => lookup_1173_150(acc),
            [108, 101, 122, 97, 106, 115, 107] => lookup_1173_151(acc),
            [112, 111, 109, 111, 114, 115, 107, 105, 101] => lookup_1173_152(acc),
            [115, 119, 105, 100, 110, 105, 107] => lookup_1173_153(acc),
            [119, 114, 111, 99, 108, 97, 119] => lookup_1173_154(acc),
            [111, 112, 111, 99, 122, 110, 111] => lookup_1173_155(acc),
            [111, 108, 107, 117, 115, 122] => lookup_1173_156(acc),
            [99, 111, 109] => lookup_1173_157(acc),
            [107, 97, 114, 112, 97, 99, 122] => lookup_1173_158(acc),
            [112, 111, 110, 105, 97, 116, 111, 119, 97] => lookup_1173_159(acc),
            [103, 115, 109] => lookup_1173_160(acc),
            [111, 115, 116, 114, 111, 108, 101, 107, 97] => lookup_1173_161(acc),
            [109, 114, 97, 103, 111, 119, 111] => lookup_1173_162(acc),
            [107, 111, 110, 105, 110] => lookup_1173_163(acc),
            [111, 115, 116, 114, 111, 100, 97] => lookup_1173_164(acc),
            [98, 101, 100, 122, 105, 110] => lookup_1173_165(acc),
            [116, 117, 114, 121, 115, 116, 121, 107, 97] => lookup_1173_166(acc),
            [106, 97, 119, 111, 114, 122, 110, 111] => lookup_1173_167(acc),
            [103, 110, 105, 101, 122, 110, 111] => lookup_1173_168(acc),
            [115, 111, 115, 110, 111, 119, 105, 101, 99] => lookup_1173_169(acc),
            [103, 111, 118] => lookup_1173_170(labels, acc),
            [115, 116, 97, 114, 97, 99, 104, 111, 119, 105, 99, 101] => lookup_1173_171(acc),
            [112, 99] => lookup_1173_172(acc),
            [119, 97, 108, 98, 114, 122, 121, 99, 104] => lookup_1173_173(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1174_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1174_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1174<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 111, 114] => lookup_1174_0(acc),
            [114, 101, 112, 97, 105, 114] => lookup_1174_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1175_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1175_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1175_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1175_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1175_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1175_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1175_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1175_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1175_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1175_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1175<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 121, 102, 97, 115, 116] => lookup_1175_0(acc),
            [99, 108, 111, 117, 100, 97, 99, 99, 101, 115, 115] => lookup_1175_1(acc),
            [109, 105, 114, 99, 108, 111, 117, 100] => lookup_1175_2(acc),
            [116, 101, 109, 112, 117, 114, 108] => lookup_1175_3(acc),
            [119, 112, 109, 117, 100, 101, 118] => lookup_1175_4(acc),
            [106, 101, 108, 101] => lookup_1175_5(acc),
            [112, 99, 108, 111, 117, 100] => lookup_1175_6(acc),
            [102, 97, 115, 116, 118, 112, 115] => lookup_1175_7(acc),
            [104, 97, 108, 102] => lookup_1175_8(acc),
            [102, 114, 101, 101, 115, 105, 116, 101] => lookup_1175_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1176() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1177() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1178() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1179() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1180() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1181() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1182_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1182_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1182_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1182_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1182_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1182<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_1182_0(acc),
            [99, 111, 109] => lookup_1182_1(acc),
            [101, 100, 117] => lookup_1182_2(acc),
            [103, 111, 98] => lookup_1182_3(acc),
            [114, 101, 100] => lookup_1182_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1183() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1184() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1185() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1186_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1186_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1186<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 114, 97, 110, 115, 108, 97, 116, 101] => lookup_1186_0(acc),
            [99, 108, 111, 117, 100] => lookup_1186_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1187() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1188() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1189() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1190() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1191() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1192_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1192_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 121, 109, 97, 105, 108, 101, 114] => lookup_1192_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1192_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1192_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1192<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1192_0(acc),
            [229, 149, 134, 230, 165, 173] => lookup_1192_1(acc),
            [99, 111, 109] => lookup_1192_2(labels, acc),
            [120, 110, 45, 45, 117, 99, 48, 97, 116, 118] => lookup_1192_3(acc),
            [231, 182, 178, 232, 183, 175] => lookup_1192_4(acc),
            [110, 121, 109] => lookup_1192_5(acc),
            [105, 100, 118] => lookup_1192_6(acc),
            [101, 100, 117] => lookup_1192_7(acc),
            [99, 108, 117, 98] => lookup_1192_8(acc),
            [120, 110, 45, 45, 122, 102, 48, 97, 111, 54, 52, 97] => lookup_1192_9(acc),
            [109, 105, 108] => lookup_1192_10(acc),
            [110, 101, 116] => lookup_1192_11(acc),
            [111, 114, 103] => lookup_1192_12(acc),
            [103, 97, 109, 101] => lookup_1192_13(acc),
            [103, 111, 118] => lookup_1192_14(acc),
            [231, 181, 132, 231, 185, 148] => lookup_1192_15(acc),
            [120, 110, 45, 45, 99, 122, 114, 119, 50, 56, 98] => lookup_1192_16(acc),
            [101, 98, 105, 122] => lookup_1192_17(acc),
            [117, 114, 108] => lookup_1192_18(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1194() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1195() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1198() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1199() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1200() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1201() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1203() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1204() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1205() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1206() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1207() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1208() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1209() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1210() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1211() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1212() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1213() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1214() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1215_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1215_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1215_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1215_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1215_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1215_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1215_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1215_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1215_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1215_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1215_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1215_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1215_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1215_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1215<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 109, 98, 97, 105, 120, 97, 100, 97] => lookup_1215_0(acc),
            [110, 111, 109] => lookup_1215_1(acc),
            [110, 111, 104, 111] => lookup_1215_2(acc),
            [101, 100, 117] => lookup_1215_3(acc),
            [115, 97, 111, 116, 111, 109, 101] => lookup_1215_4(acc),
            [109, 105, 108] => lookup_1215_5(acc),
            [99, 111] => lookup_1215_6(acc),
            [110, 101, 116] => lookup_1215_7(acc),
            [99, 111, 110, 115, 117, 108, 97, 100, 111] => lookup_1215_8(acc),
            [99, 111, 109] => lookup_1215_9(acc),
            [103, 111, 118] => lookup_1215_10(acc),
            [111, 114, 103] => lookup_1215_11(acc),
            [112, 114, 105, 110, 99, 105, 112, 101] => lookup_1215_12(acc),
            [115, 116, 111, 114, 101] => lookup_1215_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1216() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1217() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1218_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1218_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1218_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1218_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1218_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1218_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1218_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1218_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1218_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1218_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1218_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1218<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1218_0(acc),
            [97, 109, 115, 119] => lookup_1218_1(acc),
            [100, 101, 109, 111, 110] => lookup_1218_2(acc),
            [116, 114, 97, 110, 115, 117, 114, 108] => lookup_1218_3(info, labels, acc),
            [99, 105, 115, 116, 114, 111, 110] => lookup_1218_4(acc),
            [107, 104, 112, 108, 97, 121] => lookup_1218_5(acc),
            [118, 105, 114, 116, 117, 101, 101, 108, 100, 111, 109, 101, 105, 110] => {
                lookup_1218_6(acc)
            }
            [99, 111] => lookup_1218_7(acc),
            [104, 111, 115, 116, 105, 110, 103, 45, 99, 108, 117, 115, 116, 101, 114] => {
                lookup_1218_8(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1219() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1220() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1221() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1222() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1223_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1223_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1223_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1223_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1223_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1223_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1223_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1223_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1223<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 115] => lookup_1223_0(acc),
            [103, 103] => lookup_1223_1(acc),
            [109, 99] => lookup_1223_2(acc),
            [98, 101] => lookup_1223_3(acc),
            [101, 117] => lookup_1223_4(acc),
            [117, 115] => lookup_1223_5(acc),
            [120, 121] => lookup_1223_6(acc),
            [99, 97, 116] => lookup_1223_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1224() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1225_0(acc),
            [111, 114, 103] => lookup_1225_1(acc),
            [99, 111] => lookup_1225_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1227() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1229() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1230() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1231() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1232() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1234() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1236() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1237_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1237_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1237_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1237_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1237_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1237_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1237_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1237_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1237_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1237_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1237<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 99] => lookup_1237_0(acc),
            [97, 99] => lookup_1237_1(acc),
            [98, 105, 122] => lookup_1237_2(acc),
            [101, 100, 117] => lookup_1237_3(acc),
            [105, 110, 102, 111] => lookup_1237_4(acc),
            [110, 101, 116] => lookup_1237_5(acc),
            [99, 111] => lookup_1237_6(acc),
            [111, 114, 103] => lookup_1237_7(acc),
            [103, 111, 118] => lookup_1237_8(acc),
            [100, 101] => lookup_1237_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1238() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1239() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1241_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1241_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1241_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1241_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1241_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1241_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1241_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1241_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1241_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1241<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 100] => lookup_1241_0(acc),
            [101, 100, 117] => lookup_1241_1(acc),
            [110, 101, 116] => lookup_1241_2(acc),
            [109, 101, 100] => lookup_1241_3(acc),
            [115, 99, 104] => lookup_1241_4(acc),
            [103, 111, 118] => lookup_1241_5(acc),
            [99, 111, 109] => lookup_1241_6(acc),
            [112, 108, 99] => lookup_1241_7(acc),
            [111, 114, 103] => lookup_1241_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1242() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1243() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1244() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1245() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1246() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1247() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1248_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 105, 115, 99, 111, 117, 114, 115, 101] => lookup_1248_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1249_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1249_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1249_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1249_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1249_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1249_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1249_5<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1249_5_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1249_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1249_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1249_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1249_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1249<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_1249_0(acc),
            [109, 105, 108] => lookup_1249_1(acc),
            [110, 101, 116] => lookup_1249_2(acc),
            [111, 114, 103] => lookup_1249_3(acc),
            [116, 117, 114] => lookup_1249_4(acc),
            [99, 111, 109] => lookup_1249_5(labels, acc),
            [109, 117, 115, 105, 99, 97] => lookup_1249_6(acc),
            [103, 111, 118] => lookup_1249_7(acc),
            [103, 111, 98] => lookup_1249_8(acc),
            [105, 110, 116] => lookup_1249_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1250() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1251() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1252() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1253() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1254() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1255() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1256() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1257() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1258() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1259() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1260() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1261() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1262() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1263() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1264() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1265_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1265_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1265_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1265_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1265_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1265_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1265<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_1265_0(acc),
            [111, 114, 103] => lookup_1265_1(acc),
            [108, 97, 98] => lookup_1265_2(acc),
            [103, 111, 118] => lookup_1265_3(acc),
            [101, 100, 117] => lookup_1265_4(acc),
            [99, 111, 109] => lookup_1265_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1266_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1266_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1266<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 121, 109] => lookup_1266_0(acc),
            [103, 111, 118] => lookup_1266_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1267_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [116, 101, 108, 101] => lookup_1267_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1267_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_58_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_58_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_58<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [99] => lookup_1267_58_0(acc),
            [114, 115, 99] => lookup_1267_58_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1267_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_77_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_77_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [115, 115, 108] => lookup_1267_77_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1267_77<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [111, 114, 105, 103, 105, 110] => lookup_1267_77_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1267_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_83_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_83_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_83<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 111, 109, 101] => lookup_1267_83_0(acc),
            [103, 111] => lookup_1267_83_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1267_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_96_0_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_96_0_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112] => lookup_1267_96_0_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1267_96_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [111, 115] => lookup_1267_96_0_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1267_96_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_96_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_96_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112] => lookup_1267_96_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1267_96<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [115, 116, 103] => lookup_1267_96_0(info, labels, acc),
            [99, 108, 111, 117, 100] => lookup_1267_96_1(acc),
            [111, 115] => lookup_1267_96_2(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1267_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_101<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 107] => lookup_1267_101_0(acc),
            [99, 97] => lookup_1267_101_1(acc),
            [116, 114] => lookup_1267_101_2(acc),
            [97, 108] => lookup_1267_101_3(acc),
            [97, 115, 115, 111] => lookup_1267_101_4(acc),
            [99, 104] => lookup_1267_101_5(acc),
            [105, 115] => lookup_1267_101_6(acc),
            [105, 108] => lookup_1267_101_7(acc),
            [115, 105] => lookup_1267_101_8(acc),
            [110, 111] => lookup_1267_101_9(acc),
            [101, 115] => lookup_1267_101_10(acc),
            [110, 122] => lookup_1267_101_11(acc),
            [99, 100] => lookup_1267_101_12(acc),
            [101, 100, 117] => lookup_1267_101_13(acc),
            [105, 110] => lookup_1267_101_14(acc),
            [102, 114] => lookup_1267_101_15(acc),
            [107, 114] => lookup_1267_101_16(acc),
            [100, 107] => lookup_1267_101_17(acc),
            [97, 117] => lookup_1267_101_18(acc),
            [99, 122] => lookup_1267_101_19(acc),
            [100, 101] => lookup_1267_101_20(acc),
            [105, 116] => lookup_1267_101_21(acc),
            [101, 101] => lookup_1267_101_22(acc),
            [104, 117] => lookup_1267_101_23(acc),
            [106, 112] => lookup_1267_101_24(acc),
            [108, 118] => lookup_1267_101_25(acc),
            [97, 116] => lookup_1267_101_26(acc),
            [104, 114] => lookup_1267_101_27(acc),
            [108, 116] => lookup_1267_101_28(acc),
            [108, 117] => lookup_1267_101_29(acc),
            [110, 101, 116] => lookup_1267_101_30(acc),
            [110, 108] => lookup_1267_101_31(acc),
            [99, 121] => lookup_1267_101_32(acc),
            [109, 101] => lookup_1267_101_33(acc),
            [112, 108] => lookup_1267_101_34(acc),
            [112, 116] => lookup_1267_101_35(acc),
            [105, 101] => lookup_1267_101_36(acc),
            [98, 103] => lookup_1267_101_37(acc),
            [114, 111] => lookup_1267_101_38(acc),
            [99, 110] => lookup_1267_101_39(acc),
            [114, 117] => lookup_1267_101_40(acc),
            [115, 107] => lookup_1267_101_41(acc),
            [117, 107] => lookup_1267_101_42(acc),
            [102, 105] => lookup_1267_101_43(acc),
            [112, 97, 114, 105, 115] => lookup_1267_101_44(acc),
            [113, 45, 97] => lookup_1267_101_45(acc),
            [109, 99] => lookup_1267_101_46(acc),
            [109, 116] => lookup_1267_101_47(acc),
            [98, 101] => lookup_1267_101_48(acc),
            [109, 121] => lookup_1267_101_49(acc),
            [110, 103] => lookup_1267_101_50(acc),
            [103, 114] => lookup_1267_101_51(acc),
            [117, 115] => lookup_1267_101_52(acc),
            [105, 110, 116] => lookup_1267_101_53(acc),
            [115, 101] => lookup_1267_101_54(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1267_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 109, 117, 110, 101] => lookup_1267_0(info, labels, acc),
            [114, 101, 97, 100, 109, 121, 98, 108, 111, 103] => lookup_1267_1(acc),
            [101, 100, 117, 103, 105, 116] => lookup_1267_2(acc),
            [112, 111, 100, 122, 111, 110, 101] => lookup_1267_3(acc),
            [109, 121, 45, 102, 105, 114, 101, 119, 97, 108, 108] => lookup_1267_4(acc),
            [112, 105, 109, 105, 101, 110, 116, 97] => lookup_1267_5(acc),
            [100, 117, 99, 107, 100, 110, 115] => lookup_1267_6(acc),
            [109, 97, 121, 102, 105, 114, 115, 116] => lookup_1267_7(acc),
            [105, 115, 45, 102, 111, 117, 110, 100] => lookup_1267_8(acc),
            [105, 115, 45, 118, 101, 114, 121, 45, 110, 105, 99, 101] => lookup_1267_9(acc),
            [102, 114, 101, 101, 100, 100, 110, 115] => lookup_1267_10(acc),
            [110, 111, 45, 105, 112] => lookup_1267_11(acc),
            [119, 109, 102, 108, 97, 98, 115] => lookup_1267_12(acc),
            [100, 111, 110, 116, 101, 120, 105, 115, 116] => lookup_1267_13(acc),
            [100, 111, 101, 115, 110, 116, 101, 120, 105, 115, 116] => lookup_1267_14(acc),
            [102, 114, 111, 109, 45, 109, 101] => lookup_1267_15(acc),
            [103, 111, 116, 100, 110, 115] => lookup_1267_16(acc),
            [104, 101, 112, 102, 111, 114, 103, 101] => lookup_1267_17(acc),
            [116, 119, 109, 97, 105, 108] => lookup_1267_18(acc),
            [116, 111, 111, 108, 102, 111, 114, 103, 101] => lookup_1267_19(acc),
            [102, 97, 109, 105, 108, 121, 100, 115] => lookup_1267_20(acc),
            [105, 115, 45, 118, 101, 114, 121, 45, 115, 119, 101, 101, 116] => lookup_1267_21(acc),
            [107, 105, 99, 107, 115, 45, 97, 115, 115] => lookup_1267_22(acc),
            [104, 111, 112, 116, 111] => lookup_1267_23(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_1267_24(acc),
            [105, 115, 45, 108, 111, 115, 116] => lookup_1267_25(acc),
            [109, 111, 122, 105, 108, 108, 97, 45, 105, 111, 116] => lookup_1267_26(acc),
            [105, 115, 45, 118, 101, 114, 121, 45, 103, 111, 111, 100] => lookup_1267_27(acc),
            [104, 111, 109, 101, 102, 116, 112] => lookup_1267_28(acc),
            [105, 115, 45, 97, 45, 103, 101, 101, 107] => lookup_1267_29(acc),
            [105, 115, 45, 97, 45, 99, 104, 101, 102] => lookup_1267_30(acc),
            [105, 115, 45, 97, 45, 112, 97, 116, 115, 102, 97, 110] => lookup_1267_31(acc),
            [99, 111, 117, 99, 104, 112, 111, 116, 97, 116, 111, 102, 114, 105, 101, 115] => {
                lookup_1267_32(acc)
            }
            [105, 115, 97, 45, 103, 101, 101, 107] => lookup_1267_33(acc),
            [105, 115, 45, 115, 97, 118, 101, 100] => lookup_1267_34(acc),
            [109, 121, 119, 105, 114, 101] => lookup_1267_35(acc),
            [100, 110, 115, 100, 111, 106, 111] => lookup_1267_36(acc),
            [104, 111, 109, 101, 117, 110, 105, 120] => lookup_1267_37(acc),
            [100, 121, 110, 97, 108, 105, 97, 115] => lookup_1267_38(acc),
            [100, 118, 114, 100, 110, 115] => lookup_1267_39(acc),
            [98, 109, 111, 97, 116, 116, 97, 99, 104, 109, 101, 110, 116, 115] => {
                lookup_1267_40(acc)
            }
            [109, 121, 102, 105, 114, 101, 119, 97, 108, 108] => lookup_1267_41(acc),
            [119, 109, 99, 108, 111, 117, 100] => lookup_1267_42(acc),
            [98, 108, 111, 103, 115, 105, 116, 101] => lookup_1267_43(acc),
            [119, 101, 98, 104, 111, 112] => lookup_1267_44(acc),
            [103, 97, 109, 101, 45, 104, 111, 115, 116] => lookup_1267_45(acc),
            [102, 101, 100, 111, 114, 97, 112, 101, 111, 112, 108, 101] => lookup_1267_46(acc),
            [104, 111, 98, 98, 121, 45, 115, 105, 116, 101] => lookup_1267_47(acc),
            [115, 109, 97, 108, 108, 45, 119, 101, 98] => lookup_1267_48(acc),
            [100, 121, 110, 115, 101, 114, 118] => lookup_1267_49(acc),
            [98, 97, 114, 115, 121] => lookup_1267_50(acc),
            [105, 110, 45, 100, 115, 108] => lookup_1267_51(acc),
            [112, 111, 116, 97, 103, 101, 114] => lookup_1267_52(acc),
            [99, 97, 98, 108, 101, 45, 109, 111, 100, 101, 109] => lookup_1267_53(acc),
            [117, 115] => lookup_1267_54(acc),
            [115, 116, 117, 102, 102, 45, 52, 45, 115, 97, 108, 101] => lookup_1267_55(acc),
            [102, 114, 101, 101, 100, 101, 115, 107, 116, 111, 112] => lookup_1267_56(acc),
            [122, 97, 112, 116, 111] => lookup_1267_57(acc),
            [99, 100, 110, 55, 55] => lookup_1267_58(info, labels, acc),
            [97, 99, 99, 101, 115, 115, 99, 97, 109] => lookup_1267_59(acc),
            [114, 101, 97, 100, 45, 98, 111, 111, 107, 115] => lookup_1267_60(acc),
            [99, 101, 114, 116, 109, 103, 114] => lookup_1267_61(acc),
            [100, 111, 111, 109, 100, 110, 115] => lookup_1267_62(acc),
            [105, 115, 45, 97, 45, 98, 114, 117, 105, 110, 115, 102, 97, 110] => {
                lookup_1267_63(acc)
            }
            [98, 111, 108, 100, 108, 121, 103, 111, 105, 110, 103, 110, 111, 119, 104, 101, 114, 101] => {
                lookup_1267_64(acc)
            }
            [101, 110, 100, 111, 102, 116, 104, 101, 105, 110, 116, 101, 114, 110, 101, 116] => {
                lookup_1267_65(acc)
            }
            [109, 121, 102, 116, 112] => lookup_1267_66(acc),
            [116, 117, 110, 107] => lookup_1267_67(acc),
            [104, 107] => lookup_1267_68(acc),
            [110, 102, 108, 102, 97, 110] => lookup_1267_69(acc),
            [105, 115, 45, 118, 101, 114, 121, 45, 98, 97, 100] => lookup_1267_70(acc),
            [105, 115, 45, 97, 45, 99, 97, 110, 100, 105, 100, 97, 116, 101] => lookup_1267_71(acc),
            [112, 117, 98, 116, 108, 115] => lookup_1267_72(acc),
            [99, 111, 108, 108, 101, 103, 101, 102, 97, 110] => lookup_1267_73(acc),
            [115, 119, 101, 101, 116, 112, 101, 112, 112, 101, 114] => lookup_1267_74(acc),
            [116, 117, 120, 102, 97, 109, 105, 108, 121] => lookup_1267_75(acc),
            [97, 101] => lookup_1267_76(acc),
            [99, 100, 110, 55, 55, 45, 115, 101, 99, 117, 114, 101] => {
                lookup_1267_77(info, labels, acc)
            }
            [105, 115, 45, 97, 45, 107, 110, 105, 103, 104, 116] => lookup_1267_78(acc),
            [115, 101, 108, 108, 115, 121, 111, 117, 114, 104, 111, 109, 101] => {
                lookup_1267_79(acc)
            }
            [99, 97, 109, 100, 118, 114] => lookup_1267_80(acc),
            [100, 115, 109, 121, 110, 97, 115] => lookup_1267_81(acc),
            [100, 110, 115, 97, 108, 105, 97, 115] => lookup_1267_82(acc),
            [100, 121, 110, 100, 110, 115] => lookup_1267_83(labels, acc),
            [105, 115, 45, 118, 101, 114, 121, 45, 101, 118, 105, 108] => lookup_1267_84(acc),
            [105, 115, 45, 97, 45, 115, 111, 120, 102, 97, 110] => lookup_1267_85(acc),
            [104, 111, 109, 101, 100, 110, 115] => lookup_1267_86(acc),
            [98, 108, 111, 103, 100, 110, 115] => lookup_1267_87(acc),
            [119, 101, 98, 114, 101, 100, 105, 114, 101, 99, 116] => lookup_1267_88(acc),
            [101, 110, 100, 111, 102, 105, 110, 116, 101, 114, 110, 101, 116] => {
                lookup_1267_89(acc)
            }
            [100, 105, 115, 107, 115, 116, 97, 116, 105, 111, 110] => lookup_1267_90(acc),
            [117, 102, 99, 102, 97, 110] => lookup_1267_91(acc),
            [109, 121, 115, 101, 99, 117, 114, 105, 116, 121, 99, 97, 109, 101, 114, 97] => {
                lookup_1267_92(acc)
            }
            [100, 100, 110, 115, 115] => lookup_1267_93(acc),
            [109, 105, 115, 99, 111, 110, 102, 117, 115, 101, 100] => lookup_1267_94(acc),
            [115, 101, 114, 118, 101, 102, 116, 112] => lookup_1267_95(acc),
            [102, 101, 100, 111, 114, 97, 112, 114, 111, 106, 101, 99, 116] => {
                lookup_1267_96(info, labels, acc)
            }
            [115, 101, 108, 102, 105, 112] => lookup_1267_97(acc),
            [102, 101, 100, 111, 114, 97, 105, 110, 102, 114, 97, 99, 108, 111, 117, 100] => {
                lookup_1267_98(acc)
            }
            [105, 115, 45, 97, 45, 108, 105, 110, 117, 120, 45, 117, 115, 101, 114] => {
                lookup_1267_99(acc)
            }
            [110, 111, 119, 45, 100, 110, 115] => lookup_1267_100(acc),
            [101, 117] => lookup_1267_101(labels, acc),
            [122, 97] => lookup_1267_102(acc),
            [109, 108, 98, 102, 97, 110] => lookup_1267_103(acc),
            [115, 101, 114, 118, 101, 98, 98, 115] => lookup_1267_104(acc),
            [112, 111, 105, 118, 114, 111, 110] => lookup_1267_105(acc),
            [104, 111, 109, 101, 108, 105, 110, 117, 120] => lookup_1267_106(acc),
            [115, 101, 114, 118, 101, 103, 97, 109, 101] => lookup_1267_107(acc),
            [97, 108, 116, 101, 114, 118, 105, 115, 116, 97] => lookup_1267_108(acc),
            [106, 115] => lookup_1267_109(acc),
            [115, 112, 100, 110, 115] => lookup_1267_110(acc),
            [105, 110, 45, 118, 112, 110] => lookup_1267_111(acc),
            [105, 115, 45, 97, 45, 99, 101, 108, 116, 105, 99, 115, 102, 97, 110] => {
                lookup_1267_112(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1268() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1269() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1270_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1270_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1270_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1270_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1270_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1270_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1270_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1270_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1270_7<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1270_7_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1270_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1270_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1270<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1270_0(acc),
            [114, 105, 105, 107] => lookup_1270_1(acc),
            [101, 100, 117] => lookup_1270_2(acc),
            [109, 101, 100] => lookup_1270_3(acc),
            [97, 105, 112] => lookup_1270_4(acc),
            [111, 114, 103] => lookup_1270_5(acc),
            [103, 111, 118] => lookup_1270_6(acc),
            [99, 111, 109] => lookup_1270_7(labels, acc),
            [102, 105, 101] => lookup_1270_8(acc),
            [112, 114, 105] => lookup_1270_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1272() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1273() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1274() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1275() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1276() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1277() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1278() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1279() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1280() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1281() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1282() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1283() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1284() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1285() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1286() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1287() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1288() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1289() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1290() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1291() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1292() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1293() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1294() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1295() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1296() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1297() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1298() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1299() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1300() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1301() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1302() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1303_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1303_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1303<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 116] => lookup_1303_0(acc),
            [110, 111, 109] => lookup_1303_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1304() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1305_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1305_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1305_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1305_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1305_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1305_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1305_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1305_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1305<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 121, 99, 108, 111, 117, 100] => lookup_1305_0(acc),
            [110, 121, 109] => lookup_1305_1(acc),
            [99, 111, 109] => lookup_1305_2(labels, acc),
            [103, 111, 118] => lookup_1305_3(acc),
            [111, 102] => lookup_1305_4(acc),
            [109, 105, 108] => lookup_1305_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1306_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1306<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 119, 110] => lookup_1306_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1307_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1307<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1307_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1308() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1309_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1309_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1309_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1309<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 101] => lookup_1309_0(acc),
            [119, 101] => lookup_1309_1(acc),
            [99, 104] => lookup_1309_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1310_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1310<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 102, 102, 105, 99, 105, 97, 108] => lookup_1310_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1311() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1312_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1312_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1312_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1312<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109, 112, 117, 116, 101] => lookup_1312_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1313() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1314() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1315() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1316_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1316<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1316_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1317() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1318() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1319_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1319<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1319_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1320() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1321() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1322() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1323() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1324() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1325() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1326() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1327() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1328() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1329() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1330() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1331() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1332() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1333() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1334() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1335_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1335_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1335_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1335<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 119, 111] => lookup_1335_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1336() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1337() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1338() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1339() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1340() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1341_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_10_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_10_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1341_10_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1341_10_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_10_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1341_10_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1341_10_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_10_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1341_10_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1341_10_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_10_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1341_10_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1341_10<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 97, 110, 100, 105, 110, 103] => lookup_1341_10_0(info, labels, acc),
            [115, 112, 101, 99, 116, 114, 117, 109] => lookup_1341_10_1(info, labels, acc),
            [118, 112, 115] => lookup_1341_10_2(info, labels, acc),
            [104, 111, 115, 116, 105, 110, 103] => lookup_1341_10_3(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1341_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_16_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_16<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [104, 98] => lookup_1341_16_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1341_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_25_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_25<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [118, 112, 115] => lookup_1341_25_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1341_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_36_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_36<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_1341_36_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1341_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1341<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 97, 108, 109, 121, 107, 105, 97] => lookup_1341_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1341_1(acc),
            [109, 111, 114, 100, 111, 118, 105, 97] => lookup_1341_2(acc),
            [118, 108, 97, 100, 105, 109, 105, 114] => lookup_1341_3(acc),
            [108, 107, 51] => lookup_1341_4(acc),
            [100, 97, 103, 101, 115, 116, 97, 110] => lookup_1341_5(acc),
            [107, 117, 115, 116, 97, 110, 97, 105] => lookup_1341_6(acc),
            [98, 97, 115, 104, 107, 105, 114, 105, 97] => lookup_1341_7(acc),
            [109, 99, 112, 114, 101] => lookup_1341_8(acc),
            [109, 115, 107] => lookup_1341_9(acc),
            [109, 121, 106, 105, 110, 111] => lookup_1341_10(labels, acc),
            [118, 108, 97, 100, 105, 107, 97, 118, 107, 97, 122] => lookup_1341_11(acc),
            [116, 101, 115, 116] => lookup_1341_12(acc),
            [103, 114, 111, 122, 110, 121] => lookup_1341_13(acc),
            [101, 100, 117] => lookup_1341_14(acc),
            [109, 97, 114, 105, 110, 101] => lookup_1341_15(acc),
            [99, 108, 100, 109, 97, 105, 108] => lookup_1341_16(info, labels, acc),
            [109, 105, 108] => lookup_1341_17(acc),
            [110, 101, 116] => lookup_1341_18(acc),
            [111, 114, 103] => lookup_1341_19(acc),
            [112, 112] => lookup_1341_20(acc),
            [114, 97, 45, 114, 117] => lookup_1341_21(acc),
            [99, 98, 103] => lookup_1341_22(acc),
            [122, 115, 101, 119] => lookup_1341_23(acc),
            [114, 97, 115] => lookup_1341_24(acc),
            [109, 99, 100, 105, 114] => lookup_1341_25(labels, acc),
            [97, 99] => lookup_1341_26(acc),
            [115, 112, 98] => lookup_1341_27(acc),
            [109, 121, 116, 105, 115] => lookup_1341_28(acc),
            [112, 121, 97, 116, 105, 103, 111, 114, 115, 107] => lookup_1341_29(acc),
            [109, 105, 114, 99, 108, 111, 117, 100] => lookup_1341_30(acc),
            [98, 105, 114] => lookup_1341_31(acc),
            [99, 111, 109] => lookup_1341_32(acc),
            [97, 100, 121, 103, 101, 121, 97] => lookup_1341_33(acc),
            [110, 97, 52, 117] => lookup_1341_34(acc),
            [110, 111, 118] => lookup_1341_35(acc),
            [114, 101, 103, 114, 117, 104, 111, 115, 116, 105, 110, 103] => {
                lookup_1341_36(info, labels, acc)
            }
            [103, 111, 118] => lookup_1341_37(acc),
            [105, 110, 116] => lookup_1341_38(acc),
            [110, 97, 108, 99, 104, 105, 107] => lookup_1341_39(acc),
            [101, 117, 114, 111, 100, 105, 114] => lookup_1341_40(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1342() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1343() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1344() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1345_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1345_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [122] => lookup_1345_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1345_1(acc),
            [54] => lookup_1345_2(acc),
            [109] => lookup_1345_3(acc),
            [108] => lookup_1345_4(acc),
            [51] => lookup_1345_5(acc),
            [121] => lookup_1345_6(acc),
            [118] => lookup_1345_7(acc),
            [114] => lookup_1345_8(acc),
            [98] => lookup_1345_9(acc),
            [106] => lookup_1345_10(acc),
            [52] => lookup_1345_11(acc),
            [115] => lookup_1345_12(acc),
            [48] => lookup_1345_13(acc),
            [57] => lookup_1345_14(acc),
            [100] => lookup_1345_15(acc),
            [102] => lookup_1345_16(acc),
            [104] => lookup_1345_17(acc),
            [117] => lookup_1345_18(acc),
            [112] => lookup_1345_19(acc),
            [113] => lookup_1345_20(acc),
            [50] => lookup_1345_21(acc),
            [120] => lookup_1345_22(acc),
            [105] => lookup_1345_23(acc),
            [99] => lookup_1345_24(acc),
            [110] => lookup_1345_25(acc),
            [56] => lookup_1345_26(acc),
            [53] => lookup_1345_27(acc),
            [98, 97, 114, 115, 121] => lookup_1345_28(acc),
            [55] => lookup_1345_29(acc),
            [119] => lookup_1345_30(acc),
            [97] => lookup_1345_31(acc),
            [116] => lookup_1345_32(acc),
            [103] => lookup_1345_33(acc),
            [107] => lookup_1345_34(acc),
            [49] => lookup_1345_35(acc),
            [111] => lookup_1345_36(acc),
            [101] => lookup_1345_37(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1346() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1347() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1348_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1348_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1348_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1348_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1348_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1348_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1348_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1348_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1348_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1348_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1348<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1348_0(acc),
            [110, 97, 109, 101] => lookup_1348_1(acc),
            [98, 105, 122] => lookup_1348_2(acc),
            [109, 105, 108] => lookup_1348_3(acc),
            [105, 110, 102, 111] => lookup_1348_4(acc),
            [110, 101, 116] => lookup_1348_5(acc),
            [111, 114, 103] => lookup_1348_6(acc),
            [99, 111, 109] => lookup_1348_7(acc),
            [103, 111, 118] => lookup_1348_8(acc),
            [112, 114, 111] => lookup_1348_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1349_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1349_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1349_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1349_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1349_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1349_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1349_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1349_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1349_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1349_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1349_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1349_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1349_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1349_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1349_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1349_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1349_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1349<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 111, 112] => lookup_1349_0(acc),
            [97, 115, 115] => lookup_1349_1(acc),
            [109, 101, 100, 101, 99, 105, 110] => lookup_1349_2(acc),
            [118, 101, 116, 101, 114, 105, 110, 97, 105, 114, 101] => lookup_1349_3(acc),
            [112, 114, 100] => lookup_1349_4(acc),
            [97, 115, 115, 111] => lookup_1349_5(acc),
            [116, 109] => lookup_1349_6(acc),
            [99, 111, 109] => lookup_1349_7(acc),
            [112, 114, 101, 115, 115, 101] => lookup_1349_8(acc),
            [112, 104, 97, 114, 109, 97, 99, 105, 101, 110, 115] => lookup_1349_9(acc),
            [101, 100, 117] => lookup_1349_10(acc),
            [109, 105, 108] => lookup_1349_11(acc),
            [111, 114, 103] => lookup_1349_12(acc),
            [103, 111, 117, 118] => lookup_1349_13(acc),
            [103, 111, 118] => lookup_1349_14(acc),
            [110, 111, 116, 97, 105, 114, 101, 115] => lookup_1349_15(acc),
            [110, 111, 109] => lookup_1349_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1350() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1351() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1353() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1354() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1355_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1355_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1355_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1355_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1355<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 111, 110, 121] => lookup_1355_0(acc),
            [106, 101, 108, 101] => lookup_1355_1(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_1355_2(acc),
            [98, 97, 114, 115, 121] => lookup_1355_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1356() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1357() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1358() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1359() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1360() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1361() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1362() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1363() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1365() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1366_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1366_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1366_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1366_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1366_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1366_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1366_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1366_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1366_8_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1366_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1366_8_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1366_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1366_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1366_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1366_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1366_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1366_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1366_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1366_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1366_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1366_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1366_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1366<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [121, 107] => lookup_1366_0(acc),
            [115, 107] => lookup_1366_1(acc),
            [110, 102] => lookup_1366_2(acc),
            [110, 115] => lookup_1366_3(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1366_4(acc),
            [112, 101] => lookup_1366_5(acc),
            [110, 98] => lookup_1366_6(acc),
            [98, 97, 114, 115, 121] => lookup_1366_7(acc),
            [97, 119, 100, 101, 118] => lookup_1366_8(info, labels, acc),
            [113, 99] => lookup_1366_9(acc),
            [98, 99] => lookup_1366_10(acc),
            [111, 110] => lookup_1366_11(acc),
            [97, 98] => lookup_1366_12(acc),
            [109, 98] => lookup_1366_13(acc),
            [99, 111] => lookup_1366_14(acc),
            [110, 117] => lookup_1366_15(acc),
            [110, 108] => lookup_1366_16(acc),
            [103, 99] => lookup_1366_17(acc),
            [110, 111, 45, 105, 112] => lookup_1366_18(acc),
            [110, 116] => lookup_1366_19(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1367_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1367_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1367_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1367_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1367_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1367_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1367_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1367_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1367_7<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1367_7_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1367_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1367_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1367<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 99] => lookup_1367_0(acc),
            [103, 111] => lookup_1367_1(acc),
            [111, 114] => lookup_1367_2(acc),
            [97, 99] => lookup_1367_3(acc),
            [109, 111, 98, 105] => lookup_1367_4(acc),
            [105, 110, 102, 111] => lookup_1367_5(acc),
            [109, 101] => lookup_1367_6(acc),
            [99, 111] => lookup_1367_7(labels, acc),
            [110, 111, 109] => lookup_1367_8(acc),
            [110, 101] => lookup_1367_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1368() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1369() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1370_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1370<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1370_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1371() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1372() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1373() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1374() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1375() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1376_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1376<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_1376_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1377() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1378() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1379_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1379_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1379_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_10_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_10<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1379_10_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1379_11_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_11_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_11_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1379_11_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1379_11<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112] => lookup_1379_11_0(acc),
            [98, 97, 99, 107, 121, 97, 114, 100, 115] => lookup_1379_11_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1379_12_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_12<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [103] => lookup_1379_12_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1379_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_15_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_15<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116, 111, 109, 101, 114] => lookup_1379_15_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1379_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_21_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_21<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1379_21_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1379_22_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_22<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [115, 116, 97, 103, 101] => lookup_1379_22_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1379_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_25_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_25<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [100, 121, 110, 100, 110, 115] => lookup_1379_25_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1379_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_29_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_29<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [100, 101, 118, 105, 99, 101, 115] => lookup_1379_29_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1379_30_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_30<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112, 115] => lookup_1379_30_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1379_31_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_31_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1379_31_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1379_31<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 121, 115] => lookup_1379_31_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1379_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_38_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_38<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [117, 107, 48] => lookup_1379_38_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1379_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_44_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_44_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_44_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_44<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 45, 102, 114, 49] => lookup_1379_44_0(acc),
            [99, 108, 111, 117, 100] => lookup_1379_44_1(acc),
            [99, 108, 111, 117, 100, 45, 100, 101] => lookup_1379_44_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1379_45_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_45<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1379_45_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1379_46_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_46<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1379_46_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1379_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1379_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_52_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_52<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 15usize;
    match labels.next() {
        Some(label) => match label {
            [111, 99, 115] => lookup_1379_52_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1379_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_56_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_56_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116] => lookup_1379_56_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1379_56_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_56_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116] => lookup_1379_56_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1379_56_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_56_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116] => lookup_1379_56_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1379_56_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_56_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116] => lookup_1379_56_3_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1379_56<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [116, 101, 115, 116, 105, 110, 103] => lookup_1379_56_0(info, labels, acc),
            [100, 101, 118] => lookup_1379_56_1(info, labels, acc),
            [100, 105, 115, 114, 101, 99] => lookup_1379_56_2(info, labels, acc),
            [112, 114, 111, 100] => lookup_1379_56_3(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1379_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_59_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379_59<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1379_59_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1379_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1379<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [118, 105, 114, 116, 117, 97, 108, 115, 101, 114, 118, 101, 114] => lookup_1379_0(acc),
            [98, 114, 111, 119, 115, 101, 114, 115, 97, 102, 101, 116, 121, 109, 97, 114, 107] => {
                lookup_1379_1(acc)
            }
            [115, 116, 111, 108, 111, 115] => lookup_1379_2(info, labels, acc),
            [108, 111, 108, 105, 112, 111, 112] => lookup_1379_3(acc),
            [118, 97, 112, 111, 114, 99, 108, 111, 117, 100] => lookup_1379_4(acc),
            [110, 105, 100] => lookup_1379_5(acc),
            [116, 101, 108, 101, 98, 105, 116] => lookup_1379_6(acc),
            [110, 111, 100, 117, 109] => lookup_1379_7(acc),
            [100, 121, 110, 53, 51] => lookup_1379_8(acc),
            [117, 116, 119, 101, 110, 116, 101] => lookup_1379_9(acc),
            [97, 122, 117, 114, 101, 99, 111, 110, 116, 97, 105, 110, 101, 114] => {
                lookup_1379_10(info, labels, acc)
            }
            [98, 97, 110, 122, 97, 105, 99, 108, 111, 117, 100] => {
                lookup_1379_11(info, labels, acc)
            }
            [118, 98, 114, 112, 108, 115, 98, 120] => lookup_1379_12(info, labels, acc),
            [103, 105, 116, 104, 117, 98] => lookup_1379_13(acc),
            [99, 108, 101, 118, 101, 114, 97, 112, 112, 115] => lookup_1379_14(acc),
            [101, 110, 111, 110, 105, 99] => lookup_1379_15(labels, acc),
            [108, 111, 103, 105, 110, 108, 105, 110, 101] => lookup_1379_16(acc),
            [115, 104, 105, 102, 116, 101, 100, 105, 116] => lookup_1379_17(acc),
            [50, 48, 51, 56] => lookup_1379_18(acc),
            [100, 114, 117, 100] => lookup_1379_19(acc),
            [104, 97, 115, 117, 114, 97, 45, 97, 112, 112] => lookup_1379_20(acc),
            [115, 53, 121] => lookup_1379_21(info, labels, acc),
            [110, 111, 100, 101, 97, 114, 116] => lookup_1379_22(info, labels, acc),
            [104, 122, 99] => lookup_1379_23(acc),
            [112, 114, 111, 116, 111, 110, 101, 116] => lookup_1379_24(acc),
            [100, 97, 112, 112, 110, 111, 100, 101] => lookup_1379_25(info, labels, acc),
            [98, 97, 99, 107, 112, 108, 97, 110, 101, 97, 112, 112] => lookup_1379_26(acc),
            [103, 104, 111, 115, 116] => lookup_1379_27(acc),
            [98, 111, 120, 102, 117, 115, 101] => lookup_1379_28(acc),
            [114, 101, 115, 105, 110, 115, 116, 97, 103, 105, 110, 103] => {
                lookup_1379_29(info, labels, acc)
            }
            [108, 97, 105, 114] => lookup_1379_30(info, labels, acc),
            [113, 99, 120] => lookup_1379_31(labels, acc),
            [112, 97, 110, 116, 104, 101, 111, 110, 115, 105, 116, 101] => lookup_1379_32(acc),
            [100, 101, 100, 121, 110] => lookup_1379_33(acc),
            [114, 101, 115, 105, 110, 100, 101, 118, 105, 99, 101] => lookup_1379_34(acc),
            [98, 45, 100, 97, 116, 97] => lookup_1379_35(acc),
            [110, 103, 114, 111, 107] => lookup_1379_36(acc),
            [109, 111, 45, 115, 105, 101, 109, 101, 110, 115] => lookup_1379_37(acc),
            [98, 105, 103, 118] => lookup_1379_38(info, labels, acc),
            [115, 112, 97, 99, 101, 107, 105, 116] => lookup_1379_39(acc),
            [119, 101, 100, 101, 112, 108, 111, 121] => lookup_1379_40(acc),
            [97, 112, 105, 103, 101, 101] => lookup_1379_41(acc),
            [98, 97, 115, 105, 99, 115, 101, 114, 118, 101, 114] => lookup_1379_42(acc),
            [100, 101, 102, 105, 110, 105, 109, 97] => lookup_1379_43(acc),
            [117, 110, 105, 115, 112, 97, 99, 101] => lookup_1379_44(info, labels, acc),
            [111, 110, 45, 114, 105, 111] => lookup_1379_45(info, labels, acc),
            [111, 110, 45, 107, 51, 115] => lookup_1379_46(info, labels, acc),
            [115, 104, 119] => lookup_1379_47(acc),
            [106, 101, 108, 101] => lookup_1379_48(acc),
            [99, 111, 109] => lookup_1379_49(acc),
            [102, 104, 45, 109, 117, 101, 110, 115, 116, 101, 114] => lookup_1379_50(acc),
            [115, 97, 110, 100, 99, 97, 116, 115] => lookup_1379_51(acc),
            [111, 112, 117, 115, 105, 110, 116, 101, 114, 97, 99, 116, 105, 118, 101] => {
                lookup_1379_52(info, labels, acc)
            }
            [103, 105, 116, 108, 97, 98] => lookup_1379_53(acc),
            [98, 97, 114, 115, 121] => lookup_1379_54(acc),
            [114, 101, 97, 100, 116, 104, 101, 100, 111, 99, 115] => lookup_1379_55(acc),
            [116, 104, 105, 110, 103, 100, 117, 115, 116] => lookup_1379_56(info, labels, acc),
            [119, 101, 98, 116, 104, 105, 110, 103, 115] => lookup_1379_57(acc),
            [104, 111, 115, 116, 121, 104, 111, 115, 116, 105, 110, 103] => lookup_1379_58(acc),
            [109, 111, 111, 110, 115, 99, 97, 108, 101] => lookup_1379_59(info, labels, acc),
            [113, 111, 116, 111] => lookup_1379_60(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1380() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1382() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1383() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1384() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1385() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1386() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1387() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1388_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1388_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1388_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1388_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1388_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1388_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1388<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1388_0(acc),
            [115, 116, 111, 114, 101] => lookup_1388_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1388_2(acc),
            [98, 105, 122] => lookup_1388_3(acc),
            [114, 101, 103] => lookup_1388_4(acc),
            [102, 105, 114, 109] => lookup_1388_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1389() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1390_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1390<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 51, 51, 55] => lookup_1390_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1391() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1392() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1393() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1394() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1395() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1396() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1397() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1398_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1398_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1398_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1398_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1398_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1398_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1398<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_1398_0(acc),
            [111, 114, 103] => lookup_1398_1(acc),
            [99, 111, 109] => lookup_1398_2(acc),
            [101, 100, 117] => lookup_1398_3(acc),
            [98, 105, 122] => lookup_1398_4(acc),
            [103, 111, 118] => lookup_1398_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1399_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1399_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1399_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1399_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 97, 103, 105, 110, 103] => lookup_1399_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1399_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1399_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1399<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 111, 114] => lookup_1399_0(acc),
            [117, 110, 100, 101, 114] => lookup_1399_1(acc),
            [111, 110, 114, 101, 100] => lookup_1399_2(labels, acc),
            [104, 111, 109, 101, 108, 105, 110, 107] => lookup_1399_3(acc),
            [115, 101, 114, 118, 105, 99, 101] => lookup_1399_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1400() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1401() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1402() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1403() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1404() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1405_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1405_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1405_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1405_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1405_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1405_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1405_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1405_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1405_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1405_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1405<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 111, 108] => lookup_1405_0(acc),
            [101, 100, 117] => lookup_1405_1(acc),
            [97, 115, 115, 111] => lookup_1405_2(acc),
            [110, 101, 116] => lookup_1405_3(acc),
            [111, 114, 103] => lookup_1405_4(acc),
            [116, 109] => lookup_1405_5(acc),
            [99, 111, 109] => lookup_1405_6(acc),
            [97, 114, 116] => lookup_1405_7(acc),
            [103, 111, 118] => lookup_1405_8(acc),
            [115, 111, 99] => lookup_1405_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1406_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1406_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1406_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1406_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1406_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1406_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1406_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1406_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1406_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1406_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1406_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1406_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1406_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1406_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1406_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1406_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1406_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1406_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1406_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1406_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1406_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1406<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 110, 102, 111] => lookup_1406_0(acc),
            [112, 101, 114, 115, 111] => lookup_1406_1(acc),
            [116, 111, 117, 114, 105, 115, 109] => lookup_1406_2(acc),
            [105, 110, 100] => lookup_1406_3(acc),
            [105, 110, 116, 108] => lookup_1406_4(acc),
            [114, 110, 114, 116] => lookup_1406_5(acc),
            [99, 111, 109] => lookup_1406_6(acc),
            [114, 110, 115] => lookup_1406_7(acc),
            [100, 101, 102, 101, 110, 115, 101] => lookup_1406_8(acc),
            [116, 117, 114, 101, 110] => lookup_1406_9(acc),
            [111, 114, 97, 110, 103, 101, 99, 108, 111, 117, 100] => lookup_1406_10(acc),
            [97, 103, 114, 105, 110, 101, 116] => lookup_1406_11(acc),
            [102, 105, 110] => lookup_1406_12(acc),
            [109, 105, 110, 99, 111, 109] => lookup_1406_13(acc),
            [101, 110, 115] => lookup_1406_14(acc),
            [110, 97, 116] => lookup_1406_15(acc),
            [110, 101, 116] => lookup_1406_16(acc),
            [103, 111, 118] => lookup_1406_17(acc),
            [111, 114, 103] => lookup_1406_18(acc),
            [114, 110, 117] => lookup_1406_19(acc),
            [101, 100, 117, 110, 101, 116] => lookup_1406_20(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1407() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1408() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1409() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1410() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1411() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1412() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1413() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1414_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1414<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 110, 105, 103, 104, 116, 112, 111, 105, 110, 116] => lookup_1414_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1415() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1416() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1417() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1418() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1419() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1420() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1421() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1422() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1423() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1424() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1425_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1425<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 111, 103, 105, 110, 108, 105, 110, 101] => lookup_1425_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1426() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1427() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1428_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1428_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1428_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1428_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1428<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [119, 111, 114, 115, 101, 45, 116, 104, 97, 110] => lookup_1428_0(acc),
            [111, 110, 45, 116, 104, 101, 45, 119, 101, 98] => lookup_1428_1(acc),
            [98, 101, 116, 116, 101, 114, 45, 116, 104, 97, 110] => lookup_1428_2(acc),
            [100, 121, 110, 100, 110, 115] => lookup_1428_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1429() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1430() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1431() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1432() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1434() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1435() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1436() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1437() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1438() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1439() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1440() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1441() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1442() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1443() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1444() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1445() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 105, 101, 110, 99, 105, 97] => lookup_1446_0(acc),
            [112, 108, 117, 114, 105, 110, 97, 99, 105, 111, 110, 97, 108] => lookup_1446_1(acc),
            [115, 97, 108, 117, 100] => lookup_1446_2(acc),
            [116, 101, 99, 110, 111, 108, 111, 103, 105, 97] => lookup_1446_3(acc),
            [116, 118] => lookup_1446_4(acc),
            [119, 101, 98] => lookup_1446_5(acc),
            [105, 110, 102, 111] => lookup_1446_6(acc),
            [97, 114, 116, 101] => lookup_1446_7(acc),
            [101, 99, 111, 108, 111, 103, 105, 97] => lookup_1446_8(acc),
            [101, 99, 111, 110, 111, 109, 105, 97] => lookup_1446_9(acc),
            [99, 111, 111, 112, 101, 114, 97, 116, 105, 118, 97] => lookup_1446_10(acc),
            [100, 101, 112, 111, 114, 116, 101] => lookup_1446_11(acc),
            [116, 107, 115, 97, 116] => lookup_1446_12(acc),
            [101, 100, 117] => lookup_1446_13(acc),
            [105, 110, 100, 117, 115, 116, 114, 105, 97] => lookup_1446_14(acc),
            [109, 105, 108] => lookup_1446_15(acc),
            [110, 101, 116] => lookup_1446_16(acc),
            [111, 114, 103] => lookup_1446_17(acc),
            [97, 103, 114, 111] => lookup_1446_18(acc),
            [109, 111, 118, 105, 109, 105, 101, 110, 116, 111] => lookup_1446_19(acc),
            [110, 111, 116, 105, 99, 105, 97, 115] => lookup_1446_20(acc),
            [112, 114, 111, 102, 101, 115, 105, 111, 110, 97, 108] => lookup_1446_21(acc),
            [119, 105, 107, 105] => lookup_1446_22(acc),
            [110, 97, 116, 117, 114, 97, 108] => lookup_1446_23(acc),
            [100, 101, 109, 111, 99, 114, 97, 99, 105, 97] => lookup_1446_24(acc),
            [98, 111, 108, 105, 118, 105, 97] => lookup_1446_25(acc),
            [116, 114, 97, 110, 115, 112, 111, 114, 116, 101] => lookup_1446_26(acc),
            [112, 117, 101, 98, 108, 111] => lookup_1446_27(acc),
            [99, 111, 109] => lookup_1446_28(acc),
            [97, 99, 97, 100, 101, 109, 105, 97] => lookup_1446_29(acc),
            [101, 109, 112, 114, 101, 115, 97] => lookup_1446_30(acc),
            [105, 110, 100, 105, 103, 101, 110, 97] => lookup_1446_31(acc),
            [112, 97, 116, 114, 105, 97] => lookup_1446_32(acc),
            [98, 108, 111, 103] => lookup_1446_33(acc),
            [114, 101, 118, 105, 115, 116, 97] => lookup_1446_34(acc),
            [109, 101, 100, 105, 99, 105, 110, 97] => lookup_1446_35(acc),
            [110, 111, 109, 98, 114, 101] => lookup_1446_36(acc),
            [109, 117, 115, 105, 99, 97] => lookup_1446_37(acc),
            [105, 110, 116] => lookup_1446_38(acc),
            [103, 111, 98] => lookup_1446_39(acc),
            [112, 111, 108, 105, 116, 105, 99, 97] => lookup_1446_40(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1447() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1449_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1449<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1449_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1450() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1451_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1451_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1451_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1451_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1451_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1451_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1451_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1451_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1451<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_1451_0(acc),
            [103, 117, 97, 109] => lookup_1451_1(acc),
            [119, 101, 98] => lookup_1451_2(acc),
            [105, 110, 102, 111] => lookup_1451_3(acc),
            [110, 101, 116] => lookup_1451_4(acc),
            [111, 114, 103] => lookup_1451_5(acc),
            [103, 111, 118] => lookup_1451_6(acc),
            [99, 111, 109] => lookup_1451_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1452() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1453() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1454() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1455() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1456() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1457() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1458() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1459() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1460() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1461() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1462() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1463_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1463_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1463_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1463_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1463_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1463_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1463_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1463_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1463_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1463_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1463_10_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1463_10<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1463_10_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1463_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1463_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1463_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1463_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1463_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1463_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1463_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1463<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1463_0(acc),
            [119, 101, 98] => lookup_1463_1(acc),
            [115, 99, 104, 111, 111, 108] => lookup_1463_2(acc),
            [116, 109] => lookup_1463_3(acc),
            [97, 103, 114, 105, 99] => lookup_1463_4(acc),
            [97, 108, 116] => lookup_1463_5(acc),
            [108, 97, 119] => lookup_1463_6(acc),
            [101, 100, 117] => lookup_1463_7(acc),
            [103, 114, 111, 110, 100, 97, 114] => lookup_1463_8(acc),
            [110, 103, 111] => lookup_1463_9(acc),
            [99, 111] => lookup_1463_10(labels, acc),
            [109, 105, 108] => lookup_1463_11(acc),
            [110, 101, 116] => lookup_1463_12(acc),
            [110, 105, 99] => lookup_1463_13(acc),
            [103, 111, 118] => lookup_1463_14(acc),
            [110, 105, 115] => lookup_1463_15(acc),
            [111, 114, 103] => lookup_1463_16(acc),
            [110, 111, 109] => lookup_1463_17(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1464() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1465_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1465_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1465_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1465<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_1465_0(acc),
            [111, 114, 103] => lookup_1465_1(acc),
            [99, 111, 109] => lookup_1465_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1466() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1467() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1468_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1468<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1468_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1469() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1470() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1471_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1471_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1471_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1471_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1471_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1471_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1471_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1471_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1471<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1471_0(acc),
            [101, 100, 117] => lookup_1471_1(acc),
            [109, 105, 108] => lookup_1471_2(acc),
            [97, 100, 118] => lookup_1471_3(acc),
            [110, 101, 116] => lookup_1471_4(acc),
            [99, 111] => lookup_1471_5(acc),
            [103, 111, 118] => lookup_1471_6(acc),
            [111, 114, 103] => lookup_1471_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1472() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1473() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1474() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1475() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1476() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1477_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1477_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1477_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1477_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1477_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1477_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1477<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_1477_0(acc),
            [111, 114, 103] => lookup_1477_1(acc),
            [99, 111, 109] => lookup_1477_2(acc),
            [97, 99] => lookup_1477_3(acc),
            [101, 100, 117] => lookup_1477_4(acc),
            [103, 111, 118] => lookup_1477_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1478() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1479_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1479_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1479_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1479_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1479_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1479_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1479_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1479_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1479<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_1479_0(acc),
            [109, 105, 108] => lookup_1479_1(acc),
            [110, 101, 116] => lookup_1479_2(acc),
            [111, 114, 103] => lookup_1479_3(acc),
            [103, 111, 118] => lookup_1479_4(acc),
            [99, 111, 109] => lookup_1479_5(acc),
            [112, 118, 116] => lookup_1479_6(acc),
            [110, 111, 109] => lookup_1479_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1480() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1481() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1482() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1483() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1484() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1485() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1486() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1487() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1488() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1489_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1489_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 101, 118] => lookup_1489_0_0(acc),
            [115, 105, 116, 101, 115] => lookup_1489_0_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1489<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 97, 116, 105, 99] => lookup_1489_0(labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1490() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1491() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1492() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1493_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1493<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 97, 108, 109, 121, 107, 105, 97] => lookup_1493_0(acc),
            [116, 117, 118, 97] => lookup_1493_1(acc),
            [107, 97, 114, 101, 108, 105, 97] => lookup_1493_2(acc),
            [109, 111, 114, 100, 111, 118, 105, 97] => lookup_1493_3(acc),
            [118, 108, 97, 100, 105, 109, 105, 114] => lookup_1493_4(acc),
            [105, 118, 97, 110, 111, 118, 111] => lookup_1493_5(acc),
            [107, 114, 97, 115, 110, 111, 100, 97, 114] => lookup_1493_6(acc),
            [97, 98, 107, 104, 97, 122, 105, 97] => lookup_1493_7(acc),
            [100, 97, 103, 101, 115, 116, 97, 110] => lookup_1493_8(acc),
            [97, 115, 104, 103, 97, 98, 97, 100] => lookup_1493_9(acc),
            [101, 120, 110, 101, 116] => lookup_1493_10(acc),
            [98, 97, 115, 104, 107, 105, 114, 105, 97] => lookup_1493_11(acc),
            [107, 97, 114, 97, 99, 111, 108] => lookup_1493_12(acc),
            [107, 117, 115, 116, 97, 110, 97, 105] => lookup_1493_13(acc),
            [109, 115, 107] => lookup_1493_14(acc),
            [116, 101, 114, 109, 101, 122] => lookup_1493_15(acc),
            [103, 101, 111, 114, 103, 105, 97] => lookup_1493_16(acc),
            [98, 117, 107, 104, 97, 114, 97] => lookup_1493_17(acc),
            [103, 114, 111, 122, 110, 121] => lookup_1493_18(acc),
            [116, 111, 103, 108, 105, 97, 116, 116, 105] => lookup_1493_19(acc),
            [116, 115, 101, 108, 105, 110, 111, 103, 114, 97, 100] => lookup_1493_20(acc),
            [118, 108, 97, 100, 105, 107, 97, 118, 107, 97, 122] => lookup_1493_21(acc),
            [106, 97, 109, 98, 121, 108] => lookup_1493_22(acc),
            [116, 97, 115, 104, 107, 101, 110, 116] => lookup_1493_23(acc),
            [107, 97, 114, 97, 103, 97, 110, 100, 97] => lookup_1493_24(acc),
            [97, 114, 109, 101, 110, 105, 97] => lookup_1493_25(acc),
            [97, 122, 101, 114, 98, 97, 105, 106, 97, 110] => lookup_1493_26(acc),
            [99, 104, 105, 109, 107, 101, 110, 116] => lookup_1493_27(acc),
            [101, 97, 115, 116, 45, 107, 97, 122, 97, 107, 104, 115, 116, 97, 110] => {
                lookup_1493_28(acc)
            }
            [107, 97, 108, 117, 103, 97] => lookup_1493_29(acc),
            [112, 111, 107, 114, 111, 118, 115, 107] => lookup_1493_30(acc),
            [115, 112, 98] => lookup_1493_31(acc),
            [118, 111, 108, 111, 103, 100, 97] => lookup_1493_32(acc),
            [97, 100, 121, 103, 101, 121, 97] => lookup_1493_33(acc),
            [98, 114, 121, 97, 110, 115, 107] => lookup_1493_34(acc),
            [107, 117, 114, 103, 97, 110] => lookup_1493_35(acc),
            [111, 98, 110, 105, 110, 115, 107] => lookup_1493_36(acc),
            [97, 107, 116, 121, 117, 98, 105, 110, 115, 107] => lookup_1493_37(acc),
            [116, 117, 108, 97] => lookup_1493_38(acc),
            [110, 121, 109] => lookup_1493_39(acc),
            [98, 97, 108, 97, 115, 104, 111, 118] => lookup_1493_40(acc),
            [107, 104, 97, 107, 97, 115, 115, 105, 97] => lookup_1493_41(acc),
            [108, 101, 110, 117, 103] => lookup_1493_42(acc),
            [97, 114, 107, 104, 97, 110, 103, 101, 108, 115, 107] => lookup_1493_43(acc),
            [109, 117, 114, 109, 97, 110, 115, 107] => lookup_1493_44(acc),
            [110, 111, 114, 116, 104, 45, 107, 97, 122, 97, 107, 104, 115, 116, 97, 110] => {
                lookup_1493_45(acc)
            }
            [110, 111, 118] => lookup_1493_46(acc),
            [110, 97, 118, 111, 105] => lookup_1493_47(acc),
            [116, 114, 111, 105, 116, 115, 107] => lookup_1493_48(acc),
            [109, 97, 110, 103, 121, 115, 104, 108, 97, 107] => lookup_1493_49(acc),
            [110, 97, 108, 99, 104, 105, 107] => lookup_1493_50(acc),
            [115, 111, 99, 104, 105] => lookup_1493_51(acc),
            [112, 101, 110, 122, 97] => lookup_1493_52(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1494() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1495_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1495<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_1495_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1496_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1496_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1496_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1496_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1496_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1496_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1496<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_1496_0(acc),
            [111, 114, 103] => lookup_1496_1(acc),
            [105, 110, 102] => lookup_1496_2(acc),
            [99, 111, 109] => lookup_1496_3(acc),
            [101, 100, 117] => lookup_1496_4(acc),
            [103, 111, 118] => lookup_1496_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1497() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1498() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1499() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1500() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1501() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1502_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1502_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1502_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1502_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1502_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1502_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1502_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1502_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1502_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1502_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1502<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_1502_0(acc),
            [119, 101, 98] => lookup_1502_1(acc),
            [115, 108, 100] => lookup_1502_2(acc),
            [109, 105, 108] => lookup_1502_3(acc),
            [110, 101, 116] => lookup_1502_4(acc),
            [111, 114, 103] => lookup_1502_5(acc),
            [99, 111, 109] => lookup_1502_6(acc),
            [97, 114, 116] => lookup_1502_7(acc),
            [103, 111, 118] => lookup_1502_8(acc),
            [103, 111, 98] => lookup_1502_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1503() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1504() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1505() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1506() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1507_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1507_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1507_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1507_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 104] => lookup_1507_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1507_3_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1507_3_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1507_3_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1507_3_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1507_3_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1507_3_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1507_3_2(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1507_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [105, 110] => lookup_1507_3_0(info, labels, acc),
            [101, 120] => lookup_1507_3_1(info, labels, acc),
            wild => lookup_1507_3_2(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1507_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1507_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1507_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1507_6<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [119, 105, 101, 110] => lookup_1507_6_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1507_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1507_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1507_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1507_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1507_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1507_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1507_13_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1507_13<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1507_13_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1507_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1507_15_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1507_15_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1507_15_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1507_15_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1507_15_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1507_15_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1507_15<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [107, 117, 110, 100, 101, 110] => lookup_1507_15_0(info, labels, acc),
            [101, 120] => lookup_1507_15_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1507<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 117, 116, 117, 114, 101, 104, 111, 115, 116, 105, 110, 103] => lookup_1507_0(acc),
            [108, 105, 109, 97, 45, 99, 105, 116, 121] => lookup_1507_1(acc),
            [97, 99] => lookup_1507_2(labels, acc),
            [102, 117, 116, 117, 114, 101, 99, 109, 115] => lookup_1507_3(info, labels, acc),
            [103, 118] => lookup_1507_4(acc),
            [105, 110, 102, 111] => lookup_1507_5(acc),
            [102, 117, 110, 107, 102, 101, 117, 101, 114] => lookup_1507_6(info, labels, acc),
            [52, 108, 105, 109, 97] => lookup_1507_7(acc),
            [49, 50, 104, 112] => lookup_1507_8(acc),
            [111, 114] => lookup_1507_9(acc),
            [102, 117, 116, 117, 114, 101, 109, 97, 105, 108, 105, 110, 103] => lookup_1507_10(acc),
            [98, 105, 122] => lookup_1507_11(acc),
            [50, 105, 120] => lookup_1507_12(acc),
            [99, 111] => lookup_1507_13(labels, acc),
            [112, 114, 105, 118] => lookup_1507_14(acc),
            [111, 114, 116, 115, 105, 110, 102, 111] => lookup_1507_15(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1508_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1508<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1508_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1509() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1510() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1511() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1512_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1512_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1512_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1512_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1512_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1512_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1512<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_1512_0(acc),
            [111, 114, 103] => lookup_1512_1(acc),
            [103, 111, 118] => lookup_1512_2(acc),
            [101, 100, 117] => lookup_1512_3(acc),
            [99, 111, 109] => lookup_1512_4(acc),
            [109, 105, 108] => lookup_1512_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1513() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1514() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1515() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1516() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1517() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1518() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1519() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1520() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1521() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1522() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1523() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1524() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1525() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1526_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1526_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1526_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1526_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1526_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1526<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_1526_0(acc),
            [111, 114, 103] => lookup_1526_1(acc),
            [103, 111, 118] => lookup_1526_2(acc),
            [101, 100, 117] => lookup_1526_3(acc),
            [99, 111, 109] => lookup_1526_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1527() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1529() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1530() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1531() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1532() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1533() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1534() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1535() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1536_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1536_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1536_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1536_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1536_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1536_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1536<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [229, 133, 172, 229, 143, 184] => lookup_1536_0(acc),
            [231, 182, 178, 231, 181, 161] => lookup_1536_1(acc),
            [230, 148, 191, 229, 186, 156] => lookup_1536_2(acc),
            [231, 181, 132, 231, 185, 148] => lookup_1536_3(acc),
            [229, 128, 139, 228, 186, 186] => lookup_1536_4(acc),
            [230, 149, 153, 232, 130, 178] => lookup_1536_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1537() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1538_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1538_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1538<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 110] => lookup_1538_0(acc),
            [111, 102] => lookup_1538_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1539() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1540_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1540_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1540_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1540_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1540_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1540<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1540_0(acc),
            [97, 116] => lookup_1540_1(acc),
            [100, 101] => lookup_1540_2(acc),
            [116, 111] => lookup_1540_3(acc),
            [106, 112] => lookup_1540_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1541() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1542() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1543() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1544() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1545() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1546() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1547() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1548() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1549_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1549<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_1549_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1550_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1550<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 109, 103] => lookup_1550_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1551() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1552() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1553() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1554() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1555_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1555_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1555_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1555_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1555_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1555_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1555_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1555_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1555_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1555<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_1555_0(acc),
            [112, 114, 100] => lookup_1555_1(acc),
            [109, 105, 108] => lookup_1555_2(acc),
            [99, 111] => lookup_1555_3(acc),
            [111, 114, 103] => lookup_1555_4(acc),
            [116, 109] => lookup_1555_5(acc),
            [103, 111, 118] => lookup_1555_6(acc),
            [99, 111, 109] => lookup_1555_7(acc),
            [110, 111, 109] => lookup_1555_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1556() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1557() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1558_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1558_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1558_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1558_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1558_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1558_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1558<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 114, 111, 109] => lookup_1558_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1558_1(acc),
            [102, 114, 101, 101] => lookup_1558_2(acc),
            [99, 111, 109] => lookup_1558_3(acc),
            [105, 122] => lookup_1558_4(acc),
            [110, 97, 109, 101] => lookup_1558_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1559_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1559_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1559_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1559_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1559_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1559_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1559_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1559_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1559_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1559_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1559<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1559_0(acc),
            [110, 111, 109, 101] => lookup_1559_1(acc),
            [110, 121, 109] => lookup_1559_2(acc),
            [101, 100, 117] => lookup_1559_3(acc),
            [110, 101, 116] => lookup_1559_4(acc),
            [111, 114, 103] => lookup_1559_5(acc),
            [103, 111, 118] => lookup_1559_6(acc),
            [112, 117, 98, 108] => lookup_1559_7(acc),
            [105, 110, 116] => lookup_1559_8(acc),
            [99, 111, 109] => lookup_1559_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1560() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1561() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1562() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1563() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1564() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1565() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1566() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1567() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1568() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1569() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1570() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1571() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1573() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1574() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1575() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1576() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1577() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1578() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_1_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_1_0(acc),
            [99, 99] => lookup_1579_1_1(acc),
            [108, 105, 98] => lookup_1579_1_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_3_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_3<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_3_0(acc),
            [99, 99] => lookup_1579_3_1(acc),
            [108, 105, 98] => lookup_1579_3_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_4_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_4_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_4<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_4_0(acc),
            [99, 99] => lookup_1579_4_1(acc),
            [108, 105, 98] => lookup_1579_4_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [112, 104, 120] => lookup_1579_5_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_6_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_6_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_6<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_6_0(acc),
            [99, 99] => lookup_1579_6_1(acc),
            [108, 105, 98] => lookup_1579_6_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_7_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_7_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_7<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_7_0(acc),
            [99, 99] => lookup_1579_7_1(acc),
            [108, 105, 98] => lookup_1579_7_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_10_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_10_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_10_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_10<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_10_0(acc),
            [99, 99] => lookup_1579_10_1(acc),
            [108, 105, 98] => lookup_1579_10_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_11_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_11_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_11_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_11<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_11_0(acc),
            [99, 99] => lookup_1579_11_1(acc),
            [108, 105, 98] => lookup_1579_11_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_12_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_12_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_12_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_12<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_12_0(acc),
            [99, 99] => lookup_1579_12_1(acc),
            [108, 105, 98] => lookup_1579_12_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_13_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_13_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_13_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_13<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_13_0(acc),
            [99, 99] => lookup_1579_13_1(acc),
            [108, 105, 98] => lookup_1579_13_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_14_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_14_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_14_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_14<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_14_0(acc),
            [99, 99] => lookup_1579_14_1(acc),
            [108, 105, 98] => lookup_1579_14_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_15_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_15_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_15_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_15<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_15_0(acc),
            [99, 99] => lookup_1579_15_1(acc),
            [108, 105, 98] => lookup_1579_15_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_16_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_16_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_16_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_16<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_16_0(acc),
            [99, 99] => lookup_1579_16_1(acc),
            [108, 105, 98] => lookup_1579_16_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_17_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_17_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_17_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_17<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_17_0(acc),
            [99, 99] => lookup_1579_17_1(acc),
            [108, 105, 98] => lookup_1579_17_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_18_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_18_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_18_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_18<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_18_0(acc),
            [99, 99] => lookup_1579_18_1(acc),
            [108, 105, 98] => lookup_1579_18_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_19_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_19_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_19_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_19<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_19_0(acc),
            [99, 99] => lookup_1579_19_1(acc),
            [108, 105, 98] => lookup_1579_19_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_22_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_22_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_22_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_22_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_22_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_22_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_22_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_22_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_22_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_22_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_22_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_22<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_22_0(acc),
            [99, 99] => lookup_1579_22_1(acc),
            [108, 105, 98] => lookup_1579_22_2(acc),
            [103, 101, 110] => lookup_1579_22_3(acc),
            [97, 110, 110, 45, 97, 114, 98, 111, 114] => lookup_1579_22_4(acc),
            [99, 111, 103] => lookup_1579_22_5(acc),
            [109, 117, 115] => lookup_1579_22_6(acc),
            [116, 101, 99] => lookup_1579_22_7(acc),
            [101, 97, 116, 111, 110] => lookup_1579_22_8(acc),
            [119, 97, 115, 104, 116, 101, 110, 97, 119] => lookup_1579_22_9(acc),
            [100, 115, 116] => lookup_1579_22_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_23_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_23_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_23_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_23<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_23_0(acc),
            [99, 99] => lookup_1579_23_1(acc),
            [108, 105, 98] => lookup_1579_23_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_24_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_24_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_24_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_24<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_24_0(acc),
            [99, 99] => lookup_1579_24_1(acc),
            [108, 105, 98] => lookup_1579_24_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_25_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_25_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_25_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_25<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_25_0(acc),
            [99, 99] => lookup_1579_25_1(acc),
            [108, 105, 98] => lookup_1579_25_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_27_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_27_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_27_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_27<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_27_0(acc),
            [99, 99] => lookup_1579_27_1(acc),
            [108, 105, 98] => lookup_1579_27_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_29_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_29_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_29_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_29<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_29_0(acc),
            [99, 99] => lookup_1579_29_1(acc),
            [108, 105, 98] => lookup_1579_29_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_30_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_30_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_30_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_30<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_30_0(acc),
            [99, 99] => lookup_1579_30_1(acc),
            [108, 105, 98] => lookup_1579_30_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_32_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_32_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_32<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1579_32_0(acc),
            [99, 99] => lookup_1579_32_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_34_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_34_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_34_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_34<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_34_0(acc),
            [99, 99] => lookup_1579_34_1(acc),
            [108, 105, 98] => lookup_1579_34_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_35_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_35_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_35_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_35<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_35_0(acc),
            [99, 99] => lookup_1579_35_1(acc),
            [108, 105, 98] => lookup_1579_35_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_36_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_36_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_36_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_36<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_36_0(acc),
            [99, 99] => lookup_1579_36_1(acc),
            [108, 105, 98] => lookup_1579_36_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_37_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_37_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_37_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_37<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_37_0(acc),
            [99, 99] => lookup_1579_37_1(acc),
            [108, 105, 98] => lookup_1579_37_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_38_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_38_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_38_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_38<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_38_0(acc),
            [99, 99] => lookup_1579_38_1(acc),
            [108, 105, 98] => lookup_1579_38_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_39_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_39_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_39_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_39<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_39_0(acc),
            [99, 99] => lookup_1579_39_1(acc),
            [108, 105, 98] => lookup_1579_39_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_41_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_41_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_41_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_41<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_41_0(acc),
            [99, 99] => lookup_1579_41_1(acc),
            [108, 105, 98] => lookup_1579_41_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_42_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_42_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_42_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_42<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_42_0(acc),
            [99, 99] => lookup_1579_42_1(acc),
            [108, 105, 98] => lookup_1579_42_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_43_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_43_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_43_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_43<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_43_0(acc),
            [99, 99] => lookup_1579_43_1(acc),
            [108, 105, 98] => lookup_1579_43_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_44_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_44_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_44_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_44<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_44_0(acc),
            [99, 99] => lookup_1579_44_1(acc),
            [108, 105, 98] => lookup_1579_44_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_45_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_45_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_45_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_45<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_45_0(acc),
            [99, 99] => lookup_1579_45_1(acc),
            [108, 105, 98] => lookup_1579_45_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_46_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_46_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_46<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1579_46_0(acc),
            [99, 99] => lookup_1579_46_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_47_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_47_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_47_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_47<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_47_0(acc),
            [99, 99] => lookup_1579_47_1(acc),
            [108, 105, 98] => lookup_1579_47_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_48_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_48_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_48_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_48<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_48_0(acc),
            [99, 99] => lookup_1579_48_1(acc),
            [108, 105, 98] => lookup_1579_48_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_49_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_49_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_49_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_49<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_49_0(acc),
            [99, 99] => lookup_1579_49_1(acc),
            [108, 105, 98] => lookup_1579_49_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_50_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_50_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_50_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_50_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 118, 116] => lookup_1579_50_0_0(acc),
            [99, 104, 116, 114] => lookup_1579_50_0_1(acc),
            [112, 97, 114, 111, 99, 104] => lookup_1579_50_0_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_50_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_50_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_50<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_50_0(labels, acc),
            [99, 99] => lookup_1579_50_1(acc),
            [108, 105, 98] => lookup_1579_50_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_52_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_52_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_52_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_52<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_52_0(acc),
            [99, 99] => lookup_1579_52_1(acc),
            [108, 105, 98] => lookup_1579_52_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_54_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_54_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_54_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_54<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_54_0(acc),
            [99, 99] => lookup_1579_54_1(acc),
            [108, 105, 98] => lookup_1579_54_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_55_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_55_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_55_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_55<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_55_0(acc),
            [99, 99] => lookup_1579_55_1(acc),
            [108, 105, 98] => lookup_1579_55_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_57_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_57_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_57_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_57<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_57_0(acc),
            [99, 99] => lookup_1579_57_1(acc),
            [108, 105, 98] => lookup_1579_57_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_58_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_58<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1579_58_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_59_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_59_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_59<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1579_59_0(acc),
            [99, 99] => lookup_1579_59_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_60_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_60_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_60_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_60<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_60_0(acc),
            [99, 99] => lookup_1579_60_1(acc),
            [108, 105, 98] => lookup_1579_60_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_61_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_61_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_61_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_61<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_61_0(acc),
            [99, 99] => lookup_1579_61_1(acc),
            [108, 105, 98] => lookup_1579_61_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_62_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_62_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_62_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_62<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_62_0(acc),
            [99, 99] => lookup_1579_62_1(acc),
            [108, 105, 98] => lookup_1579_62_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_63_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_63_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_63_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_63<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_63_0(acc),
            [99, 99] => lookup_1579_63_1(acc),
            [108, 105, 98] => lookup_1579_63_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_64_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_64_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_64_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_64<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_64_0(acc),
            [99, 99] => lookup_1579_64_1(acc),
            [108, 105, 98] => lookup_1579_64_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_66_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_66_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_66_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_66<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_66_0(acc),
            [99, 99] => lookup_1579_66_1(acc),
            [108, 105, 98] => lookup_1579_66_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_67_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_67_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_67<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1579_67_0(acc),
            [99, 99] => lookup_1579_67_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_68_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_68_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_68_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_68<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_68_0(acc),
            [99, 99] => lookup_1579_68_1(acc),
            [108, 105, 98] => lookup_1579_68_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_69_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_69_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_69_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_69<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_69_0(acc),
            [99, 99] => lookup_1579_69_1(acc),
            [108, 105, 98] => lookup_1579_69_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_72_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_72_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_72_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_72<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_1579_72_0(acc),
            [99, 99] => lookup_1579_72_1(acc),
            [108, 105, 98] => lookup_1579_72_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1579<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 117, 102, 102, 45, 52, 45, 115, 97, 108, 101] => lookup_1579_0(acc),
            [115, 99] => lookup_1579_1(labels, acc),
            [110, 115, 110] => lookup_1579_2(acc),
            [99, 97] => lookup_1579_3(labels, acc),
            [107, 121] => lookup_1579_4(labels, acc),
            [101, 110, 115, 99, 97, 108, 101, 100] => lookup_1579_5(info, labels, acc),
            [97, 114] => lookup_1579_6(labels, acc),
            [118, 116] => lookup_1579_7(labels, acc),
            [103, 114, 97, 112, 104, 111, 120] => lookup_1579_8(acc),
            [102, 101, 100] => lookup_1579_9(acc),
            [111, 114] => lookup_1579_10(labels, acc),
            [110, 109] => lookup_1579_11(labels, acc),
            [99, 116] => lookup_1579_12(labels, acc),
            [105, 110] => lookup_1579_13(labels, acc),
            [103, 97] => lookup_1579_14(labels, acc),
            [108, 97] => lookup_1579_15(labels, acc),
            [99, 111] => lookup_1579_16(labels, acc),
            [109, 115] => lookup_1579_17(labels, acc),
            [119, 105] => lookup_1579_18(labels, acc),
            [118, 105] => lookup_1579_19(labels, acc),
            [105, 115, 45, 98, 121] => lookup_1579_20(acc),
            [102, 114, 101, 101, 100, 100, 110, 115] => lookup_1579_21(acc),
            [109, 105] => lookup_1579_22(labels, acc),
            [119, 121] => lookup_1579_23(labels, acc),
            [105, 100] => lookup_1579_24(labels, acc),
            [109, 110] => lookup_1579_25(labels, acc),
            [109, 105, 114, 99, 108, 111, 117, 100] => lookup_1579_26(acc),
            [109, 101] => lookup_1579_27(labels, acc),
            [100, 114, 117, 100] => lookup_1579_28(acc),
            [116, 110] => lookup_1579_29(labels, acc),
            [117, 116] => lookup_1579_30(labels, acc),
            [108, 97, 110, 100, 45, 52, 45, 115, 97, 108, 101] => lookup_1579_31(acc),
            [115, 100] => lookup_1579_32(labels, acc),
            [107, 105, 100, 115] => lookup_1579_33(acc),
            [97, 107] => lookup_1579_34(labels, acc),
            [109, 116] => lookup_1579_35(labels, acc),
            [110, 104] => lookup_1579_36(labels, acc),
            [119, 97] => lookup_1579_37(labels, acc),
            [107, 115] => lookup_1579_38(labels, acc),
            [110, 118] => lookup_1579_39(labels, acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_1579_40(acc),
            [97, 108] => lookup_1579_41(labels, acc),
            [105, 108] => lookup_1579_42(labels, acc),
            [118, 97] => lookup_1579_43(labels, acc),
            [109, 100] => lookup_1579_44(labels, acc),
            [111, 104] => lookup_1579_45(labels, acc),
            [104, 105] => lookup_1579_46(labels, acc),
            [97, 115] => lookup_1579_47(labels, acc),
            [100, 101] => lookup_1579_48(labels, acc),
            [112, 97] => lookup_1579_49(labels, acc),
            [109, 97] => lookup_1579_50(labels, acc),
            [105, 115, 97] => lookup_1579_51(acc),
            [103, 117] => lookup_1579_52(labels, acc),
            [112, 111, 105, 110, 116, 116, 111] => lookup_1579_53(acc),
            [111, 107] => lookup_1579_54(labels, acc),
            [110, 106] => lookup_1579_55(labels, acc),
            [100, 110, 105] => lookup_1579_56(acc),
            [105, 97] => lookup_1579_57(labels, acc),
            [119, 118] => lookup_1579_58(labels, acc),
            [114, 105] => lookup_1579_59(labels, acc),
            [102, 108] => lookup_1579_60(labels, acc),
            [110, 121] => lookup_1579_61(labels, acc),
            [112, 114] => lookup_1579_62(labels, acc),
            [97, 122] => lookup_1579_63(labels, acc),
            [116, 120] => lookup_1579_64(labels, acc),
            [112, 108, 97, 116, 116, 101, 114, 112] => lookup_1579_65(acc),
            [110, 99] => lookup_1579_66(labels, acc),
            [110, 100] => lookup_1579_67(labels, acc),
            [100, 99] => lookup_1579_68(labels, acc),
            [109, 111] => lookup_1579_69(labels, acc),
            [103, 111, 108, 102, 102, 97, 110] => lookup_1579_70(acc),
            [110, 111, 105, 112] => lookup_1579_71(acc),
            [110, 101] => lookup_1579_72(labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1580_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1580<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 117] => lookup_1580_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1581() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1582() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1583() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1584() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1585() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1586() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1587() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1588() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1589_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1589_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1589_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1589_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1589_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1589_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1589<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 115] => lookup_1589_0(acc),
            [108, 105, 109, 97] => lookup_1589_1(acc),
            [99, 108, 111, 117, 100, 54, 54] => lookup_1589_2(acc),
            [116, 114, 105, 116, 111, 110] => lookup_1589_3(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1590() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1591_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1591<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 115, 105, 116, 101] => lookup_1591_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1592() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1593() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1594_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1594_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1594_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1594_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1594_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1594<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 121, 112, 101, 112] => lookup_1594_0(acc),
            [100, 119, 101, 98] => lookup_1594_1(info, labels, acc),
            [99, 121, 111, 110] => lookup_1594_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1595() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1596() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1597_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1597_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1597_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1597_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1597_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1597_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1597_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1597_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1597_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1597_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1597_7<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [97] => lookup_1597_7_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1597_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1597_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1597_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1597_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1597_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1597_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1597<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [118, 101, 114, 99, 101, 108] => lookup_1597_0(acc),
            [104, 97, 115, 117, 114, 97] => lookup_1597_1(acc),
            [110, 111, 114, 116, 104, 102, 108, 97, 110, 107] => lookup_1597_2(info, labels, acc),
            [101, 100, 103, 101, 99, 111, 109, 112, 117, 116, 101] => lookup_1597_3(acc),
            [119, 101, 98] => lookup_1597_4(acc),
            [108, 111, 103, 105, 110, 108, 105, 110, 101] => lookup_1597_5(acc),
            [102, 114, 97, 109, 101, 114] => lookup_1597_6(acc),
            [114, 117, 110] => lookup_1597_7(labels, acc),
            [119, 110, 101, 120, 116] => lookup_1597_8(acc),
            [111, 110, 100, 105, 103, 105, 116, 97, 108, 111, 99, 101, 97, 110] => {
                lookup_1597_9(acc)
            }
            [110, 101, 116, 108, 105, 102, 121] => lookup_1597_10(acc),
            [112, 108, 97, 116, 102, 111, 114, 109, 48] => lookup_1597_11(acc),
            [116, 101, 108, 101, 98, 105, 116] => lookup_1597_12(acc),
            [102, 105, 114, 101, 119, 101, 98] => lookup_1597_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1598() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1599() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1600() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1601_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1601_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1601_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1601_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1601_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1601_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1601_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1601_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1601_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1601_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1601_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1601_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1601_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1601_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1601_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1601_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1601_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1601<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 101, 114, 97] => lookup_1601_0(acc),
            [112, 108, 97, 116, 102, 111, 114, 109, 115, 104] => lookup_1601_1(info, labels, acc),
            [108, 111, 103, 105, 110, 108, 105, 110, 101] => lookup_1601_2(acc),
            [102, 111, 108, 105, 111, 110, 101, 116, 119, 111, 114, 107] => lookup_1601_3(acc),
            [111, 109, 110, 105, 119, 101] => lookup_1601_4(acc),
            [115, 114, 104, 116] => lookup_1601_5(acc),
            [106, 101, 108, 101] => lookup_1601_6(acc),
            [102, 97, 115, 116, 118, 112, 115] => lookup_1601_7(acc),
            [102, 110, 119, 107] => lookup_1601_8(acc),
            [98, 97, 114, 115, 121] => lookup_1601_9(acc),
            [98, 121, 101, 110] => lookup_1601_10(acc),
            [111, 112, 101, 110, 115, 111, 99, 105, 97, 108] => lookup_1601_11(acc),
            [109, 105, 110, 116, 101, 114, 101] => lookup_1601_12(acc),
            [108, 101, 108, 117, 120] => lookup_1601_13(acc),
            [99, 121, 111, 110] => lookup_1601_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1602() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1603() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1604() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1605() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1606() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1607() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1608() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1609_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1609_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1609_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1609_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1609_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1609_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1609_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1609_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1609_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1609_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1609<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 101, 114] => lookup_1609_0(acc),
            [97, 114, 116, 115] => lookup_1609_1(acc),
            [111, 116, 104, 101, 114] => lookup_1609_2(acc),
            [119, 101, 98] => lookup_1609_3(acc),
            [102, 105, 114, 109] => lookup_1609_4(acc),
            [110, 101, 116] => lookup_1609_5(acc),
            [105, 110, 102, 111] => lookup_1609_6(acc),
            [115, 116, 111, 114, 101] => lookup_1609_7(acc),
            [99, 111, 109] => lookup_1609_8(acc),
            [114, 101, 99] => lookup_1609_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1610_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1610<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 110, 112, 121] => lookup_1610_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1611() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1612() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1613_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1613<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 110, 115] => lookup_1613_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1614() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1615() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1616() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1617() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1618() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1619() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1620() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1621() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1622() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1623() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1624() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1625() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1626() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1627() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1628() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1629() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1630() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1631() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1632() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1633() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1634() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1635() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1636() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1637() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1638() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1639_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1639_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1639_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1639_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1639_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1639_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1639_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1639_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1639<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_1639_0(acc),
            [98, 105, 122] => lookup_1639_1(acc),
            [99, 111] => lookup_1639_2(acc),
            [110, 101, 116] => lookup_1639_3(acc),
            [111, 114, 103] => lookup_1639_4(acc),
            [99, 111, 109] => lookup_1639_5(acc),
            [120, 120] => lookup_1639_6(acc),
            [110, 111, 109] => lookup_1639_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1640() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1641() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1642() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1643() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1644_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1644_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1644_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1644_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1644_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1644_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1644_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1644<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_1644_0(acc),
            [99, 111, 109] => lookup_1644_1(labels, acc),
            [101, 100, 117] => lookup_1644_2(acc),
            [110, 111, 109] => lookup_1644_3(acc),
            [103, 111, 98] => lookup_1644_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1645() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1646() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1647_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1647_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1647_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1647_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1647_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1647_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1647_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1647<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_1647_0(acc),
            [111, 114, 103] => lookup_1647_1(acc),
            [111, 114] => lookup_1647_2(acc),
            [99, 111, 109] => lookup_1647_3(acc),
            [103, 111, 118] => lookup_1647_4(acc),
            [97, 99] => lookup_1647_5(acc),
            [99, 111] => lookup_1647_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1648() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1649() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1650() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1651() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1652() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1653() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1654() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1655() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1656() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1657() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1658_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1658_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1658_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1658_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1658_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1658_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1658<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_1658_0(acc),
            [111, 114, 103] => lookup_1658_1(acc),
            [103, 111, 118] => lookup_1658_2(acc),
            [101, 100, 117] => lookup_1658_3(acc),
            [99, 111, 109] => lookup_1658_4(acc),
            [109, 105, 108] => lookup_1658_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1659() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1660() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1661() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1662_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1662_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1662_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1662_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1662_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1662_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1662<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_1662_0(acc),
            [111, 114, 103] => lookup_1662_1(acc),
            [99, 111, 109] => lookup_1662_2(acc),
            [117, 119, 117] => lookup_1662_3(acc),
            [111, 102, 102] => lookup_1662_4(acc),
            [110, 111, 109] => lookup_1662_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1663_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1663_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1663_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1663_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1663<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1663_0(acc),
            [99, 111, 109] => lookup_1663_1(acc),
            [110, 111, 109] => lookup_1663_2(acc),
            [97, 115, 115, 111] => lookup_1663_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1664_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1664_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1664_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1664_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1664_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1664_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1664_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1664_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1664_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1664<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105] => lookup_1664_0(acc),
            [103, 111] => lookup_1664_1(acc),
            [111, 114] => lookup_1664_2(acc),
            [97, 99] => lookup_1664_3(acc),
            [105, 110] => lookup_1664_4(acc),
            [111, 110, 108, 105, 110, 101] => lookup_1664_5(acc),
            [99, 111] => lookup_1664_6(acc),
            [110, 101, 116] => lookup_1664_7(acc),
            [115, 104, 111, 112] => lookup_1664_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1665() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1666_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1666<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [121, 98, 111] => lookup_1666_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1667() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1668() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1669() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1670() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1671() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1672() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
