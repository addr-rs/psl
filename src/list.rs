#![allow(clippy::all)] // TODO lint this code?

// WARNING: Auto-generated code. Any changes in this file will be overwritten.

use crate::{Info, Type};
#[inline]
pub(super) fn lookup<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let mut info = Info { len: 0, typ: None };
    match labels.next() {
        Some(label) => match label {
            [99, 108] => lookup_0(labels),
            [115, 97, 108, 101] => lookup_1(labels),
            [113, 117, 101, 115, 116] => lookup_2(),
            [120, 110, 45, 45, 121, 103, 98, 105, 50, 97, 109, 109, 120] => lookup_3(),
            [99, 111, 102, 102, 101, 101] => lookup_4(),
            [115, 104, 111, 119] => lookup_5(),
            [120, 110, 45, 45, 52, 53, 113, 49, 49, 99] => lookup_6(),
            [230, 155, 184, 231, 177, 141] => lookup_7(),
            [120, 110, 45, 45, 113, 99, 107, 97, 49, 112, 109, 99] => lookup_8(),
            [100, 97, 116, 105, 110, 103] => lookup_9(),
            [206, 181, 206, 187] => lookup_10(),
            [112, 114] => lookup_11(labels),
            [102, 114, 101, 101] => lookup_12(),
            [103, 112] => lookup_13(labels),
            [109, 97, 105, 102] => lookup_14(),
            [107, 97, 117, 102, 101, 110] => lookup_15(),
            [97, 103, 97, 107, 104, 97, 110] => lookup_16(),
            [112, 97, 114, 115] => lookup_17(),
            [111, 102, 102, 105, 99, 101] => lookup_18(),
            [115, 116, 111, 114, 101] => lookup_19(labels),
            [216, 167, 217, 132, 216, 179, 216, 185, 217, 136, 216, 175, 219, 140, 216, 169] => {
                lookup_20()
            }
            [116, 106, 109, 97, 120, 120] => lookup_21(),
            [120, 110, 45, 45, 101, 99, 107, 118, 100, 116, 99, 57, 100] => lookup_22(),
            [98, 109] => lookup_23(labels),
            [99, 97, 116, 104, 111, 108, 105, 99] => lookup_24(),
            [98, 101] => lookup_25(labels),
            [97, 117, 100, 105] => lookup_26(),
            [99, 108, 117, 98, 109, 101, 100] => lookup_27(),
            [100, 107] => lookup_28(labels),
            [116, 119] => lookup_29(labels),
            [110, 108] => lookup_30(labels),
            [104, 111, 116] => lookup_31(),
            [100, 117, 114, 98, 97, 110] => lookup_32(),
            [108, 116, 100, 97] => lookup_33(),
            [118, 101, 114, 105, 115, 105, 103, 110] => lookup_34(),
            [120, 110, 45, 45, 103, 99, 107, 114, 51, 102, 48, 102] => lookup_35(),
            [118, 105, 118, 111] => lookup_36(),
            [112, 119, 99] => lookup_37(),
            [108, 107] => lookup_38(labels),
            [114, 101, 115, 116, 97, 117, 114, 97, 110, 116] => lookup_39(),
            [100, 105, 114, 101, 99, 116] => lookup_40(),
            [100, 105, 115, 104] => lookup_41(),
            [114, 101, 110] => lookup_42(),
            [99, 97, 116, 101, 114, 105, 110, 103] => lookup_43(),
            [98, 97, 110, 100] => lookup_44(),
            [107, 111, 101, 108, 110] => lookup_45(),
            [109, 111, 110, 101, 121] => lookup_46(),
            [216, 185, 217, 133, 216, 167, 217, 134] => lookup_47(),
            [109, 111, 118, 105, 101] => lookup_48(),
            [117, 112, 115] => lookup_49(),
            [118, 101, 110, 116, 117, 114, 101, 115] => lookup_50(),
            [103, 111, 111, 100, 121, 101, 97, 114] => lookup_51(),
            [118, 101, 114, 115, 105, 99, 104, 101, 114, 117, 110, 103] => lookup_52(),
            [112, 102] => lookup_53(labels),
            [228, 184, 173, 229, 156, 139] => lookup_54(),
            [215, 167, 215, 149, 215, 157] => lookup_55(),
            [229, 149, 134, 229, 186, 151] => lookup_56(),
            [104, 111, 99, 107, 101, 121] => lookup_57(),
            [104, 109] => lookup_58(),
            [118, 103] => lookup_59(labels),
            [114, 101, 115, 116] => lookup_60(),
            [116, 111, 116, 97, 108] => lookup_61(),
            [118, 111, 108, 107, 115, 119, 97, 103, 101, 110] => lookup_62(),
            [103, 97, 108, 108, 111] => lookup_63(),
            [230, 139, 155, 232, 129, 152] => lookup_64(),
            [208, 181, 209, 142] => lookup_65(),
            [101, 109, 97, 105, 108] => lookup_66(),
            [100, 97, 121] => lookup_67(),
            [119, 111, 108, 116, 101, 114, 115, 107, 108, 117, 119, 101, 114] => lookup_68(),
            [120, 110, 45, 45, 113, 120, 97, 109] => lookup_69(),
            [230, 133, 136, 229, 150, 132] => lookup_70(),
            [97, 122] => lookup_71(labels),
            [120, 110, 45, 45, 107, 112, 114, 119, 49, 51, 100] => lookup_72(),
            [109, 105, 110, 105] => lookup_73(),
            [118, 97] => lookup_74(),
            [99, 117, 105, 115, 105, 110, 101, 108, 108, 97] => lookup_75(),
            [101, 110, 116, 101, 114, 112, 114, 105, 115, 101, 115] => lookup_76(),
            [105, 118, 101, 99, 111] => lookup_77(),
            [108, 97, 119] => lookup_78(),
            [100, 104, 108] => lookup_79(),
            [99, 97, 114, 100, 115] => lookup_80(),
            [100, 116, 118] => lookup_81(),
            [102, 105, 110, 97, 110, 99, 105, 97, 108] => lookup_82(labels),
            [108, 105, 110, 99, 111, 108, 110] => lookup_83(),
            [120, 110, 45, 45, 57, 48, 97, 101] => lookup_84(),
            [105, 116, 97, 117] => lookup_85(),
            [116, 100] => lookup_86(labels),
            [114, 111, 99, 104, 101, 114] => lookup_87(),
            [104, 117, 103, 104, 101, 115] => lookup_88(),
            [115, 105, 108, 107] => lookup_89(),
            [116, 108] => lookup_90(labels),
            [115, 105, 110, 97] => lookup_91(),
            [119, 111, 111, 100, 115, 105, 100, 101] => lookup_92(),
            [108, 111, 99, 117, 115] => lookup_93(),
            [120, 105, 104, 117, 97, 110] => lookup_94(),
            [233, 166, 153, 230, 160, 188, 233, 135, 140, 230, 139, 137] => lookup_95(),
            [231, 167, 187, 229, 138, 168] => lookup_96(),
            [98, 121] => lookup_97(labels),
            [99, 97] => lookup_98(labels),
            [109, 97, 107, 101, 117, 112] => lookup_99(),
            [118, 105, 118, 97] => lookup_100(),
            [99, 114, 117, 105, 115, 101] => lookup_101(),
            [120, 110, 45, 45, 99, 103, 52, 98, 107, 105] => lookup_102(),
            [98, 99, 103] => lookup_103(),
            [208, 180, 208, 181, 209, 130, 208, 184] => lookup_104(),
            [232, 180, 173, 231, 137, 169] => lookup_105(),
            [112, 111, 108, 105, 116, 105, 101] => lookup_106(),
            [97, 110, 122] => lookup_107(),
            [120, 110, 45, 45, 110, 103, 98, 114, 120] => lookup_108(),
            [102, 105, 114, 101] => lookup_109(),
            [120, 110, 45, 45, 110, 113, 118, 55, 102] => lookup_110(),
            [228, 186, 154, 233, 169, 172, 233, 128, 138] => lookup_111(),
            [116, 99] => lookup_112(labels),
            [116, 97, 108, 107] => lookup_113(),
            [120, 110, 45, 45, 112, 49, 97, 99, 102] => lookup_114(labels),
            [99, 111, 108, 111, 103, 110, 101] => lookup_115(),
            [116, 105, 114, 101, 115] => lookup_116(),
            [99, 99] => lookup_117(labels),
            [110, 105, 110, 106, 97] => lookup_118(),
            [119, 105, 110, 100, 111, 119, 115] => lookup_119(),
            [120, 110, 45, 45, 103, 107, 51, 97, 116, 49, 101] => lookup_120(),
            [102, 117, 106, 105, 120, 101, 114, 111, 120] => lookup_121(),
            [109, 97, 99, 121, 115] => lookup_122(),
            [106, 101] => lookup_123(labels),
            [227, 130, 179, 227, 131, 160] => lookup_124(),
            [114, 105, 99, 104, 97, 114, 100, 108, 105] => lookup_125(),
            [119, 101, 105, 114] => lookup_126(),
            [99, 114, 117, 105, 115, 101, 115] => lookup_127(),
            [112, 105, 110] => lookup_128(),
            [120, 105, 110] => lookup_129(),
            [98, 108, 111, 99, 107, 98, 117, 115, 116, 101, 114] => lookup_130(),
            [99, 97, 114, 115] => lookup_131(),
            [109, 97, 114, 107, 101, 116, 115] => lookup_132(),
            [121, 97, 109, 97, 120, 117, 110] => lookup_133(),
            [102, 111, 111, 100] => lookup_134(),
            [103, 97, 108, 108, 101, 114, 121] => lookup_135(),
            [99, 105, 112, 114, 105, 97, 110, 105] => lookup_136(),
            [99, 98, 114, 101] => lookup_137(),
            [115, 116, 99] => lookup_138(),
            [108, 116, 100] => lookup_139(),
            [120, 110, 45, 45, 99, 122, 114, 117, 50, 100] => lookup_140(),
            [115, 101, 119] => lookup_141(),
            [99, 104, 117, 114, 99, 104] => lookup_142(),
            [116, 101, 99, 104] => lookup_143(),
            [118, 105, 97, 106, 101, 115] => lookup_144(),
            [119, 111, 114, 107] => lookup_145(labels),
            [116, 111, 117, 114, 115] => lookup_146(),
            [120, 110, 45, 45, 102, 122, 121, 115, 56, 100, 54, 57, 117, 118, 103, 109] => {
                lookup_147()
            }
            [101, 112, 115, 111, 110] => lookup_148(),
            [102, 117, 110, 100] => lookup_149(),
            [109, 119] => lookup_150(labels),
            [115, 105] => lookup_151(labels),
            [103, 105, 102, 116] => lookup_152(),
            [104, 97, 105, 114] => lookup_153(),
            [99, 111, 110, 100, 111, 115] => lookup_154(),
            [115, 97, 108, 111, 110] => lookup_155(),
            [101, 117] => lookup_156(labels),
            [102, 111, 114, 100] => lookup_157(),
            [116, 104] => lookup_158(labels),
            [102, 106] => lookup_159(labels),
            [107, 101, 114, 114, 121, 104, 111, 116, 101, 108, 115] => lookup_160(),
            [115, 102, 114] => lookup_161(),
            [103, 115] => lookup_162(),
            [209, 128, 209, 132] => lookup_163(),
            [104, 111, 119] => lookup_164(),
            [103, 105] => lookup_165(labels),
            [119, 105, 107, 105] => lookup_166(),
            [102, 114, 101, 115, 101, 110, 105, 117, 115] => lookup_167(),
            [100, 109] => lookup_168(labels),
            [115, 111, 99, 105, 97, 108] => lookup_169(),
            [117, 110, 105, 99, 111, 109] => lookup_170(),
            [109, 111, 105] => lookup_171(),
            [103, 108, 111, 98, 97, 108] => lookup_172(),
            [115, 103] => lookup_173(labels),
            [120, 110, 45, 45, 116, 54, 48, 98, 53, 54, 97] => lookup_174(),
            [103, 109] => lookup_175(),
            [108, 114] => lookup_176(labels),
            [110, 101, 116] => lookup_177(labels),
            [112, 117, 98] => lookup_178(labels),
            [118, 105, 107, 105, 110, 103] => lookup_179(),
            [109, 117, 115, 101, 117, 109] => lookup_180(labels),
            [118, 105, 115, 105, 111, 110] => lookup_181(),
            [108, 117, 120, 101] => lookup_182(),
            [97, 114, 109, 121] => lookup_183(),
            [99, 111, 117, 114, 115, 101, 115] => lookup_184(),
            [99, 105, 116, 97, 100, 101, 108] => lookup_185(),
            [100, 97, 98, 117, 114] => lookup_186(),
            [99, 97, 109] => lookup_187(),
            [100, 97, 100] => lookup_188(),
            [100, 111, 119, 110, 108, 111, 97, 100] => lookup_189(),
            [97, 100] => lookup_190(labels),
            [106, 112] => lookup_191(labels),
            [104, 116] => lookup_192(labels),
            [216, 179, 217, 136, 216, 177, 217, 138, 216, 167] => lookup_193(),
            [107, 101, 114, 114, 121, 108, 111, 103, 105, 115, 116, 105, 99, 115] => lookup_194(),
            [98, 97, 110, 97, 109, 101, 120] => lookup_195(),
            [100, 118, 97, 103] => lookup_196(),
            [112, 114, 97, 120, 105] => lookup_197(),
            [115, 104, 97, 110, 103, 114, 105, 108, 97] => lookup_198(),
            [98, 108, 97, 99, 107, 102, 114, 105, 100, 97, 121] => lookup_199(),
            [208, 190, 209, 128, 208, 179] => lookup_200(),
            [224, 170, 173, 224, 170, 190, 224, 170, 176, 224, 170, 164] => lookup_201(),
            [229, 149, 134, 229, 159, 142] => lookup_202(),
            [105, 99, 98, 99] => lookup_203(),
            [98, 111, 109] => lookup_204(),
            [98, 102] => lookup_205(labels),
            [101, 99, 111] => lookup_206(),
            [99, 97, 115, 104] => lookup_207(),
            [111, 110, 103] => lookup_208(),
            [112, 97, 114, 116, 110, 101, 114, 115] => lookup_209(),
            [115, 97, 109, 115, 117, 110, 103] => lookup_210(),
            [216, 179, 217, 136, 216, 177, 217, 138, 216, 169] => lookup_211(),
            [115, 99, 104, 117, 108, 101] => lookup_212(),
            [115, 116, 117, 100, 121] => lookup_213(),
            [103, 111, 112] => lookup_214(),
            [100, 101, 103, 114, 101, 101] => lookup_215(),
            [98, 117, 100, 97, 112, 101, 115, 116] => lookup_216(),
            [216, 167, 217, 132, 216, 179, 216, 185, 217, 136, 216, 175, 219, 140, 219, 131] => {
                lookup_217()
            }
            [97, 108, 108, 102, 105, 110, 97, 110, 122] => lookup_218(),
            [99, 101, 110, 116, 101, 114] => lookup_219(),
            [110, 101, 116, 102, 108, 105, 120] => lookup_220(),
            [99, 101, 111] => lookup_221(),
            [102, 109] => lookup_222(labels),
            [104, 114] => lookup_223(labels),
            [224, 168, 173, 224, 168, 190, 224, 168, 176, 224, 168, 164] => lookup_224(),
            [98, 122, 104] => lookup_225(),
            [107, 103] => lookup_226(labels),
            [103, 105, 102, 116, 115] => lookup_227(),
            [120, 110, 45, 45, 112, 103, 98, 115, 48, 100, 104] => lookup_228(),
            [119, 105, 110, 101] => lookup_229(),
            [117, 121] => lookup_230(labels),
            [120, 110, 45, 45, 106, 108, 113, 52, 56, 48, 110, 50, 114, 103] => lookup_231(),
            [98, 101, 97, 117, 116, 121] => lookup_232(),
            [102, 101, 100, 101, 120] => lookup_233(),
            [103, 117, 105, 100, 101] => lookup_234(),
            [109, 97, 114, 107, 101, 116, 105, 110, 103] => lookup_235(labels),
            [97, 116] => lookup_236(labels),
            [103, 116] => lookup_237(labels),
            [98, 111, 117, 116, 105, 113, 117, 101] => lookup_238(),
            [99, 111, 109, 109, 98, 97, 110, 107] => lookup_239(),
            [108, 111, 108] => lookup_240(labels),
            [114, 117, 103, 98, 121] => lookup_241(),
            [114, 119, 101] => lookup_242(),
            [229, 143, 176, 230, 185, 190] => lookup_243(),
            [97, 108] => lookup_244(labels),
            [116, 117, 98, 101] => lookup_245(),
            [120, 110, 45, 45, 117, 110, 117, 112, 52, 121] => lookup_246(),
            [101, 100, 101, 107, 97] => lookup_247(),
            [120, 110, 45, 45, 109, 103, 98, 97, 105, 57, 97, 53, 101, 118, 97, 48, 48, 98] => {
                lookup_248()
            }
            [99, 111, 111, 107, 105, 110, 103] => lookup_249(),
            [115, 111, 102, 116, 119, 97, 114, 101] => lookup_250(),
            [112, 109] => lookup_251(labels),
            [111, 114, 97, 99, 108, 101] => lookup_252(),
            [208, 186, 208, 190, 208, 188] => lookup_253(),
            [112, 108, 117, 109, 98, 105, 110, 103] => lookup_254(),
            [97, 105] => lookup_255(labels),
            [103, 109, 98, 104] => lookup_256(),
            [105, 98, 109] => lookup_257(),
            [228, 191, 161, 230, 129, 175] => lookup_258(),
            [100, 110, 112] => lookup_259(),
            [98, 118] => lookup_260(),
            [115, 120] => lookup_261(labels),
            [99, 97, 115, 101] => lookup_262(),
            [108, 105, 118, 101] => lookup_263(),
            [101, 100, 117, 99, 97, 116, 105, 111, 110] => lookup_264(labels),
            [208, 188, 208, 190, 209, 129, 208, 186, 208, 178, 208, 176] => lookup_265(),
            [105, 110, 102, 105, 110, 105, 116, 105] => lookup_266(),
            [118, 105, 103] => lookup_267(),
            [98, 101, 110, 116, 108, 101, 121] => lookup_268(),
            [224, 164, 173, 224, 164, 190, 224, 164, 176, 224, 164, 164, 224, 164, 174, 224, 165, 141] => {
                lookup_269()
            }
            [109, 105, 99, 114, 111, 115, 111, 102, 116] => lookup_270(),
            [111, 107, 105, 110, 97, 119, 97] => lookup_271(),
            [116, 117, 105] => lookup_272(),
            [97, 114, 99, 104, 105] => lookup_273(),
            [103, 105, 118, 105, 110, 103] => lookup_274(),
            [112, 111, 104, 108] => lookup_275(),
            [103, 101, 110, 116, 105, 110, 103] => lookup_276(),
            [97, 119] => lookup_277(labels),
            [115, 104, 101, 108, 108] => lookup_278(),
            [120, 110, 45, 45, 113, 120, 97, 54, 97] => lookup_279(),
            [101, 113, 117, 105, 112, 109, 101, 110, 116] => lookup_280(),
            [115, 104, 105, 97] => lookup_281(),
            [120, 110, 45, 45, 51, 98, 115, 116, 48, 48, 109] => lookup_282(),
            [120, 110, 45, 45, 106, 118, 114, 49, 56, 57, 109] => lookup_283(),
            [109, 116, 114] => lookup_284(),
            [109, 111, 116, 111, 114, 99, 121, 99, 108, 101, 115] => lookup_285(),
            [115, 116, 97, 112, 108, 101, 115] => lookup_286(),
            [120, 110, 45, 45, 109, 103, 98, 97, 105, 57, 97, 122, 103, 113, 112, 54, 106] => {
                lookup_287()
            }
            [110, 101, 120, 116] => lookup_288(),
            [103, 103] => lookup_289(labels),
            [120, 110, 45, 45, 109, 103, 98, 97, 55, 99, 48, 98, 98, 110, 48, 97] => lookup_290(),
            [120, 110, 45, 45, 118, 104, 113, 117, 118] => lookup_291(),
            [107, 122] => lookup_292(labels),
            [103, 97, 121] => lookup_293(),
            [111, 110, 105, 111, 110] => lookup_294(),
            [98, 97, 114, 99, 108, 97, 121, 99, 97, 114, 100] => lookup_295(),
            [100, 99, 108, 107] => lookup_296(),
            [112, 110, 99] => lookup_297(),
            [112, 111, 114, 110] => lookup_298(labels),
            [110, 101, 99] => lookup_299(),
            [115, 97, 107, 117, 114, 97] => lookup_300(),
            [115, 111, 104, 117] => lookup_301(),
            [118, 97, 110, 103, 117, 97, 114, 100] => lookup_302(),
            [116, 116] => lookup_303(labels),
            [120, 110, 45, 45, 99, 99, 107, 50, 98, 51, 98] => lookup_304(),
            [98, 105, 110, 103] => lookup_305(),
            [104, 110] => lookup_306(labels),
            [105, 109, 100, 98] => lookup_307(),
            [114, 115, 118, 112] => lookup_308(),
            [114, 101, 100] => lookup_309(),
            [99, 105, 116, 105] => lookup_310(),
            [98, 104] => lookup_311(labels),
            [120, 110, 45, 45, 101, 102, 118, 121, 56, 56, 104] => lookup_312(),
            [228, 184, 150, 231, 149, 140] => lookup_313(),
            [103, 117, 105, 116, 97, 114, 115] => lookup_314(),
            [110, 99] => lookup_315(labels),
            [110, 101, 117, 115, 116, 97, 114] => lookup_316(),
            [97, 101, 116, 110, 97] => lookup_317(),
            [104, 101, 108, 112] => lookup_318(),
            [97, 117, 99, 116, 105, 111, 110] => lookup_319(),
            [98, 97, 114, 103, 97, 105, 110, 115] => lookup_320(),
            [102, 105, 115, 104, 105, 110, 103] => lookup_321(),
            [107, 105, 119, 105] => lookup_322(),
            [115, 101, 114, 118, 105, 99, 101, 115] => lookup_323(labels),
            [120, 110, 45, 45, 102, 112, 99, 114, 106, 57, 99, 51, 100] => lookup_324(),
            [116, 97, 116, 116, 111, 111] => lookup_325(),
            [116, 106, 120] => lookup_326(),
            [118, 101, 114, 109, 195, 182, 103, 101, 110, 115, 98, 101, 114, 97, 116, 101, 114] => {
                lookup_327()
            }
            [97, 100, 115] => lookup_328(),
            [98, 97, 115, 101, 98, 97, 108, 108] => lookup_329(),
            [119, 97, 108, 116, 101, 114] => lookup_330(),
            [230, 148, 191, 229, 138, 161] => lookup_331(),
            [216, 170, 217, 136, 217, 134, 216, 179] => lookup_332(),
            [118, 111, 121, 97, 103, 101] => lookup_333(),
            [116, 102] => lookup_334(),
            [97, 113, 117, 97, 114, 101, 108, 108, 101] => lookup_335(),
            [109, 113] => lookup_336(),
            [224, 172, 173, 224, 172, 190, 224, 172, 176, 224, 172, 164] => lookup_337(),
            [99, 119] => lookup_338(labels),
            [115, 98] => lookup_339(labels),
            [105, 101, 101, 101] => lookup_340(),
            [120, 110, 45, 45, 109, 103, 98, 97, 97, 107, 99, 55, 100, 118, 102] => lookup_341(),
            [112, 104, 97, 114, 109, 97, 99, 121] => lookup_342(),
            [112, 114, 117, 100, 101, 110, 116, 105, 97, 108] => lookup_343(),
            [120, 110, 45, 45, 109, 103, 98, 116, 120, 50, 98] => lookup_344(),
            [116, 99, 105] => lookup_345(),
            [236, 130, 188, 236, 132, 177] => lookup_346(),
            [108, 97, 109, 101, 114] => lookup_347(),
            [102, 114] => lookup_348(labels),
            [112, 108] => lookup_349(labels),
            [112, 102, 105, 122, 101, 114] => lookup_350(),
            [103, 101, 110, 116] => lookup_351(),
            [120, 110, 45, 45, 109, 105, 120, 48, 56, 50, 102] => lookup_352(),
            [224, 186, 165, 224, 186, 178, 224, 186, 167] => lookup_353(),
            [99, 108, 105, 110, 105, 113, 117, 101] => lookup_354(),
            [105, 109, 97, 109, 97, 116] => lookup_355(),
            [97, 109, 101, 120] => lookup_356(),
            [97, 120, 97] => lookup_357(),
            [115, 97, 118, 101] => lookup_358(),
            [97, 97, 114, 112] => lookup_359(),
            [116, 101, 97, 109] => lookup_360(labels),
            [109, 109, 97] => lookup_361(),
            [99, 97, 98] => lookup_362(),
            [103, 97, 114, 100, 101, 110] => lookup_363(),
            [120, 110, 45, 45, 57, 101, 116, 53, 50, 117] => lookup_364(),
            [99, 97, 114, 101, 101, 114, 115] => lookup_365(),
            [98, 111, 115, 116, 105, 107] => lookup_366(),
            [101, 115, 116, 97, 116, 101] => lookup_367(labels),
            [232, 135, 186, 231, 129, 163] => lookup_368(),
            [103, 108, 97, 100, 101] => lookup_369(),
            [108, 105, 102, 101] => lookup_370(),
            [120, 110, 45, 45, 51, 111, 113, 49, 56, 118, 108, 56, 112, 110, 51, 54, 97] => {
                lookup_371()
            }
            [99, 97, 116] => lookup_372(),
            [98, 105] => lookup_373(labels),
            [97, 116, 104, 108, 101, 116, 97] => lookup_374(),
            [229, 164, 167, 228, 188, 151, 230, 177, 189, 232, 189, 166] => lookup_375(),
            [103, 102] => lookup_376(),
            [99, 111, 111, 107, 105, 110, 103, 99, 104, 97, 110, 110, 101, 108] => lookup_377(),
            [109, 97, 115, 101, 114, 97, 116, 105] => lookup_378(),
            [109, 99, 107, 105, 110, 115, 101, 121] => lookup_379(),
            [112, 114, 101, 115, 115] => lookup_380(),
            [109, 101, 109, 111, 114, 105, 97, 108] => lookup_381(),
            [229, 174, 182, 233, 155, 187] => lookup_382(),
            [119, 101, 97, 116, 104, 101, 114] => lookup_383(),
            [102, 107] => lookup_384(info, labels),
            [98, 114, 111, 107, 101, 114] => lookup_385(),
            [120, 110, 45, 45, 99, 108, 99, 104, 99, 48, 101, 97, 48, 98, 50, 103, 50, 97, 57, 103, 99, 100] => {
                lookup_386()
            }
            [102, 101, 114, 114, 101, 114, 111] => lookup_387(),
            [107, 105, 110, 100, 101, 114] => lookup_388(),
            [111, 98, 115, 101, 114, 118, 101, 114] => lookup_389(),
            [114, 105, 99, 111, 104] => lookup_390(),
            [109, 105, 108] => lookup_391(),
            [97, 120] => lookup_392(labels),
            [115, 104, 111, 112] => lookup_393(labels),
            [109, 97, 116, 116, 101, 108] => lookup_394(),
            [110, 117] => lookup_395(labels),
            [104, 98, 111] => lookup_396(),
            [104, 105, 118] => lookup_397(),
            [101, 120, 112, 111, 115, 101, 100] => lookup_398(),
            [102, 97, 110] => lookup_399(),
            [216, 167, 217, 132, 217, 133, 216, 186, 216, 177, 216, 168] => lookup_400(),
            [97, 99, 111] => lookup_401(),
            [108, 105, 110, 100, 101] => lookup_402(),
            [100, 114, 105, 118, 101] => lookup_403(),
            [104, 111, 109, 101, 115] => lookup_404(),
            [112, 105, 100] => lookup_405(),
            [113, 117, 101, 98, 101, 99] => lookup_406(),
            [120, 110, 45, 45, 112, 115, 115, 121, 50, 117] => lookup_407(),
            [107, 112, 110] => lookup_408(),
            [116, 111, 112] => lookup_409(labels),
            [109, 111, 110, 97, 115, 104] => lookup_410(),
            [120, 110, 45, 45, 109, 103, 98, 97, 97, 109, 55, 97, 56, 104] => lookup_411(),
            [105, 113] => lookup_412(labels),
            [120, 110, 45, 45, 102, 105, 113, 115, 56, 115] => lookup_413(),
            [98, 97, 110, 97, 110, 97, 114, 101, 112, 117, 98, 108, 105, 99] => lookup_414(),
            [98, 114, 111, 116, 104, 101, 114] => lookup_415(),
            [111, 116, 115, 117, 107, 97] => lookup_416(),
            [100, 101, 97, 108, 115] => lookup_417(),
            [108, 117, 120, 117, 114, 121] => lookup_418(),
            [105, 99, 117] => lookup_419(),
            [108, 117, 110, 100, 98, 101, 99, 107] => lookup_420(),
            [109, 121] => lookup_421(labels),
            [110, 111] => lookup_422(labels),
            [110, 104, 107] => lookup_423(),
            [115, 116, 121, 108, 101] => lookup_424(),
            [116, 111, 121, 111, 116, 97] => lookup_425(),
            [97, 110, 113, 117, 97, 110] => lookup_426(),
            [230, 151, 182, 229, 176, 154] => lookup_427(),
            [120, 110, 45, 45, 105, 49, 98, 54, 98, 49, 97, 54, 97, 50, 101] => lookup_428(),
            [230, 156, 186, 230, 158, 132] => lookup_429(),
            [119, 97, 108, 101, 115] => lookup_430(),
            [106, 101, 119, 101, 108, 114, 121] => lookup_431(),
            [103, 114, 111, 117, 112] => lookup_432(labels),
            [114, 105, 99, 104] => lookup_433(),
            [115, 121, 115, 116, 101, 109, 115] => lookup_434(labels),
            [120, 110, 45, 45, 116, 99, 107, 119, 101] => lookup_435(),
            [120, 110, 45, 45, 116, 105, 113, 52, 57, 120, 113, 121, 106] => lookup_436(),
            [107, 121] => lookup_437(labels),
            [99, 111, 109, 112, 97, 114, 101] => lookup_438(),
            [109, 111, 114, 109, 111, 110] => lookup_439(),
            [99, 108, 97, 105, 109, 115] => lookup_440(),
            [110, 97, 118, 121] => lookup_441(),
            [110, 102, 108] => lookup_442(),
            [112, 105, 111, 110, 101, 101, 114] => lookup_443(),
            [114, 101, 100, 115, 116, 111, 110, 101] => lookup_444(),
            [105, 110, 107] => lookup_445(),
            [108, 111, 116, 116, 111] => lookup_446(),
            [104, 111, 109, 101, 103, 111, 111, 100, 115] => lookup_447(),
            [109, 101, 100] => lookup_448(),
            [109, 105, 116, 115, 117, 98, 105, 115, 104, 105] => lookup_449(),
            [120, 110, 45, 45, 102, 105, 113, 50, 50, 56, 99, 53, 104, 115] => lookup_450(),
            [229, 129, 165, 229, 186, 183] => lookup_451(),
            [112, 105, 99, 116, 101, 116] => lookup_452(),
            [99, 121, 111, 117] => lookup_453(),
            [103, 108, 101] => lookup_454(),
            [102, 97, 105, 108] => lookup_455(),
            [100, 118, 114] => lookup_456(),
            [109, 97, 105, 115, 111, 110] => lookup_457(),
            [115, 101, 110, 101, 114] => lookup_458(),
            [216, 168, 216, 167, 216, 177, 216, 170] => lookup_459(),
            [120, 110, 45, 45, 109, 103, 98, 98, 104, 49, 97, 55, 49, 101] => lookup_460(),
            [99, 108, 117, 98] => lookup_461(labels),
            [115, 100] => lookup_462(labels),
            [120, 110, 45, 45, 119, 103, 98, 104, 49, 99] => lookup_463(),
            [99, 104, 114, 111, 109, 101] => lookup_464(),
            [116, 114, 97, 118, 101, 108] => lookup_465(),
            [114, 111, 99, 107, 115] => lookup_466(labels),
            [97, 115] => lookup_467(labels),
            [98, 97] => lookup_468(labels),
            [99, 104, 97, 116] => lookup_469(),
            [103, 97, 109, 101, 115] => lookup_470(),
            [105, 107, 97, 110, 111] => lookup_471(),
            [227, 130, 185, 227, 131, 136, 227, 130, 162] => lookup_472(),
            [233, 155, 187, 232, 168, 138, 231, 155, 136, 231, 167, 145] => lookup_473(),
            [109, 111, 115, 99, 111, 119] => lookup_474(),
            [115, 112, 97, 99, 101] => lookup_475(labels),
            [232, 175, 186, 229, 159, 186, 228, 186, 154] => lookup_476(),
            [111, 112, 101, 110] => lookup_477(),
            [120, 110, 45, 45, 106, 108, 113, 54, 49, 117, 57, 119, 55, 98] => lookup_478(),
            [103, 109, 120] => lookup_479(),
            [102, 111, 114, 117, 109] => lookup_480(),
            [228, 188, 129, 228, 184, 154] => lookup_481(),
            [120, 110, 45, 45, 109, 103, 98, 103, 117, 56, 50, 97] => lookup_482(),
            [121, 111, 117] => lookup_483(),
            [101, 120, 116, 114, 97, 115, 112, 97, 99, 101] => lookup_484(),
            [216, 185, 216, 177, 216, 167, 217, 130] => lookup_485(),
            [99, 98, 110] => lookup_486(),
            [99, 108, 105, 110, 105, 99] => lookup_487(),
            [115, 116, 111, 114, 97, 103, 101] => lookup_488(),
            [115, 117, 112, 112, 111, 114, 116] => lookup_489(labels),
            [104, 97, 117, 115] => lookup_490(),
            [116, 111, 111, 108, 115] => lookup_491(),
            [116, 111, 115, 104, 105, 98, 97] => lookup_492(),
            [118, 105, 100, 101, 111] => lookup_493(),
            [100, 122] => lookup_494(labels),
            [208, 177, 208, 181, 208, 187] => lookup_495(),
            [100, 97, 116, 97] => lookup_496(),
            [120, 121, 122] => lookup_497(labels),
            [119, 97, 108, 109, 97, 114, 116] => lookup_498(),
            [97, 101] => lookup_499(labels),
            [120, 110, 45, 45, 109, 103, 98, 50, 100, 100, 101, 115] => lookup_500(),
            [110, 103] => lookup_501(labels),
            [99, 102, 97] => lookup_502(),
            [109, 101, 110] => lookup_503(labels),
            [229, 185, 191, 228, 184, 156] => lookup_504(),
            [108, 103, 98, 116] => lookup_505(),
            [120, 110, 45, 45, 119, 52, 114, 56, 53, 101, 108, 56, 102, 104, 117, 53, 100, 110, 114, 97] => {
                lookup_506()
            }
            [110, 101, 119, 115] => lookup_507(labels),
            [99, 114, 101, 100, 105, 116] => lookup_508(),
            [109, 99] => lookup_509(labels),
            [103, 114, 101, 101, 110] => lookup_510(),
            [98, 111, 111] => lookup_511(),
            [111, 116, 116] => lookup_512(),
            [99, 97, 114, 97, 118, 97, 110] => lookup_513(),
            [108, 118] => lookup_514(labels),
            [98, 108, 111, 111, 109, 98, 101, 114, 103] => lookup_515(),
            [229, 168, 177, 228, 185, 144] => lookup_516(),
            [107, 104] => lookup_517(info, labels),
            [98, 115] => lookup_518(labels),
            [98, 101, 97, 116, 115] => lookup_519(),
            [100, 101, 115, 105] => lookup_520(),
            [120, 110, 45, 45, 49, 99, 107, 50, 101, 49, 98] => lookup_521(),
            [98, 105, 110, 103, 111] => lookup_522(),
            [99, 97, 108] => lookup_523(),
            [99, 111, 110, 115, 117, 108, 116, 105, 110, 103] => lookup_524(),
            [228, 184, 173, 228, 191, 161] => lookup_525(),
            [121, 117, 110] => lookup_526(),
            [109, 111] => lookup_527(labels),
            [98, 97, 114] => lookup_528(),
            [120, 110, 45, 45, 51, 48, 114, 114, 55, 121] => lookup_529(),
            [101, 114, 105, 99, 115, 115, 111, 110] => lookup_530(),
            [216, 167, 217, 132, 217, 138, 217, 133, 217, 134] => lookup_531(),
            [98, 106] => lookup_532(labels),
            [216, 179, 217, 136, 216, 175, 216, 167, 217, 134] => lookup_533(),
            [106, 109] => lookup_534(info, labels),
            [102, 116, 114] => lookup_535(),
            [103, 109, 111] => lookup_536(),
            [109, 97, 110, 97, 103, 101, 109, 101, 110, 116] => lookup_537(labels),
            [109, 111, 114, 116, 103, 97, 103, 101] => lookup_538(),
            [120, 110, 45, 45, 107, 99, 114, 120, 55, 55, 100, 49, 120, 52, 97] => lookup_539(),
            [229, 133, 172, 231, 155, 138] => lookup_540(),
            [108, 105, 102, 101, 105, 110, 115, 117, 114, 97, 110, 99, 101] => lookup_541(),
            [108, 111, 118, 101] => lookup_542(),
            [115, 97, 110, 111, 102, 105] => lookup_543(),
            [103, 104] => lookup_544(labels),
            [213, 176, 213, 161, 213, 181] => lookup_545(),
            [104, 111, 115, 116, 105, 110, 103] => lookup_546(labels),
            [99, 97, 110, 99, 101, 114, 114, 101, 115, 101, 97, 114, 99, 104] => lookup_547(),
            [103, 111, 108, 100, 112, 111, 105, 110, 116] => lookup_548(),
            [115, 99, 104, 111, 111, 108] => lookup_549(),
            [99, 97, 109, 101, 114, 97] => lookup_550(),
            [108, 101, 103, 111] => lookup_551(),
            [208, 186, 208, 176, 209, 130, 208, 190, 208, 187, 208, 184, 208, 186] => lookup_552(),
            [112, 116] => lookup_553(labels),
            [115, 111] => lookup_554(labels),
            [120, 110, 45, 45, 103, 101, 99, 114, 106, 57, 99] => lookup_555(),
            [120, 110, 45, 45, 112, 49, 97, 105] => lookup_556(),
            [107, 102, 104] => lookup_557(),
            [120, 110, 45, 45, 109, 105, 120, 56, 57, 49, 102] => lookup_558(),
            [99, 122] => lookup_559(labels),
            [98, 98, 99] => lookup_560(),
            [121, 116] => lookup_561(labels),
            [97, 109, 102, 97, 109] => lookup_562(),
            [115, 116, 111, 99, 107, 104, 111, 108, 109] => lookup_563(),
            [99, 112, 97] => lookup_564(),
            [98, 109, 119] => lookup_565(),
            [102, 105, 100, 101, 108, 105, 116, 121] => lookup_566(),
            [99, 111, 117, 110, 116, 114, 121] => lookup_567(),
            [116, 109] => lookup_568(labels),
            [116, 118, 115] => lookup_569(),
            [115, 99] => lookup_570(labels),
            [104, 111, 110, 100, 97] => lookup_571(),
            [118, 110] => lookup_572(labels),
            [120, 110, 45, 45, 109, 103, 98, 112, 108, 50, 102, 104] => lookup_573(),
            [103, 117, 97, 114, 100, 105, 97, 110] => lookup_574(),
            [106, 111, 121] => lookup_575(),
            [110, 121, 99] => lookup_576(),
            [118, 108, 97, 97, 110, 100, 101, 114, 101, 110] => lookup_577(),
            [120, 110, 45, 45, 111, 116, 117, 55, 57, 54, 100] => lookup_578(),
            [122, 117, 101, 114, 105, 99, 104] => lookup_579(),
            [109, 111, 98, 105] => lookup_580(labels),
            [110, 97, 103, 111, 121, 97] => lookup_581(),
            [118, 101, 116] => lookup_582(),
            [119, 101, 98, 101, 114] => lookup_583(),
            [97, 108, 105, 98, 97, 98, 97] => lookup_584(),
            [102, 97, 114, 109, 101, 114, 115] => lookup_585(),
            [101, 109, 101, 114, 99, 107] => lookup_586(),
            [102, 108, 105, 114] => lookup_587(),
            [103, 114, 111, 99, 101, 114, 121] => lookup_588(),
            [106, 110, 106] => lookup_589(),
            [108, 101, 97, 115, 101] => lookup_590(),
            [97, 110, 100, 114, 111, 105, 100] => lookup_591(),
            [108, 101, 120, 117, 115] => lookup_592(),
            [114, 97, 105, 100] => lookup_593(),
            [108, 97, 119, 121, 101, 114] => lookup_594(),
            [114, 105, 108] => lookup_595(),
            [115, 116, 117, 100, 105, 111] => lookup_596(),
            [120, 110, 45, 45, 105, 111, 48, 97, 55, 105] => lookup_597(),
            [209, 131, 208, 186, 209, 128] => lookup_598(),
            [98, 97, 115, 107, 101, 116, 98, 97, 108, 108] => lookup_599(labels),
            [108, 111, 116, 116, 101] => lookup_600(),
            [120, 98, 111, 120] => lookup_601(),
            [115, 97, 120, 111] => lookup_602(),
            [98, 97, 114, 99, 108, 97, 121, 115] => lookup_603(),
            [120, 110, 45, 45, 104, 50, 98, 114, 106, 57, 99, 56, 99] => lookup_604(),
            [97, 108, 108, 121] => lookup_605(),
            [98, 116] => lookup_606(labels),
            [103, 97, 112] => lookup_607(),
            [97, 98, 117, 100, 104, 97, 98, 105] => lookup_608(),
            [120, 110, 45, 45, 120, 107, 99, 50, 100, 108, 51, 97, 53, 101, 101, 48, 104] => {
                lookup_609()
            }
            [107, 105, 116, 99, 104, 101, 110] => lookup_610(),
            [115, 104, 105, 107, 115, 104, 97] => lookup_611(),
            [99, 114, 105, 99, 107, 101, 116] => lookup_612(),
            [105, 100] => lookup_613(labels),
            [229, 164, 169, 228, 184, 187, 230, 149, 153] => lookup_614(),
            [102, 105] => lookup_615(labels),
            [120, 110, 45, 45, 51, 101, 48, 98, 55, 48, 55, 101] => lookup_616(),
            [97, 98, 98] => lookup_617(),
            [98, 101, 115, 116] => lookup_618(),
            [101, 99] => lookup_619(labels),
            [98, 111, 101, 104, 114, 105, 110, 103, 101, 114] => lookup_620(),
            [98, 111, 102, 97] => lookup_621(),
            [108, 101, 99, 108, 101, 114, 99] => lookup_622(),
            [110, 116, 116] => lookup_623(),
            [112, 114, 111, 109, 111] => lookup_624(),
            [114, 111, 100, 101, 111] => lookup_625(),
            [108, 112, 108] => lookup_626(),
            [110, 97] => lookup_627(labels),
            [100, 105, 101, 116] => lookup_628(),
            [115, 110] => lookup_629(labels),
            [109, 111, 98, 105, 108, 101] => lookup_630(),
            [100, 111, 103] => lookup_631(),
            [114, 117] => lookup_632(labels),
            [101, 97, 116] => lookup_633(),
            [108, 117] => lookup_634(labels),
            [110, 105, 107, 101] => lookup_635(),
            [112, 97, 115, 115, 97, 103, 101, 110, 115] => lookup_636(),
            [114, 101, 97, 108, 116, 121] => lookup_637(),
            [99, 121] => lookup_638(labels),
            [107, 105, 109] => lookup_639(),
            [116, 114, 97, 100, 105, 110, 103] => lookup_640(),
            [119, 97, 110, 103, 103, 111, 117] => lookup_641(),
            [102, 105, 116] => lookup_642(),
            [97, 110, 97, 108, 121, 116, 105, 99, 115] => lookup_643(),
            [100, 101, 97, 108, 101, 114] => lookup_644(),
            [120, 110, 45, 45, 107, 112, 114, 121, 53, 55, 100] => lookup_645(),
            [108, 111, 99, 107, 101, 114] => lookup_646(),
            [104, 101, 108, 115, 105, 110, 107, 105] => lookup_647(),
            [208, 177, 208, 179] => lookup_648(),
            [98, 111, 115, 116, 111, 110] => lookup_649(),
            [116, 97, 120] => lookup_650(),
            [116, 114, 97, 100, 101] => lookup_651(labels),
            [107, 112] => lookup_652(labels),
            [107, 119] => lookup_653(labels),
            [216, 167, 217, 132, 216, 179, 216, 185, 217, 136, 216, 175, 217, 138, 216, 169] => {
                lookup_654()
            }
            [102, 97, 105, 116, 104] => lookup_655(labels),
            [115, 111, 99, 99, 101, 114] => lookup_656(),
            [229, 133, 172, 229, 143, 184] => lookup_657(),
            [232, 176, 183, 230, 173, 140] => lookup_658(),
            [119, 101, 100, 100, 105, 110, 103] => lookup_659(),
            [117, 122] => lookup_660(labels),
            [108, 105, 102, 101, 115, 116, 121, 108, 101] => lookup_661(),
            [97, 105, 114, 102, 111, 114, 99, 101] => lookup_662(),
            [103, 97, 109, 101] => lookup_663(),
            [108, 111, 97, 110] => lookup_664(),
            [118, 111, 100, 107, 97] => lookup_665(),
            [110, 97, 98] => lookup_666(),
            [216, 180, 216, 168, 217, 131, 216, 169] => lookup_667(),
            [209, 128, 209, 131, 209, 129] => lookup_668(labels),
            [99, 111, 108, 108, 101, 103, 101] => lookup_669(),
            [98, 117, 121] => lookup_670(),
            [106, 117, 101, 103, 111, 115] => lookup_671(),
            [111, 114, 105, 103, 105, 110, 115] => lookup_672(),
            [104, 117] => lookup_673(labels),
            [110, 101] => lookup_674(),
            [105, 99, 101] => lookup_675(),
            [98, 105, 107, 101] => lookup_676(),
            [103, 114] => lookup_677(labels),
            [112, 97, 114, 116, 115] => lookup_678(),
            [105, 110, 116] => lookup_679(labels),
            [103, 97, 108, 108, 117, 112] => lookup_680(),
            [115, 98, 105] => lookup_681(),
            [115, 117, 114, 103, 101, 114, 121] => lookup_682(),
            [109, 115] => lookup_683(labels),
            [116, 117, 115, 104, 117] => lookup_684(),
            [120, 110, 45, 45, 109, 103, 98, 105, 52, 101, 99, 101, 120, 112] => lookup_685(),
            [120, 110, 45, 45, 115, 101, 115, 53, 53, 52, 103] => lookup_686(),
            [115, 107, 121, 112, 101] => lookup_687(),
            [105, 110, 116, 117, 105, 116] => lookup_688(),
            [118, 105, 108, 108, 97, 115] => lookup_689(),
            [109, 97, 114, 115, 104, 97, 108, 108, 115] => lookup_690(),
            [120, 110, 45, 45, 51, 112, 120, 117, 56, 107] => lookup_691(),
            [233, 166, 153, 230, 184, 175] => lookup_692(labels),
            [116, 118] => lookup_693(labels),
            [115, 104, 97, 119] => lookup_694(),
            [228, 189, 155, 229, 177, 177] => lookup_695(),
            [114, 97, 100, 105, 111] => lookup_696(),
            [99, 114, 115] => lookup_697(),
            [119, 116, 99] => lookup_698(),
            [105, 115, 109, 97, 105, 108, 105] => lookup_699(),
            [114, 101, 105, 115, 101] => lookup_700(),
            [99, 97, 108, 118, 105, 110, 107, 108, 101, 105, 110] => lookup_701(),
            [110, 114, 119] => lookup_702(),
            [209, 129, 209, 128, 208, 177] => lookup_703(labels),
            [100, 101, 115, 105, 103, 110] => lookup_704(labels),
            [100, 105, 97, 109, 111, 110, 100, 115] => lookup_705(),
            [103, 114, 97, 116, 105, 115] => lookup_706(),
            [100, 111, 116] => lookup_707(),
            [115, 99, 97] => lookup_708(),
            [120, 110, 45, 45, 53, 115, 117, 51, 52, 106, 57, 51, 54, 98, 103, 115, 103] => {
                lookup_709()
            }
            [224, 164, 173, 224, 164, 190, 224, 164, 176, 224, 164, 164] => lookup_710(),
            [100, 111, 109, 97, 105, 110, 115] => lookup_711(),
            [109, 97] => lookup_712(labels),
            [102, 108, 111, 114, 105, 115, 116] => lookup_713(),
            [104, 101, 97, 108, 116, 104] => lookup_714(),
            [98, 98] => lookup_715(labels),
            [99, 120] => lookup_716(labels),
            [97, 117, 100, 105, 111] => lookup_717(),
            [107, 111, 109, 97, 116, 115, 117] => lookup_718(),
            [99, 114, 101, 100, 105, 116, 117, 110, 105, 111, 110] => lookup_719(),
            [109, 97, 114, 114, 105, 111, 116, 116] => lookup_720(),
            [98, 104, 97, 114, 116, 105] => lookup_721(),
            [100, 105, 114, 101, 99, 116, 111, 114, 121] => lookup_722(),
            [109, 111, 118] => lookup_723(),
            [108, 105, 108, 108, 121] => lookup_724(),
            [99, 111, 109, 99, 97, 115, 116] => lookup_725(),
            [112, 108, 97, 99, 101] => lookup_726(labels),
            [235, 139, 183, 235, 132, 183] => lookup_727(),
            [99, 104, 97, 115, 101] => lookup_728(),
            [116, 111, 121, 115] => lookup_729(),
            [97, 109, 101, 114, 105, 99, 97, 110, 102, 97, 109, 105, 108, 121] => lookup_730(),
            [100, 117, 110, 108, 111, 112] => lookup_731(),
            [99, 111, 117, 112, 111, 110, 115] => lookup_732(),
            [102, 105, 110, 97, 108] => lookup_733(),
            [114, 101, 108, 105, 97, 110, 99, 101] => lookup_734(),
            [111, 115, 97, 107, 97] => lookup_735(),
            [98, 110] => lookup_736(labels),
            [97, 108, 115, 97, 99, 101] => lookup_737(),
            [98, 109, 115] => lookup_738(),
            [104, 111, 109, 101, 115, 101, 110, 115, 101] => lookup_739(),
            [112, 114, 111, 112, 101, 114, 116, 105, 101, 115] => lookup_740(),
            [117, 97] => lookup_741(labels),
            [103, 101] => lookup_742(labels),
            [114, 105, 111] => lookup_743(),
            [115, 116, 114, 101, 97, 109] => lookup_744(),
            [120, 110, 45, 45, 49, 113, 113, 119, 50, 51, 97] => lookup_745(),
            [101, 118, 101, 110, 116, 115] => lookup_746(labels),
            [109, 118] => lookup_747(labels),
            [114, 119] => lookup_748(labels),
            [106, 97, 118, 97] => lookup_749(),
            [97, 122, 117, 114, 101] => lookup_750(),
            [104, 111, 109, 101, 100, 101, 112, 111, 116] => lookup_751(),
            [110, 114] => lookup_752(labels),
            [99, 101, 114, 110] => lookup_753(),
            [209, 129, 208, 176, 208, 185, 209, 130] => lookup_754(),
            [216, 167, 217, 132, 216, 168, 216, 173, 216, 177, 217, 138, 217, 134] => lookup_755(),
            [97, 118, 105, 97, 110, 99, 97] => lookup_756(),
            [99, 108, 101, 97, 110, 105, 110, 103] => lookup_757(),
            [109, 103] => lookup_758(labels),
            [99, 97, 109, 112] => lookup_759(),
            [106, 101, 116, 122, 116] => lookup_760(),
            [120, 110, 45, 45, 50, 115, 99, 114, 106, 57, 99] => lookup_761(),
            [230, 183, 161, 233, 169, 172, 233, 148, 161] => lookup_762(),
            [110, 101, 116, 119, 111, 114, 107] => lookup_763(labels),
            [98, 97, 114, 99, 101, 108, 111, 110, 97] => lookup_764(),
            [227, 130, 176, 227, 131, 188, 227, 130, 176, 227, 131, 171] => lookup_765(),
            [102, 117, 114, 110, 105, 116, 117, 114, 101] => lookup_766(),
            [119, 115] => lookup_767(labels),
            [98, 111, 115, 99, 104] => lookup_768(),
            [97, 114, 97, 109, 99, 111] => lookup_769(),
            [120, 110, 45, 45, 99, 122, 114, 115, 48, 116] => lookup_770(),
            [120, 110, 45, 45, 109, 103, 98, 97, 51, 97, 52, 102, 114, 97] => lookup_771(),
            [97, 101, 114, 111] => lookup_772(labels),
            [98, 99, 110] => lookup_773(),
            [115, 109] => lookup_774(),
            [102, 117, 110] => lookup_775(),
            [118, 117] => lookup_776(labels),
            [108, 97, 116, 105, 110, 111] => lookup_777(),
            [112, 107] => lookup_778(labels),
            [118, 97, 110, 97] => lookup_779(),
            [98, 108, 117, 101] => lookup_780(),
            [99, 115, 99] => lookup_781(),
            [111, 110, 108, 105, 110, 101] => lookup_782(labels),
            [100, 106] => lookup_783(),
            [98, 103] => lookup_784(labels),
            [115, 114] => lookup_785(),
            [100, 100, 115] => lookup_786(),
            [105, 110, 99] => lookup_787(),
            [115, 97, 102, 101] => lookup_788(),
            [116, 104, 101, 97, 116, 114, 101] => lookup_789(),
            [117, 110, 111] => lookup_790(),
            [118, 111, 116, 101] => lookup_791(),
            [229, 190, 174, 229, 141, 154] => lookup_792(),
            [112, 114, 111, 103, 114, 101, 115, 115, 105, 118, 101] => lookup_793(),
            [98, 97, 98, 121] => lookup_794(),
            [108, 111, 110, 100, 111, 110] => lookup_795(labels),
            [115, 114, 108] => lookup_796(),
            [231, 189, 145, 229, 186, 151] => lookup_797(),
            [97, 108, 108, 115, 116, 97, 116, 101] => lookup_798(),
            [97, 113] => lookup_799(),
            [105, 110, 115, 116, 105, 116, 117, 116, 101] => lookup_800(),
            [115, 121, 100, 110, 101, 121] => lookup_801(),
            [104, 97, 109, 98, 117, 114, 103] => lookup_802(),
            [116, 97, 105, 112, 101, 105] => lookup_803(),
            [121, 111, 117, 116, 117, 98, 101] => lookup_804(),
            [99, 114, 111, 119, 110] => lookup_805(),
            [224, 174, 135, 224, 174, 168, 224, 175, 141, 224, 174, 164, 224, 174, 191, 224, 174, 175, 224, 174, 190] => {
                lookup_806()
            }
            [120, 110, 45, 45, 109, 103, 98, 116, 102, 56, 102, 108] => lookup_807(),
            [105, 110, 118, 101, 115, 116, 109, 101, 110, 116, 115] => lookup_808(),
            [98, 114, 105, 100, 103, 101, 115, 116, 111, 110, 101] => lookup_809(),
            [100, 105, 103, 105, 116, 97, 108] => lookup_810(labels),
            [114, 101, 118, 105, 101, 119, 115] => lookup_811(),
            [102, 105, 108, 109] => lookup_812(),
            [119, 101, 105, 98, 111] => lookup_813(),
            [119, 105, 110] => lookup_814(labels),
            [97, 115, 105, 97] => lookup_815(labels),
            [119, 97, 116, 99, 104, 101, 115] => lookup_816(),
            [97, 115, 115, 111, 99, 105, 97, 116, 101, 115] => lookup_817(),
            [115, 101, 115] => lookup_818(),
            [99, 105, 116, 121] => lookup_819(),
            [102, 105, 114, 109, 100, 97, 108, 101] => lookup_820(),
            [115, 122] => lookup_821(labels),
            [107, 105, 110, 100, 108, 101] => lookup_822(),
            [116, 104, 100] => lookup_823(),
            [98, 114, 97, 100, 101, 115, 99, 111] => lookup_824(),
            [120, 110, 45, 45, 110, 103, 98, 99, 53, 97, 122, 100] => lookup_825(),
            [109, 108, 98] => lookup_826(),
            [111, 114, 103] => lookup_827(labels),
            [120, 110, 45, 45, 109, 103, 98, 116, 51, 100, 104, 100] => lookup_828(),
            [112, 114, 111, 116, 101, 99, 116, 105, 111, 110] => lookup_829(),
            [98, 122] => lookup_830(labels),
            [112, 101] => lookup_831(labels),
            [98, 97, 110, 107] => lookup_832(),
            [120, 110, 45, 45, 109, 103, 98, 101, 114, 112, 52, 97, 53, 100, 52, 97, 114] => {
                lookup_833()
            }
            [100, 105, 115, 99, 111, 117, 110, 116] => lookup_834(),
            [216, 167, 217, 133, 216, 167, 216, 177, 216, 167, 216, 170] => lookup_835(),
            [109, 111, 116, 111] => lookup_836(),
            [112, 104, 100] => lookup_837(),
            [114, 111, 111, 109] => lookup_838(),
            [99, 97, 102, 101] => lookup_839(),
            [99, 105] => lookup_840(labels),
            [109, 109] => lookup_841(info, labels),
            [116, 101, 110, 110, 105, 115] => lookup_842(),
            [119, 105, 110, 110, 101, 114, 115] => lookup_843(),
            [217, 129, 217, 132, 216, 179, 216, 183, 217, 138, 217, 134] => lookup_844(),
            [208, 190, 208, 189, 208, 187, 208, 176, 208, 185, 208, 189] => lookup_845(),
            [114, 101] => lookup_846(labels),
            [97, 97, 97] => lookup_847(),
            [109, 120] => lookup_848(labels),
            [99, 104, 97, 110, 110, 101, 108] => lookup_849(),
            [107, 100, 100, 105] => lookup_850(),
            [108, 111, 102, 116] => lookup_851(),
            [111, 102, 102] => lookup_852(),
            [115, 97, 110, 100, 118, 105, 107] => lookup_853(),
            [115, 112, 111, 114, 116] => lookup_854(),
            [114, 101, 97, 100] => lookup_855(),
            [117, 107] => lookup_856(labels),
            [118, 99] => lookup_857(labels),
            [116, 101, 109, 97, 115, 101, 107] => lookup_858(),
            [115, 101] => lookup_859(labels),
            [120, 110, 45, 45, 109, 103, 98, 113, 108, 121, 55, 99, 48, 97, 54, 55, 102, 98, 99] => {
                lookup_860()
            }
            [103, 114, 105, 112, 101] => lookup_861(),
            [108, 97, 110, 120, 101, 115, 115] => lookup_862(),
            [115, 104] => lookup_863(labels),
            [106, 117, 110, 105, 112, 101, 114] => lookup_864(),
            [120, 110, 45, 45, 99, 122, 114, 54, 57, 52, 98] => lookup_865(),
            [120, 110, 45, 45, 103, 50, 120, 120, 52, 56, 99] => lookup_866(),
            [227, 130, 175, 227, 131, 169, 227, 130, 166, 227, 131, 137] => lookup_867(),
            [120, 110, 45, 45, 57, 48, 97, 105, 115] => lookup_868(),
            [105, 115, 116] => lookup_869(),
            [115, 111, 102, 116, 98, 97, 110, 107] => lookup_870(),
            [115, 111, 110, 103] => lookup_871(),
            [98, 114] => lookup_872(labels),
            [120, 101, 114, 111, 120] => lookup_873(),
            [112, 97, 110, 97, 115, 111, 110, 105, 99] => lookup_874(),
            [99, 118] => lookup_875(labels),
            [99, 105, 116, 105, 99] => lookup_876(),
            [99, 98, 97] => lookup_877(),
            [104, 107] => lookup_878(labels),
            [99, 102, 100] => lookup_879(),
            [97, 114, 97, 98] => lookup_880(),
            [99, 97, 108, 108] => lookup_881(),
            [105, 110, 115, 117, 114, 101] => lookup_882(),
            [115, 99, 98] => lookup_883(),
            [217, 133, 217, 136, 216, 177, 217, 138, 216, 170, 216, 167, 217, 134, 217, 138, 216, 167] => {
                lookup_884()
            }
            [116, 105, 101, 110, 100, 97] => lookup_885(),
            [120, 110, 45, 45, 118, 101, 114, 109, 103, 101, 110, 115, 98, 101, 114, 97, 116, 117, 110, 103, 45, 112, 119, 98] => {
                lookup_886()
            }
            [102, 111, 117, 110, 100, 97, 116, 105, 111, 110] => lookup_887(),
            [121, 97, 110, 100, 101, 120] => lookup_888(),
            [116, 114, 97, 118, 101, 108, 101, 114, 115] => lookup_889(),
            [98, 101, 115, 116, 98, 117, 121] => lookup_890(),
            [120, 110, 45, 45, 102, 106, 113, 55, 50, 48, 97] => lookup_891(),
            [102, 121, 105] => lookup_892(),
            [216, 167, 217, 132, 216, 179, 216, 185, 217, 136, 216, 175, 217, 138, 217, 135] => {
                lookup_893()
            }
            [110, 122] => lookup_894(labels),
            [100, 101, 110, 116, 105, 115, 116] => lookup_895(),
            [101, 115] => lookup_896(labels),
            [109, 108] => lookup_897(labels),
            [97, 111] => lookup_898(labels),
            [109, 117, 116, 117, 97, 108] => lookup_899(),
            [112, 114, 111, 112, 101, 114, 116, 121] => lookup_900(),
            [107, 117, 111, 107, 103, 114, 111, 117, 112] => lookup_901(),
            [115, 99, 104, 119, 97, 114, 122] => lookup_902(),
            [97, 99, 97, 100, 101, 109, 121] => lookup_903(labels),
            [112, 114, 111, 102] => lookup_904(),
            [115, 104, 111, 112, 112, 105, 110, 103] => lookup_905(),
            [119, 104, 111, 115, 119, 104, 111] => lookup_906(),
            [98, 111, 111, 107] => lookup_907(),
            [102, 117, 116, 98, 111, 108] => lookup_908(),
            [115, 116, 99, 103, 114, 111, 117, 112] => lookup_909(),
            [116, 105, 102, 102, 97, 110, 121] => lookup_910(),
            [115, 97, 114, 108] => lookup_911(),
            [105, 114] => lookup_912(labels),
            [102, 97, 103, 101] => lookup_913(),
            [112, 114, 97, 109, 101, 114, 105, 99, 97] => lookup_914(),
            [100, 101, 97, 108] => lookup_915(),
            [119, 101, 98, 99, 97, 109] => lookup_916(),
            [98, 105, 122] => lookup_917(labels),
            [100, 97, 116, 115, 117, 110] => lookup_918(),
            [103, 111, 111] => lookup_919(),
            [120, 110, 45, 45, 52, 103, 98, 114, 105, 109] => lookup_920(),
            [97, 105, 103] => lookup_921(),
            [217, 190, 216, 167, 217, 131, 216, 179, 216, 170, 216, 167, 217, 134] => lookup_922(),
            [233, 128, 154, 232, 178, 169] => lookup_923(),
            [102, 97, 110, 115] => lookup_924(),
            [120, 110, 45, 45, 109, 103, 98, 99, 97, 55, 100, 122, 100, 111] => lookup_925(),
            [231, 187, 132, 231, 187, 135, 230, 156, 186, 230, 158, 132] => lookup_926(),
            [103, 113] => lookup_927(),
            [108, 97, 110, 100, 114, 111, 118, 101, 114] => lookup_928(),
            [120, 110, 45, 45, 104, 50, 98, 114, 101, 103, 51, 101, 118, 101] => lookup_929(),
            [98, 97, 117, 104, 97, 117, 115] => lookup_930(),
            [115, 104, 111, 119, 116, 105, 109, 101] => lookup_931(),
            [105, 109, 109, 111, 98, 105, 108, 105, 101, 110] => lookup_932(),
            [97, 114] => lookup_933(labels),
            [101, 103] => lookup_934(labels),
            [217, 190, 216, 167, 218, 169, 216, 179, 216, 170, 216, 167, 217, 134] => lookup_935(),
            [115, 105, 116, 101] => lookup_936(labels),
            [115, 119, 97, 116, 99, 104] => lookup_937(),
            [122, 97, 114, 97] => lookup_938(),
            [105, 115, 116, 97, 110, 98, 117, 108] => lookup_939(),
            [120, 110, 45, 45, 109, 103, 98, 99, 112, 113, 54, 103, 112, 97, 49, 97] => {
                lookup_940()
            }
            [99, 100] => lookup_941(labels),
            [115, 99, 111, 116] => lookup_942(labels),
            [115, 116, 97, 116, 101, 102, 97, 114, 109] => lookup_943(),
            [98, 105, 100] => lookup_944(),
            [230, 148, 191, 229, 186, 156] => lookup_945(),
            [217, 133, 217, 136, 217, 130, 216, 185] => lookup_946(),
            [118, 117, 101, 108, 111, 115] => lookup_947(),
            [103, 117, 114, 117] => lookup_948(),
            [102, 97, 105, 114, 119, 105, 110, 100, 115] => lookup_949(),
            [103, 103, 101, 101] => lookup_950(),
            [116, 97, 116, 97, 114] => lookup_951(),
            [109, 112] => lookup_952(),
            [100, 97, 116, 101] => lookup_953(),
            [115, 119, 105, 115, 115] => lookup_954(),
            [108, 97] => lookup_955(labels),
            [108, 105] => lookup_956(labels),
            [100, 101, 108, 108] => lookup_957(),
            [105, 112, 105, 114, 97, 110, 103, 97] => lookup_958(),
            [109, 116, 110] => lookup_959(),
            [122, 111, 110, 101] => lookup_960(labels),
            [99, 97, 114, 101] => lookup_961(),
            [120, 110, 45, 45, 52, 53, 98, 114, 106, 57, 99] => lookup_962(),
            [117, 103] => lookup_963(labels),
            [120, 110, 45, 45, 113, 57, 106, 121, 98, 52, 99] => lookup_964(),
            [120, 110, 45, 45, 119, 52, 114, 115, 52, 48, 108] => lookup_965(),
            [216, 167, 217, 132, 216, 167, 216, 177, 216, 175, 217, 134] => lookup_966(),
            [115, 104, 97, 114, 112] => lookup_967(),
            [115, 110, 99, 102] => lookup_968(),
            [115, 117, 114, 102] => lookup_969(),
            [117, 111, 108] => lookup_970(),
            [112, 110] => lookup_971(labels),
            [99, 111, 110, 116, 114, 97, 99, 116, 111, 114, 115] => lookup_972(),
            [100, 101, 109, 111, 99, 114, 97, 116] => lookup_973(),
            [108, 100, 115] => lookup_974(),
            [104, 111, 108, 100, 105, 110, 103, 115] => lookup_975(),
            [120, 110, 45, 45, 108, 103, 98, 98, 97, 116, 49, 97, 100, 56, 106] => lookup_976(),
            [208, 188, 208, 190, 208, 189] => lookup_977(),
            [230, 150, 176, 229, 138, 160, 229, 157, 161] => lookup_978(),
            [102, 114, 111, 103, 97, 110, 115] => lookup_979(),
            [108, 101, 103, 97, 108] => lookup_980(),
            [109, 111, 101] => lookup_981(),
            [115, 101, 118, 101, 110] => lookup_982(),
            [119, 111, 114, 107, 115] => lookup_983(),
            [99, 121, 109, 114, 117] => lookup_984(),
            [110, 101, 120, 117, 115] => lookup_985(),
            [118, 101, 103, 97, 115] => lookup_986(),
            [109, 97, 110, 103, 111] => lookup_987(),
            [103, 97] => lookup_988(),
            [105, 108] => lookup_989(labels),
            [103, 108, 97, 115, 115] => lookup_990(),
            [104, 105, 115, 97, 109, 105, 116, 115, 117] => lookup_991(),
            [115, 121] => lookup_992(labels),
            [110, 111, 119] => lookup_993(),
            [116, 122] => lookup_994(labels),
            [114, 109, 105, 116] => lookup_995(),
            [110, 101, 119] => lookup_996(),
            [120, 102, 105, 110, 105, 116, 121] => lookup_997(),
            [106, 111, 98, 117, 114, 103] => lookup_998(),
            [227, 129, 191, 227, 130, 147, 227, 129, 170] => lookup_999(),
            [110, 101, 120, 116, 100, 105, 114, 101, 99, 116] => lookup_1000(),
            [120, 110, 45, 45, 118, 117, 113, 56, 54, 49, 98] => lookup_1001(),
            [106, 111, 116] => lookup_1002(),
            [99, 102] => lookup_1003(labels),
            [99, 97, 115, 97] => lookup_1004(labels),
            [99, 104, 97, 110, 101, 108] => lookup_1005(),
            [106, 105, 111] => lookup_1006(),
            [97, 103, 101, 110, 99, 121] => lookup_1007(),
            [120, 110, 45, 45, 54, 113, 113, 57, 56, 54, 98, 51, 120, 108] => lookup_1008(),
            [224, 164, 184, 224, 164, 130, 224, 164, 151, 224, 164, 160, 224, 164, 168] => {
                lookup_1009()
            }
            [100, 111, 99, 115] => lookup_1010(),
            [103, 109, 97, 105, 108] => lookup_1011(),
            [122, 97, 112, 112, 111, 115] => lookup_1012(),
            [110, 105, 107, 111, 110] => lookup_1013(),
            [99, 111, 111, 112] => lookup_1014(),
            [97, 109] => lookup_1015(labels),
            [109, 101] => lookup_1016(labels),
            [116, 97, 116, 97, 109, 111, 116, 111, 114, 115] => lookup_1017(),
            [107, 111, 115, 104, 101, 114] => lookup_1018(),
            [108, 105, 107, 101] => lookup_1019(),
            [115, 116] => lookup_1020(labels),
            [100, 101] => lookup_1021(labels),
            [106, 111] => lookup_1022(labels),
            [97, 98, 99] => lookup_1023(),
            [99, 105, 116, 121, 101, 97, 116, 115] => lookup_1024(),
            [120, 110, 45, 45, 106, 49, 97, 109, 104] => lookup_1025(),
            [108, 105, 109, 105, 116, 101, 100] => lookup_1026(),
            [97, 105, 114, 98, 117, 115] => lookup_1027(),
            [115, 101, 99, 117, 114, 101] => lookup_1028(),
            [98, 114, 117, 115, 115, 101, 108, 115] => lookup_1029(),
            [105, 110, 116, 101, 114, 110, 97, 116, 105, 111, 110, 97, 108] => lookup_1030(),
            [116, 109, 97, 108, 108] => lookup_1031(),
            [106, 112, 109, 111, 114, 103, 97, 110] => lookup_1032(),
            [115, 117, 99, 107, 115] => lookup_1033(),
            [99, 97, 114, 101, 101, 114] => lookup_1034(),
            [104, 111, 108, 105, 100, 97, 121] => lookup_1035(),
            [97, 102, 108] => lookup_1036(),
            [104, 105, 116, 97, 99, 104, 105] => lookup_1037(),
            [224, 166, 173, 224, 166, 190, 224, 166, 176, 224, 166, 164] => lookup_1038(),
            [97, 108, 115, 116, 111, 109] => lookup_1039(),
            [98, 98, 118, 97] => lookup_1040(),
            [112, 114, 105, 109, 101] => lookup_1041(),
            [114, 105, 112] => lookup_1042(labels),
            [99, 104, 101, 97, 112] => lookup_1043(),
            [97, 109, 115, 116, 101, 114, 100, 97, 109] => lookup_1044(),
            [115, 97, 112] => lookup_1045(),
            [116, 97, 120, 105] => lookup_1046(),
            [118, 111, 116, 111] => lookup_1047(),
            [121, 101] => lookup_1048(labels),
            [103, 108] => lookup_1049(labels),
            [115, 117, 112, 112, 108, 105, 101, 115] => lookup_1050(),
            [120, 110, 45, 45, 57, 100, 98, 113, 50, 97] => lookup_1051(),
            [120, 110, 45, 45, 121, 102, 114, 111, 52, 105, 54, 55, 111] => lookup_1052(),
            [98, 117, 103, 97, 116, 116, 105] => lookup_1053(),
            [101, 120, 112, 101, 114, 116] => lookup_1054(),
            [110, 111, 114, 116, 111, 110] => lookup_1055(),
            [99, 117] => lookup_1056(labels),
            [116, 107] => lookup_1057(),
            [120, 110, 45, 45, 111, 51, 99, 119, 52, 104] => lookup_1058(labels),
            [102, 111, 114, 115, 97, 108, 101] => lookup_1059(),
            [99, 114] => lookup_1060(labels),
            [103, 100] => lookup_1061(labels),
            [100, 105, 115, 99, 111, 118, 101, 114] => lookup_1062(),
            [99, 97, 112, 101, 116, 111, 119, 110] => lookup_1063(),
            [108, 105, 100, 108] => lookup_1064(),
            [225, 131, 146, 225, 131, 148] => lookup_1065(),
            [99, 108, 111, 116, 104, 105, 110, 103] => lookup_1066(),
            [106, 101, 101, 112] => lookup_1067(),
            [108, 108, 112] => lookup_1068(),
            [99, 111] => lookup_1069(labels),
            [104, 97, 110, 103, 111, 117, 116] => lookup_1070(),
            [107, 121, 111, 116, 111] => lookup_1071(),
            [108, 97, 115, 97, 108, 108, 101] => lookup_1072(),
            [102, 97, 109, 105, 108, 121] => lookup_1073(),
            [106, 111, 98, 115] => lookup_1074(),
            [109, 105, 97, 109, 105] => lookup_1075(),
            [111, 98, 105] => lookup_1076(),
            [112, 114, 111, 100, 117, 99, 116, 105, 111, 110, 115] => lookup_1077(),
            [108, 108, 99] => lookup_1078(),
            [103, 101, 111, 114, 103, 101] => lookup_1079(),
            [115, 111, 121] => lookup_1080(),
            [115, 116, 97, 116, 101, 98, 97, 110, 107] => lookup_1081(),
            [224, 164, 149, 224, 165, 137, 224, 164, 174] => lookup_1082(),
            [233, 155, 134, 229, 155, 162] => lookup_1083(),
            [99, 111, 110, 115, 116, 114, 117, 99, 116, 105, 111, 110] => lookup_1084(),
            [120, 110, 45, 45, 109, 103, 98, 97, 51, 97, 51, 101, 106, 116] => lookup_1085(),
            [216, 168, 217, 138, 216, 170, 217, 131] => lookup_1086(),
            [116, 101, 99, 104, 110, 111, 108, 111, 103, 121] => lookup_1087(labels),
            [120, 110, 45, 45, 114, 111, 118, 117, 56, 56, 98] => lookup_1088(),
            [108, 97, 110, 99, 105, 97] => lookup_1089(),
            [231, 189, 145, 229, 157, 128] => lookup_1090(),
            [115, 105, 110, 103, 108, 101, 115] => lookup_1091(),
            [121, 111, 103, 97] => lookup_1092(),
            [104, 101, 114, 109, 101, 115] => lookup_1093(),
            [109, 97, 110] => lookup_1094(),
            [114, 117, 110] => lookup_1095(labels),
            [228, 184, 173, 229, 155, 189] => lookup_1096(),
            [109, 101, 110, 117] => lookup_1097(labels),
            [116, 114] => lookup_1098(labels),
            [120, 110, 45, 45, 57, 48, 97, 51, 97, 99] => lookup_1099(labels),
            [112, 108, 97, 121] => lookup_1100(),
            [216, 167, 217, 132, 216, 185, 217, 132, 217, 138, 216, 167, 217, 134] => lookup_1101(),
            [121, 97, 99, 104, 116, 115] => lookup_1102(),
            [103, 119] => lookup_1103(),
            [229, 156, 168, 231, 186, 191] => lookup_1104(),
            [98, 111, 97, 116, 115] => lookup_1105(),
            [119, 102] => lookup_1106(),
            [108, 105, 120, 105, 108] => lookup_1107(),
            [97, 99, 99, 111, 117, 110, 116, 97, 110, 116, 115] => lookup_1108(),
            [115, 115] => lookup_1109(labels),
            [107, 114, 101, 100] => lookup_1110(),
            [109, 101, 109, 101] => lookup_1111(),
            [112, 104, 111, 116, 111] => lookup_1112(),
            [115, 101, 99, 117, 114, 105, 116, 121] => lookup_1113(),
            [107, 105, 97] => lookup_1114(),
            [103, 121] => lookup_1115(labels),
            [224, 180, 173, 224, 180, 190, 224, 180, 176, 224, 180, 164, 224, 180, 130] => {
                lookup_1116()
            }
            [115, 104, 111, 101, 115] => lookup_1117(),
            [116, 111, 100, 97, 121] => lookup_1118(),
            [114, 101, 118, 105, 101, 119] => lookup_1119(labels),
            [99, 111, 109] => lookup_1120(labels),
            [99, 103] => lookup_1121(),
            [208, 188, 208, 186, 208, 180] => lookup_1122(),
            [120, 120, 120] => lookup_1123(),
            [98, 101, 114, 108, 105, 110] => lookup_1124(),
            [109, 101, 114, 99, 107, 109, 115, 100] => lookup_1125(),
            [119, 97, 116, 99, 104] => lookup_1126(),
            [116, 105, 114, 111, 108] => lookup_1127(),
            [120, 110, 45, 45, 100, 49, 97, 99, 106, 51, 98] => lookup_1128(),
            [101, 117, 114, 111, 118, 105, 115, 105, 111, 110] => lookup_1129(),
            [227, 131, 157, 227, 130, 164, 227, 131, 179, 227, 131, 136] => lookup_1130(),
            [97, 109, 101, 114, 105, 99, 97, 110, 101, 120, 112, 114, 101, 115, 115] => {
                lookup_1131()
            }
            [230, 150, 176, 233, 151, 187] => lookup_1132(),
            [120, 110, 45, 45, 109, 103, 98, 97, 98, 50, 98, 100] => lookup_1133(),
            [103, 111, 108, 102] => lookup_1134(),
            [120, 110, 45, 45, 118, 101, 114, 109, 103, 101, 110, 115, 98, 101, 114, 97, 116, 101, 114, 45, 99, 116, 98] => {
                lookup_1135()
            }
            [121, 97, 104, 111, 111] => lookup_1136(),
            [120, 110, 45, 45, 102, 105, 113, 54, 52, 98] => lookup_1137(),
            [120, 110, 45, 45, 109, 103, 98, 97, 51, 97, 52, 102, 49, 54, 97] => lookup_1138(),
            [122, 101, 114, 111] => lookup_1139(),
            [120, 110, 45, 45, 108, 49, 97, 99, 99] => lookup_1140(),
            [97, 102, 97, 109, 105, 108, 121, 99, 111, 109, 112, 97, 110, 121] => lookup_1141(),
            [97, 112, 97, 114, 116, 109, 101, 110, 116, 115] => lookup_1142(),
            [108, 97, 110, 100] => lookup_1143(labels),
            [108, 115] => lookup_1144(labels),
            [107, 114, 100] => lookup_1145(labels),
            [112, 104, 121, 115, 105, 111] => lookup_1146(),
            [115, 108] => lookup_1147(labels),
            [206, 181, 207, 133] => lookup_1148(),
            [112, 101, 116] => lookup_1149(),
            [115, 112, 111, 116] => lookup_1150(),
            [119, 116, 102] => lookup_1151(),
            [120, 110, 45, 45, 109, 103, 98, 113, 108, 121, 55, 99, 118, 97, 102, 114] => {
                lookup_1152()
            }
            [216, 167, 217, 132, 216, 172, 216, 178, 216, 167, 216, 166, 216, 177] => lookup_1153(),
            [115, 111, 110, 121] => lookup_1154(),
            [224, 166, 173, 224, 166, 190, 224, 167, 176, 224, 166, 164] => lookup_1155(),
            [99, 105, 114, 99, 108, 101] => lookup_1156(),
            [110, 111, 114, 116, 104, 119, 101, 115, 116, 101, 114, 110, 109, 117, 116, 117, 97, 108] => {
                lookup_1157()
            }
            [116, 114, 97, 118, 101, 108, 99, 104, 97, 110, 110, 101, 108] => lookup_1158(),
            [118, 97, 99, 97, 116, 105, 111, 110, 115] => lookup_1159(),
            [114, 101, 120, 114, 111, 116, 104] => lookup_1160(),
            [227, 130, 162, 227, 131, 158, 227, 130, 190, 227, 131, 179] => lookup_1161(),
            [112, 104] => lookup_1162(labels),
            [98, 100] => lookup_1163(info, labels),
            [98, 101, 116] => lookup_1164(),
            [114, 101, 104, 97, 98] => lookup_1165(),
            [229, 143, 176, 231, 129, 163] => lookup_1166(),
            [97, 117] => lookup_1167(labels),
            [105, 102, 109] => lookup_1168(),
            [224, 184, 132, 224, 184, 173, 224, 184, 161] => lookup_1169(),
            [119, 101, 97, 116, 104, 101, 114, 99, 104, 97, 110, 110, 101, 108] => lookup_1170(),
            [99, 114, 101, 100, 105, 116, 99, 97, 114, 100] => lookup_1171(),
            [235, 139, 183, 236, 187, 180] => lookup_1172(),
            [99, 97, 110, 111, 110] => lookup_1173(),
            [99, 97, 114] => lookup_1174(),
            [108, 121] => lookup_1175(labels),
            [99, 104, 105, 110, 116, 97, 105] => lookup_1176(),
            [104, 100, 102, 99] => lookup_1177(),
            [112, 97, 121] => lookup_1178(),
            [103, 111, 118] => lookup_1179(),
            [115, 97, 97, 114, 108, 97, 110, 100] => lookup_1180(),
            [108, 111, 97, 110, 115] => lookup_1181(),
            [231, 189, 145, 231, 171, 153] => lookup_1182(),
            [120, 110, 45, 45, 109, 103, 98, 97, 121, 104, 55, 103, 112, 97] => lookup_1183(),
            [105, 109] => lookup_1184(labels),
            [216, 168, 218, 190, 216, 167, 216, 177, 216, 170] => lookup_1185(),
            [97, 117, 116, 111, 115] => lookup_1186(),
            [99, 98, 115] => lookup_1187(),
            [98, 110, 112, 112, 97, 114, 105, 98, 97, 115] => lookup_1188(),
            [98, 97, 105, 100, 117] => lookup_1189(),
            [102, 97, 114, 109] => lookup_1190(labels),
            [110, 105, 115, 115, 97, 121] => lookup_1191(),
            [111, 110, 121, 111, 117, 114, 115, 105, 100, 101] => lookup_1192(),
            [113, 97] => lookup_1193(labels),
            [102, 108, 121] => lookup_1194(),
            [116, 111, 107, 121, 111] => lookup_1195(),
            [107, 114] => lookup_1196(labels),
            [99, 111, 109, 115, 101, 99] => lookup_1197(),
            [116, 114, 97, 118, 101, 108, 101, 114, 115, 105, 110, 115, 117, 114, 97, 110, 99, 101] => {
                lookup_1198()
            }
            [108, 98] => lookup_1199(labels),
            [99, 111, 109, 109, 117, 110, 105, 116, 121] => lookup_1200(labels),
            [119, 105, 108, 108, 105, 97, 109, 104, 105, 108, 108] => lookup_1201(),
            [111, 108, 97, 121, 97, 110, 103, 114, 111, 117, 112] => lookup_1202(),
            [119, 109, 101] => lookup_1203(),
            [105, 110] => lookup_1204(labels),
            [112, 105, 122, 122, 97] => lookup_1205(),
            [114, 121, 117, 107, 121, 117] => lookup_1206(),
            [114, 101, 97, 108, 116, 111, 114] => lookup_1207(),
            [103, 111, 116] => lookup_1208(),
            [116, 97, 111, 98, 97, 111] => lookup_1209(),
            [119, 97, 110, 103] => lookup_1210(),
            [120, 110, 45, 45, 56, 121, 48, 97, 48, 54, 51, 97] => lookup_1211(),
            [120, 110, 45, 45, 105, 109, 114, 53, 49, 51, 110] => lookup_1212(),
            [233, 163, 158, 229, 136, 169, 230, 181, 166] => lookup_1213(),
            [217, 131, 216, 167, 216, 171, 217, 136, 217, 132, 217, 138, 217, 131] => lookup_1214(),
            [104, 100, 102, 99, 98, 97, 110, 107] => lookup_1215(),
            [110, 105, 115, 115, 97, 110] => lookup_1216(),
            [216, 185, 216, 177, 216, 168] => lookup_1217(),
            [229, 164, 167, 230, 139, 191] => lookup_1218(),
            [98, 105, 98, 108, 101] => lookup_1219(),
            [102, 111, 111, 116, 98, 97, 108, 108] => lookup_1220(),
            [112, 108, 117, 115] => lookup_1221(),
            [230, 190, 179, 233, 151, 168] => lookup_1222(),
            [217, 133, 217, 132, 217, 138, 216, 179, 217, 138, 216, 167] => lookup_1223(),
            [110, 105] => lookup_1224(labels),
            [122, 105, 112] => lookup_1225(),
            [115, 109, 97, 114, 116] => lookup_1226(),
            [120, 110, 45, 45, 98, 52, 119, 54, 48, 53, 102, 101, 114, 100] => lookup_1227(),
            [103, 111, 111, 103] => lookup_1228(labels),
            [120, 110, 45, 45, 56, 48, 97, 100, 120, 104, 107, 115] => lookup_1229(),
            [113, 118, 99] => lookup_1230(),
            [120, 110, 45, 45, 119, 103, 98, 108, 54, 97] => lookup_1231(),
            [111, 110, 108] => lookup_1232(),
            [98, 101, 101, 114] => lookup_1233(),
            [114, 101, 110, 116] => lookup_1234(),
            [120, 110, 45, 45, 51, 100, 115, 52, 52, 51, 103] => lookup_1235(),
            [216, 167, 216, 177, 216, 167, 217, 133, 217, 131, 217, 136] => lookup_1236(),
            [120, 110, 45, 45, 102, 104, 98, 101, 105] => lookup_1237(),
            [120, 110, 45, 45, 107, 112, 117, 116, 51, 105] => lookup_1238(),
            [97, 114, 112, 97] => lookup_1239(labels),
            [103, 98] => lookup_1240(),
            [120, 110, 45, 45, 120, 107, 99, 50, 97, 108, 51, 104, 121, 101, 50, 97] => {
                lookup_1241()
            }
            [116, 105, 97, 97] => lookup_1242(),
            [216, 167, 216, 170, 216, 181, 216, 167, 217, 132, 216, 167, 216, 170] => lookup_1243(),
            [237, 149, 156, 234, 181, 173] => lookup_1244(),
            [120, 110, 45, 45, 100, 49, 97, 108, 102] => lookup_1245(),
            [97, 105, 114, 116, 101, 108] => lookup_1246(),
            [101, 114, 110, 105] => lookup_1247(),
            [105, 111] => lookup_1248(labels),
            [101, 117, 115] => lookup_1249(labels),
            [108, 105, 109, 111] => lookup_1250(),
            [120, 110, 45, 45, 110, 103, 98, 101, 57, 101, 48, 97] => lookup_1251(),
            [115, 99, 104, 97, 101, 102, 102, 108, 101, 114] => lookup_1252(),
            [118, 101, 114, 109, 195, 182, 103, 101, 110, 115, 98, 101, 114, 97, 116, 117, 110, 103] => {
                lookup_1253()
            }
            [108, 116] => lookup_1254(labels),
            [99, 107] => lookup_1255(info, labels),
            [224, 185, 132, 224, 184, 151, 224, 184, 162] => lookup_1256(labels),
            [98, 117, 115, 105, 110, 101, 115, 115] => lookup_1257(labels),
            [116, 103] => lookup_1258(),
            [111, 114, 103, 97, 110, 105, 99] => lookup_1259(),
            [105, 110, 102, 111] => lookup_1260(labels),
            [108, 101, 102, 114, 97, 107] => lookup_1261(),
            [115, 111, 108, 97, 114] => lookup_1262(),
            [115, 107, 105] => lookup_1263(),
            [112, 114, 111] => lookup_1264(labels),
            [217, 130, 216, 183, 216, 177] => lookup_1265(),
            [97, 108, 102, 97, 114, 111, 109, 101, 111] => lookup_1266(),
            [116, 111] => lookup_1267(labels),
            [114, 101, 112, 117, 98, 108, 105, 99, 97, 110] => lookup_1268(),
            [98, 98, 116] => lookup_1269(),
            [103, 117, 103, 101] => lookup_1270(),
            [117, 115] => lookup_1271(labels),
            [101, 110, 101, 114, 103, 121] => lookup_1272(),
            [97, 98, 108, 101] => lookup_1273(),
            [100, 101, 110, 116, 97, 108] => lookup_1274(),
            [118, 105] => lookup_1275(labels),
            [111, 110, 101] => lookup_1276(labels),
            [118, 105, 112] => lookup_1277(),
            [114, 101, 112, 97, 105, 114] => lookup_1278(),
            [97, 102] => lookup_1279(labels),
            [110, 101, 116, 98, 97, 110, 107] => lookup_1280(),
            [120, 110, 45, 45, 57, 107, 114, 116, 48, 48, 97] => lookup_1281(),
            [120, 110, 45, 45, 120, 104, 113, 53, 50, 49, 98] => lookup_1282(),
            [98, 117, 105, 108, 100] => lookup_1283(),
            [98, 97, 114, 101, 102, 111, 111, 116] => lookup_1284(),
            [120, 110, 45, 45, 56, 48, 97, 111, 50, 49, 97] => lookup_1285(),
            [122, 109] => lookup_1286(labels),
            [106, 97, 103, 117, 97, 114] => lookup_1287(),
            [112, 103] => lookup_1288(info, labels),
            [97, 100, 117, 108, 116] => lookup_1289(),
            [107, 109] => lookup_1290(labels),
            [109, 101, 108, 98, 111, 117, 114, 110, 101] => lookup_1291(),
            [118, 105, 115, 97] => lookup_1292(),
            [120, 110, 45, 45, 52, 50, 99, 50, 100, 57, 97] => lookup_1293(),
            [120, 110, 45, 45, 53, 116, 122, 109, 53, 103] => lookup_1294(),
            [231, 189, 145, 231, 187, 156] => lookup_1295(),
            [103, 100, 110] => lookup_1296(labels),
            [101, 97, 114, 116, 104] => lookup_1297(labels),
            [97, 117, 115, 112, 111, 115, 116] => lookup_1298(),
            [108, 97, 99, 97, 105, 120, 97] => lookup_1299(),
            [109, 101, 101, 116] => lookup_1300(),
            [115, 112, 114, 101, 97, 100, 98, 101, 116, 116, 105, 110, 103] => lookup_1301(),
            [102, 108, 105, 99, 107, 114] => lookup_1302(),
            [120, 110, 45, 45, 53, 53, 113, 120, 53, 100] => lookup_1303(),
            [105, 115] => lookup_1304(labels),
            [120, 110, 45, 45, 109, 103, 98, 98, 104, 49, 97] => lookup_1305(),
            [110, 111, 119, 116, 118] => lookup_1306(),
            [108, 97, 109, 98, 111, 114, 103, 104, 105, 110, 105] => lookup_1307(),
            [114, 101, 100, 117, 109, 98, 114, 101, 108, 108, 97] => lookup_1308(),
            [116, 97, 114, 103, 101, 116] => lookup_1309(),
            [116, 105, 112, 115] => lookup_1310(),
            [114, 111, 103, 101, 114, 115] => lookup_1311(),
            [120, 110, 45, 45, 101, 49, 97, 52, 99] => lookup_1312(),
            [229, 152, 137, 233, 135, 140] => lookup_1313(),
            [110, 102] => lookup_1314(labels),
            [108, 99] => lookup_1315(labels),
            [108, 112, 108, 102, 105, 110, 97, 110, 99, 105, 97, 108] => lookup_1316(),
            [106, 112, 114, 115] => lookup_1317(),
            [109, 100] => lookup_1318(labels),
            [116, 110] => lookup_1319(labels),
            [98, 97, 121, 101, 114, 110] => lookup_1320(),
            [100, 117, 99, 107] => lookup_1321(),
            [105, 110, 103] => lookup_1322(),
            [115, 101, 120, 121] => lookup_1323(),
            [116, 114, 97, 105, 110, 105, 110, 103] => lookup_1324(),
            [111, 108, 97, 121, 97, 110] => lookup_1325(),
            [210, 155, 208, 176, 208, 183] => lookup_1326(),
            [99, 111, 110, 116, 97, 99, 116] => lookup_1327(),
            [97, 114, 116] => lookup_1328(),
            [112, 105, 110, 107] => lookup_1329(),
            [120, 110, 45, 45, 122, 102, 114, 49, 54, 52, 98] => lookup_1330(),
            [114, 101, 99, 105, 112, 101, 115] => lookup_1331(),
            [104, 111, 117, 115, 101] => lookup_1332(),
            [97, 109, 97, 122, 111, 110] => lookup_1333(),
            [102, 97, 115, 104, 105, 111, 110] => lookup_1334(labels),
            [110, 97, 116, 117, 114, 97] => lookup_1335(),
            [100, 111] => lookup_1336(labels),
            [101, 116] => lookup_1337(labels),
            [97, 103] => lookup_1338(labels),
            [97, 114, 116, 101] => lookup_1339(),
            [100, 111, 99, 116, 111, 114] => lookup_1340(),
            [216, 167, 219, 140, 216, 177, 216, 167, 217, 134] => lookup_1341(),
            [99, 111, 109, 112, 97, 110, 121] => lookup_1342(),
            [109, 98, 97] => lookup_1343(),
            [111, 114, 97, 110, 103, 101] => lookup_1344(),
            [97, 100, 97, 99] => lookup_1345(),
            [97, 109, 105, 99, 97] => lookup_1346(),
            [119, 101, 98, 115, 105, 116, 101] => lookup_1347(),
            [224, 164, 173, 224, 164, 190, 224, 164, 176, 224, 165, 139, 224, 164, 164] => {
                lookup_1348()
            }
            [119, 111, 119] => lookup_1349(),
            [120, 110, 45, 45, 99, 49, 97, 118, 103] => lookup_1350(),
            [102, 111, 111, 100, 110, 101, 116, 119, 111, 114, 107] => lookup_1351(),
            [105, 116] => lookup_1352(labels),
            [97, 112, 112] => lookup_1353(labels),
            [116, 117, 110, 101, 115] => lookup_1354(),
            [217, 135, 217, 133, 216, 177, 216, 167, 217, 135] => lookup_1355(),
            [98, 111, 111, 107, 105, 110, 103] => lookup_1356(),
            [120, 110, 45, 45, 109, 120, 116, 113, 49, 109] => lookup_1357(),
            [224, 174, 135, 224, 174, 178, 224, 174, 153, 224, 175, 141, 224, 174, 149, 224, 175, 136] => {
                lookup_1358()
            }
            [97, 117, 116, 104, 111, 114] => lookup_1359(),
            [109, 117] => lookup_1360(labels),
            [105, 116, 118] => lookup_1361(),
            [120, 110, 45, 45, 109, 103, 98, 97, 104, 49, 97, 51, 104, 106, 107, 114, 100] => {
                lookup_1362()
            }
            [99, 97, 112, 105, 116, 97, 108, 111, 110, 101] => lookup_1363(),
            [114, 101, 110, 116, 97, 108, 115] => lookup_1364(),
            [103, 117, 99, 99, 105] => lookup_1365(),
            [98, 108, 97, 99, 107] => lookup_1366(),
            [120, 110, 45, 45, 98, 99, 107, 49, 98, 57, 97, 53, 100, 114, 101, 52, 99] => {
                lookup_1367()
            }
            [98, 119] => lookup_1368(labels),
            [230, 137, 139, 230, 156, 186] => lookup_1369(),
            [224, 166, 172, 224, 166, 190, 224, 166, 130, 224, 166, 178, 224, 166, 190] => {
                lookup_1370()
            }
            [118, 111, 116, 105, 110, 103] => lookup_1371(),
            [115, 97, 115] => lookup_1372(),
            [120, 110, 45, 45, 111, 103, 98, 112, 102, 56, 102, 108] => lookup_1373(),
            [99, 104, 97, 114, 105, 116, 121] => lookup_1374(),
            [112, 97, 103, 101] => lookup_1375(labels),
            [115, 99, 106, 111, 104, 110, 115, 111, 110] => lookup_1376(),
            [224, 174, 154, 224, 174, 191, 224, 174, 153, 224, 175, 141, 224, 174, 149, 224, 174, 170, 224, 175, 141, 224, 174, 170, 224, 175, 130, 224, 174, 176, 224, 175, 141] => {
                lookup_1377()
            }
            [118, 101] => lookup_1378(labels),
            [119, 111, 114, 108, 100] => lookup_1379(),
            [98, 114, 111, 97, 100, 119, 97, 121] => lookup_1380(),
            [108, 97, 110, 99, 97, 115, 116, 101, 114] => lookup_1381(),
            [120, 110, 45, 45, 110, 113, 118, 55, 102, 115, 48, 48, 101, 109, 97] => lookup_1382(),
            [115, 97, 110, 100, 118, 105, 107, 99, 111, 114, 111, 109, 97, 110, 116] => {
                lookup_1383()
            }
            [102, 111, 111] => lookup_1384(),
            [114, 101, 97, 108, 101, 115, 116, 97, 116, 101] => lookup_1385(),
            [99, 111, 114, 115, 105, 99, 97] => lookup_1386(),
            [104, 101, 114, 101] => lookup_1387(),
            [112, 97] => lookup_1388(labels),
            [216, 167, 217, 138, 216, 177, 216, 167, 217, 134] => lookup_1389(),
            [231, 130, 185, 231, 156, 139] => lookup_1390(),
            [120, 110, 45, 45, 51, 104, 99, 114, 106, 57, 99] => lookup_1391(),
            [97, 99, 116, 111, 114] => lookup_1392(),
            [109, 101, 100, 105, 97] => lookup_1393(),
            [120, 110, 45, 45, 99, 50, 98, 114, 55, 103] => lookup_1394(),
            [99, 104, 114, 105, 115, 116, 109, 97, 115] => lookup_1395(),
            [115, 117] => lookup_1396(labels),
            [102, 111, 120] => lookup_1397(),
            [97, 99, 99, 101, 110, 116, 117, 114, 101] => lookup_1398(),
            [110, 111, 119, 114, 117, 122] => lookup_1399(),
            [112, 99, 99, 119] => lookup_1400(),
            [112, 105, 99, 115] => lookup_1401(),
            [114, 101, 112, 111, 114, 116] => lookup_1402(),
            [111, 109] => lookup_1403(labels),
            [119, 105, 101, 110] => lookup_1404(),
            [112, 105, 110, 103] => lookup_1405(),
            [218, 128, 216, 167, 216, 177, 216, 170] => lookup_1406(),
            [99, 110] => lookup_1407(labels),
            [102, 97, 115, 116] => lookup_1408(),
            [117, 110, 105, 118, 101, 114, 115, 105, 116, 121] => lookup_1409(),
            [102, 105, 114, 101, 115, 116, 111, 110, 101] => lookup_1410(),
            [109, 97, 100, 114, 105, 100] => lookup_1411(),
            [98, 111, 120] => lookup_1412(),
            [116, 104, 101, 97, 116, 101, 114] => lookup_1413(),
            [116, 100, 107] => lookup_1414(),
            [109, 111, 100, 97] => lookup_1415(),
            [115, 117, 112, 112, 108, 121] => lookup_1416(),
            [233, 164, 144, 229, 142, 133] => lookup_1417(),
            [97, 112, 112, 108, 101] => lookup_1418(),
            [115, 107, 121] => lookup_1419(),
            [100, 97, 110, 99, 101] => lookup_1420(),
            [99, 111, 117, 112, 111, 110] => lookup_1421(),
            [98, 108, 111, 103] => lookup_1422(),
            [106, 108, 108] => lookup_1423(),
            [107, 112, 109, 103] => lookup_1424(),
            [99, 104] => lookup_1425(labels),
            [109, 108, 115] => lookup_1426(),
            [112, 104, 111, 110, 101] => lookup_1427(),
            [108, 97, 116, 114, 111, 98, 101] => lookup_1428(),
            [110, 105, 99, 111] => lookup_1429(),
            [102, 105, 115, 104] => lookup_1430(),
            [97, 119, 115] => lookup_1431(),
            [103, 111, 108, 100] => lookup_1432(),
            [106, 99, 98] => lookup_1433(),
            [109, 114] => lookup_1434(labels),
            [104, 103, 116, 118] => lookup_1435(),
            [116, 114, 118] => lookup_1436(),
            [102, 108, 105, 103, 104, 116, 115] => lookup_1437(),
            [103, 110] => lookup_1438(labels),
            [224, 176, 173, 224, 176, 190, 224, 176, 176, 224, 176, 164, 224, 177, 141] => {
                lookup_1439()
            }
            [104, 111, 115, 116] => lookup_1440(labels),
            [115, 101, 101, 107] => lookup_1441(),
            [120, 110, 45, 45, 102, 99, 116, 52, 50, 57, 107] => lookup_1442(),
            [105, 101] => lookup_1443(labels),
            [103, 101, 97] => lookup_1444(),
            [104, 111, 116, 101, 108, 115] => lookup_1445(),
            [108, 105, 118, 105, 110, 103] => lookup_1446(),
            [120, 110, 45, 45, 99, 99, 107, 119, 99, 120, 101, 116, 100] => lookup_1447(),
            [98, 111] => lookup_1448(labels),
            [112, 115] => lookup_1449(labels),
            [97, 102, 114, 105, 99, 97] => lookup_1450(),
            [101, 101] => lookup_1451(labels),
            [109, 107] => lookup_1452(labels),
            [103, 114, 97, 105, 110, 103, 101, 114] => lookup_1453(),
            [104, 121, 117, 110, 100, 97, 105] => lookup_1454(),
            [111, 108, 108, 111] => lookup_1455(),
            [224, 178, 173, 224, 178, 190, 224, 178, 176, 224, 178, 164] => lookup_1456(),
            [101, 120, 99, 104, 97, 110, 103, 101] => lookup_1457(),
            [102, 111, 114, 101, 120] => lookup_1458(),
            [97, 99] => lookup_1459(labels),
            [105, 110, 100, 117, 115, 116, 114, 105, 101, 115] => lookup_1460(),
            [112, 97, 114, 116, 121] => lookup_1461(labels),
            [102, 111] => lookup_1462(),
            [99, 111, 109, 112, 117, 116, 101, 114] => lookup_1463(),
            [104, 111, 116, 101, 108, 101, 115] => lookup_1464(),
            [109, 97, 112] => lookup_1465(),
            [120, 110, 45, 45, 102, 122, 99, 50, 99, 57, 101, 50, 99] => lookup_1466(),
            [99, 109] => lookup_1467(labels),
            [100, 101, 118] => lookup_1468(labels),
            [99, 111, 111, 108] => lookup_1469(labels),
            [99, 108, 111, 117, 100] => lookup_1470(labels),
            [98, 111, 116] => lookup_1471(),
            [103, 108, 111, 98, 111] => lookup_1472(),
            [97, 98, 111, 103, 97, 100, 111] => lookup_1473(),
            [104, 111, 114, 115, 101] => lookup_1474(),
            [110, 98, 97] => lookup_1475(),
            [97, 107, 100, 110] => lookup_1476(),
            [104, 107, 116] => lookup_1477(),
            [103, 97, 108] => lookup_1478(),
            [112, 111, 107, 101, 114] => lookup_1479(),
            [113, 112, 111, 110] => lookup_1480(),
            [114, 101, 105, 115, 101, 110] => lookup_1481(),
            [115, 97, 102, 101, 116, 121] => lookup_1482(),
            [109, 111, 110, 115, 116, 101, 114] => lookup_1483(),
            [115, 99, 104, 111, 108, 97, 114, 115, 104, 105, 112, 115] => lookup_1484(),
            [115, 101, 97, 114, 99, 104] => lookup_1485(),
            [104, 121, 97, 116, 116] => lookup_1486(),
            [120, 110, 45, 45, 49, 49, 98, 52, 99, 51, 100] => lookup_1487(),
            [115, 116, 97, 100, 97] => lookup_1488(),
            [97, 117, 100, 105, 98, 108, 101] => lookup_1489(),
            [230, 136, 145, 231, 136, 177, 228, 189, 160] => lookup_1490(),
            [120, 110, 45, 45, 102, 108, 119, 51, 53, 49, 101] => lookup_1491(),
            [120, 110, 45, 45, 104, 120, 116, 56, 49, 52, 101] => lookup_1492(),
            [112, 114, 117] => lookup_1493(),
            [109, 110] => lookup_1494(labels),
            [120, 110, 45, 45, 52, 53, 98, 114, 53, 99, 121, 108] => lookup_1495(),
            [98, 105, 111] => lookup_1496(),
            [100, 117, 112, 111, 110, 116] => lookup_1497(),
            [104, 101, 97, 108, 116, 104, 99, 97, 114, 101] => lookup_1498(),
            [116, 111, 119, 110] => lookup_1499(),
            [115, 99, 105, 101, 110, 99, 101] => lookup_1500(labels),
            [111, 118, 104] => lookup_1501(labels),
            [112, 105, 99, 116, 117, 114, 101, 115] => lookup_1502(labels),
            [115, 112, 97] => lookup_1503(),
            [114, 101, 105, 116] => lookup_1504(),
            [120, 110, 45, 45, 106, 54, 119, 49, 57, 51, 103] => lookup_1505(labels),
            [110, 103, 111] => lookup_1506(),
            [112, 97, 114, 105, 115] => lookup_1507(),
            [120, 110, 45, 45, 54, 102, 114, 122, 56, 50, 103] => lookup_1508(),
            [97, 115, 100, 97] => lookup_1509(),
            [101, 116, 105, 115, 97, 108, 97, 116] => lookup_1510(),
            [224, 164, 168, 224, 165, 135, 224, 164, 159] => lookup_1511(),
            [233, 163, 159, 229, 147, 129] => lookup_1512(),
            [107, 110] => lookup_1513(labels),
            [120, 110, 45, 45, 109, 107, 49, 98, 117, 52, 52, 99] => lookup_1514(),
            [121, 111, 100, 111, 98, 97, 115, 104, 105] => lookup_1515(),
            [114, 111] => lookup_1516(labels),
            [107, 105] => lookup_1517(labels),
            [112, 121] => lookup_1518(labels),
            [108, 97, 116] => lookup_1519(),
            [100, 101, 108, 105, 118, 101, 114, 121] => lookup_1520(),
            [102, 101, 101, 100, 98, 97, 99, 107] => lookup_1521(),
            [99, 97, 112, 105, 116, 97, 108] => lookup_1522(),
            [109, 115, 100] => lookup_1523(),
            [120, 110, 45, 45, 115, 57, 98, 114, 106, 57, 99] => lookup_1524(),
            [120, 110, 45, 45, 109, 103, 98, 101, 114, 112, 52, 97, 53, 100, 52, 97, 56, 55, 103] => {
                lookup_1525()
            }
            [120, 110, 45, 45, 121, 57, 97, 51, 97, 113] => lookup_1526(),
            [109, 105, 116] => lookup_1527(),
            [102, 117, 106, 105, 116, 115, 117] => lookup_1528(),
            [110, 114, 97] => lookup_1529(),
            [115, 101, 120] => lookup_1530(),
            [116, 97, 98] => lookup_1531(),
            [111, 108, 100, 110, 97, 118, 121] => lookup_1532(),
            [216, 168, 216, 167, 216, 178, 216, 167, 216, 177] => lookup_1533(),
            [110, 97, 109, 101] => lookup_1534(labels),
            [102, 105, 116, 110, 101, 115, 115] => lookup_1535(),
            [102, 101, 114, 114, 97, 114, 105] => lookup_1536(),
            [103, 98, 105, 122] => lookup_1537(),
            [116, 107, 109, 97, 120, 120] => lookup_1538(),
            [103, 105, 118, 101, 115] => lookup_1539(),
            [110, 97, 116, 105, 111, 110, 119, 105, 100, 101] => lookup_1540(),
            [112, 114, 111, 100] => lookup_1541(),
            [120, 110, 45, 45, 109, 103, 98, 120, 52, 99, 100, 48, 97, 98] => lookup_1542(),
            [115, 107] => lookup_1543(labels),
            [102, 105, 100, 111] => lookup_1544(),
            [103, 111, 100, 97, 100, 100, 121] => lookup_1545(),
            [112, 108, 97, 121, 115, 116, 97, 116, 105, 111, 110] => lookup_1546(),
            [109, 104] => lookup_1547(),
            [97, 99, 99, 111, 117, 110, 116, 97, 110, 116] => lookup_1548(),
            [100, 101, 108, 111, 105, 116, 116, 101] => lookup_1549(),
            [103, 117] => lookup_1550(labels),
            [101, 100, 117] => lookup_1551(labels),
            [115, 97] => lookup_1552(labels),
            [217, 133, 216, 181, 216, 177] => lookup_1553(),
            [120, 110, 45, 45, 102, 105, 113, 122, 57, 115] => lookup_1554(),
            [97, 98, 98, 118, 105, 101] => lookup_1555(),
            [98, 111, 110, 100] => lookup_1556(),
            [120, 110, 45, 45, 53, 52, 98, 55, 102, 116, 97, 48, 99, 99] => lookup_1557(),
            [120, 110, 45, 45, 110, 111, 100, 101] => lookup_1558(),
            [109, 111, 109] => lookup_1559(labels),
            [111, 109, 101, 103, 97] => lookup_1560(),
            [112, 104, 111, 116, 111, 103, 114, 97, 112, 104, 121] => lookup_1561(),
            [103, 111, 111, 103, 108, 101] => lookup_1562(),
            [115, 99, 104, 109, 105, 100, 116] => lookup_1563(),
            [224, 182, 189, 224, 182, 130, 224, 182, 154, 224, 183, 143] => lookup_1564(),
            [100, 105, 121] => lookup_1565(),
            [102, 108, 111, 119, 101, 114, 115] => lookup_1566(),
            [115, 108, 105, 110, 103] => lookup_1567(),
            [122, 97] => lookup_1568(info, labels),
            [120, 110, 45, 45, 104, 50, 98, 114, 106, 57, 99] => lookup_1569(),
            [102, 114, 111, 110, 116, 105, 101, 114] => lookup_1570(),
            [109, 122] => lookup_1571(labels),
            [99, 108, 105, 99, 107] => lookup_1572(),
            [100, 101, 108, 116, 97] => lookup_1573(),
            [114, 97, 99, 105, 110, 103] => lookup_1574(),
            [115, 116, 97, 114] => lookup_1575(),
            [115, 119, 105, 102, 116, 99, 111, 118, 101, 114] => lookup_1576(),
            [102, 105, 110, 97, 110, 99, 101] => lookup_1577(),
            [116, 114, 117, 115, 116] => lookup_1578(),
            [117, 98, 97, 110, 107] => lookup_1579(),
            [217, 131, 217, 136, 217, 133] => lookup_1580(),
            [99, 105, 115, 99, 111] => lookup_1581(),
            [116, 106] => lookup_1582(labels),
            [228, 184, 173, 230, 150, 135, 231, 189, 145] => lookup_1583(),
            [115, 98, 115] => lookup_1584(),
            [111, 111, 111] => lookup_1585(),
            [105, 114, 105, 115, 104] => lookup_1586(),
            [116, 101, 118, 97] => lookup_1587(),
            [109, 97, 114, 107, 101, 116] => lookup_1588(),
            [104, 105, 112, 104, 111, 112] => lookup_1589(),
            [117, 98, 115] => lookup_1590(),
            [120, 110, 45, 45, 56, 48, 97, 113, 101, 99, 100, 114, 49, 97] => lookup_1591(),
            [227, 131, 149, 227, 130, 161, 227, 131, 131, 227, 130, 183, 227, 131, 167, 227, 131, 179] => {
                lookup_1592()
            }
            [118, 105, 114, 103, 105, 110] => lookup_1593(),
            [229, 152, 137, 233, 135, 140, 229, 164, 167, 233, 133, 146, 229, 186, 151] => {
                lookup_1594()
            }
            [104, 111, 116, 109, 97, 105, 108] => lookup_1595(),
            [121, 111, 107, 111, 104, 97, 109, 97] => lookup_1596(),
            [98, 117, 122, 122] => lookup_1597(),
            [230, 190, 179, 233, 150, 128] => lookup_1598(),
            [105, 110, 115, 117, 114, 97, 110, 99, 101] => lookup_1599(),
            [120, 110, 45, 45, 106, 49, 97, 101, 102] => lookup_1600(),
            [120, 110, 45, 45, 114, 104, 113, 118, 57, 54, 103] => lookup_1601(),
            [120, 110, 45, 45, 114, 118, 99, 49, 101, 48, 97, 109, 51, 101] => lookup_1602(),
            [101, 110, 103, 105, 110, 101, 101, 114] => lookup_1603(),
            [97, 116, 116, 111, 114, 110, 101, 121] => lookup_1604(),
            [102, 114, 111, 110, 116, 100, 111, 111, 114] => lookup_1605(),
            [99, 111, 97, 99, 104] => lookup_1606(),
            [108, 105, 103, 104, 116, 105, 110, 103] => lookup_1607(),
            [229, 133, 171, 229, 141, 166] => lookup_1608(),
            [97, 108, 105, 112, 97, 121] => lookup_1609(),
            [101, 115, 113] => lookup_1610(),
            [107, 101, 114, 114, 121, 112, 114, 111, 112, 101, 114, 116, 105, 101, 115] => {
                lookup_1611()
            }
            [104, 111, 115, 112, 105, 116, 97, 108] => lookup_1612(),
            [112, 119] => lookup_1613(labels),
            [97, 117, 116, 111] => lookup_1614(),
            [110, 112] => lookup_1615(info, labels),
            [98, 117, 105, 108, 100, 101, 114, 115] => lookup_1616(labels),
            [97, 98, 98, 111, 116, 116] => lookup_1617(),
            [102, 105, 97, 116] => lookup_1618(),
            [112, 111, 115, 116] => lookup_1619(),
            [107, 101] => lookup_1620(labels),
            [101, 110, 103, 105, 110, 101, 101, 114, 105, 110, 103] => lookup_1621(),
            [105, 109, 109, 111] => lookup_1622(),
            [106, 109, 112] => lookup_1623(),
            [114, 117, 104, 114] => lookup_1624(),
            [108, 105, 110, 107] => lookup_1625(labels),
            [101, 114] => lookup_1626(info, labels),
            [99, 97, 115, 105, 110, 111] => lookup_1627(),
            [115, 97, 109, 115, 99, 108, 117, 98] => lookup_1628(),
            [109, 116] => lookup_1629(labels),
            [112, 104, 105, 108, 105, 112, 115] => lookup_1630(),
            [115, 104, 111, 117, 106, 105] => lookup_1631(),
            [115, 107, 105, 110] => lookup_1632(),
            [227, 130, 187, 227, 131, 188, 227, 131, 171] => lookup_1633(),
            [120, 110, 45, 45, 110, 110, 120, 51, 56, 56, 97] => lookup_1634(),
            [97, 111, 108] => lookup_1635(),
            [232, 129, 148, 233, 128, 154] => lookup_1636(),
            [120, 110, 45, 45, 56, 48, 97, 115, 119, 103] => lookup_1637(),
            [229, 149, 134, 230, 160, 135] => lookup_1638(),
            [120, 110, 45, 45, 109, 103, 98, 57, 97, 119, 98, 102] => lookup_1639(),
            [115, 111, 108, 117, 116, 105, 111, 110, 115] => lookup_1640(),
            [101, 120, 112, 114, 101, 115, 115] => lookup_1641(),
            [120, 110, 45, 45, 53, 53, 113, 119, 52, 50, 103] => lookup_1642(),
            [216, 167, 216, 168, 217, 136, 216, 184, 216, 168, 217, 138] => lookup_1643(),
            [120, 110, 45, 45, 109, 103, 98, 99, 48, 97, 57, 97, 122, 99, 103] => lookup_1644(),
            [115, 118] => lookup_1645(labels),
            [97, 98, 97, 114, 116, 104] => lookup_1646(),
            [108, 105, 112, 115, 121] => lookup_1647(),
            [115, 106] => lookup_1648(),
            [109, 105, 110, 116] => lookup_1649(),
            [115, 101, 108, 101, 99, 116] => lookup_1650(),
            [115, 109, 105, 108, 101] => lookup_1651(),
            [115, 117, 122, 117, 107, 105] => lookup_1652(),
            [102, 114, 108] => lookup_1653(),
            [97, 101, 103] => lookup_1654(),
            [122, 119] => lookup_1655(labels),
            [230, 184, 184, 230, 136, 143] => lookup_1656(),
            [114, 115] => lookup_1657(labels),
            [120, 110, 45, 45, 113, 55, 99, 101, 54, 97] => lookup_1658(),
            [103, 114, 97, 112, 104, 105, 99, 115] => lookup_1659(),
            [116, 111, 114, 97, 121] => lookup_1660(),
            [120, 110, 45, 45, 110, 121, 113, 121, 50, 54, 97] => lookup_1661(),
            [116, 105, 99, 107, 101, 116, 115] => lookup_1662(),
            [99, 111, 100, 101, 115] => lookup_1663(labels),
            [100, 117, 98, 97, 105] => lookup_1664(),
            [120, 110, 45, 45, 56, 48, 97, 115, 101, 104, 100, 98] => lookup_1665(),
            [112, 104, 111, 116, 111, 115] => lookup_1666(),
            [115, 101, 97, 116] => lookup_1667(),
            [118, 111, 108, 118, 111] => lookup_1668(),
            [104, 115, 98, 99] => lookup_1669(),
            [118, 105, 110] => lookup_1670(),
            [116, 101, 108] => lookup_1671(),
            [110, 111, 107, 105, 97] => lookup_1672(),
            wild => {
                info.len = wild.len();
                info
            }
        },
        None => info,
    }
}
#[inline]
fn lookup_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_0_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_0_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_0_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_0_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_0<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 109] => lookup_0_0(acc),
            [99, 111] => lookup_0_1(acc),
            [97, 112, 114, 101, 110, 100, 101, 109, 97, 115] => lookup_0_2(acc),
            [103, 111, 118] => lookup_0_3(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_0_4(acc),
            [103, 111, 98] => lookup_0_5(acc),
            [109, 105, 108] => lookup_0_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 111, 114] => lookup_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_2() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_3() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_4() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_5() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_6() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_7() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_8() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_9() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_10() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_11_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_11_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_11_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_11_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_11_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_11_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_11_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_11_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_11_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_11_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_11_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_11_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_11_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_11<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 97, 109, 101] => lookup_11_0(acc),
            [101, 100, 117] => lookup_11_1(acc),
            [103, 111, 118] => lookup_11_2(acc),
            [101, 115, 116] => lookup_11_3(acc),
            [98, 105, 122] => lookup_11_4(acc),
            [99, 111, 109] => lookup_11_5(acc),
            [105, 115, 108, 97] => lookup_11_6(acc),
            [110, 101, 116] => lookup_11_7(acc),
            [105, 110, 102, 111] => lookup_11_8(acc),
            [112, 114, 111, 102] => lookup_11_9(acc),
            [111, 114, 103] => lookup_11_10(acc),
            [112, 114, 111] => lookup_11_11(acc),
            [97, 99] => lookup_11_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_12() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_13_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_13_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_13_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_13_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_13_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_13_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_13_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_13<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_13_0(acc),
            [97, 112, 112] => lookup_13_1(acc),
            [110, 101, 116] => lookup_13_2(acc),
            [101, 100, 117] => lookup_13_3(acc),
            [109, 111, 98, 105] => lookup_13_4(acc),
            [111, 114, 103] => lookup_13_5(acc),
            [97, 115, 115, 111] => lookup_13_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_14() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_15() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_16() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_17() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_18() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_19_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_19<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 104, 111, 112, 119, 97, 114, 101] => lookup_19_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_20() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_23_0(acc),
            [101, 100, 117] => lookup_23_1(acc),
            [103, 111, 118] => lookup_23_2(acc),
            [110, 101, 116] => lookup_23_3(acc),
            [111, 114, 103] => lookup_23_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_24() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_25_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_25_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 18usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_25_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_25_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_25_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_25_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_25_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_25_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_25_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_25_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [101, 122, 112, 114, 111, 120, 121] => lookup_25_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_25_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_25<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 110, 116, 101, 114, 104, 111, 115, 116, 115, 111, 108, 117, 116, 105, 111, 110, 115] => {
                lookup_25_0(info, labels, acc)
            }
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_25_1(acc),
            [119, 101, 98, 104, 111, 115, 116, 105, 110, 103] => lookup_25_2(acc),
            [116, 114, 97, 110, 115, 117, 114, 108] => lookup_25_3(info, labels, acc),
            [107, 117, 108, 101, 117, 118, 101, 110] => lookup_25_4(info, labels, acc),
            [97, 99] => lookup_25_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_26() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_28_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_28_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_28_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_28_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_28_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_28_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_28<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 105, 114, 109] => lookup_28_0(acc),
            [114, 101, 103] => lookup_28_1(acc),
            [99, 111] => lookup_28_2(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_28_3(acc),
            [115, 116, 111, 114, 101] => lookup_28_4(acc),
            [98, 105, 122] => lookup_28_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_29_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_29_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_29_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_29_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_29_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_29_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_29_5<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 121, 109, 97, 105, 108, 101, 114] => lookup_29_5_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_29_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_29_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_29_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_29_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_29_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_29_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_29_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_29_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_29_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_29_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_29_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_29_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_29_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_29<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 121, 109] => lookup_29_0(acc),
            [103, 97, 109, 101] => lookup_29_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_29_2(acc),
            [120, 110, 45, 45, 99, 122, 114, 119, 50, 56, 98] => lookup_29_3(acc),
            [231, 181, 132, 231, 185, 148] => lookup_29_4(acc),
            [99, 111, 109] => lookup_29_5(labels, acc),
            [120, 110, 45, 45, 117, 99, 48, 97, 116, 118] => lookup_29_6(acc),
            [110, 101, 116] => lookup_29_7(acc),
            [99, 108, 117, 98] => lookup_29_8(acc),
            [111, 114, 103] => lookup_29_9(acc),
            [101, 98, 105, 122] => lookup_29_10(acc),
            [101, 100, 117] => lookup_29_11(acc),
            [103, 111, 118] => lookup_29_12(acc),
            [120, 110, 45, 45, 122, 102, 48, 97, 111, 54, 52, 97] => lookup_29_13(acc),
            [105, 100, 118] => lookup_29_14(acc),
            [231, 182, 178, 232, 183, 175] => lookup_29_15(acc),
            [229, 149, 134, 230, 165, 173] => lookup_29_16(acc),
            [117, 114, 108] => lookup_29_17(acc),
            [109, 105, 108] => lookup_29_18(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_30_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_30_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_30_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_30_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_30_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_30_5_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_30_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_30_5_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_30_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_30_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_30_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_30<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_30_0(acc),
            [97, 109, 115, 119] => lookup_30_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_30_2(acc),
            [100, 101, 109, 111, 110] => lookup_30_3(acc),
            [107, 104, 112, 108, 97, 121] => lookup_30_4(acc),
            [116, 114, 97, 110, 115, 117, 114, 108] => lookup_30_5(info, labels, acc),
            [104, 111, 115, 116, 105, 110, 103, 45, 99, 108, 117, 115, 116, 101, 114] => {
                lookup_30_6(acc)
            }
            [99, 105, 115, 116, 114, 111, 110] => lookup_30_7(acc),
            [118, 105, 114, 116, 117, 101, 101, 108, 100, 111, 109, 101, 105, 110] => {
                lookup_30_8(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_31() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_32() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_33() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_34() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_35() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_36() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_37() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_38_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_38_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_38_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_38_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_38_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_38_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_38_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_38_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_38_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_38_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_38_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_38_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_38_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_38_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_38_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_38<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 114, 112] => lookup_38_0(acc),
            [115, 99, 104] => lookup_38_1(acc),
            [110, 103, 111] => lookup_38_2(acc),
            [99, 111, 109] => lookup_38_3(acc),
            [110, 101, 116] => lookup_38_4(acc),
            [111, 114, 103] => lookup_38_5(acc),
            [105, 110, 116] => lookup_38_6(acc),
            [101, 100, 117] => lookup_38_7(acc),
            [103, 111, 118] => lookup_38_8(acc),
            [97, 115, 115, 110] => lookup_38_9(acc),
            [104, 111, 116, 101, 108] => lookup_38_10(acc),
            [108, 116, 100] => lookup_38_11(acc),
            [115, 111, 99] => lookup_38_12(acc),
            [97, 99] => lookup_38_13(acc),
            [119, 101, 98] => lookup_38_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_39() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_40() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_41() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_42() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_43() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_44() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_45() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_46() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_47() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_48() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_49() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_50() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_51() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_52() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_53_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_53_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_53_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_53<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_53_0(acc),
            [111, 114, 103] => lookup_53_1(acc),
            [101, 100, 117] => lookup_53_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_54() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_55() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_56() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_57() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_58() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_59_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_59_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_59<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 116] => lookup_59_0(acc),
            [110, 111, 109] => lookup_59_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_60() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_61() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_62() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_63() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_64() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_65() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_66() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_67() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_68() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_69() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_70() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_71_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_71_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_71_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_71_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_71_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_71_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_71_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_71_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_71_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_71_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_71_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_71_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_71<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 110, 116] => lookup_71_0(acc),
            [101, 100, 117] => lookup_71_1(acc),
            [103, 111, 118] => lookup_71_2(acc),
            [112, 112] => lookup_71_3(acc),
            [110, 97, 109, 101] => lookup_71_4(acc),
            [98, 105, 122] => lookup_71_5(acc),
            [99, 111, 109] => lookup_71_6(acc),
            [105, 110, 102, 111] => lookup_71_7(acc),
            [110, 101, 116] => lookup_71_8(acc),
            [111, 114, 103] => lookup_71_9(acc),
            [112, 114, 111] => lookup_71_10(acc),
            [109, 105, 108] => lookup_71_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_72() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_73() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_74() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_75() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_76() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_78() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_79() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_80() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_81() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_82_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_82<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_82_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_83() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_84() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_85() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_86_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_86<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_86_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_87() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_88() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_89() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_90_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_90<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_90_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_91() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_92() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_93() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_94() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_95() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_96() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_97_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_97_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_97_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_97_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_97_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_97_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_97_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_97_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_97<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_97_0(labels, acc),
            [111, 102] => lookup_97_1(acc),
            [109, 121, 99, 108, 111, 117, 100] => lookup_97_2(acc),
            [103, 111, 118] => lookup_97_3(acc),
            [110, 121, 109] => lookup_97_4(acc),
            [109, 105, 108] => lookup_97_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_98_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_98_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_98_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_98_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_98_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_98_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_98_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_98_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_98_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_98_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_98_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_98_11_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_98_11<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_98_11_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_98_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_98_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_98_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_98_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_98_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_98_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_98_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_98_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_98<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_98_0(acc),
            [113, 99] => lookup_98_1(acc),
            [110, 108] => lookup_98_2(acc),
            [110, 117] => lookup_98_3(acc),
            [110, 111, 45, 105, 112] => lookup_98_4(acc),
            [109, 98] => lookup_98_5(acc),
            [121, 107] => lookup_98_6(acc),
            [115, 107] => lookup_98_7(acc),
            [103, 99] => lookup_98_8(acc),
            [110, 98] => lookup_98_9(acc),
            [99, 111] => lookup_98_10(acc),
            [97, 119, 100, 101, 118] => lookup_98_11(info, labels, acc),
            [112, 101] => lookup_98_12(acc),
            [110, 116] => lookup_98_13(acc),
            [110, 102] => lookup_98_14(acc),
            [98, 97, 114, 115, 121] => lookup_98_15(acc),
            [110, 115] => lookup_98_16(acc),
            [111, 110] => lookup_98_17(acc),
            [97, 98] => lookup_98_18(acc),
            [98, 99] => lookup_98_19(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_99() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_100() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_101() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_102() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_103() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_104() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_105() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_106() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_107() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_108() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_109() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_110() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_111() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_112_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_112_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_112_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_112<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [119, 101] => lookup_112_0(acc),
            [99, 104] => lookup_112_1(acc),
            [109, 101] => lookup_112_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_113() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_114_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_114_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_114_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_114_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_114_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_114_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_114_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_114_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_114_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_114_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_114<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 106, 49, 97, 101, 102] => lookup_114_0(acc),
            [120, 110, 45, 45, 104, 49, 97, 104, 110] => lookup_114_1(acc),
            [120, 110, 45, 45, 106, 49, 97, 101, 108, 56, 98] => lookup_114_2(acc),
            [120, 110, 45, 45, 56, 48, 97, 97, 97, 48, 99, 118, 97, 99] => lookup_114_3(acc),
            [120, 110, 45, 45, 106, 49, 97, 100, 112] => lookup_114_4(acc),
            [120, 110, 45, 45, 99, 49, 97, 118, 103] => lookup_114_5(acc),
            [120, 110, 45, 45, 57, 48, 97, 109, 99] => lookup_114_6(acc),
            [120, 110, 45, 45, 104, 49, 97, 108, 105, 122] => lookup_114_7(acc),
            [120, 110, 45, 45, 57, 48, 97, 49, 97, 102] => lookup_114_8(acc),
            [120, 110, 45, 45, 52, 49, 97] => lookup_114_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_115() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_116() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_117_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_117_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_117_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_117_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_117_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_117_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_117_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_117_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_117<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 97, 109, 101, 45, 115, 101, 114, 118, 101, 114] => lookup_117_0(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_117_1(acc),
            [116, 119, 109, 97, 105, 108] => lookup_117_2(acc),
            [102, 116, 112, 97, 99, 99, 101, 115, 115] => lookup_117_3(acc),
            [115, 99, 114, 97, 112, 112, 105, 110, 103] => lookup_117_4(acc),
            [102, 97, 110, 116, 97, 115, 121, 108, 101, 97, 103, 117, 101] => lookup_117_5(acc),
            [99, 115, 120] => lookup_117_6(acc),
            [109, 121, 112, 104, 111, 116, 111, 115] => lookup_117_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_118() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_119() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_120() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_121() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_122() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_123_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_123_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_123_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_123_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_123<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 102] => lookup_123_0(acc),
            [99, 111] => lookup_123_1(acc),
            [110, 101, 116] => lookup_123_2(acc),
            [111, 114, 103] => lookup_123_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_124() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_127() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_128() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_131() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_132() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_133() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_134() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_135() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_136() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_137() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_138() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_139() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_140() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_141() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_142() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_143() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_144() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_145_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_145_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_145<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 111] => lookup_145_0(acc),
            [102, 114, 111, 109] => lookup_145_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_146() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_147() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_150_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_150_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_150_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_150_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_150_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_150_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_150_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_150_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_150_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_150_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_150_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_150<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 111, 112] => lookup_150_0(acc),
            [99, 111] => lookup_150_1(acc),
            [101, 100, 117] => lookup_150_2(acc),
            [103, 111, 118] => lookup_150_3(acc),
            [105, 110, 116] => lookup_150_4(acc),
            [97, 99] => lookup_150_5(acc),
            [98, 105, 122] => lookup_150_6(acc),
            [99, 111, 109] => lookup_150_7(acc),
            [110, 101, 116] => lookup_150_8(acc),
            [111, 114, 103] => lookup_150_9(acc),
            [109, 117, 115, 101, 117, 109] => lookup_150_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_151_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_151_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_151_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_151_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_151<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 105, 116, 97, 112, 112] => lookup_151_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_151_1(acc),
            [103, 105, 116, 112, 97, 103, 101] => lookup_151_2(acc),
            [110, 111, 109] => lookup_151_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_152() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_154() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_155() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_156_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_156_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_156_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_156_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_156_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_156_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_156_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_156_6<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 97, 115] => lookup_156_6_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_156_7_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_156_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_156_7_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_156_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_156_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_156_8_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_156<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 121, 99, 100] => lookup_156_0(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_156_1(acc),
            [119, 101, 108, 108, 98, 101, 105, 110, 103, 122, 111, 110, 101] => lookup_156_2(acc),
            [100, 105, 115, 107, 115, 116, 97, 116, 105, 111, 110] => lookup_156_3(acc),
            [98, 97, 114, 115, 121] => lookup_156_4(acc),
            [115, 112, 100, 110, 115] => lookup_156_5(acc),
            [108, 101, 118, 105, 114, 97, 99, 108, 111, 117, 100] => {
                lookup_156_6(info, labels, acc)
            }
            [116, 114, 97, 110, 115, 117, 114, 108] => lookup_156_7(info, labels, acc),
            [100, 111, 103, 97, 100, 111] => lookup_156_8(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_157() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_158_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_158_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_158_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_158_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_158_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_158_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_158_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_158_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_158_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_158<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_158_0(acc),
            [111, 110, 108, 105, 110, 101] => lookup_158_1(acc),
            [97, 99] => lookup_158_2(acc),
            [111, 114] => lookup_158_3(acc),
            [103, 111] => lookup_158_4(acc),
            [105, 110] => lookup_158_5(acc),
            [109, 105] => lookup_158_6(acc),
            [110, 101, 116] => lookup_158_7(acc),
            [115, 104, 111, 112] => lookup_158_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_159_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_159_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_159_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_159_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_159_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_159_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_159_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_159_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_159_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_159_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_159<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 97, 109, 101] => lookup_159_0(acc),
            [103, 111, 118] => lookup_159_1(acc),
            [97, 99] => lookup_159_2(acc),
            [98, 105, 122] => lookup_159_3(acc),
            [99, 111, 109] => lookup_159_4(acc),
            [105, 110, 102, 111] => lookup_159_5(acc),
            [110, 101, 116] => lookup_159_6(acc),
            [111, 114, 103] => lookup_159_7(acc),
            [112, 114, 111] => lookup_159_8(acc),
            [109, 105, 108] => lookup_159_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_160() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_161() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_162() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_165_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_165_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_165_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_165_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_165_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_165_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_165<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_165_0(acc),
            [109, 111, 100] => lookup_165_1(acc),
            [103, 111, 118] => lookup_165_2(acc),
            [101, 100, 117] => lookup_165_3(acc),
            [111, 114, 103] => lookup_165_4(acc),
            [108, 116, 100] => lookup_165_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_166() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_168_0(acc),
            [110, 101, 116] => lookup_168_1(acc),
            [101, 100, 117] => lookup_168_2(acc),
            [103, 111, 118] => lookup_168_3(acc),
            [111, 114, 103] => lookup_168_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_169() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_170() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_171() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_172() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_173_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_173_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_173_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_173_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_173_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_173_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_173_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_173_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_173<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_173_0(acc),
            [103, 111, 118] => lookup_173_1(acc),
            [112, 101, 114] => lookup_173_2(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_173_3(acc),
            [99, 111, 109] => lookup_173_4(acc),
            [110, 101, 116] => lookup_173_5(acc),
            [101, 110, 115, 99, 97, 108, 101, 100] => lookup_173_6(acc),
            [111, 114, 103] => lookup_173_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_174() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_175() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_176_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_176_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_176_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_176_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_176_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_176<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_176_0(acc),
            [101, 100, 117] => lookup_176_1(acc),
            [103, 111, 118] => lookup_176_2(acc),
            [110, 101, 116] => lookup_176_3(acc),
            [111, 114, 103] => lookup_176_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_177_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_10_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_10<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [114] => lookup_177_10_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_177_11_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_11<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_177_11_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_177_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_25_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_25<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 97, 112] => lookup_177_25_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_177_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_39_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_39_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_39_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_39_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [97] => lookup_177_39_0_0(acc),
            [98] => lookup_177_39_0_1(acc),
            [103, 108, 111, 98, 97, 108] => lookup_177_39_0_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_177_39_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_39_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_39_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_39_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_39_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [97] => lookup_177_39_3_0(acc),
            [103, 108, 111, 98, 97, 108] => lookup_177_39_3_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_177_39<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [115, 115, 108] => lookup_177_39_0(info, labels, acc),
            [102, 114, 101, 101, 116, 108, 115] => lookup_177_39_1(acc),
            [109, 97, 112] => lookup_177_39_2(acc),
            [112, 114, 111, 100] => lookup_177_39_3(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_177_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_42_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_42_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_177_42_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_177_42_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_42_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_177_42_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_177_42<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 112, 97, 97, 115] => lookup_177_42_0(info, labels, acc),
            [104, 111, 115, 116, 105, 110, 103] => lookup_177_42_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_177_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_45_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_45_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_45<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [117, 115, 101, 114] => lookup_177_45_0(acc),
            [115, 111, 99] => lookup_177_45_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_177_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_52_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_52<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [117] => lookup_177_52_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_177_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_60_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_60_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_60<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 114, 97, 49, 45, 100, 101] => lookup_177_60_0(acc),
            [119, 101, 115, 116, 49, 45, 117, 115] => lookup_177_60_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_177_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_62_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_62<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 97, 103, 101, 115] => lookup_177_62_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_177_63_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_63_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_63_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [110, 106, 115] => lookup_177_63_0_0(acc),
            [97, 116, 108] => lookup_177_63_0_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_177_63<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_177_63_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_177_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_71_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_71_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_71_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_71<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [106, 108, 115, 45, 115, 116, 111, 50] => lookup_177_71_0(acc),
            [106, 108, 115, 45, 115, 116, 111, 49] => lookup_177_71_1(acc),
            [106, 108, 115, 45, 115, 116, 111, 51] => lookup_177_71_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_177_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_79_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_79<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [106] => lookup_177_79_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_177_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_92_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_92_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [97, 109, 115, 49] => lookup_177_92_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_177_92<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [106, 108, 115] => lookup_177_92_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_177_93_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_93_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_93<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_177_93_0(acc),
            [110, 111, 114, 100, 101, 115, 116, 101, 45, 105, 100, 99] => lookup_177_93_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_177_94_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_94<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_177_94_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_177_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_105_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_105_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_105_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_105_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_105_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_105<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 15usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [119, 101, 115, 116, 117, 115, 50] => lookup_177_105_0(acc),
            [101, 97, 115, 116, 97, 115, 105, 97] => lookup_177_105_1(acc),
            [119, 101, 115, 116, 101, 117, 114, 111, 112, 101] => lookup_177_105_2(acc),
            [101, 97, 115, 116, 117, 115, 50] => lookup_177_105_3(acc),
            [99, 101, 110, 116, 114, 97, 108, 117, 115] => lookup_177_105_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_177_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 24usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_133_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_133_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_133_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_133_0_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_133_0_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_133_0_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_133_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [110, 121, 45, 49] => lookup_177_133_0_0(acc),
            [115, 103, 45, 49] => lookup_177_133_0_1(acc),
            [110, 121, 45, 50] => lookup_177_133_0_2(acc),
            [108, 111, 110, 45, 49] => lookup_177_133_0_3(acc),
            [102, 114, 45, 49] => lookup_177_133_0_4(acc),
            [108, 111, 110, 45, 50] => lookup_177_133_0_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_177_133<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 97, 115] => lookup_177_133_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_177_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_136_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_136_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_136<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 115, 105, 116, 101] => lookup_177_136_0(acc),
            [115, 116, 111, 114, 97, 103, 101] => lookup_177_136_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_177_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [106, 112] => lookup_177_0(acc),
            [100, 110, 115, 97, 108, 105, 97, 115] => lookup_177_1(acc),
            [98, 112, 108, 97, 99, 101, 100] => lookup_177_2(acc),
            [102, 114, 111, 109, 45, 108, 97] => lookup_177_3(acc),
            [99, 108, 111, 117, 100, 102, 114, 111, 110, 116] => lookup_177_4(acc),
            [107, 105, 99, 107, 115, 45, 97, 115, 115] => lookup_177_5(acc),
            [115, 99, 114, 97, 112, 112, 101, 114, 45, 115, 105, 116, 101] => lookup_177_6(acc),
            [115, 101, 114, 118, 101, 98, 98, 115] => lookup_177_7(acc),
            [109, 121, 102, 114, 105, 116, 122] => lookup_177_8(acc),
            [100, 121, 110, 117] => lookup_177_9(acc),
            [99, 100, 110, 55, 55] => lookup_177_10(info, labels, acc),
            [116, 115, 117, 107, 97, 101, 114, 117] => lookup_177_11(info, labels, acc),
            [111, 119, 110, 105, 112] => lookup_177_12(acc),
            [115, 105, 116, 101, 108, 101, 97, 102] => lookup_177_13(acc),
            [97, 100, 111, 98, 101, 97, 101, 109, 99, 108, 111, 117, 100] => lookup_177_14(acc),
            [115, 101, 110, 115, 101, 101, 114, 105, 110, 103] => lookup_177_15(acc),
            [115, 101, 114, 118, 101, 102, 116, 112] => lookup_177_16(acc),
            [102, 97, 115, 116, 98, 108, 111, 103] => lookup_177_17(acc),
            [99, 108, 105, 99, 50, 48, 48, 48] => lookup_177_18(acc),
            [97, 108, 119, 97, 121, 115, 100, 97, 116, 97] => lookup_177_19(acc),
            [99, 108, 111, 117, 100, 97, 99, 99, 101, 115, 115] => lookup_177_20(acc),
            [100, 110, 115, 100, 111, 106, 111] => lookup_177_21(acc),
            [102, 114, 111, 109, 45, 99, 111] => lookup_177_22(acc),
            [99, 97, 115, 97, 99, 97, 109] => lookup_177_23(acc),
            [114, 117] => lookup_177_24(acc),
            [102, 97, 115, 116, 108, 121, 108, 98] => lookup_177_25(labels, acc),
            [101, 97, 116, 105, 110, 103, 45, 111, 114, 103, 97, 110, 105, 99] => {
                lookup_177_26(acc)
            }
            [110, 111, 119, 45, 100, 110, 115] => lookup_177_27(acc),
            [98, 111, 111, 109, 108, 97] => lookup_177_28(acc),
            [115, 116, 97, 116, 105, 99, 45, 97, 99, 99, 101, 115, 115] => lookup_177_29(acc),
            [109, 121, 112, 115, 120] => lookup_177_30(acc),
            [117, 107] => lookup_177_31(acc),
            [115, 101] => lookup_177_32(acc),
            [100, 101, 102, 105, 110, 105, 109, 97] => lookup_177_33(acc),
            [98, 117, 121, 115, 104, 111, 117, 115, 101, 115] => lookup_177_34(acc),
            [116, 119, 109, 97, 105, 108] => lookup_177_35(acc),
            [115, 101, 114, 118, 101, 98, 108, 111, 103] => lookup_177_36(acc),
            [99, 108, 111, 117, 100, 121, 99, 108, 117, 115, 116, 101, 114] => lookup_177_37(acc),
            [104, 105, 99, 97, 109] => lookup_177_38(acc),
            [102, 97, 115, 116, 108, 121] => lookup_177_39(info, labels, acc),
            [109, 121, 101, 102, 102, 101, 99, 116] => lookup_177_40(acc),
            [100, 111, 101, 115, 45, 105, 116] => lookup_177_41(acc),
            [111, 118, 104] => lookup_177_42(info, labels, acc),
            [105, 115, 45, 97, 45, 99, 104, 101, 102] => lookup_177_43(acc),
            [112, 103, 97, 102, 97, 110] => lookup_177_44(acc),
            [115, 114, 99, 102] => lookup_177_45(info, labels, acc),
            [104, 117] => lookup_177_46(acc),
            [105, 110, 45, 100, 115, 108] => lookup_177_47(acc),
            [117, 110, 105, 53] => lookup_177_48(acc),
            [98, 108, 97, 99, 107, 98, 97, 117, 100, 99, 100, 110] => lookup_177_49(acc),
            [98, 97, 114, 48] => lookup_177_50(acc),
            [105, 112, 105, 102, 111, 110, 121] => lookup_177_51(acc),
            [99, 104, 97, 110, 110, 101, 108, 115, 100, 118, 114] => lookup_177_52(labels, acc),
            [98, 105, 116, 98, 114, 105, 100, 103, 101] => lookup_177_53(acc),
            [110, 104, 108, 102, 97, 110] => lookup_177_54(acc),
            [114, 97, 99, 107, 109, 97, 122, 101] => lookup_177_55(acc),
            [110, 111, 45, 105, 112] => lookup_177_56(acc),
            [99, 108, 105, 99, 107, 114, 105, 115, 105, 110, 103] => lookup_177_57(acc),
            [97, 116, 45, 98, 97, 110, 100, 45, 99, 97, 109, 112] => lookup_177_58(acc),
            [99, 108, 111, 117, 100, 102, 117, 110, 99, 116, 105, 111, 110, 115] => {
                lookup_177_59(acc)
            }
            [99, 108, 111, 117, 100, 106, 105, 102, 102, 121] => lookup_177_60(labels, acc),
            [104, 111, 109, 101, 108, 105, 110, 117, 120] => lookup_177_61(acc),
            [116, 111, 114, 112, 114, 111, 106, 101, 99, 116] => lookup_177_62(labels, acc),
            [118, 112, 115, 45, 104, 111, 115, 116] => lookup_177_63(info, labels, acc),
            [115, 99, 104, 111, 107, 111, 107, 101, 107, 115] => lookup_177_64(acc),
            [116, 51, 108, 51, 112, 48, 114, 116] => lookup_177_65(acc),
            [99, 100, 110, 55, 55, 45, 115, 115, 108] => lookup_177_66(acc),
            [109, 101, 109, 115, 101, 116] => lookup_177_67(acc),
            [118, 112, 110, 100, 110, 115] => lookup_177_68(acc),
            [115, 121, 116, 101, 115] => lookup_177_69(acc),
            [98, 97, 114, 115, 121] => lookup_177_70(acc),
            [101, 108, 97, 115, 116, 120] => lookup_177_71(info, labels, acc),
            [99, 100, 110, 45, 101, 100, 103, 101, 115] => lookup_177_72(acc),
            [107, 105, 110, 103, 104, 111, 115, 116] => lookup_177_73(acc),
            [115, 113, 117, 97, 114, 101, 55] => lookup_177_74(acc),
            [103, 101, 116, 115, 45, 105, 116] => lookup_177_75(acc),
            [102, 105, 114, 101, 119, 97, 108, 108, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_177_76(acc)
            }
            [122, 97] => lookup_177_77(acc),
            [107, 110, 120, 45, 115, 101, 114, 118, 101, 114] => lookup_177_78(acc),
            [115, 99, 97, 108, 101, 102, 111, 114, 99, 101] => lookup_177_79(info, labels, acc),
            [98, 108, 111, 103, 100, 110, 115] => lookup_177_80(acc),
            [100, 100, 110, 115] => lookup_177_81(acc),
            [105, 110, 45, 118, 112, 110] => lookup_177_82(acc),
            [111, 102, 102, 105, 99, 101, 45, 111, 110, 45, 116, 104, 101] => lookup_177_83(acc),
            [97, 122, 117, 114, 101, 119, 101, 98, 115, 105, 116, 101, 115] => lookup_177_84(acc),
            [104, 111, 109, 101, 105, 112] => lookup_177_85(acc),
            [102, 108, 121, 110, 110, 104, 111, 115, 116, 105, 110, 103] => lookup_177_86(acc),
            [109, 121, 109, 101, 100, 105, 97, 112, 99] => lookup_177_87(acc),
            [109, 111, 111, 110, 115, 99, 97, 108, 101] => lookup_177_88(acc),
            [105, 111, 98, 98] => lookup_177_89(acc),
            [107, 114, 101, 108, 108, 105, 97, 110] => lookup_177_90(acc),
            [105, 110, 45, 116, 104, 101, 45, 98, 97, 110, 100] => lookup_177_91(acc),
            [100, 111, 99, 107, 116, 101, 114, 97] => lookup_177_92(info, labels, acc),
            [115, 97, 118, 101, 105, 110, 99, 108, 111, 117, 100] => {
                lookup_177_93(info, labels, acc)
            }
            [99, 114, 121, 112, 116, 111, 110, 111, 109, 105, 99] => {
                lookup_177_94(info, labels, acc)
            }
            [100, 121, 110, 97, 116, 104, 111, 109, 101] => lookup_177_95(acc),
            [100, 111, 110, 116, 101, 120, 105, 115, 116] => lookup_177_96(acc),
            [105, 115, 97, 45, 103, 101, 101, 107] => lookup_177_97(acc),
            [100, 121, 110, 118, 54] => lookup_177_98(acc),
            [100, 101, 98, 105, 97, 110] => lookup_177_99(acc),
            [112, 111, 100, 122, 111, 110, 101] => lookup_177_100(acc),
            [98, 97, 114, 50] => lookup_177_101(acc),
            [99, 111, 109, 109, 117, 110, 105, 116, 121, 45, 112, 114, 111] => lookup_177_102(acc),
            [98, 114, 111, 107, 101, 45, 105, 116] => lookup_177_103(acc),
            [109, 101, 105, 110, 102, 111, 114, 117, 109] => lookup_177_104(acc),
            [97, 122, 117, 114, 101, 115, 116, 97, 116, 105, 99, 97, 112, 112, 115] => {
                lookup_177_105(labels, acc)
            }
            [100, 115, 109, 121, 110, 97, 115] => lookup_177_106(acc),
            [105, 110] => lookup_177_107(acc),
            [104, 97, 109, 45, 114, 97, 100, 105, 111, 45, 111, 112] => lookup_177_108(acc),
            [119, 101, 98, 104, 111, 112] => lookup_177_109(acc),
            [97, 122, 117, 114, 101, 45, 109, 111, 98, 105, 108, 101] => lookup_177_110(acc),
            [100, 110, 115, 117, 112] => lookup_177_111(acc),
            [100, 97, 116, 116, 111, 108, 111, 99, 97, 108] => lookup_177_112(acc),
            [102, 114, 111, 109, 45, 110, 121] => lookup_177_113(acc),
            [115, 101, 114, 118, 101, 109, 105, 110, 101, 99, 114, 97, 102, 116] => {
                lookup_177_114(acc)
            }
            [101, 100, 103, 101, 97, 112, 112] => lookup_177_115(acc),
            [109, 121, 115, 101, 99, 117, 114, 105, 116, 121, 99, 97, 109, 101, 114, 97] => {
                lookup_177_116(acc)
            }
            [98, 97, 114, 49] => lookup_177_117(acc),
            [116, 104, 114, 117, 104, 101, 114, 101] => lookup_177_118(acc),
            [98, 111, 117, 110, 99, 101, 109, 101] => lookup_177_119(acc),
            [99, 108, 111, 117, 100, 97, 112, 112] => lookup_177_120(acc),
            [102, 97, 109, 105, 108, 121, 100, 115] => lookup_177_121(acc),
            [109, 121, 100, 97, 116, 116, 111] => lookup_177_122(acc),
            [114, 101, 100, 105, 114, 101, 99, 116, 109, 101] => lookup_177_123(acc),
            [109, 121, 100, 105, 115, 115, 101, 110, 116] => lookup_177_124(acc),
            [115, 101, 108, 108, 115, 45, 105, 116] => lookup_177_125(acc),
            [102, 114, 111, 109, 45, 97, 122] => lookup_177_126(acc),
            [102, 101, 115, 116, 101, 45, 105, 112] => lookup_177_127(acc),
            [115, 101, 108, 102, 105, 112] => lookup_177_128(acc),
            [101, 110, 100, 111, 102, 105, 110, 116, 101, 114, 110, 101, 116] => {
                lookup_177_129(acc)
            }
            [103, 98] => lookup_177_130(acc),
            [104, 111, 109, 101, 117, 110, 105, 120] => lookup_177_131(acc),
            [112, 114, 105, 118, 97, 116, 105, 122, 101, 104, 101, 97, 108, 116, 104, 105, 110, 115, 117, 114, 97, 110, 99, 101] => {
                lookup_177_132(acc)
            }
            [109, 97, 115, 115, 105, 118, 101, 103, 114, 105, 100] => {
                lookup_177_133(info, labels, acc)
            }
            [115, 101, 105, 100, 97, 116] => lookup_177_134(acc),
            [105, 115, 45, 97, 45, 103, 101, 101, 107] => lookup_177_135(acc),
            [121, 97, 110, 100, 101, 120, 99, 108, 111, 117, 100] => lookup_177_136(labels, acc),
            [100, 121, 110, 97, 108, 105, 97, 115] => lookup_177_137(acc),
            [104, 111, 109, 101, 102, 116, 112] => lookup_177_138(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_178_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_178<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_178_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_179() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 36usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_158(acc: usize) -> Info {
    Info {
        len: acc + 1 + 29usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_162(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_163(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_164(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_165(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_166(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_167(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_168(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_169(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_170(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_171(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_172(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_173(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_174(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_175(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_176(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_177(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_178(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_179(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_180(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_181(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_182(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_183(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_184(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_185(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_186(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_187(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_188(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_189(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_190(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_191(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_192(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_193(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_194(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_195(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_196(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_197(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_198(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_199(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_200(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_201(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_202(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_203(acc: usize) -> Info {
    Info {
        len: acc + 1 + 25usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_204(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_205(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_206(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_207(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_208(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_209(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_210(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_211(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_212(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_213(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_214(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_215(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_216(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_217(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_218(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_219(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_220(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_221(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_222(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_223(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_224(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_225(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_226(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_227(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_228(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_229(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_230(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_231(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_232(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_233(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_234(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_235(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_236(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_237(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_238(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_239(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_240(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_241(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_242(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_243(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_244(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_245(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_246(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_247(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_248(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_249(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_250(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_251(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_252(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_253(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_254(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_255(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_256(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_257(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_258(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_259(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_260(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_261(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_262(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_263(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_264(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_265(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_266(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_267(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_268(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_269(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_270(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_271(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_272(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_273(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_274(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_275(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_276(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_277(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_278(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_279(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_280(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_281(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_282(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_283(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_284(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_285(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_286(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_287(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_288(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_289(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_290(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_291(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_292(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_293(acc: usize) -> Info {
    Info {
        len: acc + 1 + 28usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_294(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_295(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_296(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_297(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_298(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_299(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_300(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_301(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_302(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_303(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_304(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_305(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_306(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_307(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_308(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_309(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_310(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_311(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_312(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_313(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_314(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_315(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_316(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_317(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_318(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_319(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_320(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_321(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_322(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_323(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_324(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_325(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_326(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_327(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_328(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_329(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_330(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_331(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_332(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_333(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_334(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_335(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_336(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_337(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_338(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_339(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_340(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_341(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_342(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_343(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_344(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_345(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_346(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_347(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_348(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_349(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_350(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_351(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_352(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_353(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_354(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_355(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_356(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_357(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_358(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_359(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_360(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_361(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_362(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_363(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_364(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_365(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_366(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_367(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_368(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_369(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_370(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_371(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_372(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_373(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_374(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_375(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_376(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_377(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_378(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_379(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_380(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_381(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_382(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_383(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_384(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_385(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_386(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_387(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_388(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_389(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_390(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_391(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_392(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_393(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_394(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_395(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_396(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_397(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_398(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_399(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_400(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_401(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_402(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_403(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_404(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_405(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_406(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_407(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_408(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_409(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_410(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_411(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_412(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_413(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_414(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_415(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_416(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_417(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_418(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_419(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_420(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_421(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_422(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_423(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_424(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_425(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_426(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_427(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_428(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_429(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_430(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_431(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_432(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_433(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_434(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_435(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_436(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_437(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_438(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_439(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_440(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_441(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_442(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_443(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_444(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_445(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_446(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_447(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_448(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_449(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_450(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_451(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_452(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_453(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_454(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_455(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_456(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_457(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_458(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_459(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_460(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_461(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_462(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_463(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_464(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_465(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_466(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_467(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_468(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_469(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_470(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_471(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_472(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_473(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_474(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_475(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_476(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_477(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_478(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_479(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_480(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_481(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_482(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_483(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_484(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_485(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_486(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_487(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_488(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_489(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_490(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_491(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_492(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_493(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_494(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_495(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_496(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_497(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_498(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_499(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_500(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_501(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_502(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_503(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_504(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_505(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_506(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_507(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_508(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_509(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_510(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_511(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_512(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_513(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_514(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_515(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_516(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_517(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_518(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_519(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_520(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_521(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_522(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_523(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_524(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_525(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_526(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_527(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_528(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_529(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_530(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_531(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_532(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_533(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_534(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_535(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_536(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_537(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_538(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_539(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_540(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_541(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_542(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_543(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_544(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_545(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_546(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_547(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_548(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_549(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_550(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 117, 114, 104, 97, 109] => lookup_180_0(acc),
            [111, 114, 101, 103, 111, 110] => lookup_180_1(acc),
            [115, 116, 106, 111, 104, 110] => lookup_180_2(acc),
            [115, 119, 101, 100, 101, 110] => lookup_180_3(acc),
            [98, 97, 103, 104, 100, 97, 100] => lookup_180_4(acc),
            [106, 101, 102, 102, 101, 114, 115, 111, 110] => lookup_180_5(acc),
            [101, 120, 104, 105, 98, 105, 116, 105, 111, 110] => lookup_180_6(acc),
            [106, 101, 119, 105, 115, 104, 97, 114, 116] => lookup_180_7(acc),
            [97, 115, 116, 114, 111, 110, 111, 109, 121] => lookup_180_8(acc),
            [104, 97, 108, 108, 111, 102, 102, 97, 109, 101] => lookup_180_9(acc),
            [97, 114, 99, 104, 97, 101, 111, 108, 111, 103, 105, 99, 97, 108] => lookup_180_10(acc),
            [101, 97, 115, 116, 99, 111, 97, 115, 116] => lookup_180_11(acc),
            [103, 114, 97, 122] => lookup_180_12(acc),
            [110, 97, 116, 117, 114, 101] => lookup_180_13(acc),
            [100, 105, 115, 99, 111, 118, 101, 114, 121] => lookup_180_14(acc),
            [112, 108, 97, 110, 101, 116, 97, 114, 105, 117, 109] => lookup_180_15(acc),
            [109, 105, 115, 115, 105, 108, 101] => lookup_180_16(acc),
            [102, 111, 114, 99, 101] => lookup_180_17(acc),
            [112, 114, 101, 115, 105, 100, 105, 111] => lookup_180_18(acc),
            [109, 111, 110, 101, 121] => lookup_180_19(acc),
            [107, 111, 101, 108, 110] => lookup_180_20(acc),
            [100, 101, 112, 111, 116] => lookup_180_21(acc),
            [117, 115, 108, 105, 118, 105, 110, 103, 104, 105, 115, 116, 111, 114, 121] => {
                lookup_180_22(acc)
            }
            [98, 97, 116, 104, 115] => lookup_180_23(acc),
            [115, 116, 97, 116, 101, 111, 102, 100, 101, 108, 97, 119, 97, 114, 101] => {
                lookup_180_24(acc)
            }
            [106, 101, 114, 117, 115, 97, 108, 101, 109] => lookup_180_25(acc),
            [97, 110, 116, 104, 114, 111] => lookup_180_26(acc),
            [109, 101, 101, 114, 101, 115] => lookup_180_27(acc),
            [110, 111, 114, 116, 104] => lookup_180_28(acc),
            [104, 101, 114, 105, 116, 97, 103, 101] => lookup_180_29(acc),
            [112, 97, 100, 101, 114, 98, 111, 114, 110] => lookup_180_30(acc),
            [118, 111, 108, 107, 101, 110, 107, 117, 110, 100, 101] => lookup_180_31(acc),
            [112, 104, 111, 101, 110, 105, 120] => lookup_180_32(acc),
            [111, 112, 101, 110, 97, 105, 114] => lookup_180_33(acc),
            [99, 111, 115, 116, 117, 109, 101] => lookup_180_34(acc),
            [99, 111, 110, 118, 101, 110, 116] => lookup_180_35(acc),
            [102, 105, 103, 117, 101, 114, 101, 115] => lookup_180_36(acc),
            [98, 101, 101, 108, 100, 101, 110, 103, 101, 108, 117, 105, 100] => lookup_180_37(acc),
            [98, 101, 108, 108, 101, 118, 117, 101] => lookup_180_38(acc),
            [109, 101, 115, 97, 118, 101, 114, 100, 101] => lookup_180_39(acc),
            [102, 111, 117, 110, 100, 97, 116, 105, 111, 110] => lookup_180_40(acc),
            [109, 111, 110, 116, 105, 99, 101, 108, 108, 111] => lookup_180_41(acc),
            [115, 99, 105, 101, 110, 99, 101, 97, 110, 100, 105, 110, 100, 117, 115, 116, 114, 121] => {
                lookup_180_42(acc)
            }
            [115, 99, 105, 101, 110, 99, 101, 97, 110, 100, 104, 105, 115, 116, 111, 114, 121] => {
                lookup_180_43(acc)
            }
            [112, 108, 97, 110, 116, 115] => lookup_180_44(acc),
            [115, 117, 114, 114, 101, 121] => lookup_180_45(acc),
            [104, 97, 114, 118, 101, 115, 116, 99, 101, 108, 101, 98, 114, 97, 116, 105, 111, 110] => {
                lookup_180_46(acc)
            }
            [109, 97, 108, 108, 111, 114, 99, 97] => lookup_180_47(acc),
            [99, 104, 97, 116, 116, 97, 110, 111, 111, 103, 97] => lookup_180_48(acc),
            [97, 109, 101, 114, 105, 99, 97, 110] => lookup_180_49(acc),
            [97, 99, 97, 100, 101, 109, 121] => lookup_180_50(acc),
            [105, 114, 111, 110] => lookup_180_51(acc),
            [110, 97, 116, 117, 114, 97, 108, 104, 105, 115, 116, 111, 114, 121] => {
                lookup_180_52(acc)
            }
            [99, 111, 112, 101, 110, 104, 97, 103, 101, 110] => lookup_180_53(acc),
            [108, 105, 110, 99, 111, 108, 110] => lookup_180_54(acc),
            [112, 111, 114, 116, 97, 108] => lookup_180_55(acc),
            [97, 115, 109, 97, 116, 97, 114, 116] => lookup_180_56(acc),
            [97, 114, 116, 97, 110, 100, 100, 101, 115, 105, 103, 110] => lookup_180_57(acc),
            [106, 117, 100, 121, 103, 97, 114, 108, 97, 110, 100] => lookup_180_58(acc),
            [109, 111, 100, 101, 114, 110] => lookup_180_59(acc),
            [115, 105, 108, 107] => lookup_180_60(acc),
            [100, 100, 114] => lookup_180_61(acc),
            [109, 117, 101, 110, 99, 104, 101, 110] => lookup_180_62(acc),
            [119, 97, 116, 99, 104, 97, 110, 100, 99, 108, 111, 99, 107] => lookup_180_63(acc),
            [108, 97, 98, 111, 114] => lookup_180_64(acc),
            [110, 101, 119, 121, 111, 114, 107] => lookup_180_65(acc),
            [115, 101, 116, 116, 108, 101, 109, 101, 110, 116] => lookup_180_66(acc),
            [109, 105, 110, 110, 101, 115, 111, 116, 97] => lookup_180_67(acc),
            [99, 111, 109, 117, 110, 105, 99, 97, 195, 167, 195, 181, 101, 115] => {
                lookup_180_68(acc)
            }
            [111, 116, 97, 103, 111] => lookup_180_69(acc),
            [104, 101, 109, 98, 121, 103, 100, 115, 102, 111, 114, 98, 117, 110, 100] => {
                lookup_180_70(acc)
            }
            [109, 105, 108, 105, 116, 97, 114, 121] => lookup_180_71(acc),
            [102, 114, 101, 105, 98, 117, 114, 103] => lookup_180_72(acc),
            [111, 109, 97, 104, 97] => lookup_180_73(acc),
            [115, 116, 97, 100, 116] => lookup_180_74(acc),
            [104, 101, 105, 109, 97, 116, 117, 110, 100, 117, 104, 114, 101, 110] => {
                lookup_180_75(acc)
            }
            [115, 116, 101, 105, 101, 114, 109, 97, 114, 107] => lookup_180_76(acc),
            [97, 114, 116, 100, 101, 99, 111] => lookup_180_77(acc),
            [98, 111, 116, 97, 110, 105, 99, 97, 108, 103, 97, 114, 100, 101, 110] => {
                lookup_180_78(acc)
            }
            [112, 97, 108, 101, 111] => lookup_180_79(acc),
            [110, 101, 119, 115, 112, 97, 112, 101, 114] => lookup_180_80(acc),
            [109, 97, 110, 99, 104, 101, 115, 116, 101, 114] => lookup_180_81(acc),
            [97, 118, 105, 97, 116, 105, 111, 110] => lookup_180_82(acc),
            [98, 111, 116, 97, 110, 105, 99, 103, 97, 114, 100, 101, 110] => lookup_180_83(acc),
            [99, 97, 114, 116, 111, 111, 110, 97, 114, 116] => lookup_180_84(acc),
            [103, 97, 108, 108, 101, 114, 121] => lookup_180_85(acc),
            [109, 117, 115, 101, 117, 109, 118, 101, 114, 101, 110, 105, 103, 105, 110, 103] => {
                lookup_180_86(acc)
            }
            [117, 115, 104, 105, 115, 116, 111, 114, 121] => lookup_180_87(acc),
            [106, 117, 100, 97, 105, 99, 97] => lookup_180_88(acc),
            [120, 110, 45, 45, 99, 111, 114, 114, 101, 105, 111, 115, 45, 101, 45, 116, 101, 108, 101, 99, 111, 109, 117, 110, 105, 99, 97, 101, 115, 45, 103, 104, 99, 50, 57, 97] => {
                lookup_180_89(acc)
            }
            [112, 104, 105, 108, 97, 116, 101, 108, 121] => lookup_180_90(acc),
            [119, 97, 116, 99, 104, 45, 97, 110, 100, 45, 99, 108, 111, 99, 107] => {
                lookup_180_91(acc)
            }
            [115, 99, 105, 101, 110, 99, 101, 115] => lookup_180_92(acc),
            [100, 97, 116, 97, 98, 97, 115, 101] => lookup_180_93(acc),
            [117, 115, 100, 101, 99, 111, 114, 97, 116, 105, 118, 101, 97, 114, 116, 115] => {
                lookup_180_94(acc)
            }
            [97, 117, 115, 116, 105, 110] => lookup_180_95(acc),
            [108, 101, 119, 105, 115, 109, 105, 108, 108, 101, 114] => lookup_180_96(acc),
            [104, 105, 115, 116, 111, 114, 121] => lookup_180_97(acc),
            [105, 110, 116, 101, 114, 97, 99, 116, 105, 118, 101] => lookup_180_98(acc),
            [107, 97, 114, 97, 116, 101] => lookup_180_99(acc),
            [99, 121, 109, 114, 117] => lookup_180_100(acc),
            [103, 108, 97, 115, 115] => lookup_180_101(acc),
            [109, 111, 116, 111, 114, 99, 121, 99, 108, 101] => lookup_180_102(acc),
            [115, 99, 105, 101, 110, 99, 101, 45, 102, 105, 99, 116, 105, 111, 110] => {
                lookup_180_103(acc)
            }
            [103, 108, 97, 115] => lookup_180_104(acc),
            [97, 117, 115, 116, 114, 97, 108, 105, 97] => lookup_180_105(acc),
            [97, 115, 115, 97, 115, 115, 105, 110, 97, 116, 105, 111, 110] => lookup_180_106(acc),
            [102, 111, 114, 116, 109, 105, 115, 115, 111, 117, 108, 97] => lookup_180_107(acc),
            [116, 101, 120, 116, 105, 108, 101] => lookup_180_108(acc),
            [120, 110, 45, 45, 104, 49, 97, 101, 103, 104] => lookup_180_109(acc),
            [118, 105, 107, 105, 110, 103] => lookup_180_110(acc),
            [110, 101, 119, 104, 97, 109, 112, 115, 104, 105, 114, 101] => lookup_180_111(acc),
            [102, 114, 97, 110, 107, 102, 117, 114, 116] => lookup_180_112(acc),
            [111, 99, 101, 97, 110, 111, 103, 114, 97, 112, 104, 105, 113, 117, 101] => {
                lookup_180_113(acc)
            }
            [114, 105, 111, 100, 101, 106, 97, 110, 101, 105, 114, 111] => lookup_180_114(acc),
            [110, 101, 117, 101, 115] => lookup_180_115(acc),
            [99, 97, 108, 105, 102, 111, 114, 110, 105, 97] => lookup_180_116(acc),
            [97, 110, 100] => lookup_180_117(acc),
            [105, 115, 108, 101, 111, 102, 109, 97, 110] => lookup_180_118(acc),
            [99, 97, 100, 97, 113, 117, 101, 115] => lookup_180_119(acc),
            [98, 114, 117, 115, 115, 101, 108, 115] => lookup_180_120(acc),
            [112, 114, 111, 106, 101, 99, 116] => lookup_180_121(acc),
            [99, 105, 118, 105, 108, 105, 122, 97, 116, 105, 111, 110] => lookup_180_122(acc),
            [115, 116, 112, 101, 116, 101, 114, 115, 98, 117, 114, 103] => lookup_180_123(acc),
            [119, 105, 108, 108, 105, 97, 109, 115, 98, 117, 114, 103] => lookup_180_124(acc),
            [108, 111, 99, 97, 108, 104, 105, 115, 116, 111, 114, 121] => lookup_180_125(acc),
            [106, 111, 117, 114, 110, 97, 108, 105, 115, 109] => lookup_180_126(acc),
            [104, 117, 109, 97, 110, 105, 116, 105, 101, 115] => lookup_180_127(acc),
            [116, 101, 108, 101, 107, 111, 109, 109, 117, 110, 105, 107, 97, 116, 105, 111, 110] => {
                lookup_180_128(acc)
            }
            [99, 111, 117, 110, 116, 114, 121, 101, 115, 116, 97, 116, 101] => lookup_180_129(acc),
            [104, 105, 115, 116, 111, 114, 105, 99, 97, 108] => lookup_180_130(acc),
            [97, 109, 115, 116, 101, 114, 100, 97, 109] => lookup_180_131(acc),
            [101, 103, 121, 112, 116, 105, 97, 110] => lookup_180_132(acc),
            [97, 114, 116, 103, 97, 108, 108, 101, 114, 121] => lookup_180_133(acc),
            [115, 97, 110, 116, 97, 98, 97, 114, 98, 97, 114, 97] => lookup_180_134(acc),
            [99, 101, 110, 116, 101, 114] => lookup_180_135(acc),
            [108, 97, 114, 115, 115, 111, 110] => lookup_180_136(acc),
            [112, 117, 98, 108, 105, 99] => lookup_180_137(acc),
            [99, 111, 108, 117, 109, 98, 117, 115] => lookup_180_138(acc),
            [115, 99, 104, 111, 101, 110, 98, 114, 117, 110, 110] => lookup_180_139(acc),
            [117, 115, 97] => lookup_180_140(acc),
            [104, 105, 115, 116, 111, 114, 121, 111, 102, 115, 99, 105, 101, 110, 99, 101] => {
                lookup_180_141(acc)
            }
            [119, 104, 97, 108, 105, 110, 103] => lookup_180_142(acc),
            [97, 115, 115, 105, 115, 105] => lookup_180_143(acc),
            [101, 110, 116, 111, 109, 111, 108, 111, 103, 121] => lookup_180_144(acc),
            [115, 97, 118, 97, 110, 110, 97, 104, 103, 97] => lookup_180_145(acc),
            [102, 97, 109, 105, 108, 121] => lookup_180_146(acc),
            [99, 108, 105, 110, 116, 111, 110] => lookup_180_147(acc),
            [112, 111, 114, 116, 108, 108, 105, 103, 97, 116] => lookup_180_148(acc),
            [97, 116, 108, 97, 110, 116, 97] => lookup_180_149(acc),
            [109, 117, 115, 105, 99] => lookup_180_150(acc),
            [102, 105, 110, 108, 97, 110, 100] => lookup_180_151(acc),
            [112, 104, 105, 108, 97, 100, 101, 108, 112, 104, 105, 97, 97, 114, 101, 97] => {
                lookup_180_152(acc)
            }
            [116, 101, 99, 104, 110, 111, 108, 111, 103, 121] => lookup_180_153(acc),
            [116, 111, 114, 105, 110, 111] => lookup_180_154(acc),
            [122, 111, 111, 108, 111, 103, 121] => lookup_180_155(acc),
            [115, 111, 108, 111, 103, 110, 101] => lookup_180_156(acc),
            [122, 111, 111, 108, 111, 103, 105, 99, 97, 108] => lookup_180_157(acc),
            [99, 111, 114, 114, 101, 105, 111, 115, 45, 101, 45, 116, 101, 108, 101, 99, 111, 109, 117, 110, 105, 99, 97, 195, 167, 195, 181, 101, 115] => {
                lookup_180_158(acc)
            }
            [99, 97, 110, 97, 100, 97] => lookup_180_159(acc),
            [102, 114, 101, 101, 109, 97, 115, 111, 110, 114, 121] => lookup_180_160(acc),
            [115, 111, 117, 110, 100, 97, 110, 100, 118, 105, 115, 105, 111, 110] => {
                lookup_180_161(acc)
            }
            [99, 101, 108, 116, 105, 99] => lookup_180_162(acc),
            [109, 105, 110, 105, 110, 103] => lookup_180_163(acc),
            [101, 100, 117, 99, 97, 116, 105, 111, 110] => lookup_180_164(acc),
            [99, 97, 110] => lookup_180_165(acc),
            [104, 111, 114, 111, 108, 111, 103, 121] => lookup_180_166(acc),
            [116, 101, 120, 97, 115] => lookup_180_167(acc),
            [116, 99, 109] => lookup_180_168(acc),
            [98, 101, 114, 108, 105, 110] => lookup_180_169(acc),
            [98, 114, 105, 116, 105, 115, 104, 99, 111, 108, 117, 109, 98, 105, 97] => {
                lookup_180_170(acc)
            }
            [112, 105, 108, 111, 116, 115] => lookup_180_171(acc),
            [215, 153, 215, 168, 215, 149, 215, 169, 215, 156, 215, 153, 215, 157] => {
                lookup_180_172(acc)
            }
            [99, 111, 114, 112, 111, 114, 97, 116, 105, 111, 110] => lookup_180_173(acc),
            [111, 120, 102, 111, 114, 100] => lookup_180_174(acc),
            [115, 104, 101, 108, 108] => lookup_180_175(acc),
            [99, 111, 97, 115, 116, 97, 108, 100, 101, 102, 101, 110, 99, 101] => {
                lookup_180_176(acc)
            }
            [99, 104, 105, 114, 111, 112, 114, 97, 99, 116, 105, 99] => lookup_180_177(acc),
            [99, 105, 118, 105, 108, 119, 97, 114] => lookup_180_178(acc),
            [110, 105, 101, 112, 99, 101] => lookup_180_179(acc),
            [97, 109, 98, 101, 114] => lookup_180_180(acc),
            [97, 105, 114, 103, 117, 97, 114, 100] => lookup_180_181(acc),
            [100, 101, 116, 114, 111, 105, 116] => lookup_180_182(acc),
            [99, 111, 110, 116, 101, 109, 112, 111, 114, 97, 114, 121] => lookup_180_183(acc),
            [104, 97, 110, 100, 115, 111, 110] => lookup_180_184(acc),
            [118, 101, 114, 115, 97, 105, 108, 108, 101, 115] => lookup_180_185(acc),
            [119, 97, 115, 104, 105, 110, 103, 116, 111, 110, 100, 99] => lookup_180_186(acc),
            [110, 97, 116, 117, 114, 97, 108, 104, 105, 115, 116, 111, 114, 121, 109, 117, 115, 101, 117, 109] => {
                lookup_180_187(acc)
            }
            [99, 111, 110, 116, 101, 109, 112, 111, 114, 97, 114, 121, 97, 114, 116] => {
                lookup_180_188(acc)
            }
            [115, 117, 114, 103, 101, 111, 110, 115, 104, 97, 108, 108] => lookup_180_189(acc),
            [98, 111, 116, 97, 110, 105, 99, 97, 108] => lookup_180_190(acc),
            [99, 111, 108, 108, 101, 99, 116, 105, 111, 110] => lookup_180_191(acc),
            [98, 105, 108, 98, 97, 111] => lookup_180_192(acc),
            [99, 117, 108, 116, 117, 114, 97, 108] => lookup_180_193(acc),
            [101, 115, 115, 101, 120] => lookup_180_194(acc),
            [98, 97, 108, 116, 105, 109, 111, 114, 101] => lookup_180_195(acc),
            [110, 97, 116, 117, 114, 97, 108, 115, 99, 105, 101, 110, 99, 101, 115] => {
                lookup_180_196(acc)
            }
            [98, 105, 108, 108] => lookup_180_197(acc),
            [101, 110, 99, 121, 99, 108, 111, 112, 101, 100, 105, 99] => lookup_180_198(acc),
            [109, 97, 114, 98, 117, 114, 103] => lookup_180_199(acc),
            [115, 97, 105, 110, 116, 108, 111, 117, 105, 115] => lookup_180_200(acc),
            [98, 97, 104, 110] => lookup_180_201(acc),
            [98, 114, 97, 110, 100, 121, 119, 105, 110, 101, 118, 97, 108, 108, 101, 121] => {
                lookup_180_202(acc)
            }
            [101, 110, 118, 105, 114, 111, 110, 109, 101, 110, 116, 97, 108, 99, 111, 110, 115, 101, 114, 118, 97, 116, 105, 111, 110] => {
                lookup_180_203(acc)
            }
            [115, 99, 104, 119, 101, 105, 122] => lookup_180_204(acc),
            [115, 112, 121] => lookup_180_205(acc),
            [115, 118, 105, 122, 122, 101, 114, 97] => lookup_180_206(acc),
            [112, 97, 99, 105, 102, 105, 99] => lookup_180_207(acc),
            [99, 114, 101, 97, 116, 105, 111, 110] => lookup_180_208(acc),
            [98, 97, 117, 101, 114, 110] => lookup_180_209(acc),
            [110, 101, 119, 106, 101, 114, 115, 101, 121] => lookup_180_210(acc),
            [117, 115, 99, 111, 117, 110, 116, 114, 121, 101, 115, 116, 97, 116, 101] => {
                lookup_180_211(acc)
            }
            [98, 117, 105, 108, 100, 105, 110, 103] => lookup_180_212(acc),
            [99, 111, 108, 117, 109, 98, 105, 97] => lookup_180_213(acc),
            [99, 105, 110, 99, 105, 110, 110, 97, 116, 105] => lookup_180_214(acc),
            [101, 100, 117, 99, 97, 116, 105, 111, 110, 97, 108] => lookup_180_215(acc),
            [101, 120, 101, 116, 101, 114] => lookup_180_216(acc),
            [98, 97, 115, 101, 98, 97, 108, 108] => lookup_180_217(acc),
            [102, 97, 114, 109] => lookup_180_218(acc),
            [105, 108, 108, 117, 115, 116, 114, 97, 116, 105, 111, 110] => lookup_180_219(acc),
            [105, 109, 97, 103, 101, 97, 110, 100, 115, 111, 117, 110, 100] => lookup_180_220(acc),
            [100, 105, 110, 111, 115, 97, 117, 114] => lookup_180_221(acc),
            [103, 114, 97, 110, 100, 114, 97, 112, 105, 100, 115] => lookup_180_222(acc),
            [97, 105, 114] => lookup_180_223(acc),
            [97, 117, 116, 111, 109, 111, 116, 105, 118, 101] => lookup_180_224(acc),
            [99, 111, 109, 112, 117, 116, 101, 114, 104, 105, 115, 116, 111, 114, 121] => {
                lookup_180_225(acc)
            }
            [99, 111, 109, 109, 117, 110, 105, 116, 121] => lookup_180_226(acc),
            [100, 111, 108, 108, 115] => lookup_180_227(acc),
            [104, 105, 115, 116, 111, 114, 105, 115, 99, 104, 101, 115] => lookup_180_228(acc),
            [109, 97, 110, 115, 105, 111, 110] => lookup_180_229(acc),
            [112, 104, 97, 114, 109, 97, 99, 121] => lookup_180_230(acc),
            [99, 114, 97, 110, 98, 114, 111, 111, 107] => lookup_180_231(acc),
            [116, 101, 108, 101, 118, 105, 115, 105, 111, 110] => lookup_180_232(acc),
            [109, 97, 114, 105, 116, 105, 109, 101] => lookup_180_233(acc),
            [102, 97, 114, 109, 101, 113, 117, 105, 112, 109, 101, 110, 116] => lookup_180_234(acc),
            [99, 105, 114, 99, 117, 115] => lookup_180_235(acc),
            [112, 97, 108, 109, 115, 112, 114, 105, 110, 103, 115] => lookup_180_236(acc),
            [114, 97, 105, 108, 119, 97, 121] => lookup_180_237(acc),
            [98, 105, 98, 108, 101] => lookup_180_238(acc),
            [103, 97, 114, 100, 101, 110] => lookup_180_239(acc),
            [97, 114, 116, 99, 101, 110, 116, 101, 114] => lookup_180_240(acc),
            [102, 97, 114, 109, 115, 116, 101, 97, 100] => lookup_180_241(acc),
            [108, 117, 99, 101, 114, 110, 101] => lookup_180_242(acc),
            [97, 109, 101, 114, 105, 99, 97, 110, 97, 110, 116, 105, 113, 117, 101, 115] => {
                lookup_180_243(acc)
            }
            [115, 99, 104, 111, 107, 111, 108, 97, 100, 101, 110] => lookup_180_244(acc),
            [101, 115, 116, 97, 116, 101] => lookup_180_245(acc),
            [108, 117, 120, 101, 109, 98, 111, 117, 114, 103] => lookup_180_246(acc),
            [121, 111, 114, 107] => lookup_180_247(acc),
            [121, 111, 114, 107, 115, 104, 105, 114, 101] => lookup_180_248(acc),
            [115, 97, 108, 122, 98, 117, 114, 103] => lookup_180_249(acc),
            [108, 105, 118, 105, 110, 103, 104, 105, 115, 116, 111, 114, 121] => {
                lookup_180_250(acc)
            }
            [97, 109, 101, 114, 105, 99, 97, 110, 97, 114, 116] => lookup_180_251(acc),
            [110, 97, 116, 105, 111, 110, 97, 108, 102, 105, 114, 101, 97, 114, 109, 115] => {
                lookup_180_252(acc)
            }
            [98, 101, 114, 110] => lookup_180_253(acc),
            [98, 97, 115, 101, 108] => lookup_180_254(acc),
            [97, 114, 116, 101, 100, 117, 99, 97, 116, 105, 111, 110] => lookup_180_255(acc),
            [109, 117, 115, 101, 101, 116] => lookup_180_256(acc),
            [120, 110, 45, 45, 108, 110, 115, 45, 113, 108, 97] => lookup_180_257(acc),
            [108, 117, 122, 101, 114, 110] => lookup_180_258(acc),
            [112, 114, 101, 115, 115] => lookup_180_259(acc),
            [115, 116, 97, 114, 110, 98, 101, 114, 103] => lookup_180_260(acc),
            [109, 101, 109, 111, 114, 105, 97, 108] => lookup_180_261(acc),
            [98, 117, 114, 103, 104, 111, 102] => lookup_180_262(acc),
            [109, 105, 108, 108] => lookup_180_263(acc),
            [115, 111, 117, 116, 104, 99, 97, 114, 111, 108, 105, 110, 97] => lookup_180_264(acc),
            [110, 97, 116, 117, 117, 114, 119, 101, 116, 101, 110, 115, 99, 104, 97, 112, 112, 101, 110] => {
                lookup_180_265(acc)
            }
            [109, 111, 110, 116, 114, 101, 97, 108] => lookup_180_266(acc),
            [116, 114, 117, 115, 116, 101, 101] => lookup_180_267(acc),
            [112, 97, 108, 97, 99, 101] => lookup_180_268(acc),
            [109, 97, 100] => lookup_180_269(acc),
            [120, 110, 45, 45, 99, 111, 109, 117, 110, 105, 99, 97, 101, 115, 45, 118, 54, 97, 50, 111] => {
                lookup_180_270(acc)
            }
            [99, 97, 114, 114, 105, 101, 114] => lookup_180_271(acc),
            [97, 103, 114, 105, 99, 117, 108, 116, 117, 114, 101] => lookup_180_272(acc),
            [99, 111, 109, 109, 117, 110, 105, 99, 97, 116, 105, 111, 110, 115] => {
                lookup_180_273(acc)
            }
            [101, 109, 98, 114, 111, 105, 100, 101, 114, 121] => lookup_180_274(acc),
            [109, 97, 114, 105, 116, 105, 109, 111] => lookup_180_275(acc),
            [109, 111, 110, 109, 111, 117, 116, 104] => lookup_180_276(acc),
            [115, 97, 110, 116, 97, 99, 114, 117, 122] => lookup_180_277(acc),
            [107, 117, 110, 115, 116, 115, 97, 109, 109, 108, 117, 110, 103] => lookup_180_278(acc),
            [115, 107, 105] => lookup_180_279(acc),
            [103, 101, 111, 114, 103, 105, 97] => lookup_180_280(acc),
            [99, 117, 108, 116, 117, 114, 101] => lookup_180_281(acc),
            [113, 117, 101, 98, 101, 99] => lookup_180_282(acc),
            [116, 111, 112, 111, 108, 111, 103, 121] => lookup_180_283(acc),
            [97, 110, 116, 104, 114, 111, 112, 111, 108, 111, 103, 121] => lookup_180_284(acc),
            [116, 114, 97, 110, 115, 112, 111, 114, 116] => lookup_180_285(acc),
            [119, 97, 108, 108, 111, 110, 105, 101] => lookup_180_286(acc),
            [110, 97, 116, 105, 118, 101, 97, 109, 101, 114, 105, 99, 97, 110] => {
                lookup_180_287(acc)
            }
            [121, 111, 115, 101, 109, 105, 116, 101] => lookup_180_288(acc),
            [97, 114, 98, 111, 114, 101, 116, 117, 109] => lookup_180_289(acc),
            [112, 117, 98, 111, 108] => lookup_180_290(acc),
            [98, 114, 117, 110, 101, 108] => lookup_180_291(acc),
            [104, 105, 115, 116, 111, 105, 114, 101] => lookup_180_292(acc),
            [112, 111, 115, 116, 115, 45, 97, 110, 100, 45, 116, 101, 108, 101, 99, 111, 109, 109, 117, 110, 105, 99, 97, 116, 105, 111, 110, 115] => {
                lookup_180_293(acc)
            }
            [114, 117, 115, 115, 105, 97] => lookup_180_294(acc),
            [98, 114, 105, 115, 116, 111, 108] => lookup_180_295(acc),
            [115, 99, 104, 108, 101, 115, 105, 115, 99, 104, 101, 115] => lookup_180_296(acc),
            [114, 97, 105, 108, 114, 111, 97, 100] => lookup_180_297(acc),
            [119, 97, 108, 101, 115] => lookup_180_298(acc),
            [106, 101, 119, 101, 108, 114, 121] => lookup_180_299(acc),
            [103, 101, 101, 108, 118, 105, 110, 99, 107] => lookup_180_300(acc),
            [103, 101, 111, 108, 111, 103, 121] => lookup_180_301(acc),
            [109, 105, 110, 101, 114, 115] => lookup_180_302(acc),
            [103, 105, 101, 115, 115, 101, 110] => lookup_180_303(acc),
            [208, 184, 208, 186, 208, 190, 208, 188] => lookup_180_304(acc),
            [118, 105, 108, 108, 97, 103, 101] => lookup_180_305(acc),
            [119, 105, 108, 100, 108, 105, 102, 101] => lookup_180_306(acc),
            [110, 97, 118, 97, 108] => lookup_180_307(acc),
            [101, 108, 118, 101, 110, 100, 114, 101, 108, 108] => lookup_180_308(acc),
            [97, 114, 99, 104, 105, 116, 101, 99, 116, 117, 114, 101] => lookup_180_309(acc),
            [102, 117, 110, 100, 97, 99, 105, 111] => lookup_180_310(acc),
            [102, 114, 97, 110, 122, 105, 115, 107, 97, 110, 101, 114] => lookup_180_311(acc),
            [104, 105, 115, 116, 111, 114, 105, 99, 104, 111, 117, 115, 101, 115] => {
                lookup_180_312(acc)
            }
            [115, 101, 97, 112, 111, 114, 116] => lookup_180_313(acc),
            [98, 101, 97, 117, 120, 97, 114, 116, 115] => lookup_180_314(acc),
            [98, 114, 105, 116, 105, 115, 104] => lookup_180_315(acc),
            [102, 108, 111, 114, 105, 100, 97] => lookup_180_316(acc),
            [97, 109, 101, 114, 105, 99, 97, 110, 97] => lookup_180_317(acc),
            [107, 105, 100, 115] => lookup_180_318(acc),
            [115, 97, 108, 118, 97, 100, 111, 114, 100, 97, 108, 105] => lookup_180_319(acc),
            [101, 105, 115, 101, 110, 98, 97, 104, 110] => lookup_180_320(acc),
            [106, 117, 101, 100, 105, 115, 99, 104, 101, 115] => lookup_180_321(acc),
            [102, 111, 114, 116, 119, 111, 114, 116, 104] => lookup_180_322(acc),
            [110, 111, 114, 102, 111, 108, 107] => lookup_180_323(acc),
            [114, 111, 99, 107, 97, 114, 116] => lookup_180_324(acc),
            [115, 97, 110, 100, 105, 101, 103, 111] => lookup_180_325(acc),
            [115, 101, 116, 116, 108, 101, 114, 115] => lookup_180_326(acc),
            [106, 117, 105, 102] => lookup_180_327(acc),
            [97, 115, 115, 111, 99, 105, 97, 116, 105, 111, 110] => lookup_180_328(acc),
            [119, 105, 110, 100, 109, 105, 108, 108] => lookup_180_329(acc),
            [116, 97, 110, 107] => lookup_180_330(acc),
            [109, 111, 115, 99, 111, 119] => lookup_180_331(acc),
            [99, 97, 109, 98, 114, 105, 100, 103, 101] => lookup_180_332(acc),
            [115, 112, 97, 99, 101] => lookup_180_333(acc),
            [115, 116, 97, 116, 101] => lookup_180_334(acc),
            [102, 105, 110, 101, 97, 114, 116] => lookup_180_335(acc),
            [97, 113, 117, 97, 114, 105, 117, 109] => lookup_180_336(acc),
            [103, 117, 101, 114, 110, 115, 101, 121] => lookup_180_337(acc),
            [108, 111, 115, 97, 110, 103, 101, 108, 101, 115] => lookup_180_338(acc),
            [117, 115, 97, 110, 116, 105, 113, 117, 101, 115] => lookup_180_339(acc),
            [99, 104, 111, 99, 111, 108, 97, 116, 101] => lookup_180_340(acc),
            [99, 104, 105, 108, 100, 114, 101, 110] => lookup_180_341(acc),
            [105, 110, 116, 101, 108, 108, 105, 103, 101, 110, 99, 101] => lookup_180_342(acc),
            [107, 117, 110, 115, 116] => lookup_180_343(acc),
            [97, 114, 116] => lookup_180_344(acc),
            [111, 110, 116, 97, 114, 105, 111] => lookup_180_345(acc),
            [121, 111, 117, 116, 104] => lookup_180_346(acc),
            [104, 111, 117, 115, 101] => lookup_180_347(acc),
            [109, 117, 108, 104, 111, 117, 115, 101] => lookup_180_348(acc),
            [108, 97, 106, 111, 108, 108, 97] => lookup_180_349(acc),
            [98, 117, 115] => lookup_180_350(acc),
            [97, 120, 105, 115] => lookup_180_351(acc),
            [105, 110, 100, 105, 97, 110, 97] => lookup_180_352(acc),
            [119, 101, 115, 116, 101, 114, 110] => lookup_180_353(acc),
            [106, 101, 119, 105, 115, 104] => lookup_180_354(acc),
            [106, 102, 107] => lookup_180_355(acc),
            [117, 115, 103, 97, 114, 100, 101, 110] => lookup_180_356(acc),
            [116, 114, 101, 101] => lookup_180_357(acc),
            [99, 108, 111, 99, 107] => lookup_180_358(acc),
            [109, 105, 115, 115, 111, 117, 108, 97] => lookup_180_359(acc),
            [117, 116, 97, 104] => lookup_180_360(acc),
            [116, 105, 109, 101, 107, 101, 101, 112, 105, 110, 103] => lookup_180_361(acc),
            [99, 104, 114, 105, 115, 116, 105, 97, 110, 115, 98, 117, 114, 103] => {
                lookup_180_362(acc)
            }
            [112, 97, 110, 97, 109, 97] => lookup_180_363(acc),
            [97, 114, 116, 115] => lookup_180_364(acc),
            [98, 114, 117, 115, 115, 101, 108] => lookup_180_365(acc),
            [104, 97, 119, 97, 105, 105] => lookup_180_366(acc),
            [105, 110, 100, 105, 97, 110] => lookup_180_367(acc),
            [109, 117, 115, 101, 117, 109, 99, 101, 110, 116, 101, 114] => lookup_180_368(acc),
            [110, 97, 116, 117, 114, 104, 105, 115, 116, 111, 114, 105, 115, 99, 104, 101, 115] => {
                lookup_180_369(acc)
            }
            [97, 108, 97, 115, 107, 97] => lookup_180_370(acc),
            [97, 110, 116, 105, 113, 117, 101, 115] => lookup_180_371(acc),
            [118, 105, 114, 116, 117, 97, 108] => lookup_180_372(acc),
            [101, 97, 115, 116, 97, 102, 114, 105, 99, 97] => lookup_180_373(acc),
            [117, 108, 109] => lookup_180_374(acc),
            [109, 105, 99, 104, 105, 103, 97, 110] => lookup_180_375(acc),
            [112, 97, 115, 97, 100, 101, 110, 97] => lookup_180_376(acc),
            [99, 111, 108, 111, 114, 97, 100, 111, 112, 108, 97, 116, 101, 97, 117] => {
                lookup_180_377(acc)
            }
            [105, 114, 97, 113] => lookup_180_378(acc),
            [99, 97, 115, 116, 114, 101, 115] => lookup_180_379(acc),
            [114, 111, 109, 97] => lookup_180_380(acc),
            [99, 105, 118, 105, 108, 105, 115, 97, 116, 105, 111, 110] => lookup_180_381(acc),
            [109, 101, 100, 105, 97] => lookup_180_382(acc),
            [110, 97, 116, 105, 111, 110, 97, 108] => lookup_180_383(acc),
            [112, 105, 116, 116, 115, 98, 117, 114, 103, 104] => lookup_180_384(acc),
            [115, 99, 104, 111, 111, 108] => lookup_180_385(acc),
            [115, 116, 111, 99, 107, 104, 111, 108, 109] => lookup_180_386(acc),
            [109, 101, 100, 105, 122, 105, 110, 104, 105, 115, 116, 111, 114, 105, 115, 99, 104, 101, 115] => {
                lookup_180_387(acc)
            }
            [108, 111, 121, 97, 108, 105, 115, 116] => lookup_180_388(acc),
            [97, 114, 116, 115, 97, 110, 100, 99, 114, 97, 102, 116, 115] => lookup_180_389(acc),
            [99, 111, 97, 108] => lookup_180_390(acc),
            [98, 97, 108, 101] => lookup_180_391(acc),
            [114, 101, 115, 105, 115, 116, 97, 110, 99, 101] => lookup_180_392(acc),
            [108, 97, 98, 111, 117, 114] => lookup_180_393(acc),
            [117, 110, 105, 118, 101, 114, 115, 105, 116, 121] => lookup_180_394(acc),
            [99, 104, 101, 115, 97, 112, 101, 97, 107, 101, 98, 97, 121] => lookup_180_395(acc),
            [110, 121, 99] => lookup_180_396(acc),
            [118, 97, 110, 116, 97, 97] => lookup_180_397(acc),
            [109, 97, 100, 114, 105, 100] => lookup_180_398(acc),
            [99, 105, 110, 101, 109, 97] => lookup_180_399(acc),
            [100, 101, 99, 111, 114, 97, 116, 105, 118, 101, 97, 114, 116, 115] => {
                lookup_180_400(acc)
            }
            [115, 99, 105, 101, 110, 99, 101, 99, 101, 110, 116, 101, 114, 115] => {
                lookup_180_401(acc)
            }
            [116, 104, 101, 97, 116, 101, 114] => lookup_180_402(acc),
            [98, 111, 116, 97, 110, 121] => lookup_180_403(acc),
            [118, 108, 97, 97, 110, 100, 101, 114, 101, 110] => lookup_180_404(acc),
            [97, 109, 98, 117, 108, 97, 110, 99, 101] => lookup_180_405(acc),
            [99, 97, 112, 101, 98, 114, 101, 116, 111, 110] => lookup_180_406(acc),
            [99, 111, 100, 121] => lookup_180_407(acc),
            [102, 97, 114, 109, 101, 114, 115] => lookup_180_408(acc),
            [105, 110, 100, 105, 97, 110, 109, 97, 114, 107, 101, 116] => lookup_180_409(acc),
            [112, 108, 97, 110, 116, 97, 116, 105, 111, 110] => lookup_180_410(acc),
            [115, 111, 117, 116, 104, 119, 101, 115, 116] => lookup_180_411(acc),
            [109, 97, 110, 120] => lookup_180_412(acc),
            [98, 105, 114, 116, 104, 112, 108, 97, 99, 101] => lookup_180_413(acc),
            [116, 111, 117, 99, 104] => lookup_180_414(acc),
            [104, 105, 115, 116, 111, 114, 105, 99, 97, 108, 115, 111, 99, 105, 101, 116, 121] => {
                lookup_180_415(acc)
            }
            [117, 115, 99, 117, 108, 116, 117, 114, 101] => lookup_180_416(acc),
            [108, 105, 118, 105, 110, 103] => lookup_180_417(acc),
            [101, 112, 105, 108, 101, 112, 115, 121] => lookup_180_418(acc),
            [117, 118, 105, 99] => lookup_180_419(acc),
            [100, 101, 108, 97, 119, 97, 114, 101] => lookup_180_420(acc),
            [115, 99, 111, 116, 108, 97, 110, 100] => lookup_180_421(acc),
            [115, 97, 108, 101, 109] => lookup_180_422(acc),
            [115, 97, 115, 107, 97, 116, 99, 104, 101, 119, 97, 110] => lookup_180_423(acc),
            [110, 97, 116, 105, 111, 110, 97, 108, 104, 101, 114, 105, 116, 97, 103, 101] => {
                lookup_180_424(acc)
            }
            [99, 111, 109, 112, 117, 116, 101, 114] => lookup_180_425(acc),
            [105, 110, 100, 105, 97, 110, 97, 112, 111, 108, 105, 115] => lookup_180_426(acc),
            [102, 108, 97, 110, 100, 101, 114, 115] => lookup_180_427(acc),
            [111, 114, 101, 103, 111, 110, 116, 114, 97, 105, 108] => lookup_180_428(acc),
            [98, 114, 111, 97, 100, 99, 97, 115, 116] => lookup_180_429(acc),
            [108, 97, 110, 115] => lookup_180_430(acc),
            [119, 111, 114, 107, 115, 104, 111, 112] => lookup_180_431(acc),
            [108, 105, 110, 122] => lookup_180_432(acc),
            [115, 107, 111, 108, 101] => lookup_180_433(acc),
            [119, 97, 114] => lookup_180_434(acc),
            [117, 104, 114, 101, 110] => lookup_180_435(acc),
            [108, 97, 110, 100, 101, 115] => lookup_180_436(acc),
            [110, 101, 119, 109, 101, 120, 105, 99, 111] => lookup_180_437(acc),
            [115, 97, 110, 116, 97, 102, 101] => lookup_180_438(acc),
            [110, 97, 117, 109, 98, 117, 114, 103] => lookup_180_439(acc),
            [114, 111, 99, 104, 101, 115, 116, 101, 114] => lookup_180_440(acc),
            [118, 105, 114, 103, 105, 110, 105, 97] => lookup_180_441(acc),
            [115, 116, 101, 97, 109] => lookup_180_442(acc),
            [109, 105, 100, 97, 116, 108, 97, 110, 116, 105, 99] => lookup_180_443(acc),
            [99, 117, 108, 116, 117, 114, 97, 108, 99, 101, 110, 116, 101, 114] => {
                lookup_180_444(acc)
            }
            [104, 101, 108, 115, 105, 110, 107, 105] => lookup_180_445(acc),
            [98, 111, 115, 116, 111, 110] => lookup_180_446(acc),
            [100, 97, 108, 108, 97, 115] => lookup_180_447(acc),
            [102, 114, 111, 103] => lookup_180_448(acc),
            [104, 101, 108, 108, 97, 115] => lookup_180_449(acc),
            [102, 105, 101, 108, 100] => lookup_180_450(acc),
            [107, 97, 114, 105, 107, 97, 116, 117, 114] => lookup_180_451(acc),
            [98, 114, 117, 120, 101, 108, 108, 101, 115] => lookup_180_452(acc),
            [115, 99, 105, 101, 110, 99, 101, 104, 105, 115, 116, 111, 114, 121] => {
                lookup_180_453(acc)
            }
            [118, 105, 114, 116, 117, 101, 108] => lookup_180_454(acc),
            [97, 114, 99, 104, 97, 101, 111, 108, 111, 103, 121] => lookup_180_455(acc),
            [116, 111, 119, 110] => lookup_180_456(acc),
            [115, 99, 105, 101, 110, 99, 101] => lookup_180_457(acc),
            [112, 97, 114, 105, 115] => lookup_180_458(acc),
            [115, 116, 97, 116, 105, 111, 110] => lookup_180_459(acc),
            [109, 117, 101, 110, 115, 116, 101, 114] => lookup_180_460(acc),
            [109, 101, 100, 105, 99, 97, 108] => lookup_180_461(acc),
            [102, 105, 108, 97, 116, 101, 108, 105, 97] => lookup_180_462(acc),
            [115, 116, 97, 108, 98, 97, 110, 115] => lookup_180_463(acc),
            [103, 111, 114, 103, 101] => lookup_180_464(acc),
            [109, 111, 109, 97] => lookup_180_465(acc),
            [115, 105, 98, 101, 110, 105, 107] => lookup_180_466(acc),
            [108, 195, 164, 110, 115] => lookup_180_467(acc),
            [110, 101, 98, 114, 97, 115, 107, 97] => lookup_180_468(acc),
            [107, 117, 110, 115, 116, 117, 110, 100, 100, 101, 115, 105, 103, 110] => {
                lookup_180_469(acc)
            }
            [109, 117, 110, 99, 105, 101] => lookup_180_470(acc),
            [112, 111, 114, 116, 108, 97, 110, 100] => lookup_180_471(acc),
            [99, 104, 105, 108, 100, 114, 101, 110, 115, 103, 97, 114, 100, 101, 110] => {
                lookup_180_472(acc)
            }
            [98, 114, 97, 115, 105, 108] => lookup_180_473(acc),
            [108, 111, 117, 118, 114, 101] => lookup_180_474(acc),
            [102, 114, 97, 110, 99, 97, 105, 115, 101] => lookup_180_475(acc),
            [109, 97, 114, 121, 108, 97, 110, 100] => lookup_180_476(acc),
            [112, 104, 111, 116, 111, 103, 114, 97, 112, 104, 121] => lookup_180_477(acc),
            [116, 105, 109, 101] => lookup_180_478(acc),
            [110, 114, 119] => lookup_180_479(acc),
            [99, 104, 105, 99, 97, 103, 111] => lookup_180_480(acc),
            [112, 114, 101, 115, 101, 114, 118, 97, 116, 105, 111, 110] => lookup_180_481(acc),
            [100, 101, 115, 105, 103, 110] => lookup_180_482(acc),
            [99, 111, 109, 109, 117, 110, 105, 99, 97, 116, 105, 111, 110] => lookup_180_483(acc),
            [104, 101, 97, 108, 116, 104] => lookup_180_484(acc),
            [109, 97, 110, 115, 105, 111, 110, 115] => lookup_180_485(acc),
            [115, 116, 117, 116, 116, 103, 97, 114, 116] => lookup_180_486(acc),
            [117, 115, 104, 117, 97, 105, 97] => lookup_180_487(acc),
            [114, 101, 115, 101, 97, 114, 99, 104] => lookup_180_488(acc),
            [98, 97, 100, 97, 106, 111, 122] => lookup_180_489(acc),
            [104, 105, 115, 116, 111, 114, 105, 115, 99, 104] => lookup_180_490(acc),
            [110, 101, 119, 112, 111, 114, 116] => lookup_180_491(acc),
            [116, 114, 117, 115, 116] => lookup_180_492(acc),
            [100, 97, 108, 105] => lookup_180_493(acc),
            [99, 114, 97, 102, 116, 115] => lookup_180_494(acc),
            [102, 105, 110, 101, 97, 114, 116, 115] => lookup_180_495(acc),
            [102, 114, 105, 98, 111, 117, 114, 103] => lookup_180_496(acc),
            [116, 114, 111, 108, 108, 101, 121] => lookup_180_497(acc),
            [99, 104, 101, 108, 116, 101, 110, 104, 97, 109] => lookup_180_498(acc),
            [115, 117, 105, 115, 115, 101] => lookup_180_499(acc),
            [98, 101, 114, 103, 98, 97, 117] => lookup_180_500(acc),
            [98, 101, 114, 107, 101, 108, 101, 121] => lookup_180_501(acc),
            [115, 104, 101, 114, 98, 114, 111, 111, 107, 101] => lookup_180_502(acc),
            [107, 111, 101, 98, 101, 110, 104, 97, 118, 110] => lookup_180_503(acc),
            [99, 97, 115, 97, 100, 101, 108, 97, 109, 111, 110, 101, 100, 97] => {
                lookup_180_504(acc)
            }
            [98, 105, 114, 100, 97, 114, 116] => lookup_180_505(acc),
            [115, 99, 105, 101, 110, 99, 101, 115, 110, 97, 116, 117, 114, 101, 108, 108, 101, 115] => {
                lookup_180_506(acc)
            }
            [110, 121, 110, 121] => lookup_180_507(acc),
            [115, 113, 117, 97, 114, 101] => lookup_180_508(acc),
            [118, 97, 108, 108, 101, 121] => lookup_180_509(acc),
            [100, 101, 110, 109, 97, 114, 107] => lookup_180_510(acc),
            [99, 97, 115, 116, 108, 101] => lookup_180_511(acc),
            [119, 101, 115, 116, 102, 97, 108, 101, 110] => lookup_180_512(acc),
            [103, 101, 109, 111, 108, 111, 103, 105, 99, 97, 108] => lookup_180_513(acc),
            [98, 97, 114, 99, 101, 108, 111, 110, 97] => lookup_180_514(acc),
            [97, 110, 110, 101, 102, 114, 97, 110, 107] => lookup_180_515(acc),
            [102, 117, 114, 110, 105, 116, 117, 114, 101] => lookup_180_516(acc),
            [101, 108, 98, 117, 114, 103] => lookup_180_517(acc),
            [99, 121, 98, 101, 114] => lookup_180_518(acc),
            [112, 104, 105, 108, 97, 100, 101, 108, 112, 104, 105, 97] => lookup_180_519(acc),
            [101, 110, 103, 108, 97, 110, 100] => lookup_180_520(acc),
            [99, 111, 108, 100, 119, 97, 114] => lookup_180_521(acc),
            [109, 97, 114, 121, 108, 104, 117, 114, 115, 116] => lookup_180_522(acc),
            [117, 115, 97, 114, 116, 115] => lookup_180_523(acc),
            [117, 110, 100, 101, 114, 115, 101, 97] => lookup_180_524(acc),
            [111, 99, 101, 97, 110, 111, 103, 114, 97, 112, 104, 105, 99] => lookup_180_525(acc),
            [111, 110, 108, 105, 110, 101] => lookup_180_526(acc),
            [100, 111, 110, 111, 115, 116, 105, 97] => lookup_180_527(acc),
            [115, 111, 99, 105, 101, 116, 121] => lookup_180_528(acc),
            [115, 97, 116, 120] => lookup_180_529(acc),
            [115, 99, 105, 101, 110, 99, 101, 99, 101, 110, 116, 101, 114] => lookup_180_530(acc),
            [98, 111, 110, 110] => lookup_180_531(acc),
            [108, 111, 110, 100, 111, 110] => lookup_180_532(acc),
            [100, 101, 108, 109, 101, 110, 104, 111, 114, 115, 116] => lookup_180_533(acc),
            [115, 121, 100, 110, 101, 121] => lookup_180_534(acc),
            [104, 97, 109, 98, 117, 114, 103] => lookup_180_535(acc),
            [106, 97, 109, 105, 115, 111, 110] => lookup_180_536(acc),
            [99, 111, 117, 110, 116, 121] => lookup_180_537(acc),
            [108, 97, 110, 99, 97, 115, 104, 105, 114, 101] => lookup_180_538(acc),
            [112, 108, 97, 122, 97] => lookup_180_539(acc),
            [99, 111, 114, 118, 101, 116, 116, 101] => lookup_180_540(acc),
            [101, 110, 118, 105, 114, 111, 110, 109, 101, 110, 116] => lookup_180_541(acc),
            [99, 111, 108, 111, 110, 105, 97, 108, 119, 105, 108, 108, 105, 97, 109, 115, 98, 117, 114, 103] => {
                lookup_180_542(acc)
            }
            [102, 105, 108, 109] => lookup_180_543(acc),
            [120, 110, 45, 45, 57, 100, 98, 104, 98, 108, 103, 54, 100, 105] => lookup_180_544(acc),
            [101, 116, 104, 110, 111, 108, 111, 103, 121] => lookup_180_545(acc),
            [97, 108, 97, 98, 97, 109, 97] => lookup_180_546(acc),
            [98, 117, 115, 104, 101, 121] => lookup_180_547(acc),
            [115, 97, 110, 102, 114, 97, 110, 99, 105, 115, 99, 111] => lookup_180_548(acc),
            [99, 104, 105, 108, 100, 114, 101, 110, 115] => lookup_180_549(acc),
            [103, 97, 116, 101, 119, 97, 121] => lookup_180_550(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_181() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_182() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_183() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_184() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_185() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_186() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_187() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_188() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_190_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_190<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 109] => lookup_190_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_0_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_0_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_0_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_0_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_0_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_0_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_0_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_0_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_0_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_0_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_0_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_0_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_0_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_0_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_0_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_0_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_0_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_0_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_0_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_0_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_0_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_0_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_0_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_0_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_0_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_0_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_0_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_0_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 97, 115, 117, 115, 104, 105, 111, 98, 97, 114, 97] => lookup_191_0_0(acc),
            [116, 111, 99, 104, 105, 103, 105] => lookup_191_0_1(acc),
            [98, 97, 116, 111] => lookup_191_0_2(acc),
            [97, 115, 104, 105, 107, 97, 103, 97] => lookup_191_0_3(acc),
            [107, 97, 114, 97, 115, 117, 121, 97, 109, 97] => lookup_191_0_4(acc),
            [111, 104, 116, 97, 119, 97, 114, 97] => lookup_191_0_5(acc),
            [115, 97, 107, 117, 114, 97] => lookup_191_0_6(acc),
            [109, 111, 107, 97] => lookup_191_0_7(acc),
            [110, 97, 115, 117] => lookup_191_0_8(acc),
            [115, 104, 105, 109, 111, 116, 115, 117, 107, 101] => lookup_191_0_9(acc),
            [117, 116, 115, 117, 110, 111, 109, 105, 121, 97] => lookup_191_0_10(acc),
            [105, 99, 104, 105, 107, 97, 105] => lookup_191_0_11(acc),
            [104, 97, 103, 97] => lookup_191_0_12(acc),
            [105, 119, 97, 102, 117, 110, 101] => lookup_191_0_13(acc),
            [109, 111, 116, 101, 103, 105] => lookup_191_0_14(acc),
            [116, 115, 117, 103, 97] => lookup_191_0_15(acc),
            [107, 97, 109, 105, 110, 111, 107, 97, 119, 97] => lookup_191_0_16(acc),
            [107, 117, 114, 111, 105, 115, 111] => lookup_191_0_17(acc),
            [121, 97, 105, 116, 97] => lookup_191_0_18(acc),
            [109, 105, 98, 117] => lookup_191_0_19(acc),
            [117, 106, 105, 105, 101] => lookup_191_0_20(acc),
            [107, 97, 110, 117, 109, 97] => lookup_191_0_21(acc),
            [111, 104, 105, 114, 97] => lookup_191_0_22(acc),
            [115, 97, 110, 111] => lookup_191_0_23(acc),
            [110, 111, 103, 105] => lookup_191_0_24(acc),
            [115, 104, 105, 111, 121, 97] => lookup_191_0_25(acc),
            [110, 105, 107, 107, 111] => lookup_191_0_26(acc),
            [110, 105, 115, 104, 105, 107, 97, 116, 97] => lookup_191_0_27(acc),
            [109, 97, 115, 104, 105, 107, 111] => lookup_191_0_28(acc),
            [111, 121, 97, 109, 97] => lookup_191_0_29(acc),
            [116, 97, 107, 97, 110, 101, 122, 97, 119, 97] => lookup_191_0_30(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_1_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_1_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_1_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_1_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_1_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_1_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_1_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_1_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_1_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_1_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_1_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_1_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_1_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_1_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 117, 100, 97, 109, 97, 116, 115, 117] => lookup_191_1_0(acc),
            [104, 105, 107, 97, 114, 105] => lookup_191_1_1(acc),
            [121, 117, 117] => lookup_191_1_2(acc),
            [104, 97, 103, 105] => lookup_191_1_3(acc),
            [111, 115, 104, 105, 109, 97] => lookup_191_1_4(acc),
            [117, 98, 101] => lookup_191_1_5(acc),
            [105, 119, 97, 107, 117, 110, 105] => lookup_191_1_6(acc),
            [109, 105, 116, 111, 117] => lookup_191_1_7(acc),
            [116, 97, 98, 117, 115, 101] => lookup_191_1_8(acc),
            [116, 111, 107, 117, 121, 97, 109, 97] => lookup_191_1_9(acc),
            [97, 98, 117] => lookup_191_1_10(acc),
            [115, 104, 105, 109, 111, 110, 111, 115, 101, 107, 105] => lookup_191_1_11(acc),
            [116, 111, 121, 111, 116, 97] => lookup_191_1_12(acc),
            [110, 97, 103, 97, 116, 111] => lookup_191_1_13(acc),
            [115, 104, 117, 110, 97, 110] => lookup_191_1_14(acc),
            [104, 111, 102, 117] => lookup_191_1_15(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_4_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_4_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_4_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_4_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_4_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_4_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_4_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_4_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_4_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_4_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_4_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_4_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_4_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_4_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_4_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_4_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_4_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_4_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_4_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_4_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_4_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_4_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_4_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_4_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_4_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_4_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_4_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_4_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_4_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_4_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_4_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_4_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_4_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_4_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_4_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_4<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 104, 105, 110, 116, 111] => lookup_191_4_0(acc),
            [116, 111, 109, 105, 111, 107, 97] => lookup_191_4_1(acc),
            [116, 115, 117, 107, 105, 121, 111, 110, 111] => lookup_191_4_2(acc),
            [107, 97, 119, 97, 98, 97] => lookup_191_4_3(acc),
            [107, 117, 115, 97, 116, 115, 117] => lookup_191_4_4(acc),
            [109, 101, 105, 119, 97] => lookup_191_4_5(acc),
            [109, 105, 110, 97, 107, 97, 109, 105] => lookup_191_4_6(acc),
            [117, 101, 110, 111] => lookup_191_4_7(acc),
            [116, 97, 107, 97, 115, 97, 107, 105] => lookup_191_4_8(acc),
            [107, 97, 110, 110, 97] => lookup_191_4_9(acc),
            [116, 97, 107, 97, 121, 97, 109, 97] => lookup_191_4_10(acc),
            [97, 110, 110, 97, 107, 97] => lookup_191_4_11(acc),
            [109, 105, 100, 111, 114, 105] => lookup_191_4_12(acc),
            [99, 104, 105, 121, 111, 100, 97] => lookup_191_4_13(acc),
            [105, 116, 97, 107, 117, 114, 97] => lookup_191_4_14(acc),
            [110, 97, 103, 97, 110, 111, 104, 97, 114, 97] => lookup_191_4_15(acc),
            [104, 105, 103, 97, 115, 104, 105, 97, 103, 97, 116, 115, 117, 109, 97] => {
                lookup_191_4_16(acc)
            }
            [107, 97, 110, 114, 97] => lookup_191_4_17(acc),
            [115, 104, 105, 109, 111, 110, 105, 116, 97] => lookup_191_4_18(acc),
            [111, 105, 122, 117, 109, 105] => lookup_191_4_19(acc),
            [116, 97, 109, 97, 109, 117, 114, 97] => lookup_191_4_20(acc),
            [107, 105, 114, 121, 117] => lookup_191_4_21(acc),
            [110, 97, 110, 109, 111, 107, 117] => lookup_191_4_22(acc),
            [121, 111, 115, 104, 105, 111, 107, 97] => lookup_191_4_23(acc),
            [111, 114, 97] => lookup_191_4_24(acc),
            [115, 104, 105, 98, 117, 107, 97, 119, 97] => lookup_191_4_25(acc),
            [107, 97, 116, 97, 115, 104, 105, 110, 97] => lookup_191_4_26(acc),
            [111, 116, 97] => lookup_191_4_27(acc),
            [102, 117, 106, 105, 111, 107, 97] => lookup_191_4_28(acc),
            [109, 97, 101, 98, 97, 115, 104, 105] => lookup_191_4_29(acc),
            [110, 97, 107, 97, 110, 111, 106, 111] => lookup_191_4_30(acc),
            [110, 117, 109, 97, 116, 97] => lookup_191_4_31(acc),
            [116, 97, 116, 101, 98, 97, 121, 97, 115, 104, 105] => lookup_191_4_32(acc),
            [105, 115, 101, 115, 97, 107, 105] => lookup_191_4_33(acc),
            [116, 115, 117, 109, 97, 103, 111, 105] => lookup_191_4_34(acc),
            [115, 104, 111, 119, 97] => lookup_191_4_35(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_15_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_15_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_15_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_15_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_15_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_15_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_15_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_15_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_15_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_15_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_15_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_15_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_15_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_15_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_15_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_15_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_15_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_15_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_15_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_15_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_15_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_15_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_15_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_15_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_15_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_15_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_15_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_15_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_15_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_15_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_15_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_15_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_15_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_15_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_15<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 101, 105, 114, 111, 117] => lookup_191_15_0(acc),
            [97, 103, 97] => lookup_191_15_1(acc),
            [116, 111, 107, 97, 109, 97, 99, 104, 105] => lookup_191_15_2(acc),
            [116, 115, 117, 110, 97, 110] => lookup_191_15_3(acc),
            [115, 97, 110, 106, 111] => lookup_191_15_4(acc),
            [115, 104, 105, 98, 97, 116, 97] => lookup_191_15_5(acc),
            [110, 105, 105, 103, 97, 116, 97] => lookup_191_15_6(acc),
            [109, 105, 116, 115, 117, 107, 101] => lookup_191_15_7(acc),
            [111, 106, 105, 121, 97] => lookup_191_15_8(acc),
            [117, 111, 110, 117, 109, 97] => lookup_191_15_9(acc),
            [109, 117, 114, 97, 107, 97, 109, 105] => lookup_191_15_10(acc),
            [103, 111, 115, 101, 110] => lookup_191_15_11(acc),
            [105, 122, 117, 109, 111, 122, 97, 107, 105] => lookup_191_15_12(acc),
            [116, 97, 105, 110, 97, 105] => lookup_191_15_13(acc),
            [105, 116, 111, 105, 103, 97, 119, 97] => lookup_191_15_14(acc),
            [121, 117, 122, 97, 119, 97] => lookup_191_15_15(acc),
            [115, 97, 100, 111] => lookup_191_15_16(acc),
            [109, 117, 105, 107, 97] => lookup_191_15_17(acc),
            [107, 97, 115, 104, 105, 119, 97, 122, 97, 107, 105] => lookup_191_15_18(acc),
            [116, 115, 117, 98, 97, 109, 101] => lookup_191_15_19(acc),
            [97, 103, 97, 110, 111] => lookup_191_15_20(acc),
            [121, 97, 104, 105, 107, 111] => lookup_191_15_21(acc),
            [116, 97, 103, 97, 109, 105] => lookup_191_15_22(acc),
            [109, 121, 111, 107, 111] => lookup_191_15_23(acc),
            [107, 97, 114, 105, 119, 97] => lookup_191_15_24(acc),
            [111, 109, 105] => lookup_191_15_25(acc),
            [121, 111, 105, 116, 97] => lookup_191_15_26(acc),
            [107, 97, 109, 111] => lookup_191_15_27(acc),
            [115, 101, 107, 105, 107, 97, 119, 97] => lookup_191_15_28(acc),
            [116, 111, 99, 104, 105, 111] => lookup_191_15_29(acc),
            [115, 101, 105, 114, 111] => lookup_191_15_30(acc),
            [110, 97, 103, 97, 111, 107, 97] => lookup_191_15_31(acc),
            [106, 111, 101, 116, 115, 117] => lookup_191_15_32(acc),
            [109, 105, 110, 97, 109, 105, 117, 111, 110, 117, 109, 97] => lookup_191_15_33(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_191_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_22_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_22_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_22_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_22_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_22_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_22_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_22_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_22_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_22_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_22_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_22_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_22_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_22_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_22<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [119, 97, 107, 97, 115, 97] => lookup_191_22_0(acc),
            [110, 97, 110, 98, 117] => lookup_191_22_1(acc),
            [121, 111, 110, 97, 103, 111] => lookup_191_22_2(acc),
            [109, 105, 115, 97, 115, 97] => lookup_191_22_3(acc),
            [110, 105, 99, 104, 105, 110, 97, 110] => lookup_191_22_4(acc),
            [99, 104, 105, 122, 117] => lookup_191_22_5(acc),
            [104, 105, 110, 111] => lookup_191_22_6(acc),
            [107, 97, 119, 97, 104, 97, 114, 97] => lookup_191_22_7(acc),
            [107, 111, 103, 101] => lookup_191_22_8(acc),
            [116, 111, 116, 116, 111, 114, 105] => lookup_191_22_9(acc),
            [121, 97, 122, 117] => lookup_191_22_10(acc),
            [115, 97, 107, 97, 105, 109, 105, 110, 97, 116, 111] => lookup_191_22_11(acc),
            [107, 111, 116, 111, 117, 114, 97] => lookup_191_22_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_23_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_23_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_23_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_23_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_23_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_23_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_23_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_23_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_23_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_23_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_23_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_23_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_23_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_23_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_23_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_23_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_23_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_23_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_23_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_23_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_23_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_23_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_23_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_23_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_23_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_23_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_23_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_23_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_23_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_23_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_23_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_23_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_23<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 97, 116, 115, 117, 115, 104, 105, 109, 97] => lookup_191_23_0(acc),
            [119, 97, 116, 97, 114, 105] => lookup_191_23_1(acc),
            [109, 97, 114, 117, 109, 111, 114, 105] => lookup_191_23_2(acc),
            [119, 97, 107, 117, 121, 97] => lookup_191_23_3(acc),
            [115, 104, 105, 107, 97, 109, 97] => lookup_191_23_4(acc),
            [115, 104, 105, 114, 111, 105, 115, 104, 105] => lookup_191_23_5(acc),
            [109, 105, 110, 97, 109, 105, 115, 97, 110, 114, 105, 107, 117] => lookup_191_23_6(acc),
            [115, 104, 105, 98, 97, 116, 97] => lookup_191_23_7(acc),
            [105, 119, 97, 110, 117, 109, 97] => lookup_191_23_8(acc),
            [109, 105, 115, 97, 116, 111] => lookup_191_23_9(acc),
            [111, 115, 97, 107, 105] => lookup_191_23_10(acc),
            [115, 104, 105, 99, 104, 105, 107, 97, 115, 104, 117, 107, 117] => {
                lookup_191_23_11(acc)
            }
            [122, 97, 111] => lookup_191_23_12(acc),
            [109, 117, 114, 97, 116, 97] => lookup_191_23_13(acc),
            [116, 111, 109, 105, 121, 97] => lookup_191_23_14(acc),
            [104, 105, 103, 97, 115, 104, 105, 109, 97, 116, 115, 117, 115, 104, 105, 109, 97] => {
                lookup_191_23_15(acc)
            }
            [110, 97, 116, 111, 114, 105] => lookup_191_23_16(acc),
            [105, 115, 104, 105, 110, 111, 109, 97, 107, 105] => lookup_191_23_17(acc),
            [116, 97, 105, 119, 97] => lookup_191_23_18(acc),
            [121, 97, 109, 97, 109, 111, 116, 111] => lookup_191_23_19(acc),
            [102, 117, 114, 117, 107, 97, 119, 97] => lookup_191_23_20(acc),
            [116, 97, 103, 97, 106, 111] => lookup_191_23_21(acc),
            [111, 104, 105, 114, 97] => lookup_191_23_22(acc),
            [116, 111, 109, 101] => lookup_191_23_23(acc),
            [107, 97, 107, 117, 100, 97] => lookup_191_23_24(acc),
            [107, 97, 119, 97, 115, 97, 107, 105] => lookup_191_23_25(acc),
            [111, 103, 97, 119, 97, 114, 97] => lookup_191_23_26(acc),
            [115, 101, 109, 105, 110, 101] => lookup_191_23_27(acc),
            [115, 104, 105, 111, 103, 97, 109, 97] => lookup_191_23_28(acc),
            [107, 97, 109, 105] => lookup_191_23_29(acc),
            [114, 105, 102, 117] => lookup_191_23_30(acc),
            [111, 110, 97, 103, 97, 119, 97] => lookup_191_23_31(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_24_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_24_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_24_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_24_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_24_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_24_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_24_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_24_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_24_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_24_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_24_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_24_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_24_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_24_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_24_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_24_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_24_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_24_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_24_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_24_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_24_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_24_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_24<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 111, 109, 111, 114, 105] => lookup_191_24_0(acc),
            [114, 111, 107, 117, 110, 111, 104, 101] => lookup_191_24_1(acc),
            [116, 97, 107, 107, 111] => lookup_191_24_2(acc),
            [105, 116, 97, 121, 97, 110, 97, 103, 105] => lookup_191_24_3(acc),
            [110, 111, 104, 101, 106, 105] => lookup_191_24_4(acc),
            [115, 104, 105, 110, 103, 111] => lookup_191_24_5(acc),
            [107, 117, 114, 111, 105, 115, 104, 105] => lookup_191_24_6(acc),
            [110, 97, 107, 97, 100, 111, 109, 97, 114, 105] => lookup_191_24_7(acc),
            [109, 105, 115, 97, 119, 97] => lookup_191_24_8(acc),
            [116, 115, 117, 103, 97, 114, 117] => lookup_191_24_9(acc),
            [115, 104, 105, 99, 104, 105, 110, 111, 104, 101] => lookup_191_24_10(acc),
            [103, 111, 110, 111, 104, 101] => lookup_191_24_11(acc),
            [115, 97, 110, 110, 111, 104, 101] => lookup_191_24_12(acc),
            [109, 117, 116, 115, 117] => lookup_191_24_13(acc),
            [116, 115, 117, 114, 117, 116, 97] => lookup_191_24_14(acc),
            [104, 105, 114, 97, 110, 97, 105] => lookup_191_24_15(acc),
            [116, 111, 119, 97, 100, 97] => lookup_191_24_16(acc),
            [111, 119, 97, 110, 105] => lookup_191_24_17(acc),
            [104, 97, 115, 104, 105, 107, 97, 109, 105] => lookup_191_24_18(acc),
            [104, 97, 99, 104, 105, 110, 111, 104, 101] => lookup_191_24_19(acc),
            [111, 105, 114, 97, 115, 101] => lookup_191_24_20(acc),
            [104, 105, 114, 111, 115, 97, 107, 105] => lookup_191_24_21(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_25_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_25<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 105, 115, 97, 105] => lookup_191_25_0(acc),
            [102, 117, 115, 111] => lookup_191_25_1(acc),
            [107, 105, 114, 97] => lookup_191_25_2(acc),
            [111, 104, 97, 114, 117] => lookup_191_25_3(acc),
            [116, 111, 103, 111] => lookup_191_25_4(acc),
            [115, 101, 116, 111] => lookup_191_25_5(acc),
            [115, 104, 105, 116, 97, 114, 97] => lookup_191_25_6(acc),
            [97, 115, 117, 107, 101] => lookup_191_25_7(acc),
            [109, 105, 104, 97, 109, 97] => lookup_191_25_8(acc),
            [105, 110, 117, 121, 97, 109, 97] => lookup_191_25_9(acc),
            [99, 104, 105, 114, 121, 117] => lookup_191_25_10(acc),
            [111, 119, 97, 114, 105, 97, 115, 97, 104, 105] => lookup_191_25_11(acc),
            [116, 111, 121, 111, 107, 97, 119, 97] => lookup_191_25_12(acc),
            [116, 111, 101, 105] => lookup_191_25_13(acc),
            [116, 111, 121, 111, 110, 101] => lookup_191_25_14(acc),
            [107, 105, 121, 111, 115, 117] => lookup_191_25_15(acc),
            [116, 111, 121, 111, 116, 97] => lookup_191_25_16(acc),
            [115, 104, 105, 110, 115, 104, 105, 114, 111] => lookup_191_25_17(acc),
            [116, 97, 107, 97, 104, 97, 109, 97] => lookup_191_25_18(acc),
            [111, 103, 117, 99, 104, 105] => lookup_191_25_19(acc),
            [104, 105, 103, 97, 115, 104, 105, 117, 114, 97] => lookup_191_25_20(acc),
            [111, 107, 97, 122, 97, 107, 105] => lookup_191_25_21(acc),
            [107, 97, 114, 105, 121, 97] => lookup_191_25_22(acc),
            [104, 97, 110, 100, 97] => lookup_191_25_23(acc),
            [107, 111, 109, 97, 107, 105] => lookup_191_25_24(acc),
            [99, 104, 105, 116, 97] => lookup_191_25_25(acc),
            [116, 111, 98, 105, 115, 104, 105, 109, 97] => lookup_191_25_26(acc),
            [116, 111, 107, 111, 110, 97, 109, 101] => lookup_191_25_27(acc),
            [105, 99, 104, 105, 110, 111, 109, 105, 121, 97] => lookup_191_25_28(acc),
            [116, 111, 121, 111, 104, 97, 115, 104, 105] => lookup_191_25_29(acc),
            [109, 105, 121, 111, 115, 104, 105] => lookup_191_25_30(acc),
            [110, 105, 115, 104, 105, 111] => lookup_191_25_31(acc),
            [111, 98, 117] => lookup_191_25_32(acc),
            [115, 104, 105, 107, 97, 116, 115, 117] => lookup_191_25_33(acc),
            [110, 105, 115, 115, 104, 105, 110] => lookup_191_25_34(acc),
            [97, 110, 106, 111] => lookup_191_25_35(acc),
            [116, 111, 107, 97, 105] => lookup_191_25_36(acc),
            [116, 111, 121, 111, 97, 107, 101] => lookup_191_25_37(acc),
            [116, 115, 117, 115, 104, 105, 109, 97] => lookup_191_25_38(acc),
            [116, 97, 104, 97, 114, 97] => lookup_191_25_39(acc),
            [121, 97, 116, 111, 109, 105] => lookup_191_25_40(acc),
            [97, 109, 97] => lookup_191_25_41(acc),
            [104, 101, 107, 105, 110, 97, 110] => lookup_191_25_42(acc),
            [107, 111, 110, 97, 110] => lookup_191_25_43(acc),
            [107, 111, 116, 97] => lookup_191_25_44(acc),
            [104, 97, 122, 117] => lookup_191_25_45(acc),
            [107, 97, 115, 117, 103, 97, 105] => lookup_191_25_46(acc),
            [105, 119, 97, 107, 117, 114, 97] => lookup_191_25_47(acc),
            [105, 110, 97, 122, 97, 119, 97] => lookup_191_25_48(acc),
            [103, 97, 109, 97, 103, 111, 114, 105] => lookup_191_25_49(acc),
            [107, 97, 110, 105, 101] => lookup_191_25_50(acc),
            [105, 115, 115, 104, 105, 107, 105] => lookup_191_25_51(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_33_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_33_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_33_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_33_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_33_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_33_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_33_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_33_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_33_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_33_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_33_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_33_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_33_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_33_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_33_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_33_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_33_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_33_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_33_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_33_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_33_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_33_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_33_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_33_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_33_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_33_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_33_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_33_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_33_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_33<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 97, 105, 106, 105] => lookup_191_33_0(acc),
            [107, 111, 122, 97, 103, 97, 119, 97] => lookup_191_33_1(acc),
            [107, 105, 109, 105, 110, 111] => lookup_191_33_2(acc),
            [107, 97, 105, 110, 97, 110] => lookup_191_33_3(acc),
            [110, 97, 99, 104, 105, 107, 97, 116, 115, 117, 117, 114, 97] => lookup_191_33_4(acc),
            [109, 105, 104, 97, 109, 97] => lookup_191_33_5(acc),
            [104, 105, 114, 111, 103, 97, 119, 97] => lookup_191_33_6(acc),
            [121, 117, 97, 115, 97] => lookup_191_33_7(acc),
            [103, 111, 98, 111] => lookup_191_33_8(acc),
            [107, 97, 116, 115, 117, 114, 97, 103, 105] => lookup_191_33_9(acc),
            [109, 105, 115, 97, 116, 111] => lookup_191_33_10(acc),
            [115, 104, 105, 114, 97, 104, 97, 109, 97] => lookup_191_33_11(acc),
            [97, 114, 105, 100, 97] => lookup_191_33_12(acc),
            [107, 117, 115, 104, 105, 109, 111, 116, 111] => lookup_191_33_13(acc),
            [107, 105, 116, 97, 121, 97, 109, 97] => lookup_191_33_14(acc),
            [107, 111, 121, 97] => lookup_191_33_15(acc),
            [105, 110, 97, 109, 105] => lookup_191_33_16(acc),
            [104, 105, 100, 97, 107, 97] => lookup_191_33_17(acc),
            [121, 117, 114, 97] => lookup_191_33_18(acc),
            [105, 119, 97, 100, 101] => lookup_191_33_19(acc),
            [107, 105, 110, 111, 107, 97, 119, 97] => lookup_191_33_20(acc),
            [115, 104, 105, 110, 103, 117] => lookup_191_33_21(acc),
            [116, 97, 110, 97, 98, 101] => lookup_191_33_22(acc),
            [119, 97, 107, 97, 121, 97, 109, 97] => lookup_191_33_23(acc),
            [107, 111, 122, 97] => lookup_191_33_24(acc),
            [104, 97, 115, 104, 105, 109, 111, 116, 111] => lookup_191_33_25(acc),
            [107, 117, 100, 111, 121, 97, 109, 97] => lookup_191_33_26(acc),
            [107, 97, 109, 105, 116, 111, 110, 100, 97] => lookup_191_33_27(acc),
            [97, 114, 105, 100, 97, 103, 97, 119, 97] => lookup_191_33_28(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_35_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_35_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_35_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_35_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_35_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_35_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_35_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_35_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_35_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_35_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_35_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_35_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_35_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_35_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_35_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_35_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_35_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_35_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_35_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_35_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_35_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_35_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_35_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_35_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_35_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_35_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_35_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_35_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_35_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_35_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_35_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_35_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_35_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_35_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_35_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_35_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_35_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_35_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_35<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 103, 97, 107, 105] => lookup_191_35_0(acc),
            [104, 105, 100, 97] => lookup_191_35_1(acc),
            [107, 97, 115, 97, 104, 97, 114, 97] => lookup_191_35_2(acc),
            [97, 110, 112, 97, 99, 104, 105] => lookup_191_35_3(acc),
            [104, 105, 99, 104, 105, 115, 111] => lookup_191_35_4(acc),
            [109, 111, 116, 111, 115, 117] => lookup_191_35_5(acc),
            [107, 97, 115, 97, 109, 97, 116, 115, 117] => lookup_191_35_6(acc),
            [101, 110, 97] => lookup_191_35_7(acc),
            [105, 107, 101, 100, 97] => lookup_191_35_8(acc),
            [116, 97, 107, 97, 121, 97, 109, 97] => lookup_191_35_9(acc),
            [121, 111, 114, 111] => lookup_191_35_10(acc),
            [107, 97, 110, 105] => lookup_191_35_11(acc),
            [115, 97, 107, 97, 104, 111, 103, 105] => lookup_191_35_12(acc),
            [109, 105, 110, 111] => lookup_191_35_13(acc),
            [104, 97, 115, 104, 105, 109, 97] => lookup_191_35_14(acc),
            [109, 105, 122, 117, 110, 97, 109, 105] => lookup_191_35_15(acc),
            [105, 98, 105, 103, 97, 119, 97] => lookup_191_35_16(acc),
            [103, 111, 100, 111] => lookup_191_35_17(acc),
            [116, 97, 114, 117, 105] => lookup_191_35_18(acc),
            [121, 97, 111, 116, 115, 117] => lookup_191_35_19(acc),
            [109, 105, 116, 97, 107, 101] => lookup_191_35_20(acc),
            [107, 105, 116, 97, 103, 97, 116, 97] => lookup_191_35_21(acc),
            [115, 101, 107, 105, 103, 97, 104, 97, 114, 97] => lookup_191_35_22(acc),
            [103, 105, 110, 97, 110] => lookup_191_35_23(acc),
            [109, 105, 110, 111, 107, 97, 109, 111] => lookup_191_35_24(acc),
            [103, 117, 106, 111] => lookup_191_35_25(acc),
            [110, 97, 107, 97, 116, 115, 117, 103, 97, 119, 97] => lookup_191_35_26(acc),
            [103, 105, 102, 117] => lookup_191_35_27(acc),
            [115, 101, 107, 105] => lookup_191_35_28(acc),
            [115, 104, 105, 114, 97, 107, 97, 119, 97] => lookup_191_35_29(acc),
            [116, 111, 109, 105, 107, 97] => lookup_191_35_30(acc),
            [119, 97, 110, 111, 117, 99, 104, 105] => lookup_191_35_31(acc),
            [107, 97, 119, 97, 117, 101] => lookup_191_35_32(acc),
            [107, 97, 107, 97, 109, 105, 103, 97, 104, 97, 114, 97] => lookup_191_35_33(acc),
            [104, 105, 103, 97, 115, 104, 105, 115, 104, 105, 114, 97, 107, 97, 119, 97] => {
                lookup_191_35_34(acc)
            }
            [116, 111, 107, 105] => lookup_191_35_35(acc),
            [121, 97, 109, 97, 103, 97, 116, 97] => lookup_191_35_36(acc),
            [116, 97, 106, 105, 109, 105] => lookup_191_35_37(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_37_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_37_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_37_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_37_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_37_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_37_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_37_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_37_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_37_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_37_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_37_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_37_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_37_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_37_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_37_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_37_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_37_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_37_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_37_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_37_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_37_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_37_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_37_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_37_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_37_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_37_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_37_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_37_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_37_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_37_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_37_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_37<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 97, 109, 101, 111, 107, 97] => lookup_191_37_0(acc),
            [107, 105, 122, 117] => lookup_191_37_1(acc),
            [105, 110, 101] => lookup_191_37_2(acc),
            [102, 117, 107, 117, 99, 104, 105, 121, 97, 109, 97] => lookup_191_37_3(acc),
            [109, 105, 110, 97, 109, 105, 121, 97, 109, 97, 115, 104, 105, 114, 111] => {
                lookup_191_37_4(acc)
            }
            [109, 105, 121, 97, 122, 117] => lookup_191_37_5(acc),
            [109, 105, 110, 97, 109, 105] => lookup_191_37_6(acc),
            [117, 106, 105, 116, 97, 119, 97, 114, 97] => lookup_191_37_7(acc),
            [107, 121, 111, 116, 97, 110, 97, 98, 101] => lookup_191_37_8(acc),
            [121, 97, 109, 97, 115, 104, 105, 110, 97] => lookup_191_37_9(acc),
            [119, 97, 122, 117, 107, 97] => lookup_191_37_10(acc),
            [107, 121, 111, 116, 97, 110, 103, 111] => lookup_191_37_11(acc),
            [105, 100, 101] => lookup_191_37_12(acc),
            [106, 111, 121, 111] => lookup_191_37_13(acc),
            [104, 105, 103, 97, 115, 104, 105, 121, 97, 109, 97] => lookup_191_37_14(acc),
            [107, 105, 116, 97] => lookup_191_37_15(acc),
            [111, 121, 97, 109, 97, 122, 97, 107, 105] => lookup_191_37_16(acc),
            [110, 97, 107, 97, 103, 121, 111] => lookup_191_37_17(acc),
            [116, 97, 110, 97, 98, 101] => lookup_191_37_18(acc),
            [107, 117, 109, 105, 121, 97, 109, 97] => lookup_191_37_19(acc),
            [109, 97, 105, 122, 117, 114, 117] => lookup_191_37_20(acc),
            [109, 117, 107, 111] => lookup_191_37_21(acc),
            [121, 97, 119, 97, 116, 97] => lookup_191_37_22(acc),
            [107, 121, 111, 116, 97, 109, 98, 97] => lookup_191_37_23(acc),
            [97, 121, 97, 98, 101] => lookup_191_37_24(acc),
            [107, 97, 109, 111] => lookup_191_37_25(acc),
            [115, 101, 105, 107, 97] => lookup_191_37_26(acc),
            [117, 106, 105] => lookup_191_37_27(acc),
            [115, 97, 107, 121, 111] => lookup_191_37_28(acc),
            [110, 97, 103, 97, 111, 107, 97, 107, 121, 111] => lookup_191_37_29(acc),
            [110, 97, 110, 116, 97, 110] => lookup_191_37_30(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_38_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_38_1(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_38<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_191_38_1(acc),
            wild => lookup_191_38_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_191_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_41_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_41_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_41_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_41_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_41_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_41_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_41_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_41_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_41_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_41_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_41_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_41_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_41_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_41_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_41_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_41_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_41_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_41_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_41_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_41_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_41_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_41_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_41_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_41_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_41_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_41_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_41_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_41_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_41_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_41_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_41_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_41_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_41_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_41_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_41<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 104, 107, 117, 114, 97] => lookup_191_41_0(acc),
            [116, 111, 122, 97, 119, 97] => lookup_191_41_1(acc),
            [111, 98, 97, 110, 97, 122, 97, 119, 97] => lookup_191_41_2(acc),
            [110, 97, 110, 121, 111] => lookup_191_41_3(acc),
            [110, 97, 103, 97, 105] => lookup_191_41_4(acc),
            [115, 104, 105, 110, 106, 111] => lookup_191_41_5(acc),
            [109, 105, 107, 97, 119, 97] => lookup_191_41_6(acc),
            [111, 103, 117, 110, 105] => lookup_191_41_7(acc),
            [121, 117, 122, 97] => lookup_191_41_8(acc),
            [105, 105, 100, 101] => lookup_191_41_9(acc),
            [104, 105, 103, 97, 115, 104, 105, 110, 101] => lookup_191_41_10(acc),
            [116, 97, 107, 97, 104, 97, 116, 97] => lookup_191_41_11(acc),
            [111, 101] => lookup_191_41_12(acc),
            [107, 97, 104, 111, 107, 117] => lookup_191_41_13(acc),
            [111, 105, 115, 104, 105, 100, 97] => lookup_191_41_14(acc),
            [115, 104, 105, 114, 97, 116, 97, 107, 97] => lookup_191_41_15(acc),
            [109, 117, 114, 97, 121, 97, 109, 97] => lookup_191_41_16(acc),
            [115, 104, 111, 110, 97, 105] => lookup_191_41_17(acc),
            [116, 115, 117, 114, 117, 111, 107, 97] => lookup_191_41_18(acc),
            [121, 111, 110, 101, 122, 97, 119, 97] => lookup_191_41_19(acc),
            [102, 117, 110, 97, 103, 97, 116, 97] => lookup_191_41_20(acc),
            [115, 97, 103, 97, 101] => lookup_191_41_21(acc),
            [97, 115, 97, 104, 105] => lookup_191_41_22(acc),
            [107, 97, 119, 97, 110, 105, 115, 104, 105] => lookup_191_41_23(acc),
            [115, 97, 107, 101, 103, 97, 119, 97] => lookup_191_41_24(acc),
            [121, 97, 109, 97, 110, 111, 98, 101] => lookup_191_41_25(acc),
            [109, 97, 109, 117, 114, 111, 103, 97, 119, 97] => lookup_191_41_26(acc),
            [115, 97, 107, 97, 116, 97] => lookup_191_41_27(acc),
            [116, 101, 110, 100, 111] => lookup_191_41_28(acc),
            [110, 105, 115, 104, 105, 107, 97, 119, 97] => lookup_191_41_29(acc),
            [107, 97, 109, 105, 110, 111, 121, 97, 109, 97] => lookup_191_41_30(acc),
            [107, 97, 110, 101, 121, 97, 109, 97] => lookup_191_41_31(acc),
            [110, 97, 107, 97, 121, 97, 109, 97] => lookup_191_41_32(acc),
            [121, 97, 109, 97, 103, 97, 116, 97] => lookup_191_41_33(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_44_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_44_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_44_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_44_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_44_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_44_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_44_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_44_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_44_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_44_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_44_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_44_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_44_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_44_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_44_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_44_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_44_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_44_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_44_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_44_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_44_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_44_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_44_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_44_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_44_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_44_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_44_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_44_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_44<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 105, 116, 97, 97, 107, 105, 116, 97] => lookup_191_44_0(acc),
            [104, 97, 99, 104, 105, 114, 111, 103, 97, 116, 97] => lookup_191_44_1(acc),
            [105, 107, 97, 119, 97] => lookup_191_44_2(acc),
            [111, 103, 97] => lookup_191_44_3(acc),
            [104, 111, 110, 106, 121, 111] => lookup_191_44_4(acc),
            [104, 111, 110, 106, 111] => lookup_191_44_5(acc),
            [103, 111, 106, 111, 109, 101] => lookup_191_44_6(acc),
            [97, 107, 105, 116, 97] => lookup_191_44_7(acc),
            [110, 105, 107, 97, 104, 111] => lookup_191_44_8(acc),
            [111, 100, 97, 116, 101] => lookup_191_44_9(acc),
            [102, 117, 106, 105, 115, 97, 116, 111] => lookup_191_44_10(acc),
            [107, 97, 109, 105, 107, 111, 97, 110, 105] => lookup_191_44_11(acc),
            [107, 121, 111, 119, 97] => lookup_191_44_12(acc),
            [107, 97, 116, 97, 103, 97, 109, 105] => lookup_191_44_13(acc),
            [121, 117, 114, 105, 104, 111, 110, 106, 111] => lookup_191_44_14(acc),
            [109, 105, 115, 97, 116, 111] => lookup_191_44_15(acc),
            [107, 97, 109, 105, 111, 107, 97] => lookup_191_44_16(acc),
            [109, 105, 116, 97, 110, 101] => lookup_191_44_17(acc),
            [107, 97, 122, 117, 110, 111] => lookup_191_44_18(acc),
            [110, 111, 115, 104, 105, 114, 111] => lookup_191_44_19(acc),
            [104, 105, 103, 97, 115, 104, 105, 110, 97, 114, 117, 115, 101] => {
                lookup_191_44_20(acc)
            }
            [104, 97, 112, 112, 111, 117] => lookup_191_44_21(acc),
            [111, 103, 97, 116, 97] => lookup_191_44_22(acc),
            [115, 101, 109, 98, 111, 107, 117] => lookup_191_44_23(acc),
            [107, 111, 115, 97, 107, 97] => lookup_191_44_24(acc),
            [100, 97, 105, 115, 101, 110] => lookup_191_44_25(acc),
            [109, 111, 114, 105, 121, 111, 115, 104, 105] => lookup_191_44_26(acc),
            [121, 111, 107, 111, 116, 101] => lookup_191_44_27(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_46_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_191_46_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [117, 115, 101, 114] => lookup_191_46_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_46_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_191_46<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 101, 105, 110, 101, 116] => lookup_191_46_0(info, labels, acc),
            [103, 101, 104, 105, 114, 110] => lookup_191_46_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_47_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_47_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_47_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_47_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_47_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_47_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_47_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_47_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_47_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_47_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_47_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_47_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_47_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_47_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_47_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_47_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_47_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_47_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_47_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_47_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_47_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_47_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_47_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_47_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_47_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_47_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_47_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_47_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_47_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_47_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_47_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_47_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_47_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_47_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_47_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_47_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_47<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 97, 107, 101, 103, 97, 119, 97] => lookup_191_47_0(acc),
            [102, 117, 106, 105, 101, 100, 97] => lookup_191_47_1(acc),
            [115, 104, 105, 109, 111, 100, 97] => lookup_191_47_2(acc),
            [102, 117, 106, 105, 107, 97, 119, 97] => lookup_191_47_3(acc),
            [115, 104, 105, 122, 117, 111, 107, 97] => lookup_191_47_4(acc),
            [102, 117, 106, 105] => lookup_191_47_5(acc),
            [107, 111, 115, 97, 105] => lookup_191_47_6(acc),
            [109, 111, 114, 105, 109, 97, 99, 104, 105] => lookup_191_47_7(acc),
            [121, 97, 105, 122, 117] => lookup_191_47_8(acc),
            [109, 105, 115, 104, 105, 109, 97] => lookup_191_47_9(acc),
            [115, 117, 115, 111, 110, 111] => lookup_191_47_10(acc),
            [107, 97, 119, 97, 122, 117] => lookup_191_47_11(acc),
            [105, 122, 117] => lookup_191_47_12(acc),
            [102, 117, 106, 105, 110, 111, 109, 105, 121, 97] => lookup_191_47_13(acc),
            [109, 97, 116, 115, 117, 122, 97, 107, 105] => lookup_191_47_14(acc),
            [115, 104, 105, 109, 97, 100, 97] => lookup_191_47_15(acc),
            [103, 111, 116, 101, 109, 98, 97] => lookup_191_47_16(acc),
            [105, 122, 117, 110, 111, 107, 117, 110, 105] => lookup_191_47_17(acc),
            [97, 114, 97, 105] => lookup_191_47_18(acc),
            [107, 97, 119, 97, 110, 101, 104, 111, 110] => lookup_191_47_19(acc),
            [105, 119, 97, 116, 97] => lookup_191_47_20(acc),
            [110, 117, 109, 97, 122, 117] => lookup_191_47_21(acc),
            [105, 116, 111] => lookup_191_47_22(acc),
            [107, 105, 107, 117, 103, 97, 119, 97] => lookup_191_47_23(acc),
            [109, 105, 110, 97, 109, 105, 105, 122, 117] => lookup_191_47_24(acc),
            [110, 105, 115, 104, 105, 105, 122, 117] => lookup_191_47_25(acc),
            [111, 109, 97, 101, 122, 97, 107, 105] => lookup_191_47_26(acc),
            [109, 97, 107, 105, 110, 111, 104, 97, 114, 97] => lookup_191_47_27(acc),
            [97, 116, 97, 109, 105] => lookup_191_47_28(acc),
            [104, 97, 109, 97, 109, 97, 116, 115, 117] => lookup_191_47_29(acc),
            [102, 117, 107, 117, 114, 111, 105] => lookup_191_47_30(acc),
            [115, 104, 105, 109, 105, 122, 117] => lookup_191_47_31(acc),
            [121, 111, 115, 104, 105, 100, 97] => lookup_191_47_32(acc),
            [104, 105, 103, 97, 115, 104, 105, 105, 122, 117] => lookup_191_47_33(acc),
            [107, 97, 110, 110, 97, 109, 105] => lookup_191_47_34(acc),
            [104, 97, 105, 98, 97, 114, 97] => lookup_191_47_35(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_50_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_50_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_50_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_50_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_50_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_50_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_50_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_50_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_50_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_50_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_50_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_50_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_50_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_50_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_50_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_50_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_50_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_50_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_50_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_50_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_50_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_50_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_50_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_50_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_50_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_50_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_50<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 121, 117, 114, 97, 103, 105] => lookup_191_50_0(acc),
            [107, 97, 109, 105, 109, 105, 110, 101] => lookup_191_50_1(acc),
            [110, 105, 115, 104, 105, 97, 114, 105, 116, 97] => lookup_191_50_2(acc),
            [107, 105, 116, 97, 103, 97, 116, 97] => lookup_191_50_3(acc),
            [107, 105, 121, 97, 109, 97] => lookup_191_50_4(acc),
            [102, 117, 107, 117, 100, 111, 109, 105] => lookup_191_50_5(acc),
            [107, 97, 114, 97, 116, 115, 117] => lookup_191_50_6(acc),
            [111, 109, 97, 99, 104, 105] => lookup_191_50_7(acc),
            [111, 117, 99, 104, 105] => lookup_191_50_8(acc),
            [115, 104, 105, 114, 111, 105, 115, 104, 105] => lookup_191_50_9(acc),
            [97, 114, 105, 116, 97] => lookup_191_50_10(acc),
            [103, 101, 110, 107, 97, 105] => lookup_191_50_11(acc),
            [111, 103, 105] => lookup_191_50_12(acc),
            [116, 97, 114, 97] => lookup_191_50_13(acc),
            [116, 111, 115, 117] => lookup_191_50_14(acc),
            [121, 111, 115, 104, 105, 110, 111, 103, 97, 114, 105] => lookup_191_50_15(acc),
            [116, 97, 107, 117] => lookup_191_50_16(acc),
            [105, 109, 97, 114, 105] => lookup_191_50_17(acc),
            [97, 114, 105, 97, 107, 101] => lookup_191_50_18(acc),
            [104, 105, 122, 101, 110] => lookup_191_50_19(acc),
            [107, 97, 110, 122, 97, 107, 105] => lookup_191_50_20(acc),
            [107, 105, 116, 97, 104, 97, 116, 97] => lookup_191_50_21(acc),
            [115, 97, 103, 97] => lookup_191_50_22(acc),
            [104, 97, 109, 97, 116, 97, 109, 97] => lookup_191_50_23(acc),
            [107, 111, 117, 104, 111, 107, 117] => lookup_191_50_24(acc),
            [107, 97, 115, 104, 105, 109, 97] => lookup_191_50_25(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_52_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_52_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_52_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_52_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_52_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_52_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_52_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_52_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_52_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_52_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_52_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_52_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_52_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_52_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_52_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_52_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_52_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_52_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_52_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_52<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 110, 97, 109, 105, 122, 117] => lookup_191_52_0(acc),
            [110, 97, 110, 97, 111] => lookup_191_52_1(acc),
            [116, 115, 117, 114, 117, 103, 105] => lookup_191_52_2(acc),
            [107, 97, 119, 97, 107, 105, 116, 97] => lookup_191_52_3(acc),
            [115, 117, 122, 117] => lookup_191_52_4(acc),
            [110, 97, 107, 97, 110, 111, 116, 111] => lookup_191_52_5(acc),
            [104, 97, 107, 117, 115, 97, 110] => lookup_191_52_6(acc),
            [115, 104, 105, 107, 97] => lookup_191_52_7(acc),
            [104, 97, 107, 117, 105] => lookup_191_52_8(acc),
            [107, 97, 110, 97, 122, 97, 119, 97] => lookup_191_52_9(acc),
            [110, 111, 116, 111] => lookup_191_52_10(acc),
            [117, 99, 104, 105, 110, 97, 100, 97] => lookup_191_52_11(acc),
            [116, 115, 117, 98, 97, 116, 97] => lookup_191_52_12(acc),
            [119, 97, 106, 105, 109, 97] => lookup_191_52_13(acc),
            [107, 97, 103, 97] => lookup_191_52_14(acc),
            [110, 111, 110, 111, 105, 99, 104, 105] => lookup_191_52_15(acc),
            [107, 97, 104, 111, 107, 117] => lookup_191_52_16(acc),
            [107, 111, 109, 97, 116, 115, 117] => lookup_191_52_17(acc),
            [110, 111, 109, 105] => lookup_191_52_18(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_53_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_53<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 97, 109, 105, 107, 97, 119, 97] => lookup_191_53_0(acc),
            [109, 105, 121, 97, 115, 104, 105, 114, 111] => lookup_191_53_1(acc),
            [111, 109, 105, 121, 97] => lookup_191_53_2(acc),
            [116, 111, 107, 111, 114, 111, 122, 97, 119, 97] => lookup_191_53_3(acc),
            [114, 97, 110, 122, 97, 110] => lookup_191_53_4(acc),
            [104, 105, 103, 97, 115, 104, 105, 109, 97, 116, 115, 117, 121, 97, 109, 97] => {
                lookup_191_53_5(acc)
            }
            [121, 111, 110, 111] => lookup_191_53_6(acc),
            [111, 107, 101, 103, 97, 119, 97] => lookup_191_53_7(acc),
            [115, 97, 116, 116, 101] => lookup_191_53_8(acc),
            [107, 97, 122, 111] => lookup_191_53_9(acc),
            [109, 97, 116, 115, 117, 98, 117, 115, 104, 105] => lookup_191_53_10(acc),
            [97, 115, 97, 107, 97] => lookup_191_53_11(acc),
            [107, 105, 116, 97, 109, 111, 116, 111] => lookup_191_53_12(acc),
            [119, 97, 114, 97, 98, 105] => lookup_191_53_13(acc),
            [107, 97, 119, 97, 103, 117, 99, 104, 105] => lookup_191_53_14(acc),
            [115, 111, 107, 97] => lookup_191_53_15(acc),
            [104, 111, 110, 106, 111] => lookup_191_53_16(acc),
            [107, 97, 109, 105, 105, 122, 117, 109, 105] => lookup_191_53_17(acc),
            [107, 111, 117, 110, 111, 115, 117] => lookup_191_53_18(acc),
            [109, 105, 121, 111, 115, 104, 105] => lookup_191_53_19(acc),
            [104, 97, 116, 111, 103, 97, 121, 97] => lookup_191_53_20(acc),
            [114, 121, 111, 107, 97, 109, 105] => lookup_191_53_21(acc),
            [110, 97, 103, 97, 116, 111, 114, 111] => lookup_191_53_22(acc),
            [102, 117, 106, 105, 109, 105] => lookup_191_53_23(acc),
            [115, 104, 105, 107, 105] => lookup_191_53_24(acc),
            [121, 111, 115, 104, 105, 109, 105] => lookup_191_53_25(acc),
            [107, 97, 115, 117, 107, 97, 98, 101] => lookup_191_53_26(acc),
            [104, 97, 110, 110, 111] => lookup_191_53_27(acc),
            [116, 111, 100, 97] => lookup_191_53_28(acc),
            [117, 114, 97, 119, 97] => lookup_191_53_29(acc),
            [105, 110, 97] => lookup_191_53_30(acc),
            [115, 97, 107, 97, 100, 111] => lookup_191_53_31(acc),
            [115, 97, 121, 97, 109, 97] => lookup_191_53_32(acc),
            [102, 117, 107, 97, 121, 97] => lookup_191_53_33(acc),
            [116, 115, 117, 114, 117, 103, 97, 115, 104, 105, 109, 97] => lookup_191_53_34(acc),
            [104, 97, 110, 121, 117] => lookup_191_53_35(acc),
            [107, 97, 109, 105, 115, 97, 116, 111] => lookup_191_53_36(acc),
            [107, 97, 119, 97, 103, 111, 101] => lookup_191_53_37(acc),
            [109, 105, 110, 97, 110, 111] => lookup_191_53_38(acc),
            [99, 104, 105, 99, 104, 105, 98, 117] => lookup_191_53_39(acc),
            [107, 117, 109, 97, 103, 97, 121, 97] => lookup_191_53_40(acc),
            [111, 103, 97, 119, 97] => lookup_191_53_41(acc),
            [109, 105, 115, 97, 116, 111] => lookup_191_53_42(acc),
            [111, 116, 97, 107, 105] => lookup_191_53_43(acc),
            [121, 111, 107, 111, 122, 101] => lookup_191_53_44(acc),
            [109, 111, 114, 111, 121, 97, 109, 97] => lookup_191_53_45(acc),
            [121, 111, 114, 105, 105] => lookup_191_53_46(acc),
            [105, 119, 97, 116, 115, 117, 107, 105] => lookup_191_53_47(acc),
            [111, 103, 111, 115, 101] => lookup_191_53_48(acc),
            [115, 97, 105, 116, 97, 109, 97] => lookup_191_53_49(acc),
            [104, 105, 100, 97, 107, 97] => lookup_191_53_50(acc),
            [107, 117, 107, 105] => lookup_191_53_51(acc),
            [110, 97, 109, 101, 103, 97, 119, 97] => lookup_191_53_52(acc),
            [121, 111, 115, 104, 105, 107, 97, 119, 97] => lookup_191_53_53(acc),
            [104, 97, 115, 117, 100, 97] => lookup_191_53_54(acc),
            [104, 97, 116, 111, 121, 97, 109, 97] => lookup_191_53_55(acc),
            [121, 97, 115, 104, 105, 111] => lookup_191_53_56(acc),
            [116, 111, 107, 105, 103, 97, 119, 97] => lookup_191_53_57(acc),
            [102, 117, 106, 105, 109, 105, 110, 111] => lookup_191_53_58(acc),
            [105, 114, 117, 109, 97] => lookup_191_53_59(acc),
            [97, 114, 97, 107, 97, 119, 97] => lookup_191_53_60(acc),
            [110, 105, 105, 122, 97] => lookup_191_53_61(acc),
            [111, 103, 97, 110, 111] => lookup_191_53_62(acc),
            [115, 117, 103, 105, 116, 111] => lookup_191_53_63(acc),
            [115, 104, 105, 114, 97, 111, 107, 97] => lookup_191_53_64(acc),
            [107, 111, 115, 104, 105, 103, 97, 121, 97] => lookup_191_53_65(acc),
            [104, 105, 103, 97, 115, 104, 105, 99, 104, 105, 99, 104, 105, 98, 117] => {
                lookup_191_53_66(acc)
            }
            [121, 111, 115, 104, 105, 100, 97] => lookup_191_53_67(acc),
            [107, 97, 119, 97, 106, 105, 109, 97] => lookup_191_53_68(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_59<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 105, 110, 111, 119, 97, 110] => lookup_191_59_0(acc),
            [107, 117, 110, 105, 103, 97, 109, 105] => lookup_191_59_1(acc),
            [105, 116, 111, 109, 97, 110] => lookup_191_59_2(acc),
            [115, 104, 105, 109, 111, 106, 105] => lookup_191_59_3(acc),
            [121, 111, 109, 105, 116, 97, 110] => lookup_191_59_4(acc),
            [117, 114, 117, 109, 97] => lookup_191_59_5(acc),
            [107, 117, 109, 101, 106, 105, 109, 97] => lookup_191_59_6(acc),
            [116, 111, 109, 105, 103, 117, 115, 117, 107, 117] => lookup_191_59_7(acc),
            [122, 97, 109, 97, 109, 105] => lookup_191_59_8(acc),
            [116, 97, 114, 97, 109, 97] => lookup_191_59_9(acc),
            [105, 115, 104, 105, 107, 97, 119, 97] => lookup_191_59_10(acc),
            [104, 97, 101, 98, 97, 114, 117] => lookup_191_59_11(acc),
            [105, 122, 101, 110, 97] => lookup_191_59_12(acc),
            [105, 115, 104, 105, 103, 97, 107, 105] => lookup_191_59_13(acc),
            [107, 105, 110] => lookup_191_59_14(acc),
            [121, 111, 110, 97, 98, 97, 114, 117] => lookup_191_59_15(acc),
            [110, 97, 110, 106, 111] => lookup_191_59_16(acc),
            [116, 111, 107, 97, 115, 104, 105, 107, 105] => lookup_191_59_17(acc),
            [110, 105, 115, 104, 105, 104, 97, 114, 97] => lookup_191_59_18(acc),
            [103, 117, 115, 104, 105, 107, 97, 109, 105] => lookup_191_59_19(acc),
            [111, 103, 105, 109, 105] => lookup_191_59_20(acc),
            [111, 107, 105, 110, 97, 119, 97] => lookup_191_59_21(acc),
            [111, 110, 110, 97] => lookup_191_59_22(acc),
            [116, 97, 107, 101, 116, 111, 109, 105] => lookup_191_59_23(acc),
            [121, 97, 101, 115, 101] => lookup_191_59_24(acc),
            [107, 105, 116, 97, 110, 97, 107, 97, 103, 117, 115, 117, 107, 117] => {
                lookup_191_59_25(acc)
            }
            [105, 104, 101, 121, 97] => lookup_191_59_26(acc),
            [109, 111, 116, 111, 98, 117] => lookup_191_59_27(acc),
            [110, 97, 107, 105, 106, 105, 110] => lookup_191_59_28(acc),
            [103, 105, 110, 111, 122, 97] => lookup_191_59_29(acc),
            [107, 105, 116, 97, 100, 97, 105, 116, 111] => lookup_191_59_30(acc),
            [116, 111, 110, 97, 107, 105] => lookup_191_59_31(acc),
            [104, 105, 103, 97, 115, 104, 105] => lookup_191_59_32(acc),
            [107, 97, 100, 101, 110, 97] => lookup_191_59_33(acc),
            [109, 105, 110, 97, 109, 105, 100, 97, 105, 116, 111] => lookup_191_59_34(acc),
            [117, 114, 97, 115, 111, 101] => lookup_191_59_35(acc),
            [97, 103, 117, 110, 105] => lookup_191_59_36(acc),
            [110, 97, 104, 97] => lookup_191_59_37(acc),
            [104, 105, 114, 97, 114, 97] => lookup_191_59_38(acc),
            [110, 97, 107, 97, 103, 117, 115, 117, 107, 117] => lookup_191_59_39(acc),
            [110, 97, 103, 111] => lookup_191_59_40(acc),
            [121, 111, 110, 97, 103, 117, 110, 105] => lookup_191_59_41(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_65<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 105, 115, 97, 121, 97, 109, 97] => lookup_191_65_0(acc),
            [115, 97, 115, 97, 103, 117, 114, 105] => lookup_191_65_1(acc),
            [116, 97, 107, 97, 116, 97] => lookup_191_65_2(acc),
            [121, 117, 107, 117, 104, 97, 115, 104, 105] => lookup_191_65_3(acc),
            [111, 109, 117, 116, 97] => lookup_191_65_4(acc),
            [100, 97, 122, 97, 105, 102, 117] => lookup_191_65_5(acc),
            [102, 117, 107, 117, 99, 104, 105] => lookup_191_65_6(acc),
            [109, 105, 110, 97, 109, 105] => lookup_191_65_7(acc),
            [107, 117, 114, 117, 109, 101] => lookup_191_65_8(acc),
            [109, 105, 121, 97, 107, 111] => lookup_191_65_9(acc),
            [109, 105, 121, 97, 119, 97, 107, 97] => lookup_191_65_10(acc),
            [121, 97, 109, 97, 100, 97] => lookup_191_65_11(acc),
            [116, 97, 103, 97, 119, 97] => lookup_191_65_12(acc),
            [115, 104, 111, 110, 97, 105] => lookup_191_65_13(acc),
            [109, 105, 122, 117, 109, 97, 107, 105] => lookup_191_65_14(acc),
            [107, 101, 105, 115, 101, 110] => lookup_191_65_15(acc),
            [99, 104, 105, 107, 117, 122, 101, 110] => lookup_191_65_16(acc),
            [111, 107, 97, 119, 97] => lookup_191_65_17(acc),
            [115, 117, 101] => lookup_191_65_18(acc),
            [115, 111, 101, 100, 97] => lookup_191_65_19(acc),
            [107, 117, 114, 111, 103, 105] => lookup_191_65_20(acc),
            [109, 117, 110, 97, 107, 97, 116, 97] => lookup_191_65_21(acc),
            [110, 105, 115, 104, 105] => lookup_191_65_22(acc),
            [111, 116, 111] => lookup_191_65_23(acc),
            [99, 104, 105, 107, 117, 104, 111] => lookup_191_65_24(acc),
            [105, 105, 122, 117, 107, 97] => lookup_191_65_25(acc),
            [115, 97, 105, 103, 97, 119, 97] => lookup_191_65_26(acc),
            [117, 107, 105, 104, 97] => lookup_191_65_27(acc),
            [107, 97, 104, 111] => lookup_191_65_28(acc),
            [99, 104, 105, 107, 117, 115, 104, 105, 110, 111] => lookup_191_65_29(acc),
            [107, 97, 115, 117, 103, 97] => lookup_191_65_30(acc),
            [111, 103, 111, 114, 105] => lookup_191_65_31(acc),
            [111, 110, 111, 106, 111] => lookup_191_65_32(acc),
            [107, 97, 115, 117, 121, 97] => lookup_191_65_33(acc),
            [111, 107, 97, 103, 97, 107, 105] => lookup_191_65_34(acc),
            [116, 111, 104, 111] => lookup_191_65_35(acc),
            [121, 97, 110, 97, 103, 97, 119, 97] => lookup_191_65_36(acc),
            [115, 104, 105, 110, 121, 111, 115, 104, 105, 116, 111, 109, 105] => {
                lookup_191_65_37(acc)
            }
            [111, 107, 105] => lookup_191_65_38(acc),
            [99, 104, 117, 111] => lookup_191_65_39(acc),
            [107, 117, 114, 97, 116, 101] => lookup_191_65_40(acc),
            [116, 97, 99, 104, 105, 97, 114, 97, 105] => lookup_191_65_41(acc),
            [116, 115, 117, 105, 107, 105] => lookup_191_65_42(acc),
            [104, 105, 114, 111, 107, 97, 119, 97] => lookup_191_65_43(acc),
            [116, 111, 121, 111, 116, 115, 117] => lookup_191_65_44(acc),
            [104, 97, 107, 97, 116, 97] => lookup_191_65_45(acc),
            [110, 97, 107, 97, 109, 97] => lookup_191_65_46(acc),
            [111, 110, 103, 97] => lookup_191_65_47(acc),
            [97, 115, 104, 105, 121, 97] => lookup_191_65_48(acc),
            [115, 104, 105, 110, 103, 117] => lookup_191_65_49(acc),
            [98, 117, 122, 101, 110] => lookup_191_65_50(acc),
            [107, 111, 103, 97] => lookup_191_65_51(acc),
            [110, 97, 107, 97, 103, 97, 119, 97] => lookup_191_65_52(acc),
            [117, 109, 105] => lookup_191_65_53(acc),
            [99, 104, 105, 107, 117, 106, 111] => lookup_191_65_54(acc),
            [121, 97, 109, 101] => lookup_191_65_55(acc),
            [104, 105, 103, 97, 115, 104, 105] => lookup_191_65_56(acc),
            [99, 104, 105, 107, 117, 103, 111] => lookup_191_65_57(acc),
            [110, 111, 103, 97, 116, 97] => lookup_191_65_58(acc),
            [117, 115, 117, 105] => lookup_191_65_59(acc),
            [109, 105, 121, 97, 109, 97] => lookup_191_65_60(acc),
            [105, 110, 97, 116, 115, 117, 107, 105] => lookup_191_65_61(acc),
            [107, 97, 119, 97, 114, 97] => lookup_191_65_62(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_70_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_70_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_70_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_70_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_70_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_70_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_70_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_70_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_70_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_70_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_70_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_70_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_70_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_70_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_70_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_70_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_70_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_70_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_70_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_70_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_70_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_70_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_70_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_70_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_70_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_70_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_70_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_70_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_70<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 105, 115, 104, 105, 107, 97, 116, 115, 117, 114, 97] => lookup_191_70_0(acc),
            [115, 104, 111, 119, 97] => lookup_191_70_1(acc),
            [121, 97, 109, 97, 110, 97, 107, 97, 107, 111] => lookup_191_70_2(acc),
            [105, 99, 104, 105, 107, 97, 119, 97, 109, 105, 115, 97, 116, 111] => {
                lookup_191_70_3(acc)
            }
            [110, 105, 114, 97, 115, 97, 107, 105] => lookup_191_70_4(acc),
            [116, 115, 117, 114, 117] => lookup_191_70_5(acc),
            [100, 111, 115, 104, 105] => lookup_191_70_6(acc),
            [107, 111, 102, 117] => lookup_191_70_7(acc),
            [102, 117, 106, 105, 121, 111, 115, 104, 105, 100, 97] => lookup_191_70_8(acc),
            [107, 111, 115, 104, 117] => lookup_191_70_9(acc),
            [107, 97, 105] => lookup_191_70_10(acc),
            [109, 105, 110, 97, 109, 105, 45, 97, 108, 112, 115] => lookup_191_70_11(acc),
            [110, 97, 107, 97, 109, 105, 99, 104, 105] => lookup_191_70_12(acc),
            [102, 117, 106, 105, 107, 97, 119, 97] => lookup_191_70_13(acc),
            [111, 115, 104, 105, 110, 111] => lookup_191_70_14(acc),
            [107, 111, 115, 117, 103, 101] => lookup_191_70_15(acc),
            [102, 117, 101, 102, 117, 107, 105] => lookup_191_70_16(acc),
            [110, 97, 110, 98, 117] => lookup_191_70_17(acc),
            [111, 116, 115, 117, 107, 105] => lookup_191_70_18(acc),
            [116, 97, 98, 97, 121, 97, 109, 97] => lookup_191_70_19(acc),
            [117, 101, 110, 111, 104, 97, 114, 97] => lookup_191_70_20(acc),
            [121, 97, 109, 97, 110, 97, 115, 104, 105] => lookup_191_70_21(acc),
            [102, 117, 106, 105, 107, 97, 119, 97, 103, 117, 99, 104, 105, 107, 111] => {
                lookup_191_70_22(acc)
            }
            [99, 104, 117, 111] => lookup_191_70_23(acc),
            [104, 97, 121, 97, 107, 97, 119, 97] => lookup_191_70_24(acc),
            [104, 111, 107, 117, 116, 111] => lookup_191_70_25(acc),
            [109, 105, 110, 111, 98, 117] => lookup_191_70_26(acc),
            [110, 97, 114, 117, 115, 97, 119, 97] => lookup_191_70_27(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_76_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_76_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_76_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_76_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_76_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_76_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_76_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_76_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_76_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_76_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_76_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_76_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_76_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_76_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_76_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_76_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_76_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_76_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_76_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_76_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_76_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_76_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_76_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_76_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_76_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_76_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_76_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_76_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_76_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_76_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_76<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 97, 109, 97, 107, 105] => lookup_191_76_0(acc),
            [109, 105, 104, 97, 109, 97] => lookup_191_76_1(acc),
            [107, 111, 109, 111, 110, 111] => lookup_191_76_2(acc),
            [107, 105, 115, 111, 115, 97, 107, 105] => lookup_191_76_3(acc),
            [109, 101, 105, 119, 97] => lookup_191_76_4(acc),
            [105, 115, 101] => lookup_191_76_5(acc),
            [107, 97, 119, 97, 103, 111, 101] => lookup_191_76_6(acc),
            [109, 97, 116, 115, 117, 115, 97, 107, 97] => lookup_191_76_7(acc),
            [109, 105, 110, 97, 109, 105, 105, 115, 101] => lookup_191_76_8(acc),
            [116, 97, 107, 105] => lookup_191_76_9(acc),
            [121, 111, 107, 107, 97, 105, 99, 104, 105] => lookup_191_76_10(acc),
            [117, 114, 101, 115, 104, 105, 110, 111] => lookup_191_76_11(acc),
            [116, 115, 117] => lookup_191_76_12(acc),
            [119, 97, 116, 97, 114, 97, 105] => lookup_191_76_13(acc),
            [107, 117, 119, 97, 110, 97] => lookup_191_76_14(acc),
            [115, 104, 105, 109, 97] => lookup_191_76_15(acc),
            [117, 100, 111, 110, 111] => lookup_191_76_16(acc),
            [116, 111, 98, 97] => lookup_191_76_17(acc),
            [107, 97, 109, 101, 121, 97, 109, 97] => lookup_191_76_18(acc),
            [107, 105, 104, 111] => lookup_191_76_19(acc),
            [97, 115, 97, 104, 105] => lookup_191_76_20(acc),
            [110, 97, 98, 97, 114, 105] => lookup_191_76_21(acc),
            [115, 117, 122, 117, 107, 97] => lookup_191_76_22(acc),
            [109, 105, 115, 117, 103, 105] => lookup_191_76_23(acc),
            [107, 105, 119, 97] => lookup_191_76_24(acc),
            [107, 117, 109, 97, 110, 111] => lookup_191_76_25(acc),
            [109, 105, 121, 97, 109, 97] => lookup_191_76_26(acc),
            [116, 97, 105, 107, 105] => lookup_191_76_27(acc),
            [116, 97, 100, 111] => lookup_191_76_28(acc),
            [105, 110, 97, 98, 101] => lookup_191_76_29(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_79_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_79_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_79_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_79_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_79_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_79_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_79_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_79_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_79_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_79_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_79_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_79_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_79_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_79_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_79_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_79_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_79_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_79_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_79_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_79_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_79_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_79_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_79_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_79_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_79_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_79_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_79_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_79_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_79_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_79_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_79_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_79_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_79_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_79_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_79_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_79_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_79_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_79_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_79<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 97, 115, 104, 105, 104, 97, 114, 97] => lookup_191_79_0(acc),
            [105, 107, 111, 109, 97] => lookup_191_79_1(acc),
            [116, 101, 110, 114, 105] => lookup_191_79_2(acc),
            [107, 97, 110, 109, 97, 107, 105] => lookup_191_79_3(acc),
            [104, 101, 103, 117, 114, 105] => lookup_191_79_4(acc),
            [97, 110, 100, 111] => lookup_191_79_5(acc),
            [117, 100, 97] => lookup_191_79_6(acc),
            [107, 117, 114, 111, 116, 97, 107, 105] => lookup_191_79_7(acc),
            [116, 97, 119, 97, 114, 97, 109, 111, 116, 111] => lookup_191_79_8(acc),
            [110, 97, 114, 97] => lookup_191_79_9(acc),
            [115, 104, 105, 110, 106, 111] => lookup_191_79_10(acc),
            [104, 105, 103, 97, 115, 104, 105, 121, 111, 115, 104, 105, 110, 111] => {
                lookup_191_79_11(acc)
            }
            [107, 97, 116, 115, 117, 114, 97, 103, 105] => lookup_191_79_12(acc),
            [111, 121, 111, 100, 111] => lookup_191_79_13(acc),
            [111, 117, 100, 97] => lookup_191_79_14(acc),
            [115, 104, 105, 109, 111, 107, 105, 116, 97, 121, 97, 109, 97] => lookup_191_79_15(acc),
            [116, 97, 107, 97, 116, 111, 114, 105] => lookup_191_79_16(acc),
            [121, 111, 115, 104, 105, 110, 111] => lookup_191_79_17(acc),
            [107, 97, 119, 97, 107, 97, 109, 105] => lookup_191_79_18(acc),
            [103, 111, 115, 101] => lookup_191_79_19(acc),
            [107, 97, 119, 97, 105] => lookup_191_79_20(acc),
            [107, 111, 114, 121, 111] => lookup_191_79_21(acc),
            [105, 107, 97, 114, 117, 103, 97] => lookup_191_79_22(acc),
            [107, 97, 115, 104, 105, 98, 97] => lookup_191_79_23(acc),
            [116, 101, 110, 107, 97, 119, 97] => lookup_191_79_24(acc),
            [110, 111, 115, 101, 103, 97, 119, 97] => lookup_191_79_25(acc),
            [115, 111, 110, 105] => lookup_191_79_26(acc),
            [115, 97, 110, 103, 111] => lookup_191_79_27(acc),
            [109, 105, 121, 97, 107, 101] => lookup_191_79_28(acc),
            [111, 106, 105] => lookup_191_79_29(acc),
            [115, 97, 107, 117, 114, 97, 105] => lookup_191_79_30(acc),
            [107, 97, 119, 97, 110, 105, 115, 104, 105] => lookup_191_79_31(acc),
            [121, 97, 109, 97, 116, 111, 116, 97, 107, 97, 100, 97] => lookup_191_79_32(acc),
            [107, 97, 109, 105, 107, 105, 116, 97, 121, 97, 109, 97] => lookup_191_79_33(acc),
            [109, 105, 116, 115, 117, 101] => lookup_191_79_34(acc),
            [115, 104, 105, 109, 111, 105, 99, 104, 105] => lookup_191_79_35(acc),
            [121, 97, 109, 97, 122, 111, 101] => lookup_191_79_36(acc),
            [121, 97, 109, 97, 116, 111, 107, 111, 114, 105, 121, 97, 109, 97] => {
                lookup_191_79_37(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_80_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_80_1(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_80<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_191_80_1(acc),
            wild => lookup_191_80_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_191_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_84_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_84_1(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_84<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_191_84_1(acc),
            wild => lookup_191_84_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_191_85_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_85<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 117, 114, 117, 100, 111, 110, 111] => lookup_191_85_0(acc),
            [111, 109, 111, 116, 101, 103, 111] => lookup_191_85_1(acc),
            [115, 104, 111, 119, 97] => lookup_191_85_2(acc),
            [111, 116, 97, 109, 97] => lookup_191_85_3(acc),
            [105, 122, 117, 109, 105, 122, 97, 107, 105] => lookup_191_85_4(acc),
            [107, 111, 114, 105, 121, 97, 109, 97] => lookup_191_85_5(acc),
            [107, 117, 110, 105, 109, 105] => lookup_191_85_6(acc),
            [109, 105, 104, 97, 114, 117] => lookup_191_85_7(acc),
            [104, 105, 114, 97, 116, 97] => lookup_191_85_8(acc),
            [111, 107, 117, 109, 97] => lookup_191_85_9(acc),
            [110, 105, 115, 104, 105, 97, 105, 122, 117] => lookup_191_85_10(acc),
            [115, 111, 109, 97] => lookup_191_85_11(acc),
            [115, 117, 107, 97, 103, 97, 119, 97] => lookup_191_85_12(acc),
            [104, 105, 114, 111, 110, 111] => lookup_191_85_13(acc),
            [105, 105, 116, 97, 116, 101] => lookup_191_85_14(acc),
            [116, 97, 105, 115, 104, 105, 110] => lookup_191_85_15(acc),
            [116, 97, 109, 97, 107, 97, 119, 97] => lookup_191_85_16(acc),
            [102, 117, 116, 97, 98, 97] => lookup_191_85_17(acc),
            [116, 97, 110, 97, 103, 117, 114, 97] => lookup_191_85_18(acc),
            [116, 101, 110, 101, 105] => lookup_191_85_19(acc),
            [102, 117, 107, 117, 115, 104, 105, 109, 97] => lookup_191_85_20(acc),
            [107, 105, 116, 97, 115, 104, 105, 111, 98, 97, 114, 97] => lookup_191_85_21(acc),
            [109, 105, 115, 104, 105, 109, 97] => lookup_191_85_22(acc),
            [121, 97, 98, 117, 107, 105] => lookup_191_85_23(acc),
            [97, 105, 122, 117, 119, 97, 107, 97, 109, 97, 116, 115, 117] => lookup_191_85_24(acc),
            [121, 97, 109, 97, 116, 115, 117, 114, 105] => lookup_191_85_25(acc),
            [107, 105, 116, 97, 107, 97, 116, 97] => lookup_191_85_26(acc),
            [105, 115, 104, 105, 107, 97, 119, 97] => lookup_191_85_27(acc),
            [121, 97, 110, 97, 105, 122, 117] => lookup_191_85_28(acc),
            [97, 115, 97, 107, 97, 119, 97] => lookup_191_85_29(acc),
            [97, 105, 122, 117, 98, 97, 110, 103, 101] => lookup_191_85_30(acc),
            [110, 97, 109, 105, 101] => lookup_191_85_31(acc),
            [105, 119, 97, 107, 105] => lookup_191_85_32(acc),
            [107, 111, 111, 114, 105] => lookup_191_85_33(acc),
            [121, 97, 109, 97, 116, 111] => lookup_191_85_34(acc),
            [100, 97, 116, 101] => lookup_191_85_35(acc),
            [107, 97, 103, 97, 109, 105, 105, 115, 104, 105] => lookup_191_85_36(acc),
            [121, 117, 103, 97, 119, 97] => lookup_191_85_37(acc),
            [105, 110, 97, 119, 97, 115, 104, 105, 114, 111] => lookup_191_85_38(acc),
            [110, 105, 115, 104, 105, 103, 111] => lookup_191_85_39(acc),
            [104, 105, 103, 97, 115, 104, 105] => lookup_191_85_40(acc),
            [107, 97, 119, 97, 109, 97, 116, 97] => lookup_191_85_41(acc),
            [115, 104, 105, 109, 111, 103, 111] => lookup_191_85_42(acc),
            [115, 104, 105, 114, 97, 107, 97, 119, 97] => lookup_191_85_43(acc),
            [110, 97, 110, 103, 111] => lookup_191_85_44(acc),
            [111, 110, 111] => lookup_191_85_45(acc),
            [115, 97, 109, 101, 103, 97, 119, 97] => lookup_191_85_46(acc),
            [107, 97, 110, 101, 121, 97, 109, 97] => lookup_191_85_47(acc),
            [104, 97, 110, 97, 119, 97] => lookup_191_85_48(acc),
            [97, 105, 122, 117, 109, 105, 115, 97, 116, 111] => lookup_191_85_49(acc),
            [98, 97, 110, 100, 97, 105] => lookup_191_85_50(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_89_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_89_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_89_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_89_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_89_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_89_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_89_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_89_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_89_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_89_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_89_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_89_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_89_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_89_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_89_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_89_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_89_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_89_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_89_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_89_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_89_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_89_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_89_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_89<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 105, 107, 117, 99, 104, 105] => lookup_191_89_0(acc),
            [110, 105, 115, 104, 105, 104, 97, 114, 97] => lookup_191_89_1(acc),
            [116, 97, 107, 97, 109, 111, 114, 105] => lookup_191_89_2(acc),
            [115, 117, 109, 111, 116, 111] => lookup_191_89_3(acc),
            [121, 97, 109, 97, 116, 111] => lookup_191_89_4(acc),
            [109, 97, 115, 104, 105, 107, 105] => lookup_191_89_5(acc),
            [110, 97, 103, 97, 115, 117] => lookup_191_89_6(acc),
            [117, 116, 111] => lookup_191_89_7(acc),
            [109, 105, 102, 117, 110, 101] => lookup_191_89_8(acc),
            [109, 105, 110, 97, 109, 105, 111, 103, 117, 110, 105] => lookup_191_89_9(acc),
            [117, 107, 105] => lookup_191_89_10(acc),
            [97, 114, 97, 111] => lookup_191_89_11(acc),
            [107, 97, 109, 105, 97, 109, 97, 107, 117, 115, 97] => lookup_191_89_12(acc),
            [97, 109, 97, 107, 117, 115, 97] => lookup_191_89_13(acc),
            [111, 103, 117, 110, 105] => lookup_191_89_14(acc),
            [97, 115, 111] => lookup_191_89_15(acc),
            [103, 121, 111, 107, 117, 116, 111] => lookup_191_89_16(acc),
            [107, 117, 109, 97, 109, 111, 116, 111] => lookup_191_89_17(acc),
            [99, 104, 111, 121, 111] => lookup_191_89_18(acc),
            [111, 122, 117] => lookup_191_89_19(acc),
            [121, 97, 109, 97, 103, 97] => lookup_191_89_20(acc),
            [121, 97, 116, 115, 117, 115, 104, 105, 114, 111] => lookup_191_89_21(acc),
            [109, 105, 110, 97, 109, 97, 116, 97] => lookup_191_89_22(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_91<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 111, 110, 100, 97, 98, 97, 121, 97, 115, 104, 105] => lookup_191_91_0(acc),
            [104, 105, 103, 97, 115, 104, 105, 111, 115, 97, 107, 97] => lookup_191_91_1(acc),
            [111, 115, 97, 107, 97, 115, 97, 121, 97, 109, 97] => lookup_191_91_2(acc),
            [115, 97, 121, 97, 109, 97] => lookup_191_91_3(acc),
            [107, 117, 109, 97, 116, 111, 114, 105] => lookup_191_91_4(acc),
            [107, 97, 100, 111, 109, 97] => lookup_191_91_5(acc),
            [97, 98, 101, 110, 111] => lookup_191_91_6(acc),
            [104, 97, 110, 110, 97, 110] => lookup_191_91_7(acc),
            [115, 104, 105, 106, 111, 110, 97, 119, 97, 116, 101] => lookup_191_91_8(acc),
            [116, 97, 107, 97, 116, 115, 117, 107, 105] => lookup_191_91_9(acc),
            [110, 111, 115, 101] => lookup_191_91_10(acc),
            [109, 105, 110, 97, 116, 111] => lookup_191_91_11(acc),
            [105, 122, 117, 109, 105] => lookup_191_91_12(acc),
            [107, 105, 115, 104, 105, 119, 97, 100, 97] => lookup_191_91_13(acc),
            [115, 97, 107, 97, 105] => lookup_191_91_14(acc),
            [121, 97, 111] => lookup_191_91_15(acc),
            [109, 111, 114, 105, 103, 117, 99, 104, 105] => lookup_191_91_16(acc),
            [105, 107, 101, 100, 97] => lookup_191_91_17(acc),
            [107, 97, 119, 97, 99, 104, 105, 110, 97, 103, 97, 110, 111] => lookup_191_91_18(acc),
            [116, 97, 107, 97, 105, 115, 104, 105] => lookup_191_91_19(acc),
            [109, 105, 110, 111, 104] => lookup_191_91_20(acc),
            [109, 97, 116, 115, 117, 98, 97, 114, 97] => lookup_191_91_21(acc),
            [107, 97, 115, 104, 105, 119, 97, 114, 97] => lookup_191_91_22(acc),
            [99, 104, 117, 111] => lookup_191_91_23(acc),
            [105, 98, 97, 114, 97, 107, 105] => lookup_191_91_24(acc),
            [107, 97, 105, 122, 117, 107, 97] => lookup_191_91_25(acc),
            [107, 97, 110, 97, 110] => lookup_191_91_26(acc),
            [107, 97, 116, 97, 110, 111] => lookup_191_91_27(acc),
            [115, 104, 105, 109, 97, 109, 111, 116, 111] => lookup_191_91_28(acc),
            [116, 97, 106, 105, 114, 105] => lookup_191_91_29(acc),
            [116, 97, 100, 97, 111, 107, 97] => lookup_191_91_30(acc),
            [105, 122, 117, 109, 105, 115, 97, 110, 111] => lookup_191_91_31(acc),
            [107, 105, 116, 97] => lookup_191_91_32(acc),
            [116, 111, 121, 111, 110, 111] => lookup_191_91_33(acc),
            [109, 105, 115, 97, 107, 105] => lookup_191_91_34(acc),
            [104, 105, 103, 97, 115, 104, 105, 115, 117, 109, 105, 121, 111, 115, 104, 105] => {
                lookup_191_91_35(acc)
            }
            [104, 105, 103, 97, 115, 104, 105, 121, 111, 100, 111, 103, 97, 119, 97] => {
                lookup_191_91_36(acc)
            }
            [100, 97, 105, 116, 111] => lookup_191_91_37(acc),
            [102, 117, 106, 105, 105, 100, 101, 114, 97] => lookup_191_91_38(acc),
            [104, 97, 98, 105, 107, 105, 110, 111] => lookup_191_91_39(acc),
            [110, 105, 115, 104, 105] => lookup_191_91_40(acc),
            [115, 101, 110, 110, 97, 110] => lookup_191_91_41(acc),
            [115, 101, 116, 116, 115, 117] => lookup_191_91_42(acc),
            [115, 117, 105, 116, 97] => lookup_191_91_43(acc),
            [105, 122, 117, 109, 105, 111, 116, 115, 117] => lookup_191_91_44(acc),
            [104, 105, 114, 97, 107, 97, 116, 97] => lookup_191_91_45(acc),
            [116, 111, 121, 111, 110, 97, 107, 97] => lookup_191_91_46(acc),
            [99, 104, 105, 104, 97, 121, 97, 97, 107, 97, 115, 97, 107, 97] => {
                lookup_191_91_47(acc)
            }
            [116, 97, 105, 115, 104, 105] => lookup_191_91_48(acc),
            [110, 101, 121, 97, 103, 97, 119, 97] => lookup_191_91_49(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_93_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_93_1(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_93<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_191_93_1(acc),
            wild => lookup_191_93_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_191_94_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_94<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 117, 114, 97, 110, 111] => lookup_191_94_0(acc),
            [111, 116, 111, 98, 101] => lookup_191_94_1(acc),
            [115, 104, 97, 107, 111, 116, 97, 110] => lookup_191_94_2(acc),
            [115, 97, 114, 111, 109, 97] => lookup_191_94_3(acc),
            [115, 104, 105, 107, 97, 111, 105] => lookup_191_94_4(acc),
            [111, 98, 105, 104, 105, 114, 111] => lookup_191_94_5(acc),
            [110, 105, 107, 105] => lookup_191_94_6(acc),
            [105, 107, 101, 100, 97] => lookup_191_94_7(acc),
            [107, 105, 109, 111, 98, 101, 116, 115, 117] => lookup_191_94_8(acc),
            [121, 97, 107, 117, 109, 111] => lookup_191_94_9(acc),
            [109, 117, 114, 111, 114, 97, 110] => lookup_191_94_10(acc),
            [107, 101, 109, 98, 117, 99, 104, 105] => lookup_191_94_11(acc),
            [107, 117, 115, 104, 105, 114, 111] => lookup_191_94_12(acc),
            [116, 111, 121, 97, 107, 111] => lookup_191_94_13(acc),
            [97, 116, 115, 117, 109, 97] => lookup_191_94_14(acc),
            [97, 98, 105, 114, 97] => lookup_191_94_15(acc),
            [101, 110, 105, 119, 97] => lookup_191_94_16(acc),
            [107, 97, 109, 105, 115, 117, 110, 97, 103, 97, 119, 97] => lookup_191_94_17(acc),
            [97, 107, 97, 98, 105, 114, 97] => lookup_191_94_18(acc),
            [110, 97, 110, 112, 111, 114, 111] => lookup_191_94_19(acc),
            [115, 104, 105, 109, 111, 107, 97, 119, 97] => lookup_191_94_20(acc),
            [116, 111, 121, 111, 116, 111, 109, 105] => lookup_191_94_21(acc),
            [116, 97, 107, 97, 115, 117] => lookup_191_94_22(acc),
            [105, 119, 97, 110, 97, 105] => lookup_191_94_23(acc),
            [119, 97, 115, 115, 97, 109, 117] => lookup_191_94_24(acc),
            [110, 97, 105, 101] => lookup_191_94_25(acc),
            [110, 117, 109, 97, 116, 97] => lookup_191_94_26(acc),
            [104, 111, 107, 117, 114, 121, 117] => lookup_191_94_27(acc),
            [107, 117, 114, 105, 121, 97, 109, 97] => lookup_191_94_28(acc),
            [116, 111, 121, 97] => lookup_191_94_29(acc),
            [107, 117, 110, 110, 101, 112, 112, 117] => lookup_191_94_30(acc),
            [104, 97, 98, 111, 114, 111] => lookup_191_94_31(acc),
            [107, 97, 109, 105, 102, 117, 114, 97, 110, 111] => lookup_191_94_32(acc),
            [105, 109, 97, 107, 97, 110, 101] => lookup_191_94_33(acc),
            [115, 117, 110, 97, 103, 97, 119, 97] => lookup_191_94_34(acc),
            [104, 111, 110, 98, 101, 116, 115, 117] => lookup_191_94_35(acc),
            [105, 119, 97, 109, 105, 122, 97, 119, 97] => lookup_191_94_36(acc),
            [104, 111, 114, 111, 107, 97, 110, 97, 105] => lookup_191_94_37(acc),
            [115, 104, 105, 109, 97, 109, 97, 107, 105] => lookup_191_94_38(acc),
            [101, 114, 105, 109, 111] => lookup_191_94_39(acc),
            [97, 105, 98, 101, 116, 115, 117] => lookup_191_94_40(acc),
            [107, 117, 116, 99, 104, 97, 110] => lookup_191_94_41(acc),
            [116, 97, 107, 105, 107, 97, 119, 97] => lookup_191_94_42(acc),
            [104, 105, 100, 97, 107, 97] => lookup_191_94_43(acc),
            [104, 105, 103, 97, 115, 104, 105, 107, 97, 119, 97] => lookup_191_94_44(acc),
            [107, 97, 121, 97, 98, 101] => lookup_191_94_45(acc),
            [99, 104, 105, 116, 111, 115, 101] => lookup_191_94_46(acc),
            [115, 104, 105, 107, 97, 98, 101] => lookup_191_94_47(acc),
            [97, 115, 97, 104, 105, 107, 97, 119, 97] => lookup_191_94_48(acc),
            [117, 114, 97, 117, 115, 117] => lookup_191_94_49(acc),
            [107, 105, 121, 111, 115, 97, 116, 111] => lookup_191_94_50(acc),
            [109, 117, 107, 97, 119, 97] => lookup_191_94_51(acc),
            [115, 104, 105, 114, 97, 111, 105] => lookup_191_94_52(acc),
            [117, 116, 97, 115, 104, 105, 110, 97, 105] => lookup_191_94_53(acc),
            [119, 97, 107, 107, 97, 110, 97, 105] => lookup_191_94_54(acc),
            [107, 111, 115, 104, 105, 109, 105, 122, 117] => lookup_191_94_55(acc),
            [110, 101, 109, 117, 114, 111] => lookup_191_94_56(acc),
            [109, 111, 115, 101, 117, 115, 104, 105] => lookup_191_94_57(acc),
            [114, 101, 98, 117, 110] => lookup_191_94_58(acc),
            [97, 107, 107, 101, 115, 104, 105] => lookup_191_94_59(acc),
            [110, 97, 110, 97, 101] => lookup_191_94_60(acc),
            [121, 111, 105, 99, 104, 105] => lookup_191_94_61(acc),
            [115, 104, 105, 98, 101, 99, 104, 97] => lookup_191_94_62(acc),
            [117, 114, 121, 117] => lookup_191_94_63(acc),
            [107, 105, 116, 97, 104, 105, 114, 111, 115, 104, 105, 109, 97] => {
                lookup_191_94_64(acc)
            }
            [98, 105, 114, 97, 116, 111, 114, 105] => lookup_191_94_65(acc),
            [115, 104, 105, 110, 116, 111, 107, 117] => lookup_191_94_66(acc),
            [97, 115, 115, 97, 98, 117] => lookup_191_94_67(acc),
            [98, 105, 102, 117, 107, 97] => lookup_191_94_68(acc),
            [98, 105, 98, 97, 105] => lookup_191_94_69(acc),
            [98, 105, 101, 105] => lookup_191_94_70(acc),
            [107, 97, 109, 105, 107, 97, 119, 97] => lookup_191_94_71(acc),
            [110, 105, 105, 107, 97, 112, 112, 117] => lookup_191_94_72(acc),
            [107, 117, 114, 111, 109, 97, 116, 115, 117, 110, 97, 105] => lookup_191_94_73(acc),
            [116, 101, 115, 104, 105, 107, 97, 103, 97] => lookup_191_94_74(acc),
            [109, 97, 116, 115, 117, 109, 97, 101] => lookup_191_94_75(acc),
            [110, 105, 115, 104, 105, 111, 107, 111, 112, 112, 101] => lookup_191_94_76(acc),
            [111, 107, 111, 112, 112, 101] => lookup_191_94_77(acc),
            [101, 115, 97, 115, 104, 105] => lookup_191_94_78(acc),
            [102, 117, 114, 117, 98, 105, 114, 97] => lookup_191_94_79(acc),
            [105, 115, 104, 105, 107, 97, 114, 105] => lookup_191_94_80(acc),
            [102, 117, 107, 117, 115, 104, 105, 109, 97] => lookup_191_94_81(acc),
            [109, 97, 115, 104, 105, 107, 101] => lookup_191_94_82(acc),
            [109, 105, 107, 97, 115, 97] => lookup_191_94_83(acc),
            [111, 116, 97, 114, 117] => lookup_191_94_84(acc),
            [111, 116, 111, 102, 117, 107, 101] => lookup_191_94_85(acc),
            [111, 107, 101, 116, 111] => lookup_191_94_86(acc),
            [115, 97, 114, 117, 102, 117, 116, 115, 117] => lookup_191_94_87(acc),
            [111, 116, 111, 105, 110, 101, 112, 112, 117] => lookup_191_94_88(acc),
            [104, 111, 107, 117, 116, 111] => lookup_191_94_89(acc),
            [104, 105, 114, 111, 111] => lookup_191_94_90(acc),
            [114, 97, 110, 107, 111, 115, 104, 105] => lookup_191_94_91(acc),
            [110, 97, 107, 97, 116, 111, 109, 98, 101, 116, 115, 117] => lookup_191_94_92(acc),
            [101, 98, 101, 116, 115, 117] => lookup_191_94_93(acc),
            [115, 104, 105, 110, 115, 104, 105, 110, 111, 116, 115, 117] => lookup_191_94_94(acc),
            [107, 97, 109, 111, 101, 110, 97, 105] => lookup_191_94_95(acc),
            [107, 121, 111, 119, 97] => lookup_191_94_96(acc),
            [100, 97, 116, 101] => lookup_191_94_97(acc),
            [112, 105, 112, 112, 117] => lookup_191_94_98(acc),
            [111, 117, 109, 117] => lookup_191_94_99(acc),
            [102, 117, 107, 97, 103, 97, 119, 97] => lookup_191_94_100(acc),
            [97, 115, 104, 105, 98, 101, 116, 115, 117] => lookup_191_94_101(acc),
            [116, 111, 104, 109, 97] => lookup_191_94_102(acc),
            [107, 97, 109, 105, 115, 104, 105, 104, 111, 114, 111] => lookup_191_94_103(acc),
            [116, 111, 109, 97, 114, 105] => lookup_191_94_104(acc),
            [104, 105, 103, 97, 115, 104, 105, 107, 97, 103, 117, 114, 97] => {
                lookup_191_94_105(acc)
            }
            [115, 104, 105, 109, 105, 122, 117] => lookup_191_94_106(acc),
            [116, 111, 109, 97, 107, 111, 109, 97, 105] => lookup_191_94_107(acc),
            [115, 104, 105, 114, 97, 110, 117, 107, 97] => lookup_191_94_108(acc),
            [110, 111, 98, 111, 114, 105, 98, 101, 116, 115, 117] => lookup_191_94_109(acc),
            [115, 104, 105, 114, 105, 117, 99, 104, 105] => lookup_191_94_110(acc),
            [104, 97, 109, 97, 116, 111, 110, 98, 101, 116, 115, 117] => lookup_191_94_111(acc),
            [97, 115, 104, 111, 114, 111] => lookup_191_94_112(acc),
            [116, 111, 121, 111, 117, 114, 97] => lookup_191_94_113(acc),
            [114, 105, 115, 104, 105, 114, 105, 102, 117, 106, 105] => lookup_191_94_114(acc),
            [98, 105, 104, 111, 114, 111] => lookup_191_94_115(acc),
            [116, 115, 117, 107, 105, 103, 97, 116, 97] => lookup_191_94_116(acc),
            [109, 111, 109, 98, 101, 116, 115, 117] => lookup_191_94_117(acc),
            [116, 111, 98, 101, 116, 115, 117] => lookup_191_94_118(acc),
            [114, 105, 107, 117, 98, 101, 116, 115, 117] => lookup_191_94_119(acc),
            [117, 114, 97, 107, 97, 119, 97] => lookup_191_94_120(acc),
            [101, 109, 98, 101, 116, 115, 117] => lookup_191_94_121(acc),
            [104, 97, 107, 111, 100, 97, 116, 101] => lookup_191_94_122(acc),
            [109, 105, 110, 97, 109, 105, 102, 117, 114, 97, 110, 111] => lookup_191_94_123(acc),
            [115, 111, 98, 101, 116, 115, 117] => lookup_191_94_124(acc),
            [99, 104, 105, 112, 112, 117, 98, 101, 116, 115, 117] => lookup_191_94_125(acc),
            [114, 105, 115, 104, 105, 114, 105] => lookup_191_94_126(acc),
            [111, 98, 105, 114, 97] => lookup_191_94_127(acc),
            [107, 105, 107, 111, 110, 97, 105] => lookup_191_94_128(acc),
            [116, 97, 107, 105, 110, 111, 117, 101] => lookup_191_94_129(acc),
            [101, 115, 97, 110] => lookup_191_94_130(acc),
            [110, 97, 107, 97, 115, 97, 116, 115, 117, 110, 97, 105] => lookup_191_94_131(acc),
            [107, 105, 116, 97, 109, 105] => lookup_191_94_132(acc),
            [115, 104, 97, 114, 105] => lookup_191_94_133(acc),
            [110, 97, 107, 97, 103, 97, 119, 97] => lookup_191_94_134(acc),
            [116, 115, 117, 98, 101, 116, 115, 117] => lookup_191_94_135(acc),
            [110, 97, 121, 111, 114, 111] => lookup_191_94_136(acc),
            [104, 111, 114, 111, 110, 111, 98, 101] => lookup_191_94_137(acc),
            [111, 122, 111, 114, 97] => lookup_191_94_138(acc),
            [115, 104, 105, 98, 101, 116, 115, 117] => lookup_191_94_139(acc),
            [97, 98, 97, 115, 104, 105, 114, 105] => lookup_191_94_140(acc),
            [116, 97, 105, 107, 105] => lookup_191_94_141(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_97<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 109, 97, 103, 97, 115, 97, 107, 105] => lookup_191_97_0(acc),
            [107, 97, 109, 105, 107, 97, 119, 97] => lookup_191_97_1(acc),
            [115, 97, 121, 111] => lookup_191_97_2(acc),
            [107, 97, 115, 117, 103, 97] => lookup_191_97_3(acc),
            [105, 110, 97, 103, 97, 119, 97] => lookup_191_97_4(acc),
            [115, 97, 110, 110, 97, 110] => lookup_191_97_5(acc),
            [121, 97, 98, 117] => lookup_191_97_6(acc),
            [115, 117, 109, 111, 116, 111] => lookup_191_97_7(acc),
            [116, 97, 116, 115, 117, 110, 111] => lookup_191_97_8(acc),
            [97, 115, 97, 103, 111] => lookup_191_97_9(acc),
            [107, 97, 107, 111, 103, 97, 119, 97] => lookup_191_97_10(acc),
            [116, 97, 107, 105, 110, 111] => lookup_191_97_11(acc),
            [110, 105, 115, 104, 105, 110, 111, 109, 105, 121, 97] => lookup_191_97_12(acc),
            [97, 107, 97, 115, 104, 105] => lookup_191_97_13(acc),
            [107, 97, 109, 105, 103, 111, 114, 105] => lookup_191_97_14(acc),
            [109, 105, 107, 105] => lookup_191_97_15(acc),
            [109, 105, 110, 97, 109, 105, 97, 119, 97, 106, 105] => lookup_191_97_16(acc),
            [116, 97, 109, 98, 97] => lookup_191_97_17(acc),
            [110, 105, 115, 104, 105, 119, 97, 107, 105] => lookup_191_97_18(acc),
            [104, 97, 114, 105, 109, 97] => lookup_191_97_19(acc),
            [116, 97, 107, 97] => lookup_191_97_20(acc),
            [107, 97, 115, 97, 105] => lookup_191_97_21(acc),
            [121, 97, 115, 104, 105, 114, 111] => lookup_191_97_22(acc),
            [121, 111, 107, 97, 119, 97] => lookup_191_97_23(acc),
            [97, 111, 103, 97, 107, 105] => lookup_191_97_24(acc),
            [115, 104, 105, 115, 111] => lookup_191_97_25(acc),
            [116, 97, 107, 97, 114, 97, 122, 117, 107, 97] => lookup_191_97_26(acc),
            [97, 115, 104, 105, 121, 97] => lookup_191_97_27(acc),
            [115, 97, 115, 97, 121, 97, 109, 97] => lookup_191_97_28(acc),
            [115, 104, 105, 110, 103, 117] => lookup_191_97_29(acc),
            [116, 97, 107, 97, 115, 97, 103, 111] => lookup_191_97_30(acc),
            [97, 107, 111] => lookup_191_97_31(acc),
            [105, 116, 97, 109, 105] => lookup_191_97_32(acc),
            [97, 119, 97, 106, 105] => lookup_191_97_33(acc),
            [105, 99, 104, 105, 107, 97, 119, 97] => lookup_191_97_34(acc),
            [107, 97, 119, 97, 110, 105, 115, 104, 105] => lookup_191_97_35(acc),
            [115, 104, 105, 110, 111, 110, 115, 101, 110] => lookup_191_97_36(acc),
            [104, 105, 109, 101, 106, 105] => lookup_191_97_37(acc),
            [102, 117, 107, 117, 115, 97, 107, 105] => lookup_191_97_38(acc),
            [115, 97, 110, 100, 97] => lookup_191_97_39(acc),
            [103, 111, 115, 104, 105, 107, 105] => lookup_191_97_40(acc),
            [116, 111, 121, 111, 111, 107, 97] => lookup_191_97_41(acc),
            [111, 110, 111] => lookup_191_97_42(acc),
            [121, 111, 107, 97] => lookup_191_97_43(acc),
            [97, 105, 111, 105] => lookup_191_97_44(acc),
            [116, 97, 105, 115, 104, 105] => lookup_191_97_45(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_99<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 109, 105, 103, 97, 119, 97] => lookup_191_99_0(acc),
            [109, 105, 110, 97, 109, 105, 98, 111, 115, 111] => lookup_191_99_1(acc),
            [121, 97, 99, 104, 105, 121, 111] => lookup_191_99_2(acc),
            [109, 105, 104, 97, 109, 97] => lookup_191_99_3(acc),
            [117, 114, 97, 121, 97, 115, 117] => lookup_191_99_4(acc),
            [110, 97, 103, 97, 114, 101, 121, 97, 109, 97] => lookup_191_99_5(acc),
            [110, 111, 100, 97] => lookup_191_99_6(acc),
            [116, 111, 109, 105, 115, 97, 116, 111] => lookup_191_99_7(acc),
            [115, 97, 107, 117, 114, 97] => lookup_191_99_8(acc),
            [116, 111, 104, 110, 111, 115, 104, 111] => lookup_191_99_9(acc),
            [116, 97, 107, 111] => lookup_191_99_10(acc),
            [110, 97, 114, 105, 116, 97] => lookup_191_99_11(acc),
            [116, 111, 103, 97, 110, 101] => lookup_191_99_12(acc),
            [105, 99, 104, 105, 110, 111, 109, 105, 121, 97] => lookup_191_99_13(acc),
            [99, 104, 111, 115, 101, 105] => lookup_191_99_14(acc),
            [115, 104, 105, 114, 97, 107, 111] => lookup_191_99_15(acc),
            [109, 97, 116, 115, 117, 100, 111] => lookup_191_99_16(acc),
            [105, 99, 104, 105, 104, 97, 114, 97] => lookup_191_99_17(acc),
            [107, 117, 106, 117, 107, 117, 114, 105] => lookup_191_99_18(acc),
            [97, 98, 105, 107, 111] => lookup_191_99_19(acc),
            [115, 104, 105, 114, 111, 105] => lookup_191_99_20(acc),
            [110, 97, 114, 97, 115, 104, 105, 110, 111] => lookup_191_99_21(acc),
            [110, 97, 103, 97, 114, 97] => lookup_191_99_22(acc),
            [115, 111, 100, 101, 103, 97, 117, 114, 97] => lookup_191_99_23(acc),
            [121, 111, 107, 111, 115, 104, 105, 98, 97, 104, 105, 107, 97, 114, 105] => {
                lookup_191_99_24(acc)
            }
            [116, 97, 116, 101, 121, 97, 109, 97] => lookup_191_99_25(acc),
            [121, 97, 99, 104, 105, 109, 97, 116, 97] => lookup_191_99_26(acc),
            [111, 110, 106, 117, 107, 117] => lookup_191_99_27(acc),
            [115, 104, 105, 109, 111, 102, 117, 115, 97] => lookup_191_99_28(acc),
            [102, 117, 110, 97, 98, 97, 115, 104, 105] => lookup_191_99_29(acc),
            [107, 97, 116, 115, 117, 117, 114, 97] => lookup_191_99_30(acc),
            [107, 105, 109, 105, 116, 115, 117] => lookup_191_99_31(acc),
            [104, 97, 110, 97, 109, 105, 103, 97, 119, 97] => lookup_191_99_32(acc),
            [105, 110, 122, 97, 105] => lookup_191_99_33(acc),
            [107, 111, 122, 97, 107, 105] => lookup_191_99_34(acc),
            [111, 116, 97, 107, 105] => lookup_191_99_35(acc),
            [109, 105, 100, 111, 114, 105] => lookup_191_99_36(acc),
            [99, 104, 111, 115, 104, 105] => lookup_191_99_37(acc),
            [109, 111, 98, 97, 114, 97] => lookup_191_99_38(acc),
            [99, 104, 117, 111] => lookup_191_99_39(acc),
            [107, 105, 115, 97, 114, 97, 122, 117] => lookup_191_99_40(acc),
            [105, 115, 117, 109, 105] => lookup_191_99_41(acc),
            [107, 121, 111, 110, 97, 110] => lookup_191_99_42(acc),
            [107, 97, 109, 111, 103, 97, 119, 97] => lookup_191_99_43(acc),
            [115, 104, 105, 115, 117, 105] => lookup_191_99_44(acc),
            [99, 104, 111, 110, 97, 110] => lookup_191_99_45(acc),
            [115, 97, 107, 97, 101] => lookup_191_99_46(acc),
            [121, 111, 107, 97, 105, 99, 104, 105, 98, 97] => lookup_191_99_47(acc),
            [102, 117, 116, 116, 115, 117] => lookup_191_99_48(acc),
            [115, 111, 115, 97] => lookup_191_99_49(acc),
            [105, 99, 104, 105, 107, 97, 119, 97] => lookup_191_99_50(acc),
            [97, 115, 97, 104, 105] => lookup_191_99_51(acc),
            [107, 97, 109, 97, 103, 97, 121, 97] => lookup_191_99_52(acc),
            [107, 97, 115, 104, 105, 119, 97] => lookup_191_99_53(acc),
            [111, 97, 109, 105, 115, 104, 105, 114, 97, 115, 97, 116, 111] => lookup_191_99_54(acc),
            [107, 97, 116, 111, 114, 105] => lookup_191_99_55(acc),
            [121, 111, 116, 115, 117, 107, 97, 105, 100, 111] => lookup_191_99_56(acc),
            [109, 117, 116, 115, 117, 122, 97, 119, 97] => lookup_191_99_57(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_100_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_100_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_100_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_100_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_100_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_100_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_100_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_100_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_100_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_100_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_100_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_100_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_100_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_100_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_100_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_100_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_100_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_100_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_100_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_100_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_100<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 105, 111, 107, 105] => lookup_191_100_0(acc),
            [109, 97, 107, 117, 114, 97, 122, 97, 107, 105] => lookup_191_100_1(acc),
            [115, 97, 116, 115, 117, 109, 97, 115, 101, 110, 100, 97, 105] => lookup_191_100_2(acc),
            [107, 105, 110, 107, 111] => lookup_191_100_3(acc),
            [105, 122, 117, 109, 105] => lookup_191_100_4(acc),
            [97, 109, 97, 109, 105] => lookup_191_100_5(acc),
            [109, 97, 116, 115, 117, 109, 111, 116, 111] => lookup_191_100_6(acc),
            [105, 115, 97] => lookup_191_100_7(acc),
            [107, 97, 103, 111, 115, 104, 105, 109, 97] => lookup_191_100_8(acc),
            [107, 97, 110, 111, 121, 97] => lookup_191_100_9(acc),
            [109, 105, 110, 97, 109, 105, 116, 97, 110, 101] => lookup_191_100_10(acc),
            [115, 111, 111] => lookup_191_100_11(acc),
            [110, 97, 107, 97, 116, 97, 110, 101] => lookup_191_100_12(acc),
            [121, 117, 115, 117, 105] => lookup_191_100_13(acc),
            [107, 111, 117, 121, 97, 109, 97] => lookup_191_100_14(acc),
            [97, 107, 117, 110, 101] => lookup_191_100_15(acc),
            [116, 97, 114, 117, 109, 105, 122, 117] => lookup_191_100_16(acc),
            [105, 115, 101, 110] => lookup_191_100_17(acc),
            [110, 105, 115, 104, 105, 110, 111, 111, 109, 111, 116, 101] => lookup_191_100_18(acc),
            [107, 97, 119, 97, 110, 97, 98, 101] => lookup_191_100_19(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_101_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_101_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_101_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_101_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_101_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_101_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_101_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_101_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_101_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_101_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_101_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_101_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_101_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_101_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_101_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_101_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_101_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_101_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_101_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_101_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_101_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_101_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_101_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_101_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_101_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_101_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_101<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 97, 110, 105, 119, 97] => lookup_191_101_0(acc),
            [121, 97, 107, 97, 103, 101] => lookup_191_101_1(acc),
            [97, 115, 97, 107, 117, 99, 104, 105] => lookup_191_101_2(acc),
            [115, 104, 111, 111] => lookup_191_101_3(acc),
            [98, 105, 122, 101, 110] => lookup_191_101_4(acc),
            [105, 98, 97, 114, 97] => lookup_191_101_5(acc),
            [110, 105, 105, 109, 105] => lookup_191_101_6(acc),
            [110, 97, 103, 105] => lookup_191_101_7(acc),
            [107, 117, 114, 97, 115, 104, 105, 107, 105] => lookup_191_101_8(acc),
            [109, 105, 115, 97, 107, 105] => lookup_191_101_9(acc),
            [107, 97, 115, 97, 111, 107, 97] => lookup_191_101_10(acc),
            [107, 117, 109, 101, 110, 97, 110] => lookup_191_101_11(acc),
            [111, 107, 97, 121, 97, 109, 97] => lookup_191_101_12(acc),
            [115, 97, 116, 111, 115, 104, 111] => lookup_191_101_13(acc),
            [115, 104, 105, 110, 106, 111] => lookup_191_101_14(acc),
            [115, 111, 106, 97] => lookup_191_101_15(acc),
            [116, 115, 117, 121, 97, 109, 97] => lookup_191_101_16(acc),
            [97, 107, 97, 105, 119, 97] => lookup_191_101_17(acc),
            [116, 97, 107, 97, 104, 97, 115, 104, 105] => lookup_191_101_18(acc),
            [104, 97, 121, 97, 115, 104, 105, 109, 97] => lookup_191_101_19(acc),
            [110, 105, 115, 104, 105, 97, 119, 97, 107, 117, 114, 97] => lookup_191_101_20(acc),
            [115, 101, 116, 111, 117, 99, 104, 105] => lookup_191_101_21(acc),
            [107, 105, 98, 105, 99, 104, 117, 111] => lookup_191_101_22(acc),
            [107, 97, 103, 97, 109, 105, 110, 111] => lookup_191_101_23(acc),
            [116, 97, 109, 97, 110, 111] => lookup_191_101_24(acc),
            [119, 97, 107, 101] => lookup_191_101_25(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_102_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_102_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_102_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_102_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_102_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_102_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_102_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_102_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_102_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_102_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_102_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_102_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_102_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_102_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_102_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_102<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 97, 116, 115, 117, 121, 97, 109, 97] => lookup_191_102_0(acc),
            [101, 105, 104, 101, 105, 106, 105] => lookup_191_102_1(acc),
            [101, 99, 104, 105, 122, 101, 110] => lookup_191_102_2(acc),
            [109, 105, 104, 97, 109, 97] => lookup_191_102_3(acc),
            [109, 105, 110, 97, 109, 105, 101, 99, 104, 105, 122, 101, 110] => {
                lookup_191_102_4(acc)
            }
            [111, 98, 97, 109, 97] => lookup_191_102_5(acc),
            [115, 97, 107, 97, 105] => lookup_191_102_6(acc),
            [102, 117, 107, 117, 105] => lookup_191_102_7(acc),
            [119, 97, 107, 97, 115, 97] => lookup_191_102_8(acc),
            [105, 107, 101, 100, 97] => lookup_191_102_9(acc),
            [115, 97, 98, 97, 101] => lookup_191_102_10(acc),
            [116, 115, 117, 114, 117, 103, 97] => lookup_191_102_11(acc),
            [116, 97, 107, 97, 104, 97, 109, 97] => lookup_191_102_12(acc),
            [111, 104, 105] => lookup_191_102_13(acc),
            [111, 110, 111] => lookup_191_102_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_106_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_106_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_106_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_106_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_106_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_106_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_106_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_106_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_106_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_106_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_106_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_106_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_106_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_106_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_106_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_106_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_106_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_106<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 97, 105, 110, 97, 110] => lookup_191_106_0(acc),
            [107, 111, 109, 97, 116, 115, 117, 115, 104, 105, 109, 97] => lookup_191_106_1(acc),
            [105, 99, 104, 105, 98, 97] => lookup_191_106_2(acc),
            [109, 105, 109, 97] => lookup_191_106_3(acc),
            [109, 105, 121, 111, 115, 104, 105] => lookup_191_106_4(acc),
            [110, 97, 107, 97, 103, 97, 119, 97] => lookup_191_106_5(acc),
            [109, 97, 116, 115, 117, 115, 104, 105, 103, 101] => lookup_191_106_6(acc),
            [97, 105, 122, 117, 109, 105] => lookup_191_106_7(acc),
            [115, 104, 105, 115, 104, 105, 107, 117, 105] => lookup_191_106_8(acc),
            [109, 105, 110, 97, 109, 105] => lookup_191_106_9(acc),
            [116, 111, 107, 117, 115, 104, 105, 109, 97] => lookup_191_106_10(acc),
            [97, 110, 97, 110] => lookup_191_106_11(acc),
            [119, 97, 106, 105, 107, 105] => lookup_191_106_12(acc),
            [105, 116, 97, 110, 111] => lookup_191_106_13(acc),
            [109, 117, 103, 105] => lookup_191_106_14(acc),
            [110, 97, 114, 117, 116, 111] => lookup_191_106_15(acc),
            [115, 97, 110, 97, 103, 111, 99, 104, 105] => lookup_191_106_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_109_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_109_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_109_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_109_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_109_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_109_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_109_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_109_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_109_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_109_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_109_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_109_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_109_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_109_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_109_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_109_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_109_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_109_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_109_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_109<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 115, 117, 107, 117, 109, 105] => lookup_191_109_0(acc),
            [117, 115, 97] => lookup_191_109_1(acc),
            [115, 97, 105, 107, 105] => lookup_191_109_2(acc),
            [98, 117, 110, 103, 111, 111, 110, 111] => lookup_191_109_3(acc),
            [117, 115, 117, 107, 105] => lookup_191_109_4(acc),
            [121, 117, 102, 117] => lookup_191_109_5(acc),
            [98, 117, 110, 103, 111, 116, 97, 107, 97, 100, 97] => lookup_191_109_6(acc),
            [107, 111, 107, 111, 110, 111, 101] => lookup_191_109_7(acc),
            [104, 105, 116, 97] => lookup_191_109_8(acc),
            [98, 101, 112, 112, 117] => lookup_191_109_9(acc),
            [107, 117, 106, 117] => lookup_191_109_10(acc),
            [104, 97, 115, 97, 109, 97] => lookup_191_109_11(acc),
            [107, 117, 110, 105, 115, 97, 107, 105] => lookup_191_109_12(acc),
            [107, 117, 115, 117] => lookup_191_109_13(acc),
            [116, 97, 107, 101, 116, 97] => lookup_191_109_14(acc),
            [111, 105, 116, 97] => lookup_191_109_15(acc),
            [107, 97, 109, 105, 116, 115, 117, 101] => lookup_191_109_16(acc),
            [104, 105, 106, 105] => lookup_191_109_17(acc),
            [104, 105, 109, 101, 115, 104, 105, 109, 97] => lookup_191_109_18(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_113<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 114, 105, 109, 97] => lookup_191_113_0(acc),
            [107, 97, 116, 115, 117, 115, 104, 105, 107, 97] => lookup_191_113_1(acc),
            [107, 111, 103, 97, 110, 101, 105] => lookup_191_113_2(acc),
            [107, 111, 117, 122, 117, 115, 104, 105, 109, 97] => lookup_191_113_3(acc),
            [116, 97, 109, 97] => lookup_191_113_4(acc),
            [109, 97, 99, 104, 105, 100, 97] => lookup_191_113_5(acc),
            [109, 117, 115, 97, 115, 104, 105, 109, 117, 114, 97, 121, 97, 109, 97] => {
                lookup_191_113_6(acc)
            }
            [99, 104, 111, 102, 117] => lookup_191_113_7(acc),
            [107, 111, 109, 97, 101] => lookup_191_113_8(acc),
            [109, 105, 110, 97, 116, 111] => lookup_191_113_9(acc),
            [104, 97, 99, 104, 105, 106, 111] => lookup_191_113_10(acc),
            [111, 107, 117, 116, 97, 109, 97] => lookup_191_113_11(acc),
            [101, 100, 111, 103, 97, 119, 97] => lookup_191_113_12(acc),
            [104, 105, 103, 97, 115, 104, 105, 121, 97, 109, 97, 116, 111] => {
                lookup_191_113_13(acc)
            }
            [109, 105, 116, 97, 107, 97] => lookup_191_113_14(acc),
            [99, 104, 105, 121, 111, 100, 97] => lookup_191_113_15(acc),
            [109, 117, 115, 97, 115, 104, 105, 110, 111] => lookup_191_113_16(acc),
            [115, 104, 105, 110, 97, 103, 97, 119, 97] => lookup_191_113_17(acc),
            [110, 97, 107, 97, 110, 111] => lookup_191_113_18(acc),
            [102, 117, 99, 104, 117] => lookup_191_113_19(acc),
            [98, 117, 110, 107, 121, 111] => lookup_191_113_20(acc),
            [102, 117, 115, 115, 97] => lookup_191_113_21(acc),
            [97, 100, 97, 99, 104, 105] => lookup_191_113_22(acc),
            [97, 111, 103, 97, 115, 104, 105, 109, 97] => lookup_191_113_23(acc),
            [111, 116, 97] => lookup_191_113_24(acc),
            [111, 109, 101] => lookup_191_113_25(acc),
            [104, 105, 110, 111] => lookup_191_113_26(acc),
            [116, 97, 105, 116, 111] => lookup_191_113_27(acc),
            [115, 104, 105, 98, 117, 121, 97] => lookup_191_113_28(acc),
            [116, 111, 115, 104, 105, 109, 97] => lookup_191_113_29(acc),
            [104, 105, 103, 97, 115, 104, 105, 109, 117, 114, 97, 121, 97, 109, 97] => {
                lookup_191_113_30(acc)
            }
            [107, 111, 107, 117, 98, 117, 110, 106, 105] => lookup_191_113_31(acc),
            [105, 110, 97, 103, 105] => lookup_191_113_32(acc),
            [104, 105, 103, 97, 115, 104, 105, 107, 117, 114, 117, 109, 101] => {
                lookup_191_113_33(acc)
            }
            [111, 103, 97, 115, 97, 119, 97, 114, 97] => lookup_191_113_34(acc),
            [109, 101, 103, 117, 114, 111] => lookup_191_113_35(acc),
            [104, 105, 110, 111, 100, 101] => lookup_191_113_36(acc),
            [104, 105, 110, 111, 104, 97, 114, 97] => lookup_191_113_37(acc),
            [107, 111, 100, 97, 105, 114, 97] => lookup_191_113_38(acc),
            [107, 111, 116, 111] => lookup_191_113_39(acc),
            [109, 105, 122, 117, 104, 111] => lookup_191_113_40(acc),
            [115, 101, 116, 97, 103, 97, 121, 97] => lookup_191_113_41(acc),
            [116, 97, 99, 104, 105, 107, 97, 119, 97] => lookup_191_113_42(acc),
            [107, 117, 110, 105, 116, 97, 99, 104, 105] => lookup_191_113_43(acc),
            [97, 107, 105, 115, 104, 105, 109, 97] => lookup_191_113_44(acc),
            [99, 104, 117, 111] => lookup_191_113_45(acc),
            [105, 116, 97, 98, 97, 115, 104, 105] => lookup_191_113_46(acc),
            [107, 105, 121, 111, 115, 101] => lookup_191_113_47(acc),
            [107, 105, 116, 97] => lookup_191_113_48(acc),
            [104, 97, 109, 117, 114, 97] => lookup_191_113_49(acc),
            [111, 115, 104, 105, 109, 97] => lookup_191_113_50(acc),
            [115, 117, 103, 105, 110, 97, 109, 105] => lookup_191_113_51(acc),
            [104, 97, 99, 104, 105, 111, 106, 105] => lookup_191_113_52(acc),
            [97, 114, 97, 107, 97, 119, 97] => lookup_191_113_53(acc),
            [115, 104, 105, 110, 106, 117, 107, 117] => lookup_191_113_54(acc),
            [97, 107, 105, 114, 117, 110, 111] => lookup_191_113_55(acc),
            [115, 117, 109, 105, 100, 97] => lookup_191_113_56(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_114_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_114_1(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_114<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_191_114_1(acc),
            wild => lookup_191_114_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_191_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_191_118_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_118_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_118_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_118_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_118_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_118_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_118_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_118_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_118_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_118_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_118_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_118_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_118_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_118_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_118_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_118_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_118_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_118_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_118_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_118_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_118_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_118_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_118_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_118_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_118_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_118_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_118_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_118_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_118_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_118_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_118_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_118_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_118_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_118_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_118<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 122, 117, 115, 97, 119, 97] => lookup_191_118_0(acc),
            [105, 119, 97, 116, 101] => lookup_191_118_1(acc),
            [104, 105, 114, 97, 105, 122, 117, 109, 105] => lookup_191_118_2(acc),
            [107, 117, 122, 117, 109, 97, 107, 105] => lookup_191_118_3(acc),
            [107, 97, 110, 101, 103, 97, 115, 97, 107, 105] => lookup_191_118_4(acc),
            [111, 102, 117, 110, 97, 116, 111] => lookup_191_118_5(acc),
            [110, 111, 100, 97] => lookup_191_118_6(acc),
            [102, 117, 106, 105, 115, 97, 119, 97] => lookup_191_118_7(acc),
            [104, 105, 114, 111, 110, 111] => lookup_191_118_8(acc),
            [109, 105, 121, 97, 107, 111] => lookup_191_118_9(acc),
            [111, 115, 104, 117] => lookup_191_118_10(acc),
            [105, 119, 97, 105, 122, 117, 109, 105] => lookup_191_118_11(acc),
            [104, 97, 110, 97, 109, 97, 107, 105] => lookup_191_118_12(acc),
            [121, 97, 109, 97, 100, 97] => lookup_191_118_13(acc),
            [110, 105, 110, 111, 104, 101] => lookup_191_118_14(acc),
            [107, 117, 106, 105] => lookup_191_118_15(acc),
            [115, 104, 105, 119, 97] => lookup_191_118_16(acc),
            [107, 97, 119, 97, 105] => lookup_191_118_17(acc),
            [107, 97, 109, 97, 105, 115, 104, 105] => lookup_191_118_18(acc),
            [107, 117, 110, 111, 104, 101] => lookup_191_118_19(acc),
            [109, 111, 114, 105, 111, 107, 97] => lookup_191_118_20(acc),
            [107, 97, 114, 117, 109, 97, 105] => lookup_191_118_21(acc),
            [115, 104, 105, 122, 117, 107, 117, 105, 115, 104, 105] => lookup_191_118_22(acc),
            [105, 99, 104, 105, 110, 111, 115, 101, 107, 105] => lookup_191_118_23(acc),
            [105, 99, 104, 105, 110, 111, 104, 101] => lookup_191_118_24(acc),
            [111, 116, 115, 117, 99, 104, 105] => lookup_191_118_25(acc),
            [116, 111, 110, 111] => lookup_191_118_26(acc),
            [116, 97, 110, 111, 104, 97, 116, 97] => lookup_191_118_27(acc),
            [114, 105, 107, 117, 122, 101, 110, 116, 97, 107, 97, 116, 97] => {
                lookup_191_118_28(acc)
            }
            [121, 97, 104, 97, 98, 97] => lookup_191_118_29(acc),
            [107, 105, 116, 97, 107, 97, 109, 105] => lookup_191_118_30(acc),
            [102, 117, 100, 97, 105] => lookup_191_118_31(acc),
            [115, 117, 109, 105, 116, 97] => lookup_191_118_32(acc),
            [106, 111, 98, 111, 106, 105] => lookup_191_118_33(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_119_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_119_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_119_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_119_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_119_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_119_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_119_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_119_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_119_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_119_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_119_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_119_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_119_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_119_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_119_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_119_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_119_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_119_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_119_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_119_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_119_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_119_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_119_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_119<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 97, 109, 97, 100, 97] => lookup_191_119_0(acc),
            [104, 105, 103, 97, 115, 104, 105, 105, 122, 117, 109, 111] => lookup_191_119_1(acc),
            [115, 104, 105, 109, 97, 110, 101] => lookup_191_119_2(acc),
            [116, 115, 117, 119, 97, 110, 111] => lookup_191_119_3(acc),
            [121, 97, 115, 117, 103, 105] => lookup_191_119_4(acc),
            [121, 97, 116, 115, 117, 107, 97] => lookup_191_119_5(acc),
            [111, 107, 105, 110, 111, 115, 104, 105, 109, 97] => lookup_191_119_6(acc),
            [105, 122, 117, 109, 111] => lookup_191_119_7(acc),
            [117, 110, 110, 97, 110] => lookup_191_119_8(acc),
            [109, 105, 115, 97, 116, 111] => lookup_191_119_9(acc),
            [111, 107, 117, 105, 122, 117, 109, 111] => lookup_191_119_10(acc),
            [107, 97, 107, 105, 110, 111, 107, 105] => lookup_191_119_11(acc),
            [110, 105, 115, 104, 105, 110, 111, 115, 104, 105, 109, 97] => lookup_191_119_12(acc),
            [109, 97, 115, 117, 100, 97] => lookup_191_119_13(acc),
            [97, 109, 97] => lookup_191_119_14(acc),
            [121, 97, 107, 117, 109, 111] => lookup_191_119_15(acc),
            [104, 105, 107, 97, 119, 97] => lookup_191_119_16(acc),
            [109, 97, 116, 115, 117, 101] => lookup_191_119_17(acc),
            [97, 107, 97, 103, 105] => lookup_191_119_18(acc),
            [111, 104, 100, 97] => lookup_191_119_19(acc),
            [103, 111, 116, 115, 117] => lookup_191_119_20(acc),
            [116, 97, 109, 97, 121, 117] => lookup_191_119_21(acc),
            [104, 105, 107, 105, 109, 105] => lookup_191_119_22(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_120_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_120_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_120_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_120_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_120_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_120_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_120_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_120_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_120_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_120_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_120_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_120_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_120_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_120_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_120_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_120_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_120_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_120_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_120_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_120_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_120_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_120_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_120_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_120_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_120<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 97, 110, 116, 111] => lookup_191_120_0(acc),
            [116, 111, 110, 97, 109, 105] => lookup_191_120_1(acc),
            [116, 111, 121, 97, 109, 97] => lookup_191_120_2(acc),
            [106, 111, 104, 97, 110, 97] => lookup_191_120_3(acc),
            [110, 97, 109, 101, 114, 105, 107, 97, 119, 97] => lookup_191_120_4(acc),
            [110, 121, 117, 122, 101, 110] => lookup_191_120_5(acc),
            [116, 97, 107, 97, 111, 107, 97] => lookup_191_120_6(acc),
            [102, 117, 99, 104, 117] => lookup_191_120_7(acc),
            [107, 117, 114, 111, 98, 101] => lookup_191_120_8(acc),
            [104, 105, 109, 105] => lookup_191_120_9(acc),
            [102, 117, 107, 117, 109, 105, 116, 115, 117] => lookup_191_120_10(acc),
            [97, 115, 97, 104, 105] => lookup_191_120_11(acc),
            [111, 121, 97, 98, 101] => lookup_191_120_12(acc),
            [116, 97, 105, 114, 97] => lookup_191_120_13(acc),
            [110, 97, 107, 97, 110, 105, 105, 107, 97, 119, 97] => lookup_191_120_14(acc),
            [117, 110, 97, 122, 117, 107, 105] => lookup_191_120_15(acc),
            [117, 111, 122, 117] => lookup_191_120_16(acc),
            [102, 117, 110, 97, 104, 97, 115, 104, 105] => lookup_191_120_17(acc),
            [107, 97, 109, 105, 105, 99, 104, 105] => lookup_191_120_18(acc),
            [105, 109, 105, 122, 117] => lookup_191_120_19(acc),
            [116, 111, 103, 97] => lookup_191_120_20(acc),
            [105, 110, 97, 109, 105] => lookup_191_120_21(acc),
            [121, 97, 109, 97, 100, 97] => lookup_191_120_22(acc),
            [116, 97, 116, 101, 121, 97, 109, 97] => lookup_191_120_23(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_122_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_122_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_122_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_122_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_122_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_122_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_122_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_122_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_122_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_122_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_122_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_122_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_122_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_122_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_122_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_122_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_122_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_122_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_122_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_122_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_122_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_122_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_122<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 104, 105, 107, 111, 107, 117, 99, 104, 117, 111] => lookup_191_122_0(acc),
            [105, 109, 97, 98, 97, 114, 105] => lookup_191_122_1(acc),
            [109, 97, 116, 115, 117, 121, 97, 109, 97] => lookup_191_122_2(acc),
            [110, 97, 109, 105, 107, 97, 116, 97] => lookup_191_122_3(acc),
            [107, 117, 109, 97, 107, 111, 103, 101, 110] => lookup_191_122_4(acc),
            [109, 97, 116, 115, 117, 110, 111] => lookup_191_122_5(acc),
            [109, 97, 115, 97, 107, 105] => lookup_191_122_6(acc),
            [107, 97, 109, 105, 106, 105, 109, 97] => lookup_191_122_7(acc),
            [115, 97, 105, 106, 111] => lookup_191_122_8(acc),
            [116, 111, 98, 101] => lookup_191_122_9(acc),
            [116, 111, 111, 110] => lookup_191_122_10(acc),
            [117, 99, 104, 105, 107, 111] => lookup_191_122_11(acc),
            [121, 97, 119, 97, 116, 97, 104, 97, 109, 97] => lookup_191_122_12(acc),
            [117, 119, 97, 106, 105, 109, 97] => lookup_191_122_13(acc),
            [97, 105, 110, 97, 110] => lookup_191_122_14(acc),
            [110, 105, 105, 104, 97, 109, 97] => lookup_191_122_15(acc),
            [111, 122, 117] => lookup_191_122_16(acc),
            [107, 105, 104, 111, 107, 117] => lookup_191_122_17(acc),
            [105, 107, 97, 116, 97] => lookup_191_122_18(acc),
            [105, 121, 111] => lookup_191_122_19(acc),
            [104, 111, 110, 97, 105] => lookup_191_122_20(acc),
            [115, 101, 105, 121, 111] => lookup_191_122_21(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_126_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_126_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_126_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_126_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_126_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_126_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_126_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_126_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_126_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_126_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_126_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_126_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_126_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_126_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_126_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_126_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_126_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_126_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_126_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_126_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_126_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_126_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_126_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_126_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_126_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_126_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_126_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_126_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_126_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_126_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_126<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 97, 109, 97, 107, 117, 114, 97] => lookup_191_126_0(acc),
            [97, 116, 115, 117, 103, 105] => lookup_191_126_1(acc),
            [110, 97, 107, 97, 105] => lookup_191_126_2(acc),
            [111, 100, 97, 119, 97, 114, 97] => lookup_191_126_3(acc),
            [116, 115, 117, 107, 117, 105] => lookup_191_126_4(acc),
            [121, 111, 107, 111, 115, 117, 107, 97] => lookup_191_126_5(acc),
            [102, 117, 106, 105, 115, 97, 119, 97] => lookup_191_126_6(acc),
            [101, 98, 105, 110, 97] => lookup_191_126_7(acc),
            [107, 97, 105, 115, 101, 105] => lookup_191_126_8(acc),
            [104, 105, 114, 97, 116, 115, 117, 107, 97] => lookup_191_126_9(acc),
            [121, 97, 109, 97, 107, 105, 116, 97] => lookup_191_126_10(acc),
            [122, 117, 115, 104, 105] => lookup_191_126_11(acc),
            [97, 121, 97, 115, 101] => lookup_191_126_12(acc),
            [115, 97, 109, 117, 107, 97, 119, 97] => lookup_191_126_13(acc),
            [104, 97, 107, 111, 110, 101] => lookup_191_126_14(acc),
            [115, 97, 103, 97, 109, 105, 104, 97, 114, 97] => lookup_191_126_15(acc),
            [121, 117, 103, 97, 119, 97, 114, 97] => lookup_191_126_16(acc),
            [110, 105, 110, 111, 109, 105, 121, 97] => lookup_191_126_17(acc),
            [121, 97, 109, 97, 116, 111] => lookup_191_126_18(acc),
            [109, 97, 116, 115, 117, 100, 97] => lookup_191_126_19(acc),
            [97, 105, 107, 97, 119, 97] => lookup_191_126_20(acc),
            [104, 97, 100, 97, 110, 111] => lookup_191_126_21(acc),
            [109, 105, 117, 114, 97] => lookup_191_126_22(acc),
            [107, 105, 121, 111, 107, 97, 119, 97] => lookup_191_126_23(acc),
            [105, 115, 101, 104, 97, 114, 97] => lookup_191_126_24(acc),
            [99, 104, 105, 103, 97, 115, 97, 107, 105] => lookup_191_126_25(acc),
            [109, 105, 110, 97, 109, 105, 97, 115, 104, 105, 103, 97, 114, 97] => {
                lookup_191_126_26(acc)
            }
            [111, 105] => lookup_191_126_27(acc),
            [111, 105, 115, 111] => lookup_191_126_28(acc),
            [122, 97, 109, 97] => lookup_191_126_29(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_130<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 110, 97] => lookup_191_130_0(acc),
            [100, 97, 105, 103, 111] => lookup_191_130_1(acc),
            [105, 116, 97, 107, 111] => lookup_191_130_2(acc),
            [111, 109, 105, 116, 97, 109, 97] => lookup_191_130_3(acc),
            [115, 117, 105, 102, 117] => lookup_191_130_4(acc),
            [102, 117, 106, 105, 115, 104, 105, 114, 111] => lookup_191_130_5(acc),
            [115, 97, 107, 117, 114, 97, 103, 97, 119, 97] => lookup_191_130_6(acc),
            [121, 97, 99, 104, 105, 121, 111] => lookup_191_130_7(acc),
            [97, 109, 105] => lookup_191_130_8(acc),
            [98, 97, 110, 100, 111] => lookup_191_130_9(acc),
            [99, 104, 105, 107, 117, 115, 101, 105] => lookup_191_130_10(acc),
            [105, 119, 97, 109, 97] => lookup_191_130_11(acc),
            [111, 103, 97, 119, 97] => lookup_191_130_12(acc),
            [110, 97, 109, 101, 103, 97, 116, 97] => lookup_191_130_13(acc),
            [107, 97, 109, 105, 115, 117] => lookup_191_130_14(acc),
            [104, 105, 116, 97, 99, 104, 105] => lookup_191_130_15(acc),
            [115, 97, 107, 97, 105] => lookup_191_130_16(acc),
            [117, 99, 104, 105, 104, 97, 114, 97] => lookup_191_130_17(acc),
            [116, 97, 107, 97, 104, 97, 103, 105] => lookup_191_130_18(acc),
            [121, 117, 107, 105] => lookup_191_130_19(acc),
            [105, 98, 97, 114, 97, 107, 105] => lookup_191_130_20(acc),
            [107, 97, 115, 97, 109, 97] => lookup_191_130_21(acc),
            [104, 105, 116, 97, 99, 104, 105, 110, 97, 107, 97] => lookup_191_130_22(acc),
            [115, 111, 119, 97] => lookup_191_130_23(acc),
            [104, 105, 116, 97, 99, 104, 105, 111, 109, 105, 121, 97] => lookup_191_130_24(acc),
            [109, 111, 114, 105, 121, 97] => lookup_191_130_25(acc),
            [115, 104, 105, 114, 111, 115, 97, 116, 111] => lookup_191_130_26(acc),
            [109, 105, 104, 111] => lookup_191_130_27(acc),
            [110, 97, 107, 97] => lookup_191_130_28(acc),
            [116, 111, 114, 105, 100, 101] => lookup_191_130_29(acc),
            [117, 115, 104, 105, 107, 117] => lookup_191_130_30(acc),
            [115, 104, 105, 109, 111, 100, 97, 116, 101] => lookup_191_130_31(acc),
            [116, 97, 109, 97, 116, 115, 117, 107, 117, 114, 105] => lookup_191_130_32(acc),
            [116, 111, 107, 97, 105] => lookup_191_130_33(acc),
            [116, 111, 109, 111, 98, 101] => lookup_191_130_34(acc),
            [107, 111, 103, 97] => lookup_191_130_35(acc),
            [111, 97, 114, 97, 105] => lookup_191_130_36(acc),
            [97, 115, 97, 104, 105] => lookup_191_130_37(acc),
            [104, 105, 116, 97, 99, 104, 105, 111, 116, 97] => lookup_191_130_38(acc),
            [105, 110, 97, 115, 104, 105, 107, 105] => lookup_191_130_39(acc),
            [107, 97, 115, 117, 109, 105, 103, 97, 117, 114, 97] => lookup_191_130_40(acc),
            [115, 104, 105, 109, 111, 116, 115, 117, 109, 97] => lookup_191_130_41(acc),
            [116, 111, 110, 101] => lookup_191_130_42(acc),
            [116, 115, 117, 99, 104, 105, 117, 114, 97] => lookup_191_130_43(acc),
            [121, 97, 119, 97, 114, 97] => lookup_191_130_44(acc),
            [116, 115, 117, 107, 117, 98, 97] => lookup_191_130_45(acc),
            [107, 97, 115, 104, 105, 109, 97] => lookup_191_130_46(acc),
            [121, 97, 109, 97, 103, 97, 116, 97] => lookup_191_130_47(acc),
            [114, 121, 117, 103, 97, 115, 97, 107, 105] => lookup_191_130_48(acc),
            [106, 111, 115, 111] => lookup_191_130_49(acc),
            [109, 105, 116, 111] => lookup_191_130_50(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_131_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_131<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 121, 97, 100, 97] => lookup_191_131_0(acc),
            [115, 104, 105, 109, 111, 115, 117, 119, 97] => lookup_191_131_1(acc),
            [97, 103, 101, 109, 97, 116, 115, 117] => lookup_191_131_2(acc),
            [97, 111, 107, 105] => lookup_191_131_3(acc),
            [105, 107, 101, 100, 97] => lookup_191_131_4(acc),
            [105, 105, 106, 105, 109, 97] => lookup_191_131_5(acc),
            [104, 105, 114, 97, 121, 97] => lookup_191_131_6(acc),
            [107, 111, 109, 111, 114, 111] => lookup_191_131_7(acc),
            [116, 97, 107, 97, 121, 97, 109, 97] => lookup_191_131_8(acc),
            [109, 105, 110, 97, 109, 105, 97, 105, 107, 105] => lookup_191_131_9(acc),
            [107, 97, 119, 97, 107, 97, 109, 105] => lookup_191_131_10(acc),
            [107, 111, 109, 97, 103, 97, 110, 101] => lookup_191_131_11(acc),
            [121, 97, 115, 117, 111, 107, 97] => lookup_191_131_12(acc),
            [107, 105, 115, 111, 102, 117, 107, 117, 115, 104, 105, 109, 97] => {
                lookup_191_131_13(acc)
            }
            [111, 116, 97, 114, 105] => lookup_191_131_14(acc),
            [107, 105, 116, 97, 97, 105, 107, 105] => lookup_191_131_15(acc),
            [116, 97, 107, 97, 103, 105] => lookup_191_131_16(acc),
            [110, 97, 107, 97, 110, 111] => lookup_191_131_17(acc),
            [116, 97, 107, 97, 109, 111, 114, 105] => lookup_191_131_18(acc),
            [97, 99, 104, 105] => lookup_191_131_19(acc),
            [110, 97, 103, 97, 119, 97] => lookup_191_131_20(acc),
            [111, 111, 115, 104, 105, 107, 97] => lookup_191_131_21(acc),
            [111, 98, 117, 115, 101] => lookup_191_131_22(acc),
            [111, 109, 105] => lookup_191_131_23(acc),
            [102, 117, 106, 105, 109, 105] => lookup_191_131_24(acc),
            [116, 111, 109, 105] => lookup_191_131_25(acc),
            [121, 97, 115, 97, 107, 97] => lookup_191_131_26(acc),
            [97, 122, 117, 109, 105, 110, 111] => lookup_191_131_27(acc),
            [121, 97, 109, 97, 103, 97, 116, 97] => lookup_191_131_28(acc),
            [109, 97, 116, 115, 117, 107, 97, 119, 97] => lookup_191_131_29(acc),
            [105, 110, 97] => lookup_191_131_30(acc),
            [109, 105, 110, 97, 109, 105, 109, 105, 110, 111, 119, 97] => lookup_191_131_31(acc),
            [115, 97, 107, 117] => lookup_191_131_32(acc),
            [115, 117, 122, 97, 107, 97] => lookup_191_131_33(acc),
            [104, 97, 114, 97] => lookup_191_131_34(acc),
            [115, 104, 105, 110, 97, 110, 111, 109, 97, 99, 104, 105] => lookup_191_131_35(acc),
            [119, 97, 100, 97] => lookup_191_131_36(acc),
            [109, 105, 97, 115, 97] => lookup_191_131_37(acc),
            [99, 104, 105, 110, 111] => lookup_191_131_38(acc),
            [105, 105, 121, 97, 109, 97] => lookup_191_131_39(acc),
            [109, 105, 110, 97, 109, 105, 109, 97, 107, 105] => lookup_191_131_40(acc),
            [110, 111, 122, 97, 119, 97, 111, 110, 115, 101, 110] => lookup_191_131_41(acc),
            [116, 97, 116, 101, 115, 104, 105, 110, 97] => lookup_191_131_42(acc),
            [111, 103, 97, 119, 97] => lookup_191_131_43(acc),
            [109, 111, 99, 104, 105, 122, 117, 107, 105] => lookup_191_131_44(acc),
            [109, 105, 121, 111, 116, 97] => lookup_191_131_45(acc),
            [109, 97, 116, 115, 117, 109, 111, 116, 111] => lookup_191_131_46(acc),
            [116, 97, 116, 115, 117, 110, 111] => lookup_191_131_47(acc),
            [117, 101, 100, 97] => lookup_191_131_48(acc),
            [121, 97, 109, 97, 110, 111, 117, 99, 104, 105] => lookup_191_131_49(acc),
            [111, 116, 97, 107, 105] => lookup_191_131_50(acc),
            [116, 111, 103, 97, 107, 117, 115, 104, 105] => lookup_191_131_51(acc),
            [107, 105, 115, 111] => lookup_191_131_52(acc),
            [110, 97, 103, 97, 110, 111] => lookup_191_131_53(acc),
            [111, 111, 107, 117, 119, 97] => lookup_191_131_54(acc),
            [105, 105, 122, 117, 110, 97] => lookup_191_131_55(acc),
            [115, 97, 107, 97, 107, 105] => lookup_191_131_56(acc),
            [110, 97, 103, 105, 115, 111] => lookup_191_131_57(acc),
            [111, 109, 97, 99, 104, 105] => lookup_191_131_58(acc),
            [115, 97, 107, 117, 104, 111] => lookup_191_131_59(acc),
            [99, 104, 105, 107, 117, 109, 97] => lookup_191_131_60(acc),
            [115, 97, 107, 97, 101] => lookup_191_131_61(acc),
            [115, 104, 105, 111, 106, 105, 114, 105] => lookup_191_131_62(acc),
            [110, 97, 107, 97, 103, 97, 119, 97] => lookup_191_131_63(acc),
            [116, 111, 103, 117, 114, 97] => lookup_191_131_64(acc),
            [115, 117, 119, 97] => lookup_191_131_65(acc),
            [97, 115, 97, 104, 105] => lookup_191_131_66(acc),
            [99, 104, 105, 107, 117, 104, 111, 107, 117] => lookup_191_131_67(acc),
            [105, 105, 100, 97] => lookup_191_131_68(acc),
            [97, 110, 97, 110] => lookup_191_131_69(acc),
            [104, 97, 107, 117, 98, 97] => lookup_191_131_70(acc),
            [105, 107, 117, 115, 97, 107, 97] => lookup_191_131_71(acc),
            [109, 105, 110, 111, 119, 97] => lookup_191_131_72(acc),
            [111, 107, 97, 121, 97] => lookup_191_131_73(acc),
            [107, 97, 114, 117, 105, 122, 97, 119, 97] => lookup_191_131_74(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_135_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_135_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_135_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_135_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_135_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_135_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_135_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_135_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_135_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_135_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_135_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_135_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_135_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_135_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_135_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_135_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_135_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_135_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_135_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_135_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_135_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_135_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_135_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_135_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_135_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_135_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_135_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_135_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_135_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_135_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_135_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_135<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 105, 115, 104, 105, 116, 111, 115, 97] => lookup_191_135_0(acc),
            [97, 107, 105] => lookup_191_135_1(acc),
            [111, 116, 115, 117, 107, 105] => lookup_191_135_2(acc),
            [116, 111, 115, 97, 115, 104, 105, 109, 105, 122, 117] => lookup_191_135_3(acc),
            [115, 117, 115, 97, 107, 105] => lookup_191_135_4(acc),
            [111, 116, 111, 121, 111] => lookup_191_135_5(acc),
            [105, 110, 111] => lookup_191_135_6(acc),
            [121, 97, 115, 117, 100, 97] => lookup_191_135_7(acc),
            [110, 97, 110, 107, 111, 107, 117] => lookup_191_135_8(acc),
            [110, 97, 107, 97, 109, 117, 114, 97] => lookup_191_135_9(acc),
            [115, 117, 107, 117, 109, 111] => lookup_191_135_10(acc),
            [115, 97, 107, 97, 119, 97] => lookup_191_135_11(acc),
            [104, 105, 100, 97, 107, 97] => lookup_191_135_12(acc),
            [116, 111, 115, 97] => lookup_191_135_13(acc),
            [109, 105, 104, 97, 114, 97] => lookup_191_135_14(acc),
            [117, 109, 97, 106, 105] => lookup_191_135_15(acc),
            [107, 111, 99, 104, 105] => lookup_191_135_16(acc),
            [121, 117, 115, 117, 104, 97, 114, 97] => lookup_191_135_17(acc),
            [111, 107, 97, 119, 97] => lookup_191_135_18(acc),
            [103, 101, 105, 115, 101, 105] => lookup_191_135_19(acc),
            [116, 115, 117, 110, 111] => lookup_191_135_20(acc),
            [110, 97, 104, 97, 114, 105] => lookup_191_135_21(acc),
            [116, 111, 121, 111] => lookup_191_135_22(acc),
            [107, 105, 116, 97, 103, 97, 119, 97] => lookup_191_135_23(acc),
            [109, 117, 114, 111, 116, 111] => lookup_191_135_24(acc),
            [111, 99, 104, 105] => lookup_191_135_25(acc),
            [107, 97, 103, 97, 109, 105] => lookup_191_135_26(acc),
            [109, 111, 116, 111, 121, 97, 109, 97] => lookup_191_135_27(acc),
            [110, 105, 121, 111, 100, 111, 103, 97, 119, 97] => lookup_191_135_28(acc),
            [107, 97, 109, 105] => lookup_191_135_29(acc),
            [104, 105, 103, 97, 115, 104, 105, 116, 115, 117, 110, 111] => lookup_191_135_30(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_136_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_136_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_136_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_136_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_136_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_136_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_136_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_136_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_136_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_136_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_136_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_136_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_136_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_136_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_136_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_136_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_136_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_136_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_136_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_136_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_136_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_136_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_136_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_136_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_136_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_136_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_136_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_136<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 111, 114, 111, 116, 115, 117, 107, 97] => lookup_191_136_0(acc),
            [115, 97, 105, 116, 111] => lookup_191_136_1(acc),
            [115, 104, 105, 110, 116, 111, 109, 105] => lookup_191_136_2(acc),
            [103, 111, 107, 97, 115, 101] => lookup_191_136_3(acc),
            [109, 105, 121, 97, 122, 97, 107, 105] => lookup_191_136_4(acc),
            [110, 105, 99, 104, 105, 110, 97, 110] => lookup_191_136_5(acc),
            [116, 97, 107, 97, 104, 97, 114, 117] => lookup_191_136_6(acc),
            [107, 105, 116, 97, 117, 114, 97] => lookup_191_136_7(acc),
            [107, 97, 119, 97, 109, 105, 110, 97, 109, 105] => lookup_191_136_8(acc),
            [116, 97, 107, 97, 110, 97, 98, 101] => lookup_191_136_9(acc),
            [107, 117, 110, 105, 116, 111, 109, 105] => lookup_191_136_10(acc),
            [109, 105, 121, 97, 107, 111, 110, 111, 106, 111] => lookup_191_136_11(acc),
            [97, 121, 97] => lookup_191_136_12(acc),
            [116, 97, 107, 97, 122, 97, 107, 105] => lookup_191_136_13(acc),
            [116, 115, 117, 110, 111] => lookup_191_136_14(acc),
            [109, 105, 109, 97, 116, 97] => lookup_191_136_15(acc),
            [107, 105, 116, 97, 103, 97, 119, 97] => lookup_191_136_16(acc),
            [107, 111, 98, 97, 121, 97, 115, 104, 105] => lookup_191_136_17(acc),
            [110, 111, 98, 101, 111, 107, 97] => lookup_191_136_18(acc),
            [101, 98, 105, 110, 111] => lookup_191_136_19(acc),
            [110, 105, 115, 104, 105, 109, 101, 114, 97] => lookup_191_136_20(acc),
            [115, 104, 105, 105, 98, 97] => lookup_191_136_21(acc),
            [104, 121, 117, 103, 97] => lookup_191_136_22(acc),
            [107, 117, 115, 104, 105, 109, 97] => lookup_191_136_23(acc),
            [107, 105, 116, 97, 107, 97, 116, 97] => lookup_191_136_24(acc),
            [107, 105, 106, 111] => lookup_191_136_25(acc),
            [107, 97, 100, 111, 103, 97, 119, 97] => lookup_191_136_26(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_137_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_137_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_137_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_137_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_137_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_137_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_137_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_137_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_137_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_137_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_137_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_137_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_137_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_137_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_137_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_137_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_137_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_137_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_137_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_137_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_137_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_137_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_137_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_137<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 97, 103, 97, 104, 97, 109, 97] => lookup_191_137_0(acc),
            [116, 97, 107, 97, 116, 115, 117, 107, 105] => lookup_191_137_1(acc),
            [110, 111, 116, 111, 103, 97, 119, 97] => lookup_191_137_2(acc),
            [111, 116, 115, 117] => lookup_191_137_3(acc),
            [109, 111, 114, 105, 121, 97, 109, 97] => lookup_191_137_4(acc),
            [104, 105, 103, 97, 115, 104, 105, 111, 109, 105] => lookup_191_137_5(acc),
            [107, 117, 115, 97, 116, 115, 117] => lookup_191_137_6(acc),
            [110, 105, 115, 104, 105, 97, 122, 97, 105] => lookup_191_137_7(acc),
            [116, 97, 107, 97, 115, 104, 105, 109, 97] => lookup_191_137_8(acc),
            [116, 111, 114, 97, 104, 105, 109, 101] => lookup_191_137_9(acc),
            [116, 111, 121, 111, 115, 97, 116, 111] => lookup_191_137_10(acc),
            [107, 111, 116, 111] => lookup_191_137_11(acc),
            [103, 97, 109, 111] => lookup_191_137_12(acc),
            [114, 121, 117, 111, 104] => lookup_191_137_13(acc),
            [111, 109, 105, 104, 97, 99, 104, 105, 109, 97, 110] => lookup_191_137_14(acc),
            [107, 111, 107, 97] => lookup_191_137_15(acc),
            [107, 111, 115, 101, 105] => lookup_191_137_16(acc),
            [114, 105, 116, 116, 111] => lookup_191_137_17(acc),
            [107, 111, 110, 97, 110] => lookup_191_137_18(acc),
            [97, 105, 115, 104, 111] => lookup_191_137_19(acc),
            [104, 105, 107, 111, 110, 101] => lookup_191_137_20(acc),
            [121, 97, 115, 117] => lookup_191_137_21(acc),
            [109, 97, 105, 98, 97, 114, 97] => lookup_191_137_22(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_140_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_140_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_140_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_140_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_140_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_140_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_140_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_140_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_140_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_140_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_140_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_140_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_140_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_140_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_140_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_140<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 97, 110, 110, 111] => lookup_191_140_0(acc),
            [117, 99, 104, 105, 110, 111, 109, 105] => lookup_191_140_1(acc),
            [116, 97, 100, 111, 116, 115, 117] => lookup_191_140_2(acc),
            [122, 101, 110, 116, 115, 117, 106, 105] => lookup_191_140_3(acc),
            [110, 97, 111, 115, 104, 105, 109, 97] => lookup_191_140_4(acc),
            [104, 105, 103, 97, 115, 104, 105, 107, 97, 103, 97, 119, 97] => lookup_191_140_5(acc),
            [116, 97, 107, 97, 109, 97, 116, 115, 117] => lookup_191_140_6(acc),
            [109, 105, 116, 111, 121, 111] => lookup_191_140_7(acc),
            [117, 116, 97, 122, 117] => lookup_191_140_8(acc),
            [97, 121, 97, 103, 97, 119, 97] => lookup_191_140_9(acc),
            [107, 97, 110, 111, 110, 106, 105] => lookup_191_140_10(acc),
            [115, 97, 110, 117, 107, 105] => lookup_191_140_11(acc),
            [116, 111, 110, 111, 115, 104, 111] => lookup_191_140_12(acc),
            [107, 111, 116, 111, 104, 105, 114, 97] => lookup_191_140_13(acc),
            [109, 97, 114, 117, 103, 97, 109, 101] => lookup_191_140_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_144_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_144_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_144_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_144_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_144_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_144_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_144_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_144_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_144_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_144_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_144_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_144_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_144_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_144_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_144_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_144_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_144_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_144_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_144_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_144_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_144_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_144_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_144<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 117, 116, 115, 117] => lookup_191_144_0(acc),
            [105, 107, 105] => lookup_191_144_1(acc),
            [116, 111, 103, 105, 116, 115, 117] => lookup_191_144_2(acc),
            [103, 111, 116, 111] => lookup_191_144_3(acc),
            [115, 104, 105, 109, 97, 98, 97, 114, 97] => lookup_191_144_4(acc),
            [107, 97, 119, 97, 116, 97, 110, 97] => lookup_191_144_5(acc),
            [111, 109, 117, 114, 97] => lookup_191_144_6(acc),
            [99, 104, 105, 106, 105, 119, 97] => lookup_191_144_7(acc),
            [110, 97, 103, 97, 115, 97, 107, 105] => lookup_191_144_8(acc),
            [111, 98, 97, 109, 97] => lookup_191_144_9(acc),
            [115, 104, 105, 110, 107, 97, 109, 105, 103, 111, 116, 111] => lookup_191_144_10(acc),
            [115, 97, 105, 107, 97, 105] => lookup_191_144_11(acc),
            [115, 97, 115, 101, 98, 111] => lookup_191_144_12(acc),
            [109, 97, 116, 115, 117, 117, 114, 97] => lookup_191_144_13(acc),
            [116, 115, 117, 115, 104, 105, 109, 97] => lookup_191_144_14(acc),
            [117, 110, 122, 101, 110] => lookup_191_144_15(acc),
            [115, 101, 105, 104, 105] => lookup_191_144_16(acc),
            [104, 105, 114, 97, 100, 111] => lookup_191_144_17(acc),
            [104, 97, 115, 97, 109, 105] => lookup_191_144_18(acc),
            [107, 117, 99, 104, 105, 110, 111, 116, 115, 117] => lookup_191_144_19(acc),
            [111, 115, 101, 116, 111] => lookup_191_144_20(acc),
            [105, 115, 97, 104, 97, 121, 97] => lookup_191_144_21(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_150_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_150_1(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_150<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_191_150_1(acc),
            wild => lookup_191_150_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_191_151_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_151_1(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_151<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_191_151_1(acc),
            wild => lookup_191_151_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_191_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_153_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_153_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_153_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_153_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_153_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_153_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_153_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_153_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_153_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_153_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_153_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_153_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_153_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_153_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_153_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_153_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_153_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_153_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_153_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_153_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_153_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_153_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_153_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_153_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_153_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_153<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 97, 116, 115, 117, 107, 97, 105, 99, 104, 105] => lookup_191_153_0(acc),
            [109, 105, 104, 97, 114, 97] => lookup_191_153_1(acc),
            [115, 101, 114, 97, 110, 105, 115, 104, 105] => lookup_191_153_2(acc),
            [110, 97, 107, 97] => lookup_191_153_3(acc),
            [111, 115, 97, 107, 105, 107, 97, 109, 105, 106, 105, 109, 97] => lookup_191_153_4(acc),
            [115, 104, 105, 110, 105, 99, 104, 105] => lookup_191_153_5(acc),
            [116, 97, 107, 101, 104, 97, 114, 97] => lookup_191_153_6(acc),
            [102, 117, 99, 104, 117] => lookup_191_153_7(acc),
            [104, 111, 110, 103, 111] => lookup_191_153_8(acc),
            [109, 105, 121, 111, 115, 104, 105] => lookup_191_153_9(acc),
            [107, 117, 114, 101] => lookup_191_153_10(acc),
            [106, 105, 110, 115, 101, 107, 105, 107, 111, 103, 101, 110] => lookup_191_153_11(acc),
            [115, 104, 111, 98, 97, 114, 97] => lookup_191_153_12(acc),
            [100, 97, 105, 119, 97] => lookup_191_153_13(acc),
            [104, 105, 103, 97, 115, 104, 105, 104, 105, 114, 111, 115, 104, 105, 109, 97] => {
                lookup_191_153_14(acc)
            }
            [107, 117, 109, 97, 110, 111] => lookup_191_153_15(acc),
            [101, 116, 97, 106, 105, 109, 97] => lookup_191_153_16(acc),
            [115, 101, 114, 97] => lookup_191_153_17(acc),
            [107, 97, 105, 116, 97] => lookup_191_153_18(acc),
            [102, 117, 107, 117, 121, 97, 109, 97] => lookup_191_153_19(acc),
            [107, 117, 105] => lookup_191_153_20(acc),
            [111, 110, 111, 109, 105, 99, 104, 105] => lookup_191_153_21(acc),
            [115, 97, 107, 97] => lookup_191_153_22(acc),
            [111, 116, 97, 107, 101] => lookup_191_153_23(acc),
            [97, 115, 97, 109, 105, 110, 97, 109, 105] => lookup_191_153_24(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191_158(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 111, 99, 104, 105, 103, 105] => lookup_191_0(labels, acc),
            [121, 97, 109, 97, 103, 117, 99, 104, 105] => lookup_191_1(labels, acc),
            [120, 110, 45, 45, 107, 108, 116, 121, 53, 120] => lookup_191_2(acc),
            [230, 160, 131, 230, 156, 168] => lookup_191_3(acc),
            [103, 117, 110, 109, 97] => lookup_191_4(labels, acc),
            [120, 110, 45, 45, 49, 99, 116, 119, 111] => lookup_191_5(acc),
            [101, 100] => lookup_191_6(acc),
            [229, 178, 161, 229, 177, 177] => lookup_191_7(acc),
            [229, 179, 182, 230, 160, 185] => lookup_191_8(acc),
            [230, 187, 139, 232, 179, 128] => lookup_191_9(acc),
            [120, 110, 45, 45, 101, 108, 113, 113, 49, 54, 104] => lookup_191_10(acc),
            [233, 166, 153, 229, 183, 157] => lookup_191_11(acc),
            [120, 110, 45, 45, 56, 112, 118, 114, 52, 117] => lookup_191_12(acc),
            [120, 110, 45, 45, 50, 109, 52, 97, 49, 53, 101] => lookup_191_13(acc),
            [120, 110, 45, 45, 102, 54, 113, 120, 53, 51, 97] => lookup_191_14(acc),
            [110, 105, 105, 103, 97, 116, 97] => lookup_191_15(labels, acc),
            [120, 110, 45, 45, 53, 114, 116, 113, 51, 52, 107] => lookup_191_16(acc),
            [120, 110, 45, 45, 100, 53, 113, 118, 55, 122, 56, 55, 54, 99] => lookup_191_17(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_191_18(acc),
            [229, 178, 144, 233, 152, 156] => lookup_191_19(acc),
            [97, 99] => lookup_191_20(acc),
            [233, 157, 146, 230, 163, 174] => lookup_191_21(acc),
            [116, 111, 116, 116, 111, 114, 105] => lookup_191_22(labels, acc),
            [109, 105, 121, 97, 103, 105] => lookup_191_23(labels, acc),
            [97, 111, 109, 111, 114, 105] => lookup_191_24(labels, acc),
            [97, 105, 99, 104, 105] => lookup_191_25(labels, acc),
            [120, 110, 45, 45, 100, 106, 116, 121, 52, 107] => lookup_191_26(acc),
            [120, 110, 45, 45, 107, 108, 116, 120, 57, 97] => lookup_191_27(acc),
            [120, 110, 45, 45, 52, 105, 116, 55, 57, 55, 107] => lookup_191_28(acc),
            [229, 178, 169, 230, 137, 139] => lookup_191_29(acc),
            [229, 177, 177, 229, 189, 162] => lookup_191_30(acc),
            [120, 110, 45, 45, 101, 104, 113, 122, 53, 54, 110] => lookup_191_31(acc),
            [120, 110, 45, 45, 107, 108, 116, 55, 56, 55, 100] => lookup_191_32(acc),
            [119, 97, 107, 97, 121, 97, 109, 97] => lookup_191_33(labels, acc),
            [229, 177, 177, 230, 162, 168] => lookup_191_34(acc),
            [103, 105, 102, 117] => lookup_191_35(labels, acc),
            [99, 111] => lookup_191_36(acc),
            [107, 121, 111, 116, 111] => lookup_191_37(labels, acc),
            [115, 97, 112, 112, 111, 114, 111] => lookup_191_38(info, labels, acc),
            [233, 185, 191, 229, 133, 144, 229, 179, 182] => lookup_191_39(acc),
            [120, 110, 45, 45, 116, 111, 114, 49, 51, 49, 111] => lookup_191_40(acc),
            [121, 97, 109, 97, 103, 97, 116, 97] => lookup_191_41(labels, acc),
            [228, 184, 137, 233, 135, 141] => lookup_191_42(acc),
            [120, 110, 45, 45, 110, 116, 115, 111, 48, 105, 113, 120, 51, 97] => lookup_191_43(acc),
            [97, 107, 105, 116, 97] => lookup_191_44(labels, acc),
            [229, 164, 167, 233, 152, 170] => lookup_191_45(acc),
            [110, 101] => lookup_191_46(labels, acc),
            [115, 104, 105, 122, 117, 111, 107, 97] => lookup_191_47(labels, acc),
            [103, 114] => lookup_191_48(acc),
            [120, 110, 45, 45, 101, 102, 118, 110, 57, 115] => lookup_191_49(acc),
            [115, 97, 103, 97] => lookup_191_50(labels, acc),
            [120, 110, 45, 45, 107, 108, 116, 112, 55, 100] => lookup_191_51(acc),
            [105, 115, 104, 105, 107, 97, 119, 97] => lookup_191_52(labels, acc),
            [115, 97, 105, 116, 97, 109, 97] => lookup_191_53(labels, acc),
            [229, 140, 151, 230, 181, 183, 233, 129, 147] => lookup_191_54(acc),
            [233, 179, 165, 229, 143, 150] => lookup_191_55(acc),
            [233, 171, 152, 231, 159, 165] => lookup_191_56(acc),
            [120, 110, 45, 45, 51, 50, 118, 112, 51, 48, 104] => lookup_191_57(acc),
            [120, 110, 45, 45, 118, 103, 117, 52, 48, 50, 99] => lookup_191_58(acc),
            [111, 107, 105, 110, 97, 119, 97] => lookup_191_59(labels, acc),
            [230, 178, 150, 231, 184, 132] => lookup_191_60(acc),
            [120, 110, 45, 45, 117, 117, 119, 117, 53, 56, 97] => lookup_191_61(acc),
            [230, 157, 177, 228, 186, 172] => lookup_191_62(acc),
            [120, 110, 45, 45, 114, 104, 116, 50, 55, 122] => lookup_191_63(acc),
            [120, 110, 45, 45, 109, 107, 114, 117, 52, 53, 105] => lookup_191_64(acc),
            [102, 117, 107, 117, 111, 107, 97] => lookup_191_65(labels, acc),
            [120, 110, 45, 45, 99, 51, 115, 49, 52, 109] => lookup_191_66(acc),
            [120, 110, 45, 45, 49, 108, 113, 115, 48, 51, 110] => lookup_191_67(acc),
            [120, 110, 45, 45, 48, 116, 114, 113, 55, 112, 55, 110, 110] => lookup_191_68(acc),
            [233, 149, 183, 233, 135, 142] => lookup_191_69(acc),
            [121, 97, 109, 97, 110, 97, 115, 104, 105] => lookup_191_70(labels, acc),
            [229, 175, 140, 229, 177, 177] => lookup_191_71(acc),
            [229, 146, 140, 230, 173, 140, 229, 177, 177] => lookup_191_72(acc),
            [232, 140, 168, 229, 159, 142] => lookup_191_73(acc),
            [120, 110, 45, 45, 114, 104, 116, 54, 49, 101] => lookup_191_74(acc),
            [108, 103] => lookup_191_75(acc),
            [109, 105, 101] => lookup_191_76(labels, acc),
            [228, 186, 172, 233, 131, 189] => lookup_191_77(acc),
            [229, 164, 167, 229, 136, 134] => lookup_191_78(acc),
            [110, 97, 114, 97] => lookup_191_79(labels, acc),
            [107, 105, 116, 97, 107, 121, 117, 115, 104, 117] => lookup_191_80(info, labels, acc),
            [229, 141, 131, 232, 145, 137] => lookup_191_81(acc),
            [229, 190, 179, 229, 179, 182] => lookup_191_82(acc),
            [120, 110, 45, 45, 112, 115, 115, 117, 51, 51, 108] => lookup_191_83(acc),
            [121, 111, 107, 111, 104, 97, 109, 97] => lookup_191_84(info, labels, acc),
            [102, 117, 107, 117, 115, 104, 105, 109, 97] => lookup_191_85(labels, acc),
            [120, 110, 45, 45, 122, 98, 120, 48, 50, 53, 100] => lookup_191_86(acc),
            [231, 165, 158, 229, 165, 136, 229, 183, 157] => lookup_191_87(acc),
            [230, 150, 176, 230, 189, 159] => lookup_191_88(acc),
            [107, 117, 109, 97, 109, 111, 116, 111] => lookup_191_89(labels, acc),
            [231, 134, 138, 230, 156, 172] => lookup_191_90(acc),
            [111, 115, 97, 107, 97] => lookup_191_91(labels, acc),
            [120, 110, 45, 45, 110, 105, 116, 50, 50, 53, 107] => lookup_191_92(acc),
            [107, 111, 98, 101] => lookup_191_93(info, labels, acc),
            [104, 111, 107, 107, 97, 105, 100, 111] => lookup_191_94(labels, acc),
            [231, 166, 143, 228, 186, 149] => lookup_191_95(acc),
            [120, 110, 45, 45, 110, 116, 115, 113, 49, 55, 103] => lookup_191_96(acc),
            [104, 121, 111, 103, 111] => lookup_191_97(labels, acc),
            [120, 110, 45, 45, 49, 108, 113, 115, 55, 49, 100] => lookup_191_98(acc),
            [99, 104, 105, 98, 97] => lookup_191_99(labels, acc),
            [107, 97, 103, 111, 115, 104, 105, 109, 97] => lookup_191_100(labels, acc),
            [111, 107, 97, 121, 97, 109, 97] => lookup_191_101(labels, acc),
            [102, 117, 107, 117, 105] => lookup_191_102(labels, acc),
            [120, 110, 45, 45, 100, 106, 114, 115, 55, 50, 100, 54, 117, 121] => {
                lookup_191_103(acc)
            }
            [228, 189, 144, 232, 179, 128] => lookup_191_104(acc),
            [229, 159, 188, 231, 142, 137] => lookup_191_105(acc),
            [116, 111, 107, 117, 115, 104, 105, 109, 97] => lookup_191_106(labels, acc),
            [120, 110, 45, 45, 117, 105, 115, 122, 51, 103] => lookup_191_107(acc),
            [120, 110, 45, 45, 52, 105, 116, 49, 54, 56, 100] => lookup_191_108(acc),
            [111, 105, 116, 97] => lookup_191_109(labels, acc),
            [111, 114] => lookup_191_110(acc),
            [231, 159, 179, 229, 183, 157] => lookup_191_111(acc),
            [120, 110, 45, 45, 54, 98, 116, 119, 53, 97] => lookup_191_112(acc),
            [116, 111, 107, 121, 111] => lookup_191_113(labels, acc),
            [107, 97, 119, 97, 115, 97, 107, 105] => lookup_191_114(info, labels, acc),
            [229, 177, 177, 229, 143, 163] => lookup_191_115(acc),
            [231, 190, 164, 233, 166, 172] => lookup_191_116(acc),
            [117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => lookup_191_117(acc),
            [105, 119, 97, 116, 101] => lookup_191_118(labels, acc),
            [115, 104, 105, 109, 97, 110, 101] => lookup_191_119(labels, acc),
            [116, 111, 121, 97, 109, 97] => lookup_191_120(labels, acc),
            [233, 149, 183, 229, 180, 142] => lookup_191_121(acc),
            [101, 104, 105, 109, 101] => lookup_191_122(labels, acc),
            [229, 174, 174, 229, 159, 142] => lookup_191_123(acc),
            [229, 186, 131, 229, 179, 182] => lookup_191_124(acc),
            [120, 110, 45, 45, 56, 108, 116, 114, 54, 50, 107] => lookup_191_125(acc),
            [107, 97, 110, 97, 103, 97, 119, 97] => lookup_191_126(labels, acc),
            [230, 132, 155, 229, 170, 155] => lookup_191_127(acc),
            [120, 110, 45, 45, 53, 114, 116, 112, 52, 57, 99] => lookup_191_128(acc),
            [229, 174, 174, 229, 180, 142] => lookup_191_129(acc),
            [105, 98, 97, 114, 97, 107, 105] => lookup_191_130(labels, acc),
            [110, 97, 103, 97, 110, 111] => lookup_191_131(labels, acc),
            [230, 132, 155, 231, 159, 165] => lookup_191_132(acc),
            [120, 110, 45, 45, 117, 105, 115, 116, 50, 50, 104] => lookup_191_133(acc),
            [120, 110, 45, 45, 55, 116, 48, 97, 50, 54, 52, 99] => lookup_191_134(acc),
            [107, 111, 99, 104, 105] => lookup_191_135(labels, acc),
            [109, 105, 121, 97, 122, 97, 107, 105] => lookup_191_136(labels, acc),
            [115, 104, 105, 103, 97] => lookup_191_137(labels, acc),
            [229, 133, 181, 229, 186, 171] => lookup_191_138(acc),
            [233, 157, 153, 229, 178, 161] => lookup_191_139(acc),
            [107, 97, 103, 97, 119, 97] => lookup_191_140(labels, acc),
            [231, 167, 139, 231, 148, 176] => lookup_191_141(acc),
            [231, 166, 143, 229, 178, 161] => lookup_191_142(acc),
            [103, 111] => lookup_191_143(acc),
            [110, 97, 103, 97, 115, 97, 107, 105] => lookup_191_144(labels, acc),
            [120, 110, 45, 45, 107, 98, 114, 113, 55, 111] => lookup_191_145(acc),
            [231, 166, 143, 229, 179, 182] => lookup_191_146(acc),
            [120, 110, 45, 45, 114, 104, 116, 51, 100] => lookup_191_147(acc),
            [120, 110, 45, 45, 114, 110, 121, 51, 49, 104] => lookup_191_148(acc),
            [120, 110, 45, 45, 107, 55, 121, 110, 57, 53, 101] => lookup_191_149(acc),
            [110, 97, 103, 111, 121, 97] => lookup_191_150(info, labels, acc),
            [115, 101, 110, 100, 97, 105] => lookup_191_151(info, labels, acc),
            [120, 110, 45, 45, 53, 106, 115, 48, 52, 53, 100] => lookup_191_152(acc),
            [104, 105, 114, 111, 115, 104, 105, 109, 97] => lookup_191_153(labels, acc),
            [120, 110, 45, 45, 54, 111, 114, 120, 50, 114] => lookup_191_154(acc),
            [120, 110, 45, 45, 52, 112, 118, 120, 115] => lookup_191_155(acc),
            [97, 100] => lookup_191_156(acc),
            [229, 165, 136, 232, 137, 175] => lookup_191_157(acc),
            [120, 110, 45, 45, 113, 113, 113, 116, 49, 49, 109] => lookup_191_158(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_192_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_192_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_192_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_192_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_192_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_192_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_192_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_192_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_192_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_192_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_192_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_192_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_192_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_192_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_192_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_192_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_192_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_192<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 105, 114, 109] => lookup_192_0(acc),
            [103, 111, 117, 118] => lookup_192_1(acc),
            [99, 111, 109] => lookup_192_2(acc),
            [105, 110, 102, 111] => lookup_192_3(acc),
            [110, 101, 116] => lookup_192_4(acc),
            [111, 114, 103] => lookup_192_5(acc),
            [112, 114, 111] => lookup_192_6(acc),
            [97, 100, 117, 108, 116] => lookup_192_7(acc),
            [97, 114, 116] => lookup_192_8(acc),
            [99, 111, 111, 112] => lookup_192_9(acc),
            [112, 111, 108] => lookup_192_10(acc),
            [101, 100, 117] => lookup_192_11(acc),
            [114, 101, 108] => lookup_192_12(acc),
            [112, 101, 114, 115, 111] => lookup_192_13(acc),
            [97, 115, 115, 111] => lookup_192_14(acc),
            [109, 101, 100] => lookup_192_15(acc),
            [115, 104, 111, 112] => lookup_192_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_193() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_194() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_195() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_196() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_197() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_198() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_199() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_200() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_201() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_202() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_203() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_204() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_205_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_205<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_205_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_206() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_207() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_208() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_209() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_210() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_211() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_212() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_213() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_214() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_215() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_216() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_217() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_218() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_219() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_221() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_222_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_222_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_222_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_222_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_222_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_222<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_222_0(acc),
            [101, 100, 117] => lookup_222_1(acc),
            [110, 101, 116] => lookup_222_2(acc),
            [114, 97, 100, 105, 111] => lookup_222_3(acc),
            [111, 114, 103] => lookup_222_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_223_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_223_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_223_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_223_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_223_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_223_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_223<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_223_0(acc),
            [110, 97, 109, 101] => lookup_223_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_223_2(acc),
            [102, 114, 101, 101] => lookup_223_3(acc),
            [105, 122] => lookup_223_4(acc),
            [102, 114, 111, 109] => lookup_223_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_224() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_225() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_226_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_226_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_226_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_226_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_226_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_226_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_226_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_226_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_226_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_226_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_226_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_226_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_226<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [106, 112] => lookup_226_0(acc),
            [117, 115] => lookup_226_1(acc),
            [101, 100, 117] => lookup_226_2(acc),
            [103, 111, 118] => lookup_226_3(acc),
            [116, 118] => lookup_226_4(acc),
            [99, 111, 109] => lookup_226_5(acc),
            [110, 101, 116] => lookup_226_6(acc),
            [98, 108, 111, 103] => lookup_226_7(acc),
            [105, 111] => lookup_226_8(acc),
            [111, 114, 103] => lookup_226_9(acc),
            [117, 107] => lookup_226_10(acc),
            [109, 105, 108] => lookup_226_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_227() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_228() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_229() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_230_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_230_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_230_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_230_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_230_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_230_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_230_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_230_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_230_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_230<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_230_0(labels, acc),
            [103, 117, 98] => lookup_230_1(acc),
            [101, 100, 117] => lookup_230_2(acc),
            [110, 101, 116] => lookup_230_3(acc),
            [110, 111, 109] => lookup_230_4(acc),
            [111, 114, 103] => lookup_230_5(acc),
            [109, 105, 108] => lookup_230_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_231() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_232() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_233() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_234() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_235_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_235_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_235<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [119, 105, 116, 104] => lookup_235_0(acc),
            [102, 114, 111, 109] => lookup_235_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_236_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_236_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_236_2_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_236_2_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_236_2_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_236_2_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_236_2_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_236_2_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_236_2_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_236_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [105, 110] => lookup_236_2_0(info, labels, acc),
            [101, 120] => lookup_236_2_2(info, labels, acc),
            wild => lookup_236_2_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_236_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_236_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_236_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_236_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_236_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_236_7<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_236_7_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_236_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_236_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [119, 105, 101, 110] => lookup_236_8_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_236_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_236_9<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 104] => lookup_236_9_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_236_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_236_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_236_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_236_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_236_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_236_15_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_236_15_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_236_15_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_236_15_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_236_15_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_236_15_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_236_15<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [107, 117, 110, 100, 101, 110] => lookup_236_15_0(info, labels, acc),
            [101, 120] => lookup_236_15_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_236<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [52, 108, 105, 109, 97] => lookup_236_0(acc),
            [102, 117, 116, 117, 114, 101, 104, 111, 115, 116, 105, 110, 103] => lookup_236_1(acc),
            [102, 117, 116, 117, 114, 101, 99, 109, 115] => lookup_236_2(info, labels, acc),
            [112, 114, 105, 118] => lookup_236_3(acc),
            [105, 110, 102, 111] => lookup_236_4(acc),
            [103, 118] => lookup_236_5(acc),
            [49, 50, 104, 112] => lookup_236_6(acc),
            [99, 111] => lookup_236_7(labels, acc),
            [102, 117, 110, 107, 102, 101, 117, 101, 114] => lookup_236_8(info, labels, acc),
            [97, 99] => lookup_236_9(labels, acc),
            [98, 105, 122] => lookup_236_10(acc),
            [50, 105, 120] => lookup_236_11(acc),
            [111, 114] => lookup_236_12(acc),
            [108, 105, 109, 97, 45, 99, 105, 116, 121] => lookup_236_13(acc),
            [102, 117, 116, 117, 114, 101, 109, 97, 105, 108, 105, 110, 103] => lookup_236_14(acc),
            [111, 114, 116, 115, 105, 110, 102, 111] => lookup_236_15(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_237_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_237_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_237_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_237_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_237_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_237_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_237_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_237_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_237_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_237_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_237_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_237<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 110, 100] => lookup_237_0(acc),
            [101, 100, 117] => lookup_237_1(acc),
            [116, 111] => lookup_237_2(acc),
            [110, 111, 109] => lookup_237_3(acc),
            [99, 111, 109] => lookup_237_4(acc),
            [100, 101] => lookup_237_5(acc),
            [110, 101, 116] => lookup_237_6(acc),
            [98, 108, 111, 103] => lookup_237_7(acc),
            [111, 114, 103] => lookup_237_8(acc),
            [103, 111, 98] => lookup_237_9(acc),
            [109, 105, 108] => lookup_237_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_239() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_240_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_240<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 109, 103] => lookup_240_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_241() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_242() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_243() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_244_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_244_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_244_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_244_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_244_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_244_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_244_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_244_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_244<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_244_0(acc),
            [103, 111, 118] => lookup_244_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_244_2(acc),
            [110, 111, 109] => lookup_244_3(acc),
            [99, 111, 109] => lookup_244_4(acc),
            [110, 101, 116] => lookup_244_5(acc),
            [111, 114, 103] => lookup_244_6(acc),
            [109, 105, 108] => lookup_244_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_245() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_246() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_247() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_248() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_249() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_251<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 119, 110] => lookup_251_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_252() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_254() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_255_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_255_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_255_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_255_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_255_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_255_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_255<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_255_0(acc),
            [117, 119, 117] => lookup_255_1(acc),
            [110, 101, 116] => lookup_255_2(acc),
            [111, 102, 102] => lookup_255_3(acc),
            [111, 114, 103] => lookup_255_4(acc),
            [110, 111, 109] => lookup_255_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_256() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_257() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_259() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_260() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_261_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_261_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_261<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 121, 109] => lookup_261_0(acc),
            [103, 111, 118] => lookup_261_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_262() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_263() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_264_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_264<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_264_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_266() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_267() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_268() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_269() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_270() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_271() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_272() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_273() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_274() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_275() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_276() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_277_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_277<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_277_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_278() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_279() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_280() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_281() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_282() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_283() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_284() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_285() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_286() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_287() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_288() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_289_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_289_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_289_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_289_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 97, 101, 109, 111, 110] => lookup_289_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_289_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_289_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_289_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_289<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_289_0(acc),
            [110, 101, 116] => lookup_289_1(acc),
            [112, 97, 110, 101, 108] => lookup_289_2(labels, acc),
            [111, 114, 103] => lookup_289_3(acc),
            [107, 97, 97, 115] => lookup_289_4(acc),
            [99, 121, 97] => lookup_289_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_290() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_291() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_292_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_292_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_292_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_292_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_292_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_292_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [117, 112, 97, 97, 115] => lookup_292_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_292_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_292_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_292_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_292_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_292<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 121, 109] => lookup_292_0(acc),
            [106, 99, 108, 111, 117, 100] => lookup_292_1(acc),
            [101, 100, 117] => lookup_292_2(acc),
            [103, 111, 118] => lookup_292_3(acc),
            [107, 97, 122, 116, 101, 108, 101, 112, 111, 114, 116] => {
                lookup_292_4(info, labels, acc)
            }
            [99, 111, 109] => lookup_292_5(acc),
            [110, 101, 116] => lookup_292_6(acc),
            [111, 114, 103] => lookup_292_7(acc),
            [109, 105, 108] => lookup_292_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_293() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_294() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_295() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_296() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_298_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_298<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 110, 100, 105, 101] => lookup_298_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_299() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_300() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_301() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_302() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_303_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_303_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_303_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_303_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_303_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_303_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_303_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_303_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_303_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_303_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_303_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_303_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_303_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_303_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_303_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_303_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_303_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_303<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 97, 109, 101] => lookup_303_0(acc),
            [109, 111, 98, 105] => lookup_303_1(acc),
            [99, 111, 109] => lookup_303_2(acc),
            [105, 110, 102, 111] => lookup_303_3(acc),
            [97, 101, 114, 111] => lookup_303_4(acc),
            [110, 101, 116] => lookup_303_5(acc),
            [116, 114, 97, 118, 101, 108] => lookup_303_6(acc),
            [111, 114, 103] => lookup_303_7(acc),
            [112, 114, 111] => lookup_303_8(acc),
            [109, 117, 115, 101, 117, 109] => lookup_303_9(acc),
            [105, 110, 116] => lookup_303_10(acc),
            [99, 111] => lookup_303_11(acc),
            [99, 111, 111, 112] => lookup_303_12(acc),
            [103, 111, 118] => lookup_303_13(acc),
            [101, 100, 117] => lookup_303_14(acc),
            [98, 105, 122] => lookup_303_15(acc),
            [106, 111, 98, 115] => lookup_303_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_304() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_305() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_306_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_306_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_306_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_306_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_306_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_306_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_306_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_306_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_306<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_306_0(acc),
            [99, 99] => lookup_306_1(acc),
            [110, 111, 109] => lookup_306_2(acc),
            [99, 111, 109] => lookup_306_3(acc),
            [110, 101, 116] => lookup_306_4(acc),
            [111, 114, 103] => lookup_306_5(acc),
            [103, 111, 98] => lookup_306_6(acc),
            [109, 105, 108] => lookup_306_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_307() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_308() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_309() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_310() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_311_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_311_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_311_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_311_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_311_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_311<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_311_0(acc),
            [101, 100, 117] => lookup_311_1(acc),
            [110, 101, 116] => lookup_311_2(acc),
            [103, 111, 118] => lookup_311_3(acc),
            [111, 114, 103] => lookup_311_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_312() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_313() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_314() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_315_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_315_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_315<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 115, 111] => lookup_315_0(acc),
            [110, 111, 109] => lookup_315_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_316() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_317() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_318() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_320() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_321() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_322() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_323_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_323<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 111, 103, 105, 110, 108, 105, 110, 101] => lookup_323_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_324() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_325() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_326() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_327() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_328() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_329() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_330() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_331() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_332() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_333() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_334() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_335() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_337() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_338_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_338_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_338_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_338_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_338<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_338_0(acc),
            [101, 100, 117] => lookup_338_1(acc),
            [110, 101, 116] => lookup_338_2(acc),
            [111, 114, 103] => lookup_338_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_339_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_339_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_339_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_339_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_339_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_339<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_339_0(acc),
            [101, 100, 117] => lookup_339_1(acc),
            [103, 111, 118] => lookup_339_2(acc),
            [110, 101, 116] => lookup_339_3(acc),
            [111, 114, 103] => lookup_339_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_340() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_341() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_342() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_343() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_344() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_345() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_346() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_347() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_348_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_348_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_348_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_348_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 31usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_348_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_348_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_348_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_348_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_348_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_348_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_348_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_348_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_348_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_348_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_348_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_348_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_348_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_348_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_348_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_348_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_348_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_348_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_348_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_348_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_348_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_348_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_348_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_348_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_348_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_348<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_348_0(acc),
            [103, 111, 117, 118] => lookup_348_1(acc),
            [102, 114, 101, 101, 98, 111, 120, 111, 115] => lookup_348_2(acc),
            [99, 104, 105, 114, 117, 114, 103, 105, 101, 110, 115, 45, 100, 101, 110, 116, 105, 115, 116, 101, 115, 45, 101, 110, 45, 102, 114, 97, 110, 99, 101] => {
                lookup_348_3(acc)
            }
            [101, 110, 45, 114, 111, 111, 116] => lookup_348_4(acc),
            [101, 120, 112, 101, 114, 116, 115, 45, 99, 111, 109, 112, 116, 97, 98, 108, 101, 115] => {
                lookup_348_5(acc)
            }
            [111, 110, 45, 119, 101, 98] => lookup_348_6(acc),
            [104, 117, 105, 115, 115, 105, 101, 114, 45, 106, 117, 115, 116, 105, 99, 101] => {
                lookup_348_7(acc)
            }
            [102, 114, 101, 101, 98, 111, 120, 45, 111, 115] => lookup_348_8(acc),
            [97, 118, 111, 117, 101, 115] => lookup_348_9(acc),
            [116, 109] => lookup_348_10(acc),
            [97, 115, 115, 111] => lookup_348_11(acc),
            [102, 98, 120, 45, 111, 115] => lookup_348_12(acc),
            [109, 101, 100, 101, 99, 105, 110] => lookup_348_13(acc),
            [99, 104, 97, 109, 98, 97, 103, 114, 105] => lookup_348_14(acc),
            [112, 114, 100] => lookup_348_15(acc),
            [103, 101, 111, 109, 101, 116, 114, 101, 45, 101, 120, 112, 101, 114, 116] => {
                lookup_348_16(acc)
            }
            [110, 111, 109] => lookup_348_17(acc),
            [99, 111, 109] => lookup_348_18(acc),
            [99, 99, 105] => lookup_348_19(acc),
            [112, 111, 114, 116] => lookup_348_20(acc),
            [118, 101, 116, 101, 114, 105, 110, 97, 105, 114, 101] => lookup_348_21(acc),
            [99, 104, 105, 114, 117, 114, 103, 105, 101, 110, 115, 45, 100, 101, 110, 116, 105, 115, 116, 101, 115] => {
                lookup_348_22(acc)
            }
            [103, 114, 101, 116, 97] => lookup_348_23(acc),
            [102, 98, 120, 111, 115] => lookup_348_24(acc),
            [97, 118, 111, 99, 97, 116] => lookup_348_25(acc),
            [112, 104, 97, 114, 109, 97, 99, 105, 101, 110] => lookup_348_26(acc),
            [110, 111, 116, 97, 105, 114, 101, 115] => lookup_348_27(acc),
            [97, 101, 114, 111, 112, 111, 114, 116] => lookup_348_28(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_349_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_349_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_349_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_349_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_349_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_349_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_349_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_349_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_349_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_349_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_349_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_349_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_349_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_349_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_349_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_349_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_349_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_115<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [117, 122, 115] => lookup_349_115_0(acc),
            [112, 97] => lookup_349_115_1(acc),
            [117, 109] => lookup_349_115_2(acc),
            [109, 119] => lookup_349_115_3(acc),
            [107, 112, 112, 115, 112] => lookup_349_115_4(acc),
            [115, 111] => lookup_349_115_5(acc),
            [122, 112] => lookup_349_115_6(acc),
            [105, 115] => lookup_349_115_7(acc),
            [112, 111] => lookup_349_115_8(acc),
            [117, 112, 112, 111] => lookup_349_115_9(acc),
            [107, 111, 110, 115, 117, 108, 97, 116] => lookup_349_115_10(acc),
            [105, 99] => lookup_349_115_11(acc),
            [112, 105, 119] => lookup_349_115_12(acc),
            [119, 105, 102] => lookup_349_115_13(acc),
            [119, 115, 97] => lookup_349_115_14(acc),
            [119, 105, 111, 115] => lookup_349_115_15(acc),
            [119, 117, 111, 122] => lookup_349_115_16(acc),
            [115, 114] => lookup_349_115_17(acc),
            [103, 114, 105, 119] => lookup_349_115_18(acc),
            [117, 115] => lookup_349_115_19(acc),
            [112, 115, 115, 101] => lookup_349_115_20(acc),
            [119, 122, 109, 105, 117, 119] => lookup_349_115_21(acc),
            [107, 119, 112] => lookup_349_115_22(acc),
            [107, 109, 112, 115, 112] => lookup_349_115_23(acc),
            [115, 100, 110] => lookup_349_115_24(acc),
            [117, 112, 111, 119] => lookup_349_115_25(acc),
            [114, 122, 103, 119] => lookup_349_115_26(acc),
            [97, 112] => lookup_349_115_27(acc),
            [119, 105, 110, 98] => lookup_349_115_28(acc),
            [111, 117, 109] => lookup_349_115_29(acc),
            [115, 116, 97, 114, 111, 115, 116, 119, 111] => lookup_349_115_30(acc),
            [119, 105, 116, 100] => lookup_349_115_31(acc),
            [119, 105, 119] => lookup_349_115_32(acc),
            [111, 105, 114, 109] => lookup_349_115_33(acc),
            [117, 109, 105, 103] => lookup_349_115_34(acc),
            [115, 97] => lookup_349_115_35(acc),
            [115, 107, 111] => lookup_349_115_36(acc),
            [112, 105, 110, 98] => lookup_349_115_37(acc),
            [109, 117, 112] => lookup_349_115_38(acc),
            [119, 105, 105, 104] => lookup_349_115_39(acc),
            [117, 103] => lookup_349_115_40(acc),
            [119, 115, 107, 114] => lookup_349_115_41(acc),
            [117, 119] => lookup_349_115_42(acc),
            [112, 117, 112] => lookup_349_115_43(acc),
            [112, 115, 112] => lookup_349_115_44(acc),
            [117, 103, 105, 109] => lookup_349_115_45(acc),
            [107, 119, 112, 115, 112] => lookup_349_115_46(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_349_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_349_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_349_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_158(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_162(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_163(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_349_164(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_349_165(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_166(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_167(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_168(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_169(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_349_170(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_171(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_172(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349_173(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 108] => lookup_349_0(acc),
            [116, 103, 111, 114, 121] => lookup_349_1(acc),
            [103, 108, 105, 119, 105, 99, 101] => lookup_349_2(acc),
            [116, 97, 114, 103, 105] => lookup_349_3(acc),
            [112, 111, 110, 105, 97, 116, 111, 119, 97] => lookup_349_4(acc),
            [109, 97, 108, 98, 111, 114, 107] => lookup_349_5(acc),
            [103, 100, 121, 110, 105, 97] => lookup_349_6(acc),
            [105, 110, 102, 111] => lookup_349_7(acc),
            [111, 114, 103] => lookup_349_8(acc),
            [115, 117, 119, 97, 108, 107, 105] => lookup_349_9(acc),
            [122, 97, 107, 111, 112, 97, 110, 101] => lookup_349_10(acc),
            [111, 108, 97, 119, 97] => lookup_349_11(acc),
            [110, 111, 119, 97, 114, 117, 100, 97] => lookup_349_12(acc),
            [108, 101, 103, 110, 105, 99, 97] => lookup_349_13(acc),
            [116, 111, 117, 114, 105, 115, 109] => lookup_349_14(acc),
            [122, 97, 114, 111, 119] => lookup_349_15(acc),
            [107, 111, 110, 105, 110] => lookup_349_16(acc),
            [109, 97, 122, 111, 119, 115, 122, 101] => lookup_349_17(acc),
            [112, 111, 109, 111, 114, 115, 107, 105, 101] => lookup_349_18(acc),
            [111, 115, 116, 114, 111, 119, 119, 108, 107, 112] => lookup_349_19(acc),
            [110, 105, 101, 114, 117, 99, 104, 111, 109, 111, 115, 99, 105] => lookup_349_20(acc),
            [112, 117, 108, 97, 119, 121] => lookup_349_21(acc),
            [109, 105, 97, 115, 116, 97] => lookup_349_22(acc),
            [98, 105, 97, 108, 111, 119, 105, 101, 122, 97] => lookup_349_23(acc),
            [112, 111, 100, 104, 97, 108, 101] => lookup_349_24(acc),
            [115, 119, 105, 110, 111, 117, 106, 115, 99, 105, 101] => lookup_349_25(acc),
            [115, 116, 97, 114, 103, 97, 114, 100] => lookup_349_26(acc),
            [112, 111, 119, 105, 97, 116] => lookup_349_27(acc),
            [107, 108, 111, 100, 122, 107, 111] => lookup_349_28(acc),
            [109, 97, 105, 108] => lookup_349_29(acc),
            [115, 111, 115] => lookup_349_30(acc),
            [112, 111, 100, 108, 97, 115, 105, 101] => lookup_349_31(acc),
            [119, 97, 119] => lookup_349_32(acc),
            [108, 111, 109, 122, 97] => lookup_349_33(acc),
            [115, 122, 107, 111, 108, 97] => lookup_349_34(acc),
            [115, 104, 111, 112, 97, 114, 101, 110, 97] => lookup_349_35(acc),
            [103, 114, 97, 106, 101, 119, 111] => lookup_349_36(acc),
            [115, 119, 105, 101, 98, 111, 100, 122, 105, 110] => lookup_349_37(acc),
            [99, 111] => lookup_349_38(acc),
            [108, 111, 119, 105, 99, 122] => lookup_349_39(acc),
            [98, 121, 116, 111, 109] => lookup_349_40(acc),
            [109, 101, 100] => lookup_349_41(acc),
            [106, 97, 119, 111, 114, 122, 110, 111] => lookup_349_42(acc),
            [97, 116, 109] => lookup_349_43(acc),
            [115, 119, 105, 100, 110, 105, 99, 97] => lookup_349_44(acc),
            [112, 114, 111, 99, 104, 111, 119, 105, 99, 101] => lookup_349_45(acc),
            [112, 114, 122, 101, 119, 111, 114, 115, 107] => lookup_349_46(acc),
            [107, 114, 97, 115, 110, 105, 107] => lookup_349_47(acc),
            [103, 111, 114, 108, 105, 99, 101] => lookup_349_48(acc),
            [116, 117, 114, 101, 107] => lookup_349_49(acc),
            [116, 114, 97, 118, 101, 108] => lookup_349_50(acc),
            [115, 116, 97, 108, 111, 119, 97, 45, 119, 111, 108, 97] => lookup_349_51(acc),
            [107, 97, 122, 105, 109, 105, 101, 114, 122, 45, 100, 111, 108, 110, 121] => {
                lookup_349_52(acc)
            }
            [98, 101, 115, 107, 105, 100, 121] => lookup_349_53(acc),
            [109, 97, 108, 111, 112, 111, 108, 115, 107, 97] => lookup_349_54(acc),
            [98, 101, 100, 122, 105, 110] => lookup_349_55(acc),
            [98, 101, 101, 112] => lookup_349_56(acc),
            [115, 107, 111, 99, 122, 111, 119] => lookup_349_57(acc),
            [115, 101, 120] => lookup_349_58(acc),
            [98, 97, 98, 105, 97, 45, 103, 111, 114, 97] => lookup_349_59(acc),
            [114, 122, 101, 115, 122, 111, 119] => lookup_349_60(acc),
            [101, 108, 107] => lookup_349_61(acc),
            [119, 97, 108, 98, 114, 122, 121, 99, 104] => lookup_349_62(acc),
            [111, 108, 107, 117, 115, 122] => lookup_349_63(acc),
            [119, 97, 114, 109, 105, 97] => lookup_349_64(acc),
            [108, 117, 98, 105, 110] => lookup_349_65(acc),
            [112, 105, 115, 122] => lookup_349_66(acc),
            [115, 119, 105, 100, 110, 105, 107] => lookup_349_67(acc),
            [119, 114, 111, 99, 108, 97, 119] => lookup_349_68(acc),
            [108, 105, 109, 97, 110, 111, 119, 97] => lookup_349_69(acc),
            [99, 111, 109] => lookup_349_70(acc),
            [119, 111, 108, 111, 109, 105, 110] => lookup_349_71(acc),
            [114, 97, 119, 97, 45, 109, 97, 122] => lookup_349_72(acc),
            [98, 121, 100, 103, 111, 115, 122, 99, 122] => lookup_349_73(acc),
            [109, 114, 97, 103, 111, 119, 111] => lookup_349_74(acc),
            [111, 112, 111, 99, 122, 110, 111] => lookup_349_75(acc),
            [103, 115, 109] => lookup_349_76(acc),
            [99, 122, 101, 108, 97, 100, 122] => lookup_349_77(acc),
            [112, 114, 117, 115, 122, 107, 111, 119] => lookup_349_78(acc),
            [100, 108, 117, 103, 111, 108, 101, 107, 97] => lookup_349_79(acc),
            [101, 100, 117] => lookup_349_80(acc),
            [98, 105, 101, 115, 122, 99, 122, 97, 100, 121] => lookup_349_81(acc),
            [122, 97, 103, 97, 110] => lookup_349_82(acc),
            [116, 97, 114, 110, 111, 98, 114, 122, 101, 103] => lookup_349_83(acc),
            [98, 105, 122] => lookup_349_84(acc),
            [115, 122, 99, 122, 121, 116, 110, 111] => lookup_349_85(acc),
            [99, 122, 101, 115, 116] => lookup_349_86(acc),
            [117, 110, 105, 99, 108, 111, 117, 100] => lookup_349_87(acc),
            [108, 117, 98, 97, 114, 116, 111, 119] => lookup_349_88(acc),
            [110, 121, 115, 97] => lookup_349_89(acc),
            [97, 114, 116] => lookup_349_90(acc),
            [107, 101, 112, 110, 111] => lookup_349_91(acc),
            [103, 100, 97] => lookup_349_92(acc),
            [105, 108, 97, 119, 97] => lookup_349_93(acc),
            [111, 115, 116, 114, 111, 119, 105, 101, 99] => lookup_349_94(acc),
            [112, 114, 105, 118] => lookup_349_95(acc),
            [97, 117, 103, 117, 115, 116, 111, 119] => lookup_349_96(acc),
            [98, 105, 101, 108, 97, 119, 97] => lookup_349_97(acc),
            [107, 114, 97, 107, 111, 119] => lookup_349_98(acc),
            [99, 105, 101, 115, 122, 121, 110] => lookup_349_99(acc),
            [119, 114, 111, 99] => lookup_349_100(acc),
            [115, 108, 97, 115, 107] => lookup_349_101(acc),
            [107, 111, 98, 105, 101, 114, 122, 121, 99, 101] => lookup_349_102(acc),
            [117, 115, 116, 107, 97] => lookup_349_103(acc),
            [98, 105, 97, 108, 121, 115, 116, 111, 107] => lookup_349_104(acc),
            [107, 97, 108, 105, 115, 122] => lookup_349_105(acc),
            [114, 121, 98, 110, 105, 107] => lookup_349_106(acc),
            [109, 97, 122, 117, 114, 121] => lookup_349_107(acc),
            [115, 111, 115, 110, 111, 119, 105, 101, 99] => lookup_349_108(acc),
            [107, 97, 115, 122, 117, 98, 121] => lookup_349_109(acc),
            [112, 105, 108, 97] => lookup_349_110(acc),
            [109, 105, 101, 108, 101, 99] => lookup_349_111(acc),
            [108, 101, 98, 111, 114, 107] => lookup_349_112(acc),
            [114, 101, 108] => lookup_349_113(acc),
            [119, 97, 114, 115, 122, 97, 119, 97] => lookup_349_114(acc),
            [103, 111, 118] => lookup_349_115(labels, acc),
            [97, 117, 116, 111] => lookup_349_116(acc),
            [115, 101, 106, 110, 121] => lookup_349_117(acc),
            [103, 108, 111, 103, 111, 119] => lookup_349_118(acc),
            [111, 115, 116, 114, 111, 108, 101, 107, 97] => lookup_349_119(acc),
            [103, 100, 97, 110, 115, 107] => lookup_349_120(acc),
            [114, 101, 97, 108, 101, 115, 116, 97, 116, 101] => lookup_349_121(acc),
            [112, 111, 108, 107, 111, 119, 105, 99, 101] => lookup_349_122(acc),
            [115, 116, 97, 114, 97, 99, 104, 111, 119, 105, 99, 101] => lookup_349_123(acc),
            [116, 121, 99, 104, 121] => lookup_349_124(acc),
            [106, 103, 111, 114, 97] => lookup_349_125(acc),
            [107, 97, 114, 112, 97, 99, 122] => lookup_349_126(acc),
            [109, 105, 101, 108, 110, 111] => lookup_349_127(acc),
            [112, 111, 109, 111, 114, 122, 101] => lookup_349_128(acc),
            [109, 101, 100, 105, 97] => lookup_349_129(acc),
            [114, 97, 100, 111, 109] => lookup_349_130(acc),
            [103, 109, 105, 110, 97] => lookup_349_131(acc),
            [119, 105, 101, 108, 117, 110] => lookup_349_132(acc),
            [107, 101, 116, 114, 122, 121, 110] => lookup_349_133(acc),
            [112, 99] => lookup_349_134(acc),
            [107, 97, 114, 116, 117, 122, 121] => lookup_349_135(acc),
            [106, 101, 108, 101, 110, 105, 97, 45, 103, 111, 114, 97] => lookup_349_136(acc),
            [116, 117, 114, 121, 115, 116, 121, 107, 97] => lookup_349_137(acc),
            [107, 117, 116, 110, 111] => lookup_349_138(acc),
            [108, 117, 107, 111, 119] => lookup_349_139(acc),
            [110, 97, 107, 108, 111] => lookup_349_140(acc),
            [108, 117, 98, 108, 105, 110] => lookup_349_141(acc),
            [116, 109] => lookup_349_142(acc),
            [119, 111, 100, 122, 105, 115, 108, 97, 119] => lookup_349_143(acc),
            [107, 111, 110, 115, 107, 111, 119, 111, 108, 97] => lookup_349_144(acc),
            [103, 110, 105, 101, 122, 110, 111] => lookup_349_145(acc),
            [97, 105, 100] => lookup_349_146(acc),
            [107, 97, 116, 111, 119, 105, 99, 101] => lookup_349_147(acc),
            [98, 111, 108, 101, 115, 108, 97, 119, 105, 101, 99] => lookup_349_148(acc),
            [108, 101, 122, 97, 106, 115, 107] => lookup_349_149(acc),
            [108, 97, 112, 121] => lookup_349_150(acc),
            [111, 108, 101, 99, 107, 111] => lookup_349_151(acc),
            [111, 112, 111, 108, 101] => lookup_349_152(acc),
            [115, 97, 110, 111, 107] => lookup_349_153(acc),
            [115, 108, 117, 112, 115, 107] => lookup_349_154(acc),
            [115, 107, 108, 101, 112] => lookup_349_155(acc),
            [111, 108, 115, 122, 116, 121, 110] => lookup_349_156(acc),
            [111, 115, 116, 114, 111, 100, 97] => lookup_349_157(acc),
            [110, 111, 109] => lookup_349_158(acc),
            [119, 108, 111, 99, 108] => lookup_349_159(acc),
            [119, 108, 111, 99, 108, 97, 119, 101, 107] => lookup_349_160(acc),
            [110, 101, 116] => lookup_349_161(acc),
            [122, 103, 111, 114, 97] => lookup_349_162(acc),
            [108, 101, 99, 122, 110, 97] => lookup_349_163(acc),
            [112, 111, 122, 110, 97, 110] => lookup_349_164(acc),
            [97, 103, 114, 111] => lookup_349_165(acc),
            [122, 103, 111, 114, 122, 101, 108, 101, 99] => lookup_349_166(acc),
            [119, 101, 103, 114, 111, 119] => lookup_349_167(acc),
            [115, 122, 99, 122, 101, 99, 105, 110] => lookup_349_168(acc),
            [115, 111, 112, 111, 116] => lookup_349_169(acc),
            [101, 108, 98, 108, 97, 103] => lookup_349_170(acc),
            [107, 111, 108, 111, 98, 114, 122, 101, 103] => lookup_349_171(acc),
            [122, 97, 99, 104, 112, 111, 109, 111, 114] => lookup_349_172(acc),
            [115, 104, 111, 112] => lookup_349_173(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_350() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_351() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_352() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_353() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_354() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_355() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_356() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_357() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_358() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_359() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_360_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_360<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_360_0(acc),
            [100, 105, 115, 99, 111, 117, 114, 115, 101] => lookup_360_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_361() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_362() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_363() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_364() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_365() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_366() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_367_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_367_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_367_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_367<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109, 112, 117, 116, 101] => lookup_367_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_368() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_369() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_370() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_371() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_372() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_373_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_373_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_373_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_373_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_373_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_373<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_373_0(acc),
            [99, 111] => lookup_373_1(acc),
            [101, 100, 117] => lookup_373_2(acc),
            [111, 114] => lookup_373_3(acc),
            [111, 114, 103] => lookup_373_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_374() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_375() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_376() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_377() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_378() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_379() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_380() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_381() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_382() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_383() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_384_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_384<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_384_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_385() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_386() -> Info {
    Info {
        len: 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_387() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_388() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_389() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_390() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_391() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_392_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_392_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_392_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_392_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_392_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_392_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_392_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_392_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_392<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 117] => lookup_392_0(acc),
            [101, 115] => lookup_392_1(acc),
            [103, 103] => lookup_392_2(acc),
            [109, 99] => lookup_392_3(acc),
            [99, 97, 116] => lookup_392_4(acc),
            [120, 121] => lookup_392_5(acc),
            [117, 115] => lookup_392_6(acc),
            [98, 101] => lookup_392_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_393_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_393<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_393_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_394() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_395_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_395_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_395_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_395_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_395_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_395_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_395<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [117, 119, 117] => lookup_395_0(acc),
            [101, 110, 116, 101, 114, 112, 114, 105, 115, 101, 99, 108, 111, 117, 100] => {
                lookup_395_1(acc)
            }
            [115, 104, 97, 99, 107, 110, 101, 116] => lookup_395_2(acc),
            [109, 101, 114, 115, 101, 105, 110, 101] => lookup_395_3(acc),
            [109, 105, 110, 101] => lookup_395_4(acc),
            [110, 111, 109] => lookup_395_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_396() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_397() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_398() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_399() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_400() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_401() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_402() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_403() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_404() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_405() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_406() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_407() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_408() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_409_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_409_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_409<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 119, 45, 100, 110, 115] => lookup_409_0(acc),
            [110, 116, 100, 108, 108] => lookup_409_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_410() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_411() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_412_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_412_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_412_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_412_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_412_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_412_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_412<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_412_0(acc),
            [101, 100, 117] => lookup_412_1(acc),
            [103, 111, 118] => lookup_412_2(acc),
            [110, 101, 116] => lookup_412_3(acc),
            [111, 114, 103] => lookup_412_4(acc),
            [109, 105, 108] => lookup_412_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_413() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_414() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_415() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_416() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_417() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_418() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_419() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_420() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_421_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_421_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_421_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_421_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_421_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_421_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_421_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_421_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_421_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_421<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 97, 109, 101] => lookup_421_0(acc),
            [101, 100, 117] => lookup_421_1(acc),
            [103, 111, 118] => lookup_421_2(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_421_3(acc),
            [98, 105, 122] => lookup_421_4(acc),
            [99, 111, 109] => lookup_421_5(acc),
            [110, 101, 116] => lookup_421_6(acc),
            [111, 114, 103] => lookup_421_7(acc),
            [109, 105, 108] => lookup_421_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_422_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_3<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_422_3_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_422_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_11_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_11_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_11_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_11<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [98, 195, 184] => lookup_422_11_0(acc),
            [120, 110, 45, 45, 98, 45, 53, 103, 97] => lookup_422_11_1(acc),
            [98, 111] => lookup_422_11_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_422_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_26_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_26<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_422_26_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_422_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_30_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_30<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_422_30_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_422_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_57_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_57<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_422_57_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_422_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_71_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_71<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_422_71_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_422_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_75_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_75<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_422_75_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_422_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_96_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_96<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_422_96_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_422_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_113_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_113<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 118, 108, 101, 114, 45, 113, 111, 97] => lookup_422_113_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_422_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_115_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_115<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_422_115_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_422_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_135_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_135<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [118, 195, 165, 108, 101, 114] => lookup_422_135_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_422_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_142_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_142<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_422_142_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_422_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_158(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_162(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_163(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_164(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_165(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_166_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_166<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [110, 101, 115] => lookup_422_166_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_422_167_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_167<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_422_167_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_422_168(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_169(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_170(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_171(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_172(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_173(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_174_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_174_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_174<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 15usize;
    match labels.next() {
        Some(label) => match label {
            [104, 101, 114, 111, 121] => lookup_422_174_0(acc),
            [115, 97, 110, 100, 101] => lookup_422_174_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_422_175(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_176(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_177(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_178(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_179(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_180(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_181(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_182(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_183(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_184(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_185(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_186(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_187(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_188(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_189(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_190(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_191(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_192(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_193(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_194(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_195(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_196(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_197(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_198(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_199(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_200(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_201(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_202(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_203(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_204(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_205_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_205_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_205_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_205_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_205<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [111, 115] => lookup_422_205_0(acc),
            [118, 97, 108, 101, 114] => lookup_422_205_1(acc),
            [118, 195, 165, 108, 101, 114] => lookup_422_205_2(acc),
            [120, 110, 45, 45, 118, 108, 101, 114, 45, 113, 111, 97] => lookup_422_205_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_422_206(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_207(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_208(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_209_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_209<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [115, 97, 110, 100, 101] => lookup_422_209_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_422_210(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_211_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_211<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_422_211_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_422_212(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_213(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_214(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_215(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_216(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_217(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_218(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_219(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_220(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_221(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_222(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_223(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_224(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_225(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_226(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_227(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_228(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_229(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_230(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_231(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_232(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_233(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_234(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_235(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_236(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_237(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_238(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_239_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_239<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_422_239_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_422_240(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_241(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_242(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_243(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_244(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_245(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_246(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_247(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_248(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_249(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_250(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_251(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_252(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_253(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_254_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_254<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_422_254_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_422_255(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_256(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_257(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_258(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_259(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_260(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_261(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_262(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_263(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_264(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_265(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_266(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_267(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_268(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_269(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_270(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_422_271(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_272(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_273(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_274(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_275(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_276(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_277(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_278(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_279(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_280(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_281(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_282(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_283(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_284(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_285(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_286(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_287(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_288_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_288_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_288<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 16usize;
    match labels.next() {
        Some(label) => match label {
            [115, 97, 110, 100, 101] => lookup_422_288_0(acc),
            [104, 101, 114, 195, 184, 121] => lookup_422_288_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_422_289(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_290(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_291(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_292(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_293(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_294_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_294<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_422_294_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_422_295(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_296(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_297(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_298(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_299(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_300(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_301(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_302(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_303(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_304(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_305(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_306(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_307(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_308(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_309(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_310(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_311(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_312(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_313(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_314(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_315(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_316(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_317(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_318(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_319(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_320(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_321(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_322(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_323(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_324(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_325(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_326(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_327(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_328_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_328_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_328_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_328_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_328_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_328_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_328<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [98, 195, 184] => lookup_422_328_0(acc),
            [104, 101, 114, 111, 121] => lookup_422_328_1(acc),
            [120, 110, 45, 45, 98, 45, 53, 103, 97] => lookup_422_328_2(acc),
            [98, 111] => lookup_422_328_3(acc),
            [120, 110, 45, 45, 104, 101, 114, 121, 45, 105, 114, 97] => lookup_422_328_4(acc),
            [104, 101, 114, 195, 184, 121] => lookup_422_328_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_422_329(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_330(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_331(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_332_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_332<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [118, 97, 108, 101, 114] => lookup_422_332_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_422_333(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_334(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_335(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_336(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_337(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_338(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_339(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_340(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_341(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_342(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_343(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_344(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_345(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_346(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_347(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_348(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_349(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_350(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_351(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_352(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_353(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_354(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_355(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_356(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_357(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_358(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_359(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_360(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_361(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_362(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_363(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_364(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_365(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_366(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_367(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_368(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_369(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_370(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_371(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_372(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_373(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_374(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_375(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_376(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_377(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_378(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_379(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_380(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_381(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_382(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_383(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_384(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_385(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_386(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_387(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_388(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_389(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_390(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_391(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_392(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_393(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_394(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_395(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_396(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_397(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_398(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_399(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_400(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_401(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_402(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_403(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_404(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_405(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_406(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_407(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_408(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_409(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_410(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_411(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_412(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_413(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_414(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_415(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_416(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_417(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_418(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_419(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_420(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_421(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_422(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_423(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_424(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_425(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_426(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_427(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_428(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_429(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_430(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_431(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_432(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_433(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_434(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_435(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_436(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_437(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_438(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_439(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_440(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_441(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_442(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_443(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_444(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_445(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_446(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_447(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_448(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_449(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_450(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_451(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_452(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_453(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_454(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_455(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_456(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_457(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_458(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_459(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_460(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_461(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_462(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_463(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_464(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_465_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_465<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_422_465_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_422_466(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_467(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_468(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_469(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_470(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_471(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_472(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_473(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_474(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_422_475(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_476(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_477(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_478(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_479(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_480(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_481(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_482(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_483(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_484(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_485(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_486(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_487(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_488(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_489(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_490(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_491(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_492_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_492<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_422_492_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_422_493(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_494(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_495(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_496(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_497(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_498(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_499(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_500(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_501(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_502(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_503(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_504(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_505(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_506(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_507(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_508(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_509(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_510(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_511(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_512(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_513(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_514(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_515(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_516(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_517(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_518(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_519(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_520(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_521(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_522(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_523(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_524(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_525(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_526(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_527(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_528(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_529(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_530(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_531(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_532(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_533(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_534(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_535(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_536(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_537(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_538(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_539(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_540(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_541(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_542(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_543(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_544(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_545(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_546(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_547(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_548(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_549(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_550(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_551(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_552(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_553(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_554(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_555(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_556(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_557(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_558(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_559(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_560(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_561(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_562(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_563(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_564(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_565(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_566(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_567(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_568(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_569(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_570(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_571(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_572(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_573(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_574(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_575(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_576(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_577(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_578(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_579(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_580(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_581(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_582(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_583(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_584(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_585(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_586(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_587(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_588(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_589(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_590(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_591(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_592(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_593(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_594(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_595(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_596(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_597(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_598(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_599(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_600_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_600<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_422_600_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_422_601(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_602(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_603(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_604(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_605(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_606(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_607(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_608(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_609(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_610(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_611(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_612(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_613(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_614(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_615(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_616(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_617(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_618(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_619(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_620(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_621(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_622(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_623(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_624(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_625(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_626(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_627(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_628(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_629_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_629<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_422_629_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_422_630(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_631(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_632(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_633(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_634(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_635(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_636(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_637(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_638(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_639(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_640(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_641(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_642(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_643(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_644(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_645(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_646(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_647(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_648(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_649(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_650(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_651(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_652(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_653(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_654(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_655(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_656(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_657(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_658(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_659(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_660(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_661_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_661<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_422_661_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_422_662(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_663(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_664(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_665(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_666(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_667_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_667<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_422_667_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_422_668(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_669(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_670(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_671(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_672(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_673(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_674(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_675(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_676(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_677(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_678(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_679(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_680(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_681_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_681<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [111, 115] => lookup_422_681_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_422_682(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_683(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_684(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_685(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_686(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_687(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_688(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_689(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_690(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_691(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_692(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_693(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_694(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_695(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_696(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_697(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_698(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_699(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_700(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_701(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_702_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_702<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [110, 101, 115] => lookup_422_702_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_422_703(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_704(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_705(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_706(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_707(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_708(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_709(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_710(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_711(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_712(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_713(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_714(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_715(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_716(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_717(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_718(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_719(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_720(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_721(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_722_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_722_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_722<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 22usize;
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 104, 101, 114, 121, 45, 105, 114, 97] => lookup_422_722_0(acc),
            [115, 97, 110, 100, 101] => lookup_422_722_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_422_723(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_724(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_725(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_726(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_727(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_728(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_729(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_730(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_731(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_732(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_733(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_734(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_735(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_736(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_737(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_738(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_739(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_740(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_741(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_742(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_743(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_744(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_745(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_746(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_747(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_748(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_749(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_750(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_751(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_752(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_753(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_754(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_755(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_756(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_757(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_758(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_759(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_760(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_761(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_762(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_763(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_764(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_765(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_766(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_767(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_768(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_769(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_770(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_771(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_772(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_773(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_774(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_775(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_776(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_777(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_778(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_779(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_780(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_781(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_782(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_783(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_784(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_785(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_786(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_787(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_788(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_789(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_790(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_791(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_792(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_793(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_794(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_795(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_796(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_797(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_798(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_799(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_800(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_801(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_802(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_803(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_804(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_805(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_806(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_807(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_808(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_809(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_810(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_811(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_812(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_813(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_814(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_815(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_816(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_817(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_818(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_819(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_820(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_821(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_822(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_823(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_824(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_825(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_826(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_827(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_828(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_829(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_830(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_831(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_832(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_833(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_834(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_835(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_836(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_837(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_838(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_839(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_840(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_841(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_842(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_843(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_844(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_845(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_846(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_847(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_848(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_849(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_850(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_851(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_852(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_853(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_854(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_855(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_856(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_857(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_858(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_859(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_860(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_861(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_862(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_863(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_864(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_865(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_866(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_867(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_868(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_869(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_870_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_870<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_422_870_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_422_871(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_872(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_873(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_874(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_875(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_876(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_877(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_878(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_879(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_880(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_881(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_882(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_883(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_884(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_885(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_886(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_887(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_888(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_889(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_890(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_891(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_892(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_893(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 108, 195, 165] => lookup_422_0(acc),
            [105, 118, 101, 108, 97, 110, 100] => lookup_422_1(acc),
            [98, 195, 161, 104, 99, 97, 118, 117, 111, 116, 110, 97] => lookup_422_2(acc),
            [115, 102] => lookup_422_3(labels, acc),
            [115, 195, 184, 110, 100, 114, 101, 45, 108, 97, 110, 100] => lookup_422_4(acc),
            [110, 97, 118, 117, 111, 116, 110, 97] => lookup_422_5(acc),
            [118, 195, 166, 114, 195, 184, 121] => lookup_422_6(acc),
            [114, 101, 110, 110, 101, 115, 195, 184, 121] => lookup_422_7(acc),
            [109, 101, 108, 111, 121] => lookup_422_8(acc),
            [112, 111, 114, 115, 97, 110, 103, 101, 114] => lookup_422_9(acc),
            [115, 107, 111, 100, 106, 101] => lookup_422_10(acc),
            [116, 101, 108, 101, 109, 97, 114, 107] => lookup_422_11(info, labels, acc),
            [114, 111, 115, 116] => lookup_422_12(acc),
            [114, 111, 121, 114, 118, 105, 107] => lookup_422_13(acc),
            [100, 195, 184, 110, 110, 97] => lookup_422_14(acc),
            [120, 110, 45, 45, 115, 110, 100, 114, 101, 45, 108, 97, 110, 100, 45, 48, 99, 98] => {
                lookup_422_15(acc)
            }
            [118, 101, 114, 114, 97, 110] => lookup_422_16(acc),
            [115, 117, 114, 110, 97, 100, 97, 108] => lookup_422_17(acc),
            [98, 195, 161, 106, 100, 100, 97, 114] => lookup_422_18(acc),
            [103, 195, 161, 105, 118, 117, 111, 116, 110, 97] => lookup_422_19(acc),
            [115, 97, 117, 100, 97] => lookup_422_20(acc),
            [103, 106, 101, 114, 100, 114, 117, 109] => lookup_422_21(acc),
            [116, 114, 111, 109, 115, 97] => lookup_422_22(acc),
            [116, 114, 97, 110, 97] => lookup_422_23(acc),
            [108, 117, 114, 195, 184, 121] => lookup_422_24(acc),
            [103, 114, 117, 101] => lookup_422_25(acc),
            [111, 108] => lookup_422_26(labels, acc),
            [118, 195, 165, 103, 97, 110] => lookup_422_27(acc),
            [104, 97, 109, 109, 97, 114, 102, 101, 97, 115, 116, 97] => lookup_422_28(acc),
            [116, 105, 110, 110] => lookup_422_29(acc),
            [110, 108] => lookup_422_30(labels, acc),
            [104, 97, 114, 115, 116, 97, 100] => lookup_422_31(acc),
            [120, 110, 45, 45, 115, 110, 101, 115, 45, 112, 111, 97] => lookup_422_32(acc),
            [195, 165, 114, 100, 97, 108] => lookup_422_33(acc),
            [101, 105, 100, 102, 106, 111, 114, 100] => lookup_422_34(acc),
            [104, 106, 101, 108, 109, 101, 108, 97, 110, 100] => lookup_422_35(acc),
            [107, 118, 105, 110, 110, 104, 101, 114, 97, 100] => lookup_422_36(acc),
            [120, 110, 45, 45, 108, 111, 97, 98, 116, 45, 48, 113, 97] => lookup_422_37(acc),
            [120, 110, 45, 45, 107, 118, 110, 97, 110, 103, 101, 110, 45, 107, 48, 97] => {
                lookup_422_38(acc)
            }
            [97, 114, 100, 97, 108] => lookup_422_39(acc),
            [111, 121, 101, 114] => lookup_422_40(acc),
            [120, 110, 45, 45, 98, 106, 97, 114, 107, 121, 45, 102, 121, 97] => lookup_422_41(acc),
            [98, 97, 116, 115, 102, 106, 111, 114, 100] => lookup_422_42(acc),
            [106, 111, 110, 100, 97, 108] => lookup_422_43(acc),
            [109, 111, 115, 106, 111, 101, 110] => lookup_422_44(acc),
            [110, 111, 114, 100, 114, 101, 105, 115, 97] => lookup_422_45(acc),
            [110, 101, 115, 111, 100, 100, 101, 110] => lookup_422_46(acc),
            [195, 184, 121, 115, 116, 114, 101, 45, 115, 108, 105, 100, 114, 101] => {
                lookup_422_47(acc)
            }
            [107, 118, 105, 116, 115, 195, 184, 121] => lookup_422_48(acc),
            [115, 97, 108, 116, 100, 97, 108] => lookup_422_49(acc),
            [120, 110, 45, 45, 110, 114, 121, 45, 121, 108, 97, 53, 103] => lookup_422_50(acc),
            [120, 110, 45, 45, 98, 104, 99, 99, 97, 118, 117, 111, 116, 110, 97, 45, 107, 55, 97] => {
                lookup_422_51(acc)
            }
            [108, 105, 110, 100, 97, 115] => lookup_422_52(acc),
            [104, 117, 114, 100, 97, 108] => lookup_422_53(acc),
            [97, 117, 114, 115, 107, 111, 103, 45, 104, 195, 184, 108, 97, 110, 100] => {
                lookup_422_54(acc)
            }
            [108, 117, 110, 100] => lookup_422_55(acc),
            [120, 110, 45, 45, 114, 105, 115, 114, 45, 105, 114, 97] => lookup_422_56(acc),
            [115, 118, 97, 108, 98, 97, 114, 100] => lookup_422_57(labels, acc),
            [111, 115, 195, 184, 121, 114, 111] => lookup_422_58(acc),
            [108, 195, 161, 104, 112, 112, 105] => lookup_422_59(acc),
            [117, 110, 106, 195, 161, 114, 103, 97] => lookup_422_60(acc),
            [97, 108, 101, 115, 117, 110, 100] => lookup_422_61(acc),
            [109, 97, 108, 118, 105, 107] => lookup_422_62(acc),
            [120, 110, 45, 45, 108, 103, 114, 100, 45, 112, 111, 97, 99] => lookup_422_63(acc),
            [120, 110, 45, 45, 104, 110, 101, 102, 111, 115, 115, 45, 113, 49, 97] => {
                lookup_422_64(acc)
            }
            [100, 121, 114, 111, 121] => lookup_422_65(acc),
            [105, 100, 114, 101, 116, 116] => lookup_422_66(acc),
            [102, 121, 114, 101, 115, 100, 97, 108] => lookup_422_67(acc),
            [97, 109, 111, 116] => lookup_422_68(acc),
            [107, 111, 110, 103, 115, 118, 105, 110, 103, 101, 114] => lookup_422_69(acc),
            [114, 105, 110, 103, 115, 97, 107, 101, 114] => lookup_422_70(acc),
            [98, 117] => lookup_422_71(labels, acc),
            [104, 111, 114, 116, 101, 110] => lookup_422_72(acc),
            [115, 101, 108, 106, 111, 114, 100] => lookup_422_73(acc),
            [115, 111, 108, 117, 110, 100] => lookup_422_74(acc),
            [104, 109] => lookup_422_75(labels, acc),
            [115, 116, 111, 114, 100] => lookup_422_76(acc),
            [115, 117, 108, 100, 97, 108] => lookup_422_77(acc),
            [102, 111, 114, 100, 101] => lookup_422_78(acc),
            [120, 110, 45, 45, 107, 97, 114, 109, 121, 45, 121, 117, 97] => lookup_422_79(acc),
            [108, 195, 184, 116, 101, 110] => lookup_422_80(acc),
            [115, 107, 97, 110, 108, 97, 110, 100] => lookup_422_81(acc),
            [115, 111, 103, 110, 101] => lookup_422_82(acc),
            [104, 121, 108, 108, 101, 115, 116, 97, 100] => lookup_422_83(acc),
            [116, 106, 195, 184, 109, 101] => lookup_422_84(acc),
            [116, 111, 114, 115, 107, 101, 110] => lookup_422_85(acc),
            [115, 101, 108, 106, 101] => lookup_422_86(acc),
            [110, 105, 116, 116, 101, 100, 97, 108] => lookup_422_87(acc),
            [116, 111, 110, 115, 98, 101, 114, 103] => lookup_422_88(acc),
            [120, 110, 45, 45, 118, 101, 115, 116, 118, 103, 121, 45, 105, 120, 97, 54, 111] => {
                lookup_422_89(acc)
            }
            [109, 101, 108, 97, 110, 100] => lookup_422_90(acc),
            [120, 110, 45, 45, 114, 109, 115, 107, 111, 103, 45, 98, 121, 97] => lookup_422_91(acc),
            [115, 107, 97, 117, 110] => lookup_422_92(acc),
            [97, 115, 107, 105, 109] => lookup_422_93(acc),
            [98, 101, 114, 108, 101, 118, 195, 165, 103] => lookup_422_94(acc),
            [97, 108, 97, 104, 101, 97, 100, 106, 117] => lookup_422_95(acc),
            [118, 97] => lookup_422_96(labels, acc),
            [102, 108, 97] => lookup_422_97(acc),
            [104, 97, 98, 109, 101, 114] => lookup_422_98(acc),
            [120, 110, 45, 45, 111, 115, 116, 101, 114, 121, 45, 102, 121, 97] => {
                lookup_422_99(acc)
            }
            [115, 111, 108, 97] => lookup_422_100(acc),
            [116, 114, 111, 109, 115, 111] => lookup_422_101(acc),
            [114, 111, 109, 115, 97] => lookup_422_102(acc),
            [104, 101, 114, 97, 100] => lookup_422_103(acc),
            [103, 195, 161, 197, 139, 103, 97, 118, 105, 105, 107, 97] => lookup_422_104(acc),
            [120, 110, 45, 45, 104, 112, 109, 105, 114, 45, 120, 113, 97] => lookup_422_105(acc),
            [109, 101, 108, 195, 184, 121] => lookup_422_106(acc),
            [116, 111, 107, 107, 101] => lookup_422_107(acc),
            [116, 114, 111, 103, 115, 116, 97, 100] => lookup_422_108(acc),
            [120, 110, 45, 45, 100, 121, 114, 121, 45, 105, 114, 97] => lookup_422_109(acc),
            [195, 184, 114, 115, 116, 97] => lookup_422_110(acc),
            [101, 105, 103, 101, 114, 115, 117, 110, 100] => lookup_422_111(acc),
            [118, 97, 103, 97] => lookup_422_112(acc),
            [120, 110, 45, 45, 115, 116, 102, 111, 108, 100, 45, 57, 120, 97] => {
                lookup_422_113(info, labels, acc)
            }
            [104, 97, 115, 118, 105, 107] => lookup_422_114(acc),
            [111, 115, 108, 111] => lookup_422_115(labels, acc),
            [102, 111, 114, 115, 97, 110, 100] => lookup_422_116(acc),
            [111, 121, 103, 97, 114, 100, 101, 110] => lookup_422_117(acc),
            [115, 107, 195, 165, 110, 108, 97, 110, 100] => lookup_422_118(acc),
            [114, 195, 184, 121, 114, 118, 105, 107] => lookup_422_119(acc),
            [102, 105, 110, 110, 111, 121] => lookup_422_120(acc),
            [114, 195, 184, 114, 111, 115] => lookup_422_121(acc),
            [115, 107, 101, 100, 115, 109, 111] => lookup_422_122(acc),
            [115, 111, 114, 45, 102, 114, 111, 110] => lookup_422_123(acc),
            [115, 195, 184, 114, 45, 111, 100, 97, 108] => lookup_422_124(acc),
            [114, 105, 110, 103, 101, 114, 105, 107, 101] => lookup_422_125(acc),
            [104, 97, 100, 115, 101, 108] => lookup_422_126(acc),
            [120, 110, 45, 45, 98, 101, 97, 114, 97, 108, 118, 104, 107, 105, 45, 121, 52, 97] => {
                lookup_422_127(acc)
            }
            [98, 97, 108, 115, 102, 106, 111, 114, 100] => lookup_422_128(acc),
            [107, 195, 161, 114, 195, 161, 197, 161, 106, 111, 104, 107, 97] => lookup_422_129(acc),
            [98, 106, 97, 114, 107, 111, 121] => lookup_422_130(acc),
            [115, 116, 111, 114, 100, 97, 108] => lookup_422_131(acc),
            [111, 100, 100, 97] => lookup_422_132(acc),
            [114, 195, 184, 100, 195, 184, 121] => lookup_422_133(acc),
            [120, 110, 45, 45, 108, 104, 112, 112, 105, 45, 120, 113, 97] => lookup_422_134(acc),
            [195, 184, 115, 116, 102, 111, 108, 100] => lookup_422_135(info, labels, acc),
            [115, 97, 110, 100, 110, 101, 115, 115, 106, 195, 184, 101, 110] => lookup_422_136(acc),
            [120, 110, 45, 45, 108, 105, 110, 100, 115, 45, 112, 114, 97] => lookup_422_137(acc),
            [104, 97, 103, 101, 98, 111, 115, 116, 97, 100] => lookup_422_138(acc),
            [120, 110, 45, 45, 109, 101, 108, 121, 45, 105, 114, 97] => lookup_422_139(acc),
            [98, 195, 161, 104, 99, 99, 97, 118, 117, 111, 116, 110, 97] => lookup_422_140(acc),
            [114, 195, 184, 121, 107, 101, 110] => lookup_422_141(acc),
            [97, 97] => lookup_422_142(labels, acc),
            [97, 110, 100, 111, 121] => lookup_422_143(acc),
            [115, 195, 161, 108, 97, 116] => lookup_422_144(acc),
            [98, 97, 114, 100, 117] => lookup_422_145(acc),
            [116, 114, 97, 110, 111, 121] => lookup_422_146(acc),
            [97, 117, 100, 110, 101, 100, 97, 108, 110] => lookup_422_147(acc),
            [98, 101, 105, 97, 114, 110] => lookup_422_148(acc),
            [107, 97, 114, 97, 115, 106, 111, 104, 107, 97] => lookup_422_149(acc),
            [103, 195, 161, 108, 115, 195, 161] => lookup_422_150(acc),
            [97, 107, 114, 101, 104, 97, 109, 110] => lookup_422_151(acc),
            [115, 107, 101, 100, 115, 109, 111, 107, 111, 114, 115, 101, 116] => {
                lookup_422_152(acc)
            }
            [104, 111, 121, 108, 97, 110, 100, 101, 116] => lookup_422_153(acc),
            [195, 165, 102, 106, 111, 114, 100] => lookup_422_154(acc),
            [120, 110, 45, 45, 98, 116, 115, 102, 106, 111, 114, 100, 45, 57, 122, 97] => {
                lookup_422_155(acc)
            }
            [120, 110, 45, 45, 107, 108, 98, 117, 45, 119, 111, 97] => lookup_422_156(acc),
            [107, 118, 97, 102, 106, 111, 114, 100] => lookup_422_157(acc),
            [114, 101, 110, 110, 101, 115, 111, 121] => lookup_422_158(acc),
            [117, 110, 106, 97, 114, 103, 97] => lookup_422_159(acc),
            [115, 111, 110, 100, 114, 101, 45, 108, 97, 110, 100] => lookup_422_160(acc),
            [98, 105, 114, 107, 101, 110, 101, 115] => lookup_422_161(acc),
            [118, 97, 114, 100, 195, 184] => lookup_422_162(acc),
            [120, 110, 45, 45, 109, 108, 115, 101, 108, 118, 45, 105, 117, 97] => {
                lookup_422_163(acc)
            }
            [110, 195, 165, 195, 165, 109, 101, 115, 106, 101, 118, 117, 101, 109, 105, 101] => {
                lookup_422_164(acc)
            }
            [120, 110, 45, 45, 109, 111, 116, 45, 116, 108, 97] => lookup_422_165(acc),
            [97, 107, 101, 114, 115, 104, 117, 115] => lookup_422_166(info, labels, acc),
            [97, 104] => lookup_422_167(labels, acc),
            [112, 111, 114, 115, 195, 161, 197, 139, 103, 117] => lookup_422_168(acc),
            [114, 97, 110, 97] => lookup_422_169(acc),
            [115, 111, 114, 45, 97, 117, 114, 100, 97, 108] => lookup_422_170(acc),
            [120, 110, 45, 45, 118, 114, 103, 103, 116, 45, 120, 113, 97, 100] => {
                lookup_422_171(acc)
            }
            [109, 97, 108, 115, 101, 108, 118] => lookup_422_172(acc),
            [120, 110, 45, 45, 107, 111, 108, 117, 111, 107, 116, 97, 45, 55, 121, 97, 53, 55, 104] => {
                lookup_422_173(acc)
            }
            [109, 111, 114, 101, 45, 111, 103, 45, 114, 111, 109, 115, 100, 97, 108] => {
                lookup_422_174(info, labels, acc)
            }
            [110, 111, 114, 100, 100, 97, 108] => lookup_422_175(acc),
            [120, 110, 45, 45, 115, 107, 105, 101, 114, 118, 45, 117, 116, 97] => {
                lookup_422_176(acc)
            }
            [115, 111, 114, 45, 111, 100, 97, 108] => lookup_422_177(acc),
            [104, 111, 108, 116, 195, 165, 108, 101, 110] => lookup_422_178(acc),
            [120, 110, 45, 45, 109, 116, 116, 97, 45, 118, 114, 106, 106, 97, 116, 45, 107, 55, 97, 102] => {
                lookup_422_179(acc)
            }
            [98, 111, 107, 110] => lookup_422_180(acc),
            [107, 114, 111, 100, 115, 104, 101, 114, 97, 100] => lookup_422_181(acc),
            [108, 97, 97, 107, 101, 115, 118, 117, 101, 109, 105, 101] => lookup_422_182(acc),
            [115, 101, 108] => lookup_422_183(acc),
            [120, 110, 45, 45, 104, 111, 108, 116, 108, 101, 110, 45, 104, 120, 97] => {
                lookup_422_184(acc)
            }
            [120, 110, 45, 45, 115, 45, 49, 102, 97] => lookup_422_185(acc),
            [114, 105, 110, 100, 97, 108] => lookup_422_186(acc),
            [115, 111, 114, 116, 108, 97, 110, 100] => lookup_422_187(acc),
            [102, 114, 111, 103, 110] => lookup_422_188(acc),
            [110, 111, 114, 100, 107, 97, 112, 112] => lookup_422_189(acc),
            [195, 161, 108, 97, 104, 101, 97, 100, 106, 117] => lookup_422_190(acc),
            [115, 116, 106, 111, 114, 100, 97, 108] => lookup_422_191(acc),
            [111, 115, 111, 121, 114, 111] => lookup_422_192(acc),
            [102, 105, 116, 106, 97, 114] => lookup_422_193(acc),
            [104, 97, 109, 97, 114, 111, 121] => lookup_422_194(acc),
            [102, 108, 111, 114, 111] => lookup_422_195(acc),
            [101, 103, 101, 114, 115, 117, 110, 100] => lookup_422_196(acc),
            [103, 114, 97, 110] => lookup_422_197(acc),
            [114, 105, 110, 103, 101, 98, 117] => lookup_422_198(acc),
            [195, 165, 115, 101, 114, 97, 108] => lookup_422_199(acc),
            [97, 117, 114, 101] => lookup_422_200(acc),
            [107, 97, 114, 97, 115, 106, 111, 107] => lookup_422_201(acc),
            [109, 117, 115, 101, 117, 109] => lookup_422_202(acc),
            [97, 114, 101, 109, 97, 114, 107] => lookup_422_203(acc),
            [98, 97, 108, 101, 115, 116, 114, 97, 110, 100] => lookup_422_204(acc),
            [104, 101, 100, 109, 97, 114, 107] => lookup_422_205(info, labels, acc),
            [106, 195, 184, 108, 115, 116, 101, 114] => lookup_422_206(acc),
            [103, 114, 97, 110, 118, 105, 110] => lookup_422_207(acc),
            [114, 121, 103, 103, 101] => lookup_422_208(acc),
            [118, 101, 115, 116, 102, 111, 108, 100] => lookup_422_209(info, labels, acc),
            [98, 114, 195, 184, 110, 110, 195, 184, 121, 115, 117, 110, 100] => lookup_422_210(acc),
            [115, 116] => lookup_422_211(labels, acc),
            [97, 115, 101, 114, 97, 108] => lookup_422_212(acc),
            [114, 195, 161, 104, 107, 107, 101, 114, 195, 161, 118, 106, 117] => {
                lookup_422_213(acc)
            }
            [109, 101, 114, 195, 165, 107, 101, 114] => lookup_422_214(acc),
            [110, 111, 116, 116, 101, 114, 111, 121] => lookup_422_215(acc),
            [102, 114, 101, 105] => lookup_422_216(acc),
            [120, 110, 45, 45, 114, 121, 114, 118, 105, 107, 45, 98, 121, 97] => {
                lookup_422_217(acc)
            }
            [107, 114, 105, 115, 116, 105, 97, 110, 115, 97, 110, 100] => lookup_422_218(acc),
            [102, 114, 111, 115, 116, 97] => lookup_422_219(acc),
            [115, 116, 111, 114, 45, 101, 108, 118, 100, 97, 108] => lookup_422_220(acc),
            [109, 195, 161, 116, 116, 97, 45, 118, 195, 161, 114, 106, 106, 97, 116] => {
                lookup_422_221(acc)
            }
            [107, 97, 114, 109, 195, 184, 121] => lookup_422_222(acc),
            [120, 110, 45, 45, 104, 45, 50, 102, 97] => lookup_422_223(acc),
            [120, 110, 45, 45, 107, 102, 106, 111, 114, 100, 45, 105, 117, 97] => {
                lookup_422_224(acc)
            }
            [118, 97, 100, 115, 111] => lookup_422_225(acc),
            [97, 118, 101, 114, 195, 184, 121] => lookup_422_226(acc),
            [103, 117, 111, 118, 100, 97, 103, 101, 97, 105, 100, 110, 117] => lookup_422_227(acc),
            [117, 108, 118, 105, 107] => lookup_422_228(acc),
            [114, 111, 108, 108, 97, 103] => lookup_422_229(acc),
            [195, 165, 115, 110, 101, 115] => lookup_422_230(acc),
            [120, 110, 45, 45, 111, 115, 121, 114, 111, 45, 119, 117, 97] => lookup_422_231(acc),
            [98, 97, 109, 98, 108, 101] => lookup_422_232(acc),
            [114, 111, 114, 111, 115] => lookup_422_233(acc),
            [102, 104, 115] => lookup_422_234(acc),
            [109, 106, 195, 184, 110, 100, 97, 108, 101, 110] => lookup_422_235(acc),
            [120, 110, 45, 45, 115, 101, 114, 97, 108, 45, 108, 114, 97] => lookup_422_236(acc),
            [98, 97, 105, 100, 97, 114] => lookup_422_237(acc),
            [104, 97, 109, 97, 114] => lookup_422_238(acc),
            [114, 108] => lookup_422_239(labels, acc),
            [98, 106, 117, 103, 110] => lookup_422_240(acc),
            [104, 101, 109, 115, 101, 100, 97, 108] => lookup_422_241(acc),
            [120, 110, 45, 45, 107, 114, 100, 115, 104, 101, 114, 97, 100, 45, 109, 56, 97] => {
                lookup_422_242(acc)
            }
            [120, 110, 45, 45, 111, 112, 112, 101, 103, 114, 100, 45, 105, 120, 97] => {
                lookup_422_243(acc)
            }
            [120, 110, 45, 45, 104, 111, 98, 108, 45, 105, 114, 97] => lookup_422_244(acc),
            [120, 110, 45, 45, 115, 116, 114, 101, 45, 116, 111, 116, 101, 110, 45, 122, 99, 98] => {
                lookup_422_245(acc)
            }
            [102, 108, 111, 114, 195, 184] => lookup_422_246(acc),
            [115, 107, 105, 112, 116, 118, 101, 116] => lookup_422_247(acc),
            [103, 97, 105, 118, 117, 111, 116, 110, 97] => lookup_422_248(acc),
            [115, 195, 184, 114, 117, 109] => lookup_422_249(acc),
            [100, 101, 97, 116, 110, 117] => lookup_422_250(acc),
            [116, 114, 97, 110, 195, 184, 121] => lookup_422_251(acc),
            [115, 116, 114, 97, 110, 100, 97] => lookup_422_252(acc),
            [120, 110, 45, 45, 114, 100, 97, 108, 45, 112, 111, 97] => lookup_422_253(acc),
            [102, 109] => lookup_422_254(labels, acc),
            [116, 114, 97, 110, 98, 121] => lookup_422_255(acc),
            [120, 110, 45, 45, 115, 107, 110, 108, 97, 110, 100, 45, 102, 120, 97] => {
                lookup_422_256(acc)
            }
            [117, 108, 108, 101, 110, 115, 118, 97, 110, 103] => lookup_422_257(acc),
            [111, 109, 97, 115, 118, 117, 111, 116, 110, 97] => lookup_422_258(acc),
            [116, 121, 100, 97, 108] => lookup_422_259(acc),
            [99, 97, 104, 99, 101, 115, 117, 111, 108, 111] => lookup_422_260(acc),
            [118, 195, 161, 114, 103, 103, 195, 161, 116] => lookup_422_261(acc),
            [114, 195, 184, 109, 115, 107, 111, 103] => lookup_422_262(acc),
            [114, 111, 109, 115, 107, 111, 103] => lookup_422_263(acc),
            [120, 110, 45, 45, 115, 103, 110, 101, 45, 103, 114, 97] => lookup_422_264(acc),
            [118, 105, 107] => lookup_422_265(acc),
            [120, 110, 45, 45, 115, 114, 45, 97, 117, 114, 100, 97, 108, 45, 108, 56, 97] => {
                lookup_422_266(acc)
            }
            [102, 117, 111, 105, 115, 107, 117] => lookup_422_267(acc),
            [98, 117, 100, 101, 106, 106, 117] => lookup_422_268(acc),
            [120, 110, 45, 45, 116, 114, 111, 109, 115, 45, 122, 117, 97] => lookup_422_269(acc),
            [99, 111] => lookup_422_270(acc),
            [97, 114, 110, 97] => lookup_422_271(acc),
            [103, 106, 101, 109, 110, 101, 115] => lookup_422_272(acc),
            [114, 111, 100, 111, 121] => lookup_422_273(acc),
            [109, 195, 165, 115, 195, 184, 121] => lookup_422_274(acc),
            [107, 118, 97, 110, 97, 110, 103, 101, 110] => lookup_422_275(acc),
            [98, 195, 161, 105, 100, 195, 161, 114] => lookup_422_276(acc),
            [97, 108] => lookup_422_277(acc),
            [103, 97, 109, 118, 105, 107] => lookup_422_278(acc),
            [115, 97, 109, 110, 97, 110, 103, 101, 114] => lookup_422_279(acc),
            [115, 105, 114, 100, 97, 108] => lookup_422_280(acc),
            [111, 114, 108, 97, 110, 100] => lookup_422_281(acc),
            [115, 116, 101, 105, 103, 101, 110] => lookup_422_282(acc),
            [115, 116, 101, 105, 110, 107, 106, 101, 114] => lookup_422_283(acc),
            [107, 114, 111, 107, 115, 116, 97, 100, 101, 108, 118, 97] => lookup_422_284(acc),
            [115, 195, 184, 114, 45, 102, 114, 111, 110] => lookup_422_285(acc),
            [195, 184, 118, 114, 101, 45, 101, 105, 107, 101, 114] => lookup_422_286(acc),
            [120, 110, 45, 45, 98, 105, 100, 114, 45, 53, 110, 97, 99] => lookup_422_287(acc),
            [109, 195, 184, 114, 101, 45, 111, 103, 45, 114, 111, 109, 115, 100, 97, 108] => {
                lookup_422_288(info, labels, acc)
            }
            [109, 111, 100, 117, 109] => lookup_422_289(acc),
            [109, 195, 161, 108, 97, 116, 118, 117, 111, 112, 109, 105] => lookup_422_290(acc),
            [97, 117, 115, 116, 101, 118, 111, 108, 108] => lookup_422_291(acc),
            [98, 105, 101, 118, 97, 116] => lookup_422_292(acc),
            [102, 101, 116] => lookup_422_293(acc),
            [116, 114] => lookup_422_294(labels, acc),
            [97, 114, 101, 110, 100, 97, 108] => lookup_422_295(acc),
            [110, 97, 110, 110, 101, 115, 116, 97, 100] => lookup_422_296(acc),
            [110, 97, 114, 118, 105, 107] => lookup_422_297(acc),
            [97, 117, 114, 108, 97, 110, 100] => lookup_422_298(acc),
            [108, 97, 110, 103, 101, 118, 97, 103] => lookup_422_299(acc),
            [111, 114, 115, 116, 97] => lookup_422_300(acc),
            [120, 110, 45, 45, 114, 97, 100, 121, 45, 105, 114, 97] => lookup_422_301(acc),
            [195, 161, 107, 197, 139, 111, 108, 117, 111, 107, 116, 97] => lookup_422_302(acc),
            [98, 101, 114, 103] => lookup_422_303(acc),
            [98, 111, 109, 108, 111] => lookup_422_304(acc),
            [195, 184, 107, 115, 110, 101, 115] => lookup_422_305(acc),
            [114, 97, 107, 107, 101, 115, 116, 97, 100] => lookup_422_306(acc),
            [120, 110, 45, 45, 115, 109, 108, 97, 45, 104, 114, 97] => lookup_422_307(acc),
            [120, 110, 45, 45, 121, 101, 114, 45, 122, 110, 97] => lookup_422_308(acc),
            [111, 114, 107, 97, 110, 103, 101, 114] => lookup_422_309(acc),
            [108, 105, 108, 108, 101, 104, 97, 109, 109, 101, 114] => lookup_422_310(acc),
            [115, 117, 110, 100] => lookup_422_311(acc),
            [115, 110, 97, 115, 97] => lookup_422_312(acc),
            [115, 117, 110, 110, 100, 97, 108] => lookup_422_313(acc),
            [120, 110, 45, 45, 116, 106, 109, 101, 45, 104, 114, 97] => lookup_422_314(acc),
            [118, 103, 115] => lookup_422_315(acc),
            [120, 110, 45, 45, 107, 114, 97, 103, 101, 114, 45, 103, 121, 97] => {
                lookup_422_316(acc)
            }
            [118, 97, 110, 121, 108, 118, 101, 110] => lookup_422_317(acc),
            [103, 111, 108] => lookup_422_318(acc),
            [97, 117, 115, 116, 114, 104, 101, 105, 109] => lookup_422_319(acc),
            [103, 106, 101, 114, 115, 116, 97, 100] => lookup_422_320(acc),
            [110, 101, 115, 115, 101, 98, 121] => lookup_422_321(acc),
            [110, 111, 114, 100, 45, 97, 117, 114, 100, 97, 108] => lookup_422_322(acc),
            [104, 97] => lookup_422_323(acc),
            [111, 112, 112, 101, 103, 97, 114, 100] => lookup_422_324(acc),
            [120, 110, 45, 45, 108, 117, 114, 121, 45, 105, 114, 97] => lookup_422_325(acc),
            [109, 97, 108, 97, 116, 118, 117, 111, 112, 109, 105] => lookup_422_326(acc),
            [120, 110, 45, 45, 115, 114, 102, 111, 108, 100, 45, 98, 121, 97] => {
                lookup_422_327(acc)
            }
            [110, 111, 114, 100, 108, 97, 110, 100] => lookup_422_328(info, labels, acc),
            [110, 195, 184, 116, 116, 101, 114, 195, 184, 121] => lookup_422_329(acc),
            [118, 101, 118, 101, 108, 115, 116, 97, 100] => lookup_422_330(acc),
            [118, 97, 103, 97, 110] => lookup_422_331(acc),
            [111, 115, 116, 102, 111, 108, 100] => lookup_422_332(info, labels, acc),
            [115, 111, 110, 103, 100, 97, 108, 101, 110] => lookup_422_333(acc),
            [104, 97, 109, 109, 101, 114, 102, 101, 115, 116] => lookup_422_334(acc),
            [104, 195, 161, 112, 109, 105, 114] => lookup_422_335(acc),
            [115, 111, 114, 114, 101, 105, 115, 97] => lookup_422_336(acc),
            [104, 195, 184, 121, 108, 97, 110, 100, 101, 116] => lookup_422_337(acc),
            [118, 101, 110, 110, 101, 115, 108, 97] => lookup_422_338(acc),
            [195, 165, 109, 111, 116] => lookup_422_339(acc),
            [97, 102, 106, 111, 114, 100] => lookup_422_340(acc),
            [98, 106, 97, 114, 107, 195, 184, 121] => lookup_422_341(acc),
            [107, 195, 165, 102, 106, 111, 114, 100] => lookup_422_342(acc),
            [112, 114, 105, 118] => lookup_422_343(acc),
            [109, 101, 108, 100, 97, 108] => lookup_422_344(acc),
            [101, 105, 100, 115, 107, 111, 103] => lookup_422_345(acc),
            [115, 97, 117, 104, 101, 114, 97, 100] => lookup_422_346(acc),
            [115, 116, 106, 111, 114, 100, 97, 108, 115, 104, 97, 108, 115, 101, 110] => {
                lookup_422_347(acc)
            }
            [120, 110, 45, 45, 115, 107, 110, 105, 116, 45, 121, 113, 97] => lookup_422_348(acc),
            [107, 114, 105, 115, 116, 105, 97, 110, 115, 117, 110, 100] => lookup_422_349(acc),
            [108, 111, 116, 101, 110] => lookup_422_350(acc),
            [98, 111, 100, 195, 184] => lookup_422_351(acc),
            [108, 117, 115, 116, 101, 114] => lookup_422_352(acc),
            [120, 110, 45, 45, 115, 114, 114, 101, 105, 115, 97, 45, 113, 49, 97] => {
                lookup_422_353(acc)
            }
            [102, 105, 110, 110, 195, 184, 121] => lookup_422_354(acc),
            [110, 195, 166, 114, 195, 184, 121] => lookup_422_355(acc),
            [108, 117, 114, 111, 121] => lookup_422_356(acc),
            [100, 97, 118, 118, 101, 115, 105, 105, 100, 97] => lookup_422_357(acc),
            [98, 97, 104, 99, 97, 118, 117, 111, 116, 110, 97] => lookup_422_358(acc),
            [116, 114, 111, 109, 115, 195, 184] => lookup_422_359(acc),
            [120, 110, 45, 45, 118, 97, 114, 100, 45, 106, 114, 97] => lookup_422_360(acc),
            [118, 101, 115, 116, 118, 195, 165, 103, 195, 184, 121] => lookup_422_361(acc),
            [107, 111, 110, 103, 115, 98, 101, 114, 103] => lookup_422_362(acc),
            [103, 97, 117, 108, 97, 114] => lookup_422_363(acc),
            [107, 118, 97, 108, 115, 117, 110, 100] => lookup_422_364(acc),
            [109, 97, 115, 102, 106, 111, 114, 100, 101, 110] => lookup_422_365(acc),
            [116, 114, 121, 115, 105, 108] => lookup_422_366(acc),
            [118, 101, 103, 195, 165, 114, 115, 104, 101, 105] => lookup_422_367(acc),
            [101, 116, 110, 101, 100, 97, 108] => lookup_422_368(acc),
            [102, 106, 101, 108, 108] => lookup_422_369(acc),
            [118, 101, 115, 116, 98, 121] => lookup_422_370(acc),
            [108, 111, 109] => lookup_422_371(acc),
            [114, 117, 111, 118, 97, 116] => lookup_422_372(acc),
            [100, 114, 97, 109, 109, 101, 110] => lookup_422_373(acc),
            [109, 111, 45, 105, 45, 114, 97, 110, 97] => lookup_422_374(acc),
            [195, 161, 108, 116, 195, 161] => lookup_422_375(acc),
            [101, 105, 100, 115, 98, 101, 114, 103] => lookup_422_376(acc),
            [100, 114, 195, 184, 98, 97, 107] => lookup_422_377(acc),
            [101, 108, 118, 101, 114, 117, 109] => lookup_422_378(acc),
            [101, 118, 101, 110, 101, 115] => lookup_422_379(acc),
            [120, 110, 45, 45, 103, 105, 118, 117, 111, 116, 110, 97, 45, 56, 121, 97] => {
                lookup_422_380(acc)
            }
            [102, 121, 108, 107, 101, 115, 98, 105, 98, 108] => lookup_422_381(acc),
            [103, 106, 195, 184, 118, 105, 107] => lookup_422_382(acc),
            [110, 105, 115, 115, 101, 100, 97, 108] => lookup_422_383(acc),
            [120, 110, 45, 45, 107, 115, 110, 101, 115, 45, 117, 117, 97] => lookup_422_384(acc),
            [103, 105, 101, 104, 116, 97, 118, 117, 111, 97, 116, 110, 97] => lookup_422_385(acc),
            [104, 111, 102] => lookup_422_386(acc),
            [115, 112, 121, 100, 101, 98, 101, 114, 103] => lookup_422_387(acc),
            [115, 116, 106, 195, 184, 114, 100, 97, 108] => lookup_422_388(acc),
            [115, 116, 111, 114, 102, 106, 111, 114, 100] => lookup_422_389(acc),
            [97, 103, 100, 101, 110, 101, 115] => lookup_422_390(acc),
            [107, 105, 114, 107, 101, 110, 101, 115] => lookup_422_391(acc),
            [195, 165, 108] => lookup_422_392(acc),
            [120, 110, 45, 45, 114, 108, 105, 110, 103, 101, 110, 45, 109, 120, 97] => {
                lookup_422_393(acc)
            }
            [116, 97, 110, 97, 110, 103, 101, 114] => lookup_422_394(acc),
            [103, 117, 108, 101, 110] => lookup_422_395(acc),
            [115, 107, 105, 101, 110] => lookup_422_396(acc),
            [115, 107, 106, 195, 165, 107] => lookup_422_397(acc),
            [118, 97, 103, 115, 111, 121] => lookup_422_398(acc),
            [110, 97, 97, 109, 101, 115, 106, 101, 118, 117, 101, 109, 105, 101] => {
                lookup_422_399(acc)
            }
            [120, 110, 45, 45, 106, 114, 112, 101, 108, 97, 110, 100, 45, 53, 52, 97] => {
                lookup_422_400(acc)
            }
            [100, 111, 110, 110, 97] => lookup_422_401(acc),
            [120, 110, 45, 45, 112, 111, 114, 115, 103, 117, 45, 115, 116, 97, 50, 54, 102] => {
                lookup_422_402(acc)
            }
            [104, 97, 108, 115, 97] => lookup_422_403(acc),
            [106, 101, 115, 115, 104, 101, 105, 109] => lookup_422_404(acc),
            [107, 97, 117, 116, 111, 107, 101, 105, 110, 111] => lookup_422_405(acc),
            [101, 110, 101, 98, 97, 107, 107] => lookup_422_406(acc),
            [102, 114, 111, 108, 97, 110, 100] => lookup_422_407(acc),
            [104, 195, 184, 121, 97, 110, 103, 101, 114] => lookup_422_408(acc),
            [101, 118, 106, 101, 45, 111, 103, 45, 104, 111, 114, 110, 110, 101, 115] => {
                lookup_422_409(acc)
            }
            [101, 116, 110, 101] => lookup_422_410(acc),
            [98, 106, 101, 114, 107, 114, 101, 105, 109] => lookup_422_411(acc),
            [103, 105, 108, 100, 101, 115, 107, 195, 165, 108] => lookup_422_412(acc),
            [101, 105, 100] => lookup_422_413(acc),
            [107, 108, 97, 98, 117] => lookup_422_414(acc),
            [120, 110, 45, 45, 114, 100, 121, 45, 48, 110, 97, 98] => lookup_422_415(acc),
            [104, 97, 117, 103, 101, 115, 117, 110, 100] => lookup_422_416(acc),
            [104, 111, 121, 97, 110, 103, 101, 114] => lookup_422_417(acc),
            [98, 97, 114, 117, 109] => lookup_422_418(acc),
            [101, 110, 103, 101, 114, 100, 97, 108] => lookup_422_419(acc),
            [120, 110, 45, 45, 102, 114, 121, 97, 45, 104, 114, 97] => lookup_422_420(acc),
            [195, 165, 107, 114, 101, 104, 97, 109, 110] => lookup_422_421(acc),
            [97, 108, 103, 97, 114, 100] => lookup_422_422(acc),
            [114, 195, 165, 104, 111, 108, 116] => lookup_422_423(acc),
            [102, 111, 115, 110, 101, 115] => lookup_422_424(acc),
            [120, 110, 45, 45, 110, 118, 117, 111, 116, 110, 97, 45, 104, 119, 97] => {
                lookup_422_425(acc)
            }
            [195, 184, 114, 108, 97, 110, 100] => lookup_422_426(acc),
            [120, 110, 45, 45, 115, 110, 115, 97, 45, 114, 111, 97] => lookup_422_427(acc),
            [102, 97, 117, 115, 107, 101] => lookup_422_428(acc),
            [120, 110, 45, 45, 115, 110, 97, 115, 101, 45, 110, 114, 97] => lookup_422_429(acc),
            [98, 97, 104, 99, 99, 97, 118, 117, 111, 116, 110, 97] => lookup_422_430(acc),
            [120, 110, 45, 45, 115, 114, 45, 118, 97, 114, 97, 110, 103, 101, 114, 45, 103, 103, 98] => {
                lookup_422_431(acc)
            }
            [110, 111, 114, 100, 45, 102, 114, 111, 110] => lookup_422_432(acc),
            [116, 121, 115, 118, 97, 114] => lookup_422_433(acc),
            [108, 105, 110, 100, 195, 165, 115] => lookup_422_434(acc),
            [107, 114, 97, 103, 101, 114, 195, 184] => lookup_422_435(acc),
            [120, 110, 45, 45, 118, 97, 100, 115, 45, 106, 114, 97] => lookup_422_436(acc),
            [120, 110, 45, 45, 118, 103, 45, 121, 105, 97, 98] => lookup_422_437(acc),
            [120, 110, 45, 45, 109, 111, 115, 106, 101, 110, 45, 101, 121, 97] => {
                lookup_422_438(acc)
            }
            [114, 97, 104, 111, 108, 116] => lookup_422_439(acc),
            [105, 98, 101, 115, 116, 97, 100] => lookup_422_440(acc),
            [108, 195, 184, 100, 105, 110, 103, 101, 110] => lookup_422_441(acc),
            [108, 105, 110, 100, 101, 115, 110, 101, 115] => lookup_422_442(acc),
            [111, 107, 115, 110, 101, 115] => lookup_422_443(acc),
            [120, 110, 45, 45, 114, 108, 97, 110, 100, 45, 117, 117, 97] => lookup_422_444(acc),
            [115, 97, 110, 100, 195, 184, 121] => lookup_422_445(acc),
            [120, 110, 45, 45, 110, 116, 116, 101, 114, 121, 45, 98, 121, 97, 101] => {
                lookup_422_446(acc)
            }
            [115, 107, 106, 101, 114, 118, 111, 121] => lookup_422_447(acc),
            [120, 110, 45, 45, 104, 98, 109, 101, 114, 45, 120, 113, 97] => lookup_422_448(acc),
            [97, 107, 110, 111, 108, 117, 111, 107, 116, 97] => lookup_422_449(acc),
            [108, 111, 114, 101, 110, 115, 107, 111, 103] => lookup_422_450(acc),
            [116, 105, 110, 103, 118, 111, 108, 108] => lookup_422_451(acc),
            [109, 105, 108] => lookup_422_452(acc),
            [120, 110, 45, 45, 108, 114, 100, 97, 108, 45, 115, 114, 97] => lookup_422_453(acc),
            [120, 110, 45, 45, 104, 109, 109, 114, 102, 101, 97, 115, 116, 97, 45, 115, 52, 97, 99] => {
                lookup_422_454(acc)
            }
            [104, 195, 166, 103, 101, 98, 111, 115, 116, 97, 100] => lookup_422_455(acc),
            [120, 110, 45, 45, 98, 114, 117, 109, 45, 118, 111, 97] => lookup_422_456(acc),
            [112, 111, 114, 115, 97, 110, 103, 117] => lookup_422_457(acc),
            [102, 108, 97, 116, 97, 110, 103, 101, 114] => lookup_422_458(acc),
            [115, 105, 103, 100, 97, 108] => lookup_422_459(acc),
            [116, 114, 195, 166, 110, 97] => lookup_422_460(acc),
            [108, 97, 114, 100, 97, 108] => lookup_422_461(acc),
            [97, 115, 107, 118, 111, 108, 108] => lookup_422_462(acc),
            [102, 101, 116, 115, 117, 110, 100] => lookup_422_463(acc),
            [116, 121, 115, 118, 195, 166, 114] => lookup_422_464(acc),
            [118, 102] => lookup_422_465(labels, acc),
            [115, 107, 105] => lookup_422_466(acc),
            [120, 110, 45, 45, 116, 110, 115, 98, 101, 114, 103, 45, 113, 49, 97] => {
                lookup_422_467(acc)
            }
            [120, 110, 45, 45, 107, 114, 106, 111, 104, 107, 97, 45, 104, 119, 97, 98, 52, 57, 106] => {
                lookup_422_468(acc)
            }
            [118, 97, 107, 115, 100, 97, 108] => lookup_422_469(acc),
            [118, 97, 110, 103] => lookup_422_470(acc),
            [108, 101, 115, 106, 97] => lookup_422_471(acc),
            [118, 97, 114, 111, 121] => lookup_422_472(acc),
            [117, 108, 108, 101, 110, 115, 97, 107, 101, 114] => lookup_422_473(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_422_474(acc),
            [103, 105, 115, 107, 101] => lookup_422_475(acc),
            [104, 106, 97, 114, 116, 100, 97, 108] => lookup_422_476(acc),
            [108, 101, 105, 114, 118, 105, 107] => lookup_422_477(acc),
            [120, 110, 45, 45, 98, 109, 108, 111, 45, 103, 114, 97] => lookup_422_478(acc),
            [100, 97, 118, 118, 101, 110, 106, 97, 114, 103, 97] => lookup_422_479(acc),
            [114, 195, 165, 100, 101] => lookup_422_480(acc),
            [115, 118, 101, 108, 118, 105, 107] => lookup_422_481(acc),
            [109, 111, 195, 165, 114, 101, 107, 101] => lookup_422_482(acc),
            [120, 110, 45, 45, 115, 116, 106, 114, 100, 97, 108, 115, 104, 97, 108, 115, 101, 110, 45, 115, 113, 98] => {
                lookup_422_483(acc)
            }
            [115, 195, 184, 114, 45, 97, 117, 114, 100, 97, 108] => lookup_422_484(acc),
            [107, 108, 101, 112, 112] => lookup_422_485(acc),
            [98, 97, 108, 97, 116] => lookup_422_486(acc),
            [104, 97, 114, 101, 105, 100] => lookup_422_487(acc),
            [109, 101, 114, 97, 107, 101, 114] => lookup_422_488(acc),
            [97, 118, 101, 114, 111, 121] => lookup_422_489(acc),
            [114, 101, 110, 110, 101, 98, 117] => lookup_422_490(acc),
            [115, 111, 114, 102, 111, 108, 100] => lookup_422_491(acc),
            [111, 102] => lookup_422_492(labels, acc),
            [120, 110, 45, 45, 98, 105, 101, 118, 116, 45, 48, 113, 97] => lookup_422_493(acc),
            [120, 110, 45, 45, 104, 121, 97, 110, 103, 101, 114, 45, 113, 49, 97] => {
                lookup_422_494(acc)
            }
            [98, 114, 195, 184, 110, 110, 195, 184, 121] => lookup_422_495(acc),
            [115, 116, 114, 97, 110, 100] => lookup_422_496(acc),
            [120, 110, 45, 45, 98, 114, 110, 110, 121, 115, 117, 110, 100, 45, 109, 56, 97, 99] => {
                lookup_422_497(acc)
            }
            [114, 97, 100, 101] => lookup_422_498(acc),
            [115, 105, 101, 108, 108, 97, 107] => lookup_422_499(acc),
            [115, 111, 107, 110, 100, 97, 108] => lookup_422_500(acc),
            [107, 114, 195, 165, 97, 110, 103, 104, 107, 101] => lookup_422_501(acc),
            [115, 195, 184, 114, 102, 111, 108, 100] => lookup_422_502(acc),
            [108, 97, 110, 103, 101, 118, 195, 165, 103] => lookup_422_503(acc),
            [110, 97, 109, 115, 115, 107, 111, 103, 97, 110] => lookup_422_504(acc),
            [98, 101, 114, 108, 101, 118, 97, 103] => lookup_422_505(acc),
            [106, 111, 108, 115, 116, 101, 114] => lookup_422_506(acc),
            [108, 101, 118, 97, 110, 103, 101, 114] => lookup_422_507(acc),
            [105, 118, 103, 117] => lookup_422_508(acc),
            [108, 195, 166, 114, 100, 97, 108] => lookup_422_509(acc),
            [102, 111, 108, 108, 100, 97, 108] => lookup_422_510(acc),
            [120, 110, 45, 45, 103, 103, 97, 118, 105, 105, 107, 97, 45, 56, 121, 97, 52, 55, 104] => {
                lookup_422_511(acc)
            }
            [108, 97, 118, 97, 103, 105, 115] => lookup_422_512(acc),
            [103, 108, 111, 112, 112, 101, 110] => lookup_422_513(acc),
            [120, 110, 45, 45, 114, 115, 116, 45, 48, 110, 97] => lookup_422_514(acc),
            [120, 110, 45, 45, 103, 106, 118, 105, 107, 45, 119, 117, 97] => lookup_422_515(acc),
            [107, 118, 195, 166, 110, 97, 110, 103, 101, 110] => lookup_422_516(acc),
            [108, 101, 105, 107, 97, 110, 103, 101, 114] => lookup_422_517(acc),
            [102, 114, 97, 110, 97] => lookup_422_518(acc),
            [104, 101, 109, 110, 101] => lookup_422_519(acc),
            [114, 105, 115, 195, 184, 114] => lookup_422_520(acc),
            [120, 110, 45, 45, 97, 110, 100, 121, 45, 105, 114, 97] => lookup_422_521(acc),
            [115, 107, 106, 97, 107] => lookup_422_522(acc),
            [108, 111, 112, 112, 97] => lookup_422_523(acc),
            [110, 97, 117, 115, 116, 100, 97, 108] => lookup_422_524(acc),
            [115, 109, 111, 108, 97] => lookup_422_525(acc),
            [118, 111, 115, 115, 101, 118, 97, 110, 103, 101, 110] => lookup_422_526(acc),
            [115, 111, 103, 110, 100, 97, 108] => lookup_422_527(acc),
            [115, 110, 195, 165, 97, 115, 101] => lookup_422_528(acc),
            [120, 110, 45, 45, 118, 101, 103, 114, 115, 104, 101, 105, 45, 99, 48, 97] => {
                lookup_422_529(acc)
            }
            [109, 111, 115, 107, 101, 110, 101, 115] => lookup_422_530(acc),
            [98, 121, 103, 108, 97, 110, 100] => lookup_422_531(acc),
            [120, 110, 45, 45, 104, 121, 108, 97, 110, 100, 101, 116, 45, 53, 52, 97] => {
                lookup_422_532(acc)
            }
            [116, 121, 115, 102, 106, 111, 114, 100] => lookup_422_533(acc),
            [107, 111, 109, 109, 117, 110, 101] => lookup_422_534(acc),
            [115, 97, 114, 112, 115, 98, 111, 114, 103] => lookup_422_535(acc),
            [110, 111, 114, 100, 114, 101, 45, 108, 97, 110, 100] => lookup_422_536(acc),
            [120, 110, 45, 45, 114, 115, 107, 111, 103, 45, 117, 117, 97] => lookup_422_537(acc),
            [115, 116, 114, 121, 110] => lookup_422_538(acc),
            [108, 121, 110, 103, 100, 97, 108] => lookup_422_539(acc),
            [109, 97, 114, 107, 101, 114] => lookup_422_540(acc),
            [104, 111, 108, 116, 97, 108, 101, 110] => lookup_422_541(acc),
            [118, 97, 114, 100, 111] => lookup_422_542(acc),
            [98, 195, 184, 109, 108, 111] => lookup_422_543(acc),
            [103, 97, 117, 115, 100, 97, 108] => lookup_422_544(acc),
            [107, 97, 114, 108, 115, 111, 121] => lookup_422_545(acc),
            [115, 111, 114, 45, 118, 97, 114, 97, 110, 103, 101, 114] => lookup_422_546(acc),
            [117, 116, 115, 105, 114, 97] => lookup_422_547(acc),
            [102, 117, 115, 97] => lookup_422_548(acc),
            [115, 110, 105, 108, 108, 102, 106, 111, 114, 100] => lookup_422_549(acc),
            [108, 105, 101, 114, 110, 101] => lookup_422_550(acc),
            [100, 114, 111, 98, 97, 107] => lookup_422_551(acc),
            [120, 110, 45, 45, 108, 97, 104, 101, 97, 100, 106, 117, 45, 55, 121, 97] => {
                lookup_422_552(acc)
            }
            [120, 110, 45, 45, 109, 108, 105, 45, 116, 108, 97] => lookup_422_553(acc),
            [109, 105, 100, 116, 114, 101, 45, 103, 97, 117, 108, 100, 97, 108] => {
                lookup_422_554(acc)
            }
            [111, 115, 116, 101, 114, 111, 121] => lookup_422_555(acc),
            [195, 184, 121, 103, 97, 114, 100, 101, 110] => lookup_422_556(acc),
            [195, 165, 108, 101, 115, 117, 110, 100] => lookup_422_557(acc),
            [120, 110, 45, 45, 108, 100, 105, 110, 103, 101, 110, 45, 113, 49, 97] => {
                lookup_422_558(acc)
            }
            [115, 195, 184, 114, 45, 118, 97, 114, 97, 110, 103, 101, 114] => lookup_422_559(acc),
            [100, 105, 101, 108, 100, 100, 97, 110, 117, 111, 114, 114, 105] => lookup_422_560(acc),
            [111, 115, 116, 114, 101, 45, 116, 111, 116, 101, 110] => lookup_422_561(acc),
            [106, 101, 118, 110, 97, 107, 101, 114] => lookup_422_562(acc),
            [120, 110, 45, 45, 118, 114, 101, 45, 101, 105, 107, 101, 114, 45, 107, 56, 97] => {
                lookup_422_563(acc)
            }
            [98, 195, 166, 114, 117, 109] => lookup_422_564(acc),
            [120, 110, 45, 45, 98, 104, 99, 97, 118, 117, 111, 116, 110, 97, 45, 115, 52, 97] => {
                lookup_422_565(acc)
            }
            [114, 97, 100, 111, 121] => lookup_422_566(acc),
            [115, 107, 105, 101, 114, 118, 97] => lookup_422_567(acc),
            [104, 195, 161, 98, 109, 101, 114] => lookup_422_568(acc),
            [97, 117, 107, 114, 97] => lookup_422_569(acc),
            [110, 195, 161, 118, 117, 111, 116, 110, 97] => lookup_422_570(acc),
            [104, 97, 116, 116, 102, 106, 101, 108, 108, 100, 97, 108] => lookup_422_571(acc),
            [120, 110, 45, 45, 109, 111, 114, 101, 107, 101, 45, 106, 117, 97] => {
                lookup_422_572(acc)
            }
            [111, 114, 115, 107, 111, 103] => lookup_422_573(acc),
            [111, 115, 101, 110] => lookup_422_574(acc),
            [100, 105, 118, 116, 116, 97, 115, 118, 117, 111, 116, 110, 97] => lookup_422_575(acc),
            [108, 111, 97, 98, 195, 161, 116] => lookup_422_576(acc),
            [104, 111, 108] => lookup_422_577(acc),
            [114, 195, 166, 108, 105, 110, 103, 101, 110] => lookup_422_578(acc),
            [120, 110, 45, 45, 102, 108, 111, 114, 45, 106, 114, 97] => lookup_422_579(acc),
            [115, 116, 111, 107, 107, 101] => lookup_422_580(acc),
            [114, 97, 100, 195, 184, 121] => lookup_422_581(acc),
            [115, 110, 195, 165, 115, 97] => lookup_422_582(acc),
            [120, 110, 45, 45, 100, 97, 118, 118, 101, 110, 106, 114, 103, 97, 45, 121, 52, 97] => {
                lookup_422_583(acc)
            }
            [102, 111, 108, 107, 101, 98, 105, 98, 108] => lookup_422_584(acc),
            [118, 97, 108, 108, 101] => lookup_422_585(acc),
            [120, 110, 45, 45, 116, 114, 97, 110, 121, 45, 121, 117, 97] => lookup_422_586(acc),
            [104, 105, 116, 114, 97] => lookup_422_587(acc),
            [108, 101, 110, 118, 105, 107] => lookup_422_588(acc),
            [98, 195, 161, 108, 195, 161, 116] => lookup_422_589(acc),
            [110, 101, 100, 114, 101, 45, 101, 105, 107, 101, 114] => lookup_422_590(acc),
            [104, 111, 108, 109, 101, 115, 116, 114, 97, 110, 100] => lookup_422_591(acc),
            [109, 111, 100, 97, 108, 101, 110] => lookup_422_592(acc),
            [111, 112, 112, 101, 103, 195, 165, 114, 100] => lookup_422_593(acc),
            [108, 101, 105, 114, 102, 106, 111, 114, 100] => lookup_422_594(acc),
            [109, 97, 110, 100, 97, 108] => lookup_422_595(acc),
            [98, 101, 114, 103, 101, 110] => lookup_422_596(acc),
            [120, 110, 45, 45, 109, 101, 114, 107, 101, 114, 45, 107, 117, 97] => {
                lookup_422_597(acc)
            }
            [102, 108, 101, 107, 107, 101, 102, 106, 111, 114, 100] => lookup_422_598(acc),
            [114, 101, 110, 100, 97, 108, 101, 110] => lookup_422_599(acc),
            [104, 108] => lookup_422_600(labels, acc),
            [120, 110, 45, 45, 109, 117, 111, 115, 116, 45, 48, 113, 97] => lookup_422_601(acc),
            [110, 111, 114, 101, 45, 111, 103, 45, 117, 118, 100, 97, 108] => lookup_422_602(acc),
            [109, 195, 165, 108, 115, 101, 108, 118] => lookup_422_603(acc),
            [120, 110, 45, 45, 115, 97, 110, 100, 121, 45, 121, 117, 97] => lookup_422_604(acc),
            [120, 110, 45, 45, 118, 103, 97, 110, 45, 113, 111, 97] => lookup_422_605(acc),
            [98, 114, 101, 109, 97, 110, 103, 101, 114] => lookup_422_606(acc),
            [98, 101, 97, 114, 97, 108, 118, 195, 161, 104, 107, 105] => lookup_422_607(acc),
            [109, 105, 100, 115, 117, 110, 100] => lookup_422_608(acc),
            [97, 108, 118, 100, 97, 108] => lookup_422_609(acc),
            [103, 106, 101, 115, 100, 97, 108] => lookup_422_610(acc),
            [120, 110, 45, 45, 118, 114, 121, 45, 121, 108, 97, 53, 103] => lookup_422_611(acc),
            [115, 97, 110, 100, 101, 102, 106, 111, 114, 100] => lookup_422_612(acc),
            [105, 110, 100, 101, 114, 111, 121] => lookup_422_613(acc),
            [115, 112, 106, 101, 108, 107, 97, 118, 105, 107] => lookup_422_614(acc),
            [97, 110, 100, 195, 184, 121] => lookup_422_615(acc),
            [120, 110, 45, 45, 114, 105, 115, 97, 45, 53, 110, 97] => lookup_422_616(acc),
            [118, 195, 165, 103, 115, 195, 184, 121] => lookup_422_617(acc),
            [98, 111, 100, 111] => lookup_422_618(acc),
            [115, 110, 111, 97, 115, 97] => lookup_422_619(acc),
            [118, 111, 115, 115] => lookup_422_620(acc),
            [97, 115, 107, 111, 121] => lookup_422_621(acc),
            [104, 117, 114, 117, 109] => lookup_422_622(acc),
            [120, 110, 45, 45, 107, 114, 97, 110, 103, 104, 107, 101, 45, 98, 48, 97] => {
                lookup_422_623(acc)
            }
            [108, 105, 108, 108, 101, 115, 97, 110, 100] => lookup_422_624(acc),
            [120, 110, 45, 45, 114, 121, 107, 101, 110, 45, 118, 117, 97] => lookup_422_625(acc),
            [114, 111, 121, 107, 101, 110] => lookup_422_626(acc),
            [104, 111, 110, 101, 102, 111, 115, 115] => lookup_422_627(acc),
            [102, 108, 101, 115, 98, 101, 114, 103] => lookup_422_628(acc),
            [116, 109] => lookup_422_629(labels, acc),
            [108, 97, 118, 97, 110, 103, 101, 110] => lookup_422_630(acc),
            [120, 110, 45, 45, 110, 109, 101, 115, 106, 101, 118, 117, 101, 109, 105, 101, 45, 116, 99, 98, 97] => {
                lookup_422_631(acc)
            }
            [115, 195, 184, 109, 110, 97] => lookup_422_632(acc),
            [120, 110, 45, 45, 107, 114, 101, 104, 97, 109, 110, 45, 100, 120, 97] => {
                lookup_422_633(acc)
            }
            [109, 97, 115, 111, 121] => lookup_422_634(acc),
            [120, 110, 45, 45, 114, 101, 110, 110, 101, 115, 121, 45, 118, 49, 97] => {
                lookup_422_635(acc)
            }
            [97, 117, 114, 115, 107, 111, 103, 45, 104, 111, 108, 97, 110, 100] => {
                lookup_422_636(acc)
            }
            [108, 195, 184, 114, 101, 110, 115, 107, 111, 103] => lookup_422_637(acc),
            [112, 111, 114, 115, 103, 114, 117, 110, 110] => lookup_422_638(acc),
            [103, 114, 97, 110, 101] => lookup_422_639(acc),
            [120, 110, 45, 45, 98, 101, 114, 108, 101, 118, 103, 45, 106, 120, 97] => {
                lookup_422_640(acc)
            }
            [115, 116, 97, 116, 104, 101, 108, 108, 101] => lookup_422_641(acc),
            [104, 97, 112, 109, 105, 114] => lookup_422_642(acc),
            [120, 110, 45, 45, 115, 114, 45, 102, 114, 111, 110, 45, 113, 49, 97] => {
                lookup_422_643(acc)
            }
            [102, 101, 100, 106, 101] => lookup_422_644(acc),
            [103, 97, 110, 103, 97, 118, 105, 105, 107, 97] => lookup_422_645(acc),
            [97, 101, 106, 114, 105, 101] => lookup_422_646(acc),
            [98, 97, 106, 100, 100, 97, 114] => lookup_422_647(acc),
            [107, 114, 97, 97, 110, 103, 104, 107, 101] => lookup_422_648(acc),
            [120, 110, 45, 45, 107, 118, 105, 116, 115, 121, 45, 102, 121, 97] => {
                lookup_422_649(acc)
            }
            [111, 114, 107, 100, 97, 108] => lookup_422_650(acc),
            [115, 107, 195, 161, 110, 105, 116] => lookup_422_651(acc),
            [115, 97, 108, 97, 116] => lookup_422_652(acc),
            [115, 118, 101, 105, 111] => lookup_422_653(acc),
            [104, 111, 108, 101] => lookup_422_654(acc),
            [108, 97, 104, 112, 112, 105] => lookup_422_655(acc),
            [195, 165, 115] => lookup_422_656(acc),
            [106, 111, 114, 112, 101, 108, 97, 110, 100] => lookup_422_657(acc),
            [120, 110, 45, 45, 98, 111, 100, 45, 50, 110, 97] => lookup_422_658(acc),
            [108, 101, 98, 101, 115, 98, 121] => lookup_422_659(acc),
            [110, 111, 114, 100, 45, 111, 100, 97, 108] => lookup_422_660(acc),
            [110, 116] => lookup_422_661(labels, acc),
            [115, 97, 110, 100, 110, 101, 115] => lookup_422_662(acc),
            [104, 195, 165] => lookup_422_663(acc),
            [107, 114, 195, 184, 100, 115, 104, 101, 114, 97, 100] => lookup_422_664(acc),
            [120, 110, 45, 45, 114, 104, 107, 107, 101, 114, 118, 106, 117, 45, 48, 49, 97, 102] => {
                lookup_422_665(acc)
            }
            [108, 97, 114, 118, 105, 107] => lookup_422_666(acc),
            [109, 114] => lookup_422_667(labels, acc),
            [98, 114, 111, 110, 110, 111, 121] => lookup_422_668(acc),
            [114, 97, 104, 107, 107, 101, 114, 97, 118, 106, 117] => lookup_422_669(acc),
            [109, 106, 111, 110, 100, 97, 108, 101, 110] => lookup_422_670(acc),
            [97, 115, 107, 101, 114] => lookup_422_671(acc),
            [104, 118, 97, 108, 101, 114] => lookup_422_672(acc),
            [120, 110, 45, 45, 117, 110, 106, 114, 103, 97, 45, 114, 116, 97] => {
                lookup_422_673(acc)
            }
            [120, 110, 45, 45, 121, 115, 116, 114, 101, 45, 115, 108, 105, 100, 114, 101, 45, 117, 106, 98] => {
                lookup_422_674(acc)
            }
            [108, 101, 97, 110, 103, 97, 118, 105, 105, 107, 97] => lookup_422_675(acc),
            [120, 110, 45, 45, 114, 114, 111, 115, 45, 103, 114, 97] => lookup_422_676(acc),
            [103, 114, 111, 110, 103] => lookup_422_677(acc),
            [195, 184, 115, 116, 114, 101, 45, 116, 111, 116, 101, 110] => lookup_422_678(acc),
            [115, 97, 108, 97, 110, 103, 101, 110] => lookup_422_679(acc),
            [120, 110, 45, 45, 108, 116, 45, 108, 105, 97, 99] => lookup_422_680(acc),
            [104, 111, 114, 100, 97, 108, 97, 110, 100] => lookup_422_681(info, labels, acc),
            [100, 111, 118, 114, 101] => lookup_422_682(acc),
            [115, 116, 97, 116] => lookup_422_683(acc),
            [98, 195, 165, 116, 115, 102, 106, 111, 114, 100] => lookup_422_684(acc),
            [115, 107, 105, 101, 114, 118, 195, 161] => lookup_422_685(acc),
            [98, 105, 110, 100, 97, 108] => lookup_422_686(acc),
            [114, 97, 117, 109, 97] => lookup_422_687(acc),
            [115, 195, 184, 103, 110, 101] => lookup_422_688(acc),
            [195, 184, 114, 115, 107, 111, 103] => lookup_422_689(acc),
            [115, 195, 184, 114, 114, 101, 105, 115, 97] => lookup_422_690(acc),
            [120, 110, 45, 45, 109, 106, 110, 100, 97, 108, 101, 110, 45, 54, 52, 97] => {
                lookup_422_691(acc)
            }
            [120, 110, 45, 45, 115, 114, 117, 109, 45, 103, 114, 97] => lookup_422_692(acc),
            [115, 116, 106, 195, 184, 114, 100, 97, 108, 115, 104, 97, 108, 115, 101, 110] => {
                lookup_422_693(acc)
            }
            [120, 110, 45, 45, 100, 110, 110, 97, 45, 103, 114, 97] => lookup_422_694(acc),
            [98, 121, 107, 108, 101] => lookup_422_695(acc),
            [115, 107, 106, 101, 114, 118, 195, 184, 121] => lookup_422_696(acc),
            [100, 114, 97, 110, 103, 101, 100, 97, 108] => lookup_422_697(acc),
            [110, 97, 114, 111, 121] => lookup_422_698(acc),
            [120, 110, 45, 45, 108, 45, 49, 102, 97] => lookup_422_699(acc),
            [120, 110, 45, 45, 98, 106, 100, 100, 97, 114, 45, 112, 116, 97] => lookup_422_700(acc),
            [111, 121, 115, 116, 114, 101, 45, 115, 108, 105, 100, 114, 101] => lookup_422_701(acc),
            [98, 117, 115, 107, 101, 114, 117, 100] => lookup_422_702(info, labels, acc),
            [115, 97, 110, 100, 110, 101, 115, 115, 106, 111, 101, 110] => lookup_422_703(acc),
            [102, 106, 97, 108, 101, 114] => lookup_422_704(acc),
            [120, 110, 45, 45, 97, 117, 114, 115, 107, 111, 103, 45, 104, 108, 97, 110, 100, 45, 106, 110, 98] => {
                lookup_422_705(acc)
            }
            [120, 110, 45, 45, 107, 118, 102, 106, 111, 114, 100, 45, 110, 120, 97] => {
                lookup_422_706(acc)
            }
            [110, 101, 115, 110, 97] => lookup_422_707(acc),
            [120, 110, 45, 45, 115, 108, 116, 45, 101, 108, 97, 98] => lookup_422_708(acc),
            [120, 110, 45, 45, 115, 108, 97, 116, 45, 53, 110, 97] => lookup_422_709(acc),
            [114, 195, 161, 105, 115, 97] => lookup_422_710(acc),
            [114, 97, 110, 100, 97, 98, 101, 114, 103] => lookup_422_711(acc),
            [115, 109, 195, 184, 108, 97] => lookup_422_712(acc),
            [115, 121, 107, 107, 121, 108, 118, 101, 110] => lookup_422_713(acc),
            [120, 110, 45, 45, 101, 118, 101, 110, 105, 45, 48, 113, 97, 48, 49, 103, 97] => {
                lookup_422_714(acc)
            }
            [98, 114, 111, 110, 110, 111, 121, 115, 117, 110, 100] => lookup_422_715(acc),
            [107, 118, 105, 116, 101, 115, 101, 105, 100] => lookup_422_716(acc),
            [111, 115, 116, 101, 114, 195, 184, 121] => lookup_422_717(acc),
            [102, 114, 195, 184, 121, 97] => lookup_422_718(acc),
            [97, 108, 116, 97] => lookup_422_719(acc),
            [195, 165, 108, 103, 195, 165, 114, 100] => lookup_422_720(acc),
            [97, 97, 114, 98, 111, 114, 116, 101] => lookup_422_721(acc),
            [120, 110, 45, 45, 109, 114, 101, 45, 111, 103, 45, 114, 111, 109, 115, 100, 97, 108, 45, 113, 113, 98] => {
                lookup_422_722(info, labels, acc)
            }
            [104, 111, 114, 110, 105, 110, 100, 97, 108] => lookup_422_723(acc),
            [105, 110, 100, 101, 114, 195, 184, 121] => lookup_422_724(acc),
            [98, 101, 97, 114, 100, 117] => lookup_422_725(acc),
            [102, 97, 114, 115, 117, 110, 100] => lookup_422_726(acc),
            [107, 118, 195, 166, 102, 106, 111, 114, 100] => lookup_422_727(acc),
            [108, 111, 100, 105, 110, 103, 101, 110] => lookup_422_728(acc),
            [120, 110, 45, 45, 115, 97, 110, 100, 110, 101, 115, 115, 106, 101, 110, 45, 111, 103, 98] => {
                lookup_422_729(acc)
            }
            [116, 106, 101, 108, 100, 115, 117, 110, 100] => lookup_422_730(acc),
            [116, 106, 111, 109, 101] => lookup_422_731(acc),
            [120, 110, 45, 45, 108, 97, 110, 103, 101, 118, 103, 45, 106, 120, 97] => {
                lookup_422_732(acc)
            }
            [100, 101, 112] => lookup_422_733(acc),
            [114, 105, 115, 111, 114] => lookup_422_734(acc),
            [120, 110, 45, 45, 114, 104, 111, 108, 116, 45, 109, 114, 97] => lookup_422_735(acc),
            [120, 110, 45, 45, 116, 114, 110, 97, 45, 119, 111, 97] => lookup_422_736(acc),
            [100, 97, 118, 118, 101, 110, 106, 195, 161, 114, 103, 97] => lookup_422_737(acc),
            [195, 184, 121, 101, 114] => lookup_422_738(acc),
            [116, 114, 195, 184, 103, 115, 116, 97, 100] => lookup_422_739(acc),
            [120, 110, 45, 45, 104, 99, 101, 115, 117, 111, 108, 111, 45, 55, 121, 97, 51, 53, 98] => {
                lookup_422_740(acc)
            }
            [106, 195, 184, 114, 112, 101, 108, 97, 110, 100] => lookup_422_741(acc),
            [104, 101, 109, 110, 101, 115] => lookup_422_742(acc),
            [102, 117, 111, 115, 115, 107, 111] => lookup_422_743(acc),
            [115, 116, 97, 118, 101, 114, 110] => lookup_422_744(acc),
            [108, 117, 110, 110, 101, 114] => lookup_422_745(acc),
            [107, 108, 195, 166, 98, 117] => lookup_422_746(acc),
            [120, 110, 45, 45, 108, 116, 101, 110, 45, 103, 114, 97] => lookup_422_747(acc),
            [109, 97, 114, 110, 97, 114, 100, 97, 108] => lookup_422_748(acc),
            [118, 101, 115, 116, 114, 101, 45, 116, 111, 116, 101, 110] => lookup_422_749(acc),
            [118, 105, 107, 110, 97] => lookup_422_750(acc),
            [120, 110, 45, 45, 104, 103, 101, 98, 111, 115, 116, 97, 100, 45, 103, 51, 97] => {
                lookup_422_751(acc)
            }
            [120, 110, 45, 45, 108, 101, 115, 117, 110, 100, 45, 104, 117, 97] => {
                lookup_422_752(acc)
            }
            [107, 118, 105, 116, 115, 111, 121] => lookup_422_753(acc),
            [114, 97, 105, 115, 97] => lookup_422_754(acc),
            [118, 101, 115, 116, 114, 101, 45, 115, 108, 105, 100, 114, 101] => lookup_422_755(acc),
            [118, 101, 103, 97, 114, 115, 104, 101, 105] => lookup_422_756(acc),
            [104, 111, 107, 107, 115, 117, 110, 100] => lookup_422_757(acc),
            [116, 121, 115, 110, 101, 115] => lookup_422_758(acc),
            [110, 101, 115, 115, 101, 116] => lookup_422_759(acc),
            [118, 97, 114, 103, 103, 97, 116] => lookup_422_760(acc),
            [118, 101, 115, 116, 110, 101, 115] => lookup_422_761(acc),
            [107, 111, 112, 101, 114, 118, 105, 107] => lookup_422_762(acc),
            [110, 97, 109, 100, 97, 108, 115, 101, 105, 100] => lookup_422_763(acc),
            [118, 101, 102, 115, 110] => lookup_422_764(acc),
            [196, 141, 195, 161, 104, 99, 101, 115, 117, 111, 108, 111] => lookup_422_765(acc),
            [120, 110, 45, 45, 114, 115, 116, 97, 45, 102, 114, 97] => lookup_422_766(acc),
            [120, 110, 45, 45, 121, 103, 97, 114, 100, 101, 110, 45, 112, 49, 97] => {
                lookup_422_767(acc)
            }
            [114, 111, 97, 110] => lookup_422_768(acc),
            [97, 109, 108, 105] => lookup_422_769(acc),
            [107, 97, 102, 106, 111, 114, 100] => lookup_422_770(acc),
            [109, 111, 108, 100, 101] => lookup_422_771(acc),
            [120, 110, 45, 45, 98, 108, 116, 45, 101, 108, 97, 98] => lookup_422_772(acc),
            [120, 110, 45, 45, 102, 114, 100, 101, 45, 103, 114, 97] => lookup_422_773(acc),
            [118, 111, 97, 103, 97, 116] => lookup_422_774(acc),
            [120, 110, 45, 45, 108, 101, 97, 103, 97, 118, 105, 105, 107, 97, 45, 53, 50, 98] => {
                lookup_422_775(acc)
            }
            [108, 105, 101, 114] => lookup_422_776(acc),
            [120, 110, 45, 45, 98, 114, 110, 110, 121, 45, 119, 117, 97, 99] => lookup_422_777(acc),
            [102, 114, 101, 100, 114, 105, 107, 115, 116, 97, 100] => lookup_422_778(acc),
            [120, 110, 45, 45, 103, 105, 108, 100, 101, 115, 107, 108, 45, 103, 48, 97] => {
                lookup_422_779(acc)
            }
            [118, 111, 108, 100, 97] => lookup_422_780(acc),
            [116, 105, 109, 101] => lookup_422_781(acc),
            [98, 195, 165, 100, 195, 165, 100, 100, 106, 195, 165] => lookup_422_782(acc),
            [116, 111, 108, 103, 97] => lookup_422_783(acc),
            [103, 114, 97, 116, 97, 110, 103, 101, 110] => lookup_422_784(acc),
            [118, 105, 110, 100, 97, 102, 106, 111, 114, 100] => lookup_422_785(acc),
            [98, 97, 100, 97, 100, 100, 106, 97] => lookup_422_786(acc),
            [115, 101, 108, 98, 117] => lookup_422_787(acc),
            [116, 114, 111, 97, 110, 100, 105, 110] => lookup_422_788(acc),
            [109, 111, 115, 115] => lookup_422_789(acc),
            [118, 101, 103, 97] => lookup_422_790(acc),
            [102, 195, 184, 114, 100, 101] => lookup_422_791(acc),
            [109, 117, 111, 115, 195, 161, 116] => lookup_422_792(acc),
            [120, 110, 45, 45, 102, 106, 111, 114, 100, 45, 108, 114, 97] => lookup_422_793(acc),
            [103, 106, 111, 118, 105, 107] => lookup_422_794(acc),
            [120, 110, 45, 45, 109, 108, 97, 116, 118, 117, 111, 112, 109, 105, 45, 115, 52, 97] => {
                lookup_422_795(acc)
            }
            [120, 110, 45, 45, 114, 100, 101, 45, 117, 108, 97] => lookup_422_796(acc),
            [120, 110, 45, 45, 116, 114, 103, 115, 116, 97, 100, 45, 114, 49, 97] => {
                lookup_422_797(acc)
            }
            [120, 110, 45, 45, 116, 121, 115, 118, 114, 45, 118, 114, 97] => lookup_422_798(acc),
            [97, 108, 115, 116, 97, 104, 97, 117, 103] => lookup_422_799(acc),
            [120, 110, 45, 45, 103, 108, 115, 45, 101, 108, 97, 99] => lookup_422_800(acc),
            [115, 195, 161, 108, 195, 161, 116] => lookup_422_801(acc),
            [108, 121, 110, 103, 101, 110] => lookup_422_802(acc),
            [101, 105, 100, 115, 118, 111, 108, 108] => lookup_422_803(acc),
            [103, 105, 108, 100, 101, 115, 107, 97, 108] => lookup_422_804(acc),
            [111, 112, 112, 100, 97, 108] => lookup_422_805(acc),
            [98, 97, 108, 108, 97, 110, 103, 101, 110] => lookup_422_806(acc),
            [108, 101, 107, 115, 118, 105, 107] => lookup_422_807(acc),
            [120, 110, 45, 45, 102, 108, 45, 122, 105, 97] => lookup_422_808(acc),
            [103, 114, 105, 109, 115, 116, 97, 100] => lookup_422_809(acc),
            [115, 116, 97, 118, 97, 110, 103, 101, 114] => lookup_422_810(acc),
            [104, 97, 114, 97, 109] => lookup_422_811(acc),
            [120, 110, 45, 45, 97, 115, 107, 121, 45, 105, 114, 97] => lookup_422_812(acc),
            [97, 115, 107, 195, 184, 121] => lookup_422_813(acc),
            [101, 118, 101, 110, 195, 161, 197, 161, 197, 161, 105] => lookup_422_814(acc),
            [120, 110, 45, 45, 108, 114, 101, 110, 115, 107, 111, 103, 45, 53, 52, 97] => {
                lookup_422_815(acc)
            }
            [114, 105, 115, 115, 97] => lookup_422_816(acc),
            [120, 110, 45, 45, 115, 114, 45, 111, 100, 97, 108, 45, 113, 49, 97] => {
                lookup_422_817(acc)
            }
            [109, 111, 115, 106, 195, 184, 101, 110] => lookup_422_818(acc),
            [120, 110, 45, 45, 102, 114, 110, 97, 45, 119, 111, 97] => lookup_422_819(acc),
            [97, 110, 100, 97, 115, 117, 111, 108, 111] => lookup_422_820(acc),
            [108, 101, 114, 100, 97, 108] => lookup_422_821(acc),
            [111, 118, 114, 101, 45, 101, 105, 107, 101, 114] => lookup_422_822(acc),
            [120, 110, 45, 45, 97, 118, 101, 114, 121, 45, 121, 117, 97] => lookup_422_823(acc),
            [110, 101, 115, 111, 100, 100, 116, 97, 110, 103, 101, 110] => lookup_422_824(acc),
            [120, 110, 45, 45, 102, 105, 110, 110, 121, 45, 121, 117, 97] => lookup_422_825(acc),
            [115, 111, 114, 117, 109] => lookup_422_826(acc),
            [116, 97, 110, 97] => lookup_422_827(acc),
            [116, 114, 111, 110, 100, 104, 101, 105, 109] => lookup_422_828(acc),
            [120, 110, 45, 45, 106, 108, 115, 116, 101, 114, 45, 98, 121, 97] => {
                lookup_422_829(acc)
            }
            [116, 118, 101, 100, 101, 115, 116, 114, 97, 110, 100] => lookup_422_830(acc),
            [104, 195, 184, 110, 101, 102, 111, 115, 115] => lookup_422_831(acc),
            [115, 117, 108, 97] => lookup_422_832(acc),
            [100, 105, 118, 116, 97, 115, 118, 117, 111, 100, 110, 97] => lookup_422_833(acc),
            [115, 107, 97, 110, 105, 116] => lookup_422_834(acc),
            [116, 195, 184, 110, 115, 98, 101, 114, 103] => lookup_422_835(acc),
            [118, 97, 97, 112, 115, 116, 101] => lookup_422_836(acc),
            [118, 101, 114, 100, 97, 108] => lookup_422_837(acc),
            [102, 114, 111, 121, 97] => lookup_422_838(acc),
            [108, 101, 107, 97] => lookup_422_839(acc),
            [114, 97, 108, 105, 110, 103, 101, 110] => lookup_422_840(acc),
            [120, 110, 45, 45, 118, 103, 115, 121, 45, 113, 111, 97, 48, 106] => {
                lookup_422_841(acc)
            }
            [102, 108, 97, 107, 115, 116, 97, 100] => lookup_422_842(acc),
            [110, 111, 116, 111, 100, 100, 101, 110] => lookup_422_843(acc),
            [109, 117, 111, 115, 97, 116] => lookup_422_844(acc),
            [118, 195, 165, 103, 195, 165] => lookup_422_845(acc),
            [100, 121, 114, 195, 184, 121] => lookup_422_846(acc),
            [120, 110, 45, 45, 109, 115, 121, 45, 117, 108, 97, 48, 104] => lookup_422_847(acc),
            [115, 110, 97, 97, 115, 101] => lookup_422_848(acc),
            [115, 105, 108, 106, 97, 110] => lookup_422_849(acc),
            [108, 111, 97, 98, 97, 116] => lookup_422_850(acc),
            [111, 118, 101, 114, 104, 97, 108, 108, 97] => lookup_422_851(acc),
            [101, 118, 101, 110, 97, 115, 115, 105] => lookup_422_852(acc),
            [120, 110, 45, 45, 115, 109, 110, 97, 45, 103, 114, 97] => lookup_422_853(acc),
            [103, 97, 108, 115, 97] => lookup_422_854(acc),
            [118, 101, 115, 116, 118, 97, 103, 111, 121] => lookup_422_855(acc),
            [102, 108, 111, 114, 97] => lookup_422_856(acc),
            [120, 110, 45, 45, 115, 107, 106, 107, 45, 115, 111, 97] => lookup_422_857(acc),
            [120, 110, 45, 45, 115, 116, 106, 114, 100, 97, 108, 45, 115, 49, 97] => {
                lookup_422_858(acc)
            }
            [109, 97, 116, 116, 97, 45, 118, 97, 114, 106, 106, 97, 116] => lookup_422_859(acc),
            [97, 115, 110, 101, 115] => lookup_422_860(acc),
            [109, 111, 97, 114, 101, 107, 101] => lookup_422_861(acc),
            [98, 114, 121, 110, 101] => lookup_422_862(acc),
            [104, 111, 98, 111, 108] => lookup_422_863(acc),
            [98, 105, 101, 118, 195, 161, 116] => lookup_422_864(acc),
            [104, 111, 98, 195, 184, 108] => lookup_422_865(acc),
            [108, 101, 97, 197, 139, 103, 97, 118, 105, 105, 107, 97] => lookup_422_866(acc),
            [115, 108, 97, 116, 116, 117, 109] => lookup_422_867(acc),
            [98, 101, 97, 114, 97, 108, 118, 97, 104, 107, 105] => lookup_422_868(acc),
            [120, 110, 45, 45, 98, 100, 100, 100, 106, 45, 109, 114, 97, 98, 100] => {
                lookup_422_869(acc)
            }
            [106, 97, 110, 45, 109, 97, 121, 101, 110] => lookup_422_870(labels, acc),
            [102, 114, 195, 166, 110, 97] => lookup_422_871(acc),
            [107, 97, 114, 109, 111, 121] => lookup_422_872(acc),
            [114, 195, 184, 115, 116] => lookup_422_873(acc),
            [116, 121, 110, 115, 101, 116] => lookup_422_874(acc),
            [98, 114, 117, 109, 117, 110, 100, 100, 97, 108] => lookup_422_875(acc),
            [104, 97, 108, 100, 101, 110] => lookup_422_876(acc),
            [110, 97, 114, 118, 105, 105, 107, 97] => lookup_422_877(acc),
            [120, 110, 45, 45, 115, 107, 106, 101, 114, 118, 121, 45, 118, 49, 97] => {
                lookup_422_878(acc)
            }
            [115, 116, 97, 110, 103, 101] => lookup_422_879(acc),
            [97, 110, 100, 101, 98, 117] => lookup_422_880(acc),
            [110, 97, 109, 115, 111, 115] => lookup_422_881(acc),
            [107, 114, 97, 103, 101, 114, 111] => lookup_422_882(acc),
            [115, 111, 109, 110, 97] => lookup_422_883(acc),
            [118, 97, 100, 115, 195, 184] => lookup_422_884(acc),
            [120, 110, 45, 45, 100, 114, 98, 97, 107, 45, 119, 117, 97] => lookup_422_885(acc),
            [120, 110, 45, 45, 105, 110, 100, 101, 114, 121, 45, 102, 121, 97] => {
                lookup_422_886(acc)
            }
            [107, 118, 97, 109] => lookup_422_887(acc),
            [104, 195, 161, 109, 109, 195, 161, 114, 102, 101, 97, 115, 116, 97] => {
                lookup_422_888(acc)
            }
            [109, 111, 115, 118, 105, 107] => lookup_422_889(acc),
            [195, 165, 109, 108, 105] => lookup_422_890(acc),
            [109, 101, 108, 104, 117, 115] => lookup_422_891(acc),
            [115, 97, 110, 100, 111, 121] => lookup_422_892(acc),
            [107, 118, 105, 110, 101, 115, 100, 97, 108] => lookup_422_893(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_423() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_424() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_425() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_426() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_427() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_428() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_429() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_430() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_431() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_432_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_432<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 105, 115, 99, 111, 117, 114, 115, 101] => lookup_432_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_433() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_434_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_434<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 110, 105, 103, 104, 116, 112, 111, 105, 110, 116] => lookup_434_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_435() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_436() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_437_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_437_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_437_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_437_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_437_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_437<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_437_0(acc),
            [101, 100, 117] => lookup_437_1(acc),
            [103, 111, 118] => lookup_437_2(acc),
            [110, 101, 116] => lookup_437_3(acc),
            [111, 114, 103] => lookup_437_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_438() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_439() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_440() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_441() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_442() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_443() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_444() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_445() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_446() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_447() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_448() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_449() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_450() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_451() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_452() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_453() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_454() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_455() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_456() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_457() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_458() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_459() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_460() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_461_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_461_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_461_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_461_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_461<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 111, 110, 121] => lookup_461_0(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_461_1(acc),
            [98, 97, 114, 115, 121] => lookup_461_2(acc),
            [106, 101, 108, 101] => lookup_461_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_462_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_462_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_462_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_462_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_462_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_462_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_462_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_462_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_462<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_462_0(acc),
            [103, 111, 118] => lookup_462_1(acc),
            [116, 118] => lookup_462_2(acc),
            [99, 111, 109] => lookup_462_3(acc),
            [105, 110, 102, 111] => lookup_462_4(acc),
            [110, 101, 116] => lookup_462_5(acc),
            [111, 114, 103] => lookup_462_6(acc),
            [109, 101, 100] => lookup_462_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_463() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_464() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_466_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_466_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_466_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_466<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 115, 112, 97, 99, 101] => lookup_466_0(acc),
            [109, 121, 100, 100, 110, 115] => lookup_466_1(acc),
            [108, 105, 109, 97, 45, 99, 105, 116, 121] => lookup_466_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_467_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_467<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_467_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_468_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_468_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_468_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_468_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_468_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_468_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_468_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_468<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_468_0(acc),
            [101, 100, 117] => lookup_468_1(acc),
            [103, 111, 118] => lookup_468_2(acc),
            [110, 101, 116] => lookup_468_3(acc),
            [111, 114, 103] => lookup_468_4(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_468_5(acc),
            [109, 105, 108] => lookup_468_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_469() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_470() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_471() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_472() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_473() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_474() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_475_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_475_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_475_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_475<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [117, 98, 101, 114] => lookup_475_0(acc),
            [120, 115, 52, 97, 108, 108] => lookup_475_1(acc),
            [109, 121, 102, 97, 115, 116] => lookup_475_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_476() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_477() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_478() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_479() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_480() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_481() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_482() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_483() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_484() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_485() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_486() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_487() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_488() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_489_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_489<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_489_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_490() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_491() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_492() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_493() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_494_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_494_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_494_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_494_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_494_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_494_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_494_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_494_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_494_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_494_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_494<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 116] => lookup_494_0(acc),
            [101, 100, 117] => lookup_494_1(acc),
            [103, 111, 118] => lookup_494_2(acc),
            [112, 111, 108] => lookup_494_3(acc),
            [116, 109] => lookup_494_4(acc),
            [115, 111, 99] => lookup_494_5(acc),
            [99, 111, 109] => lookup_494_6(acc),
            [110, 101, 116] => lookup_494_7(acc),
            [97, 115, 115, 111] => lookup_494_8(acc),
            [111, 114, 103] => lookup_494_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_495() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_496() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_497_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_497_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_497_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_497<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 101, 108, 101, 98, 105, 116] => lookup_497_0(info, labels, acc),
            [108, 111, 99, 97, 108, 122, 111, 110, 101] => lookup_497_1(acc),
            [98, 108, 111, 103, 115, 105, 116, 101] => lookup_497_2(acc),
            [99, 114, 97, 102, 116, 105, 110, 103] => lookup_497_3(acc),
            [122, 97, 112, 116, 111] => lookup_497_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_498() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_499_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_499_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_499_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_499_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_499_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_499_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_499_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_499_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_499_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_499<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_499_0(acc),
            [115, 99, 104] => lookup_499_1(acc),
            [103, 111, 118] => lookup_499_2(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_499_3(acc),
            [97, 99] => lookup_499_4(acc),
            [110, 111, 109] => lookup_499_5(acc),
            [110, 101, 116] => lookup_499_6(acc),
            [111, 114, 103] => lookup_499_7(acc),
            [109, 105, 108] => lookup_499_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_500() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_501_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_501_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_501_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_501_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_501_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_501_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_501_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_501_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_501_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_501_8<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_501_8_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_501_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_501_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_501_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_501_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_501_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_501_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_501<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 105, 114, 109] => lookup_501_0(acc),
            [110, 97, 109, 101] => lookup_501_1(acc),
            [115, 99, 104] => lookup_501_2(acc),
            [109, 105, 108] => lookup_501_3(acc),
            [103, 101, 110] => lookup_501_4(acc),
            [109, 111, 98, 105] => lookup_501_5(acc),
            [99, 111, 108] => lookup_501_6(acc),
            [110, 103, 111] => lookup_501_7(acc),
            [99, 111, 109] => lookup_501_8(labels, acc),
            [110, 101, 116] => lookup_501_9(acc),
            [111, 114, 103] => lookup_501_10(acc),
            [101, 100, 117] => lookup_501_11(acc),
            [103, 111, 118] => lookup_501_12(acc),
            [108, 116, 100] => lookup_501_13(acc),
            [105] => lookup_501_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_502() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_503_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_503_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_503<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 111, 114] => lookup_503_0(acc),
            [114, 101, 112, 97, 105, 114] => lookup_503_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_504() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_505() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_506() -> Info {
    Info {
        len: 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_507_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_507<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 105, 99, 101, 97, 98, 108, 101] => lookup_507_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_508() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 109] => lookup_509_0(acc),
            [97, 115, 115, 111] => lookup_509_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_510() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_511() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_512() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_513() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_514_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_514_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_514_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_514_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_514_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_514_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_514_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_514_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_514_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_514_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_514<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 110, 102] => lookup_514_0(acc),
            [101, 100, 117] => lookup_514_1(acc),
            [103, 111, 118] => lookup_514_2(acc),
            [97, 115, 110] => lookup_514_3(acc),
            [110, 111, 109] => lookup_514_4(acc),
            [99, 111, 109] => lookup_514_5(acc),
            [110, 101, 116] => lookup_514_6(acc),
            [111, 114, 103] => lookup_514_7(acc),
            [105, 100] => lookup_514_8(acc),
            [109, 105, 108] => lookup_514_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_515() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_516() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_517_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_518_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_518_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_518_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_518_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_518_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_518_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_518<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_518_0(acc),
            [119, 101] => lookup_518_1(acc),
            [110, 101, 116] => lookup_518_2(acc),
            [101, 100, 117] => lookup_518_3(acc),
            [103, 111, 118] => lookup_518_4(acc),
            [111, 114, 103] => lookup_518_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_519() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_520() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_521() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_523() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_524() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_525() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_526() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_527_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_527_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_527_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_527_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_527_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_527<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_527_0(acc),
            [110, 101, 116] => lookup_527_1(acc),
            [101, 100, 117] => lookup_527_2(acc),
            [103, 111, 118] => lookup_527_3(acc),
            [111, 114, 103] => lookup_527_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_528() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_529() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_530() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_531() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_532_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_532_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_532_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_532_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_532<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_532_0(acc),
            [97, 115, 115, 111] => lookup_532_1(acc),
            [98, 97, 114, 114, 101, 97, 117] => lookup_532_2(acc),
            [103, 111, 117, 118] => lookup_532_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_533() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_534_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_534<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_534_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_535() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_536() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_537<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [114, 111, 117, 116, 101, 114] => lookup_537_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_538() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_540() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_541() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_542() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_543() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_544_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_544_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_544_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_544_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_544_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_544<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_544_0(acc),
            [101, 100, 117] => lookup_544_1(acc),
            [103, 111, 118] => lookup_544_2(acc),
            [111, 114, 103] => lookup_544_3(acc),
            [109, 105, 108] => lookup_544_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_545() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_546_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_546<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 112, 101, 110, 99, 114, 97, 102, 116] => lookup_546_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_547() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_549() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_550() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_551() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_552() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_553_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_553<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 110, 116] => lookup_553_0(acc),
            [101, 100, 117] => lookup_553_1(acc),
            [103, 111, 118] => lookup_553_2(acc),
            [112, 117, 98, 108] => lookup_553_3(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_553_4(acc),
            [99, 111, 109] => lookup_553_5(acc),
            [110, 101, 116] => lookup_553_6(acc),
            [110, 111, 109, 101] => lookup_553_7(acc),
            [111, 114, 103] => lookup_553_8(acc),
            [110, 121, 109] => lookup_553_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_554_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_554_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_554_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_554_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_554_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_554_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_554_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_554<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_554_0(acc),
            [101, 100, 117] => lookup_554_1(acc),
            [103, 111, 118] => lookup_554_2(acc),
            [109, 101] => lookup_554_3(acc),
            [110, 101, 116] => lookup_554_4(acc),
            [111, 114, 103] => lookup_554_5(acc),
            [115, 99, 104] => lookup_554_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_555() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_556() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_557() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_558() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_559_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_559_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_559_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_559_3_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_559_3_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_559_3_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_559_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_559_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_559_3_0(info, labels, acc),
            [99, 117, 115, 116, 111, 109] => lookup_559_3_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_559_4_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_559_4_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_559_4_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [102, 108, 116] => lookup_559_4_0_0(acc),
            [117, 115, 114] => lookup_559_4_0_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_559_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_559_4_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_559_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_559<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [114, 101, 97, 108, 109] => lookup_559_0(acc),
            [99, 111] => lookup_559_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_559_2(acc),
            [109, 101, 116, 97, 99, 101, 110, 116, 114, 117, 109] => {
                lookup_559_3(info, labels, acc)
            }
            [109, 117, 110, 105] => lookup_559_4(info, labels, acc),
            [101, 52] => lookup_559_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_560() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_561_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_561<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_561_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_562() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_563() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_564() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_565() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_566() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_567() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_568_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_568_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_568_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_568_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_568_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_568_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_568_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_568_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_568<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_568_0(acc),
            [103, 111, 118] => lookup_568_1(acc),
            [101, 100, 117] => lookup_568_2(acc),
            [110, 111, 109] => lookup_568_3(acc),
            [99, 111, 109] => lookup_568_4(acc),
            [110, 101, 116] => lookup_568_5(acc),
            [111, 114, 103] => lookup_568_6(acc),
            [109, 105, 108] => lookup_568_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_569() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_570_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_570_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_570_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_570_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_570_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_570<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_570_0(acc),
            [110, 101, 116] => lookup_570_1(acc),
            [103, 111, 118] => lookup_570_2(acc),
            [101, 100, 117] => lookup_570_3(acc),
            [111, 114, 103] => lookup_570_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_571() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_572_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_572_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_572_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_572_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_572_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_572_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_572_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_572_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_572_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_572_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_572_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_572_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_572_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_572<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 110, 116] => lookup_572_0(acc),
            [101, 100, 117] => lookup_572_1(acc),
            [103, 111, 118] => lookup_572_2(acc),
            [110, 97, 109, 101] => lookup_572_3(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_572_4(acc),
            [97, 99] => lookup_572_5(acc),
            [98, 105, 122] => lookup_572_6(acc),
            [99, 111, 109] => lookup_572_7(acc),
            [105, 110, 102, 111] => lookup_572_8(acc),
            [110, 101, 116] => lookup_572_9(acc),
            [104, 101, 97, 108, 116, 104] => lookup_572_10(acc),
            [111, 114, 103] => lookup_572_11(acc),
            [112, 114, 111] => lookup_572_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_573() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_574() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_575() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_577() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_578() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_579() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_580_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_580<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_580_0(acc),
            [100, 115, 99, 108, 111, 117, 100] => lookup_580_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_581() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_582() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_583() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_584() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_585() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_586() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_587() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_588() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_589() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_590() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_591() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_593() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_594() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_595() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_596() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_597() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_598() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_599_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_599<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 117, 115] => lookup_599_0(acc),
            [110, 122] => lookup_599_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_600() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_601() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_602() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_604() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_605() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_606_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_606_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_606_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_606_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_606_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_606<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_606_0(acc),
            [101, 100, 117] => lookup_606_1(acc),
            [103, 111, 118] => lookup_606_2(acc),
            [110, 101, 116] => lookup_606_3(acc),
            [111, 114, 103] => lookup_606_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_607() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_608() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_609() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_610() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_611() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_612() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_613_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_613_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_613_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_613_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_613_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_613_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_613_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_613_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_613_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_613_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_613_10_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_613_10<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_613_10_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_613_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_613_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_613_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_613_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_613_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_613<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 101, 115, 97] => lookup_613_0(acc),
            [102, 111, 114, 116, 101] => lookup_613_1(acc),
            [115, 99, 104] => lookup_613_2(acc),
            [112, 111, 110, 112, 101, 115] => lookup_613_3(acc),
            [109, 105, 108] => lookup_613_4(acc),
            [98, 108, 111, 103, 101, 114] => lookup_613_5(acc),
            [110, 101, 116] => lookup_613_6(acc),
            [103, 111] => lookup_613_7(acc),
            [102, 108, 97, 112] => lookup_613_8(acc),
            [119, 98, 108, 111, 103] => lookup_613_9(acc),
            [99, 111] => lookup_613_10(labels, acc),
            [97, 99] => lookup_613_11(acc),
            [98, 105, 122] => lookup_613_12(acc),
            [111, 114] => lookup_613_13(acc),
            [119, 101, 98] => lookup_613_14(acc),
            [109, 121] => lookup_613_15(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_614() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_615_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_615_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [100, 101, 109, 111] => lookup_615_0_0(acc),
            [112, 97, 97, 115] => lookup_615_0_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_615_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_615_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_615_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_615_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [102, 105] => lookup_615_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_615_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_615_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_615_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_615<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 97, 116, 97, 99, 101, 110, 116, 101, 114] => lookup_615_0(info, labels, acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_615_1(acc),
            [100, 121] => lookup_615_2(acc),
            [97, 108, 97, 110, 100] => lookup_615_3(acc),
            [99, 108, 111, 117, 100, 112, 108, 97, 116, 102, 111, 114, 109] => {
                lookup_615_4(info, labels, acc)
            }
            [104, 195, 164, 107, 107, 105, 110, 101, 110] => lookup_615_5(acc),
            [120, 110, 45, 45, 104, 107, 107, 105, 110, 101, 110, 45, 53, 119, 97] => {
                lookup_615_6(acc)
            }
            [105, 107, 105] => lookup_615_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_616() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_617() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_618() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 49, 50] => lookup_619_0(acc),
            [103, 111, 98] => lookup_619_1(acc),
            [101, 100, 117] => lookup_619_2(acc),
            [102, 105, 110] => lookup_619_3(acc),
            [103, 111, 118] => lookup_619_4(acc),
            [109, 105, 108] => lookup_619_5(acc),
            [110, 121, 109] => lookup_619_6(acc),
            [99, 111, 109] => lookup_619_7(acc),
            [105, 110, 102, 111] => lookup_619_8(acc),
            [110, 101, 116] => lookup_619_9(acc),
            [111, 114, 103] => lookup_619_10(acc),
            [112, 114, 111] => lookup_619_11(acc),
            [109, 101, 100] => lookup_619_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_620() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_621() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_622() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_624() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_625() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_626() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_627_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_627_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_627_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_627_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_627_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_627_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_627_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_627_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_627_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_627_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_627_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_627_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_627_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_627_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_627_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_627_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_627_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_627<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 99, 104, 111, 111, 108] => lookup_627_0(acc),
            [110, 97, 109, 101] => lookup_627_1(acc),
            [100, 114] => lookup_627_2(acc),
            [99, 97] => lookup_627_3(acc),
            [119, 115] => lookup_627_4(acc),
            [109, 120] => lookup_627_5(acc),
            [109, 111, 98, 105] => lookup_627_6(acc),
            [116, 118] => lookup_627_7(acc),
            [99, 111, 109] => lookup_627_8(acc),
            [105, 110, 102, 111] => lookup_627_9(acc),
            [105, 110] => lookup_627_10(acc),
            [111, 114, 103] => lookup_627_11(acc),
            [112, 114, 111] => lookup_627_12(acc),
            [99, 111] => lookup_627_13(acc),
            [99, 99] => lookup_627_14(acc),
            [111, 114] => lookup_627_15(acc),
            [117, 115] => lookup_627_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_628() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_629_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_629_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_629_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_629_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_629_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_629_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_629_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_629_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_629<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 116] => lookup_629_0(acc),
            [101, 100, 117] => lookup_629_1(acc),
            [112, 101, 114, 115, 111] => lookup_629_2(acc),
            [117, 110, 105, 118] => lookup_629_3(acc),
            [103, 111, 117, 118] => lookup_629_4(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_629_5(acc),
            [99, 111, 109] => lookup_629_6(acc),
            [111, 114, 103] => lookup_629_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_630() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_631() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_632_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_8<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [118, 112, 115] => lookup_632_8_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_632_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_10_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_10<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_632_10_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_632_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_29_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_29<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [104, 98] => lookup_632_29_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_632_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_35_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_35_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_632_35_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_632_35_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_35_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_632_35_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_632_35_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_35_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_632_35_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_632_35_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_35_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_632_35_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_632_35<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 111, 115, 116, 105, 110, 103] => lookup_632_35_0(info, labels, acc),
            [118, 112, 115] => lookup_632_35_1(info, labels, acc),
            [115, 112, 101, 99, 116, 114, 117, 109] => lookup_632_35_2(info, labels, acc),
            [108, 97, 110, 100, 105, 110, 103] => lookup_632_35_3(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_632_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_632<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 114, 99, 108, 111, 117, 100] => lookup_632_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_632_1(acc),
            [103, 114, 111, 122, 110, 121] => lookup_632_2(acc),
            [116, 101, 115, 116] => lookup_632_3(acc),
            [114, 97, 45, 114, 117] => lookup_632_4(acc),
            [109, 121, 116, 105, 115] => lookup_632_5(acc),
            [110, 111, 118] => lookup_632_6(acc),
            [101, 117, 114, 111, 100, 105, 114] => lookup_632_7(acc),
            [109, 99, 100, 105, 114] => lookup_632_8(labels, acc),
            [109, 115, 107] => lookup_632_9(acc),
            [114, 101, 103, 114, 117, 104, 111, 115, 116, 105, 110, 103] => {
                lookup_632_10(info, labels, acc)
            }
            [111, 114, 103] => lookup_632_11(acc),
            [110, 97, 108, 99, 104, 105, 107] => lookup_632_12(acc),
            [105, 110, 116] => lookup_632_13(acc),
            [112, 121, 97, 116, 105, 103, 111, 114, 115, 107] => lookup_632_14(acc),
            [97, 99] => lookup_632_15(acc),
            [107, 97, 108, 109, 121, 107, 105, 97] => lookup_632_16(acc),
            [99, 98, 103] => lookup_632_17(acc),
            [118, 108, 97, 100, 105, 107, 97, 118, 107, 97, 122] => lookup_632_18(acc),
            [118, 108, 97, 100, 105, 109, 105, 114] => lookup_632_19(acc),
            [100, 97, 103, 101, 115, 116, 97, 110] => lookup_632_20(acc),
            [110, 97, 52, 117] => lookup_632_21(acc),
            [122, 115, 101, 119] => lookup_632_22(acc),
            [115, 112, 98] => lookup_632_23(acc),
            [99, 111, 109] => lookup_632_24(acc),
            [110, 101, 116] => lookup_632_25(acc),
            [108, 107, 51] => lookup_632_26(acc),
            [109, 111, 114, 100, 111, 118, 105, 97] => lookup_632_27(acc),
            [107, 117, 115, 116, 97, 110, 97, 105] => lookup_632_28(acc),
            [99, 108, 100, 109, 97, 105, 108] => lookup_632_29(info, labels, acc),
            [101, 100, 117] => lookup_632_30(acc),
            [103, 111, 118] => lookup_632_31(acc),
            [109, 97, 114, 105, 110, 101] => lookup_632_32(acc),
            [109, 99, 112, 114, 101] => lookup_632_33(acc),
            [97, 100, 121, 103, 101, 121, 97] => lookup_632_34(acc),
            [109, 121, 106, 105, 110, 111] => lookup_632_35(labels, acc),
            [112, 112] => lookup_632_36(acc),
            [98, 97, 115, 104, 107, 105, 114, 105, 97] => lookup_632_37(acc),
            [114, 97, 115] => lookup_632_38(acc),
            [98, 105, 114] => lookup_632_39(acc),
            [109, 105, 108] => lookup_632_40(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_633() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_634_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_634_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_634<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_634_0(acc),
            [110, 121, 109] => lookup_634_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_636() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_637() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_638_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_638_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_638_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_638_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_638_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_638_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_638_6_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_638_6_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [106] => lookup_638_6_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_638_6_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_638_6<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 99, 97, 108, 101, 102, 111, 114, 99, 101] => lookup_638_6_0(info, labels, acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_638_6_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_638_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_638_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_638_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_638_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_638_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_638_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_638<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 97, 109, 101] => lookup_638_0(acc),
            [112, 114, 101, 115, 115] => lookup_638_1(acc),
            [103, 111, 118] => lookup_638_2(acc),
            [101, 107, 108, 111, 103, 101, 115] => lookup_638_3(acc),
            [108, 116, 100] => lookup_638_4(acc),
            [97, 99] => lookup_638_5(acc),
            [99, 111, 109] => lookup_638_6(labels, acc),
            [98, 105, 122] => lookup_638_7(acc),
            [110, 101, 116] => lookup_638_8(acc),
            [116, 109] => lookup_638_9(acc),
            [111, 114, 103] => lookup_638_10(acc),
            [112, 97, 114, 108, 105, 97, 109, 101, 110, 116] => lookup_638_11(acc),
            [112, 114, 111] => lookup_638_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_639() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_641() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_642() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_643() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_644() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_645() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_646() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_647() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_648() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_649() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_650() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_651_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_651<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [121, 98, 111] => lookup_651_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_652_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_652_0(acc),
            [101, 100, 117] => lookup_652_1(acc),
            [103, 111, 118] => lookup_652_2(acc),
            [114, 101, 112] => lookup_652_3(acc),
            [111, 114, 103] => lookup_652_4(acc),
            [116, 114, 97] => lookup_652_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_653_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_653_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_653_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_653_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_653_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_653_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_653_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_653<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_653_0(acc),
            [101, 109, 98] => lookup_653_1(acc),
            [101, 100, 117] => lookup_653_2(acc),
            [103, 111, 118] => lookup_653_3(acc),
            [110, 101, 116] => lookup_653_4(acc),
            [111, 114, 103] => lookup_653_5(acc),
            [105, 110, 100] => lookup_653_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_654() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_655_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_655<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [121, 98, 111] => lookup_655_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_656() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_657() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_658() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_659() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_660_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_660_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_660_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_660_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_660<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_660_0(acc),
            [99, 111] => lookup_660_1(acc),
            [110, 101, 116] => lookup_660_2(acc),
            [111, 114, 103] => lookup_660_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_661() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_662() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_663() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_664() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_665() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_666() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_667() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_668_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_668_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_668_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_668_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_668_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_668_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_668_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_668_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_668_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_668_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_668<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [208, 177, 208, 184, 208, 183] => lookup_668_0(acc),
            [208, 188, 208, 184, 209, 128] => lookup_668_1(acc),
            [208, 190, 209, 128, 208, 179] => lookup_668_2(acc),
            [209, 129, 208, 190, 209, 135, 208, 184] => lookup_668_3(acc),
            [208, 188, 209, 129, 208, 186] => lookup_668_4(acc),
            [209, 143] => lookup_668_5(acc),
            [208, 186, 208, 190, 208, 188] => lookup_668_6(acc),
            [208, 186, 209, 128, 209, 139, 208, 188] => lookup_668_7(acc),
            [209, 129, 208, 176, 208, 188, 208, 176, 209, 128, 208, 176] => lookup_668_8(acc),
            [209, 129, 208, 191, 208, 177] => lookup_668_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_669() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_671() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_672() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_673_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 97, 115, 105, 110, 111] => lookup_673_0(acc),
            [110, 101, 119, 115] => lookup_673_1(acc),
            [109, 101, 100, 105, 97] => lookup_673_2(acc),
            [112, 114, 105, 118] => lookup_673_3(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_673_4(acc),
            [105, 110, 103, 97, 116, 108, 97, 110] => lookup_673_5(acc),
            [105, 110, 102, 111] => lookup_673_6(acc),
            [114, 101, 107, 108, 97, 109] => lookup_673_7(acc),
            [111, 114, 103] => lookup_673_8(acc),
            [115, 122, 101, 120] => lookup_673_9(acc),
            [101, 114, 111, 116, 105, 99, 97] => lookup_673_10(acc),
            [97, 103, 114, 97, 114] => lookup_673_11(acc),
            [50, 48, 48, 48] => lookup_673_12(acc),
            [107, 111, 110, 121, 118, 101, 108, 111] => lookup_673_13(acc),
            [98, 111, 108, 116] => lookup_673_14(acc),
            [104, 111, 116, 101, 108] => lookup_673_15(acc),
            [116, 109] => lookup_673_16(acc),
            [103, 97, 109, 101, 115] => lookup_673_17(acc),
            [115, 101, 120] => lookup_673_18(acc),
            [117, 116, 97, 122, 97, 115] => lookup_673_19(acc),
            [102, 111, 114, 117, 109] => lookup_673_20(acc),
            [115, 112, 111, 114, 116] => lookup_673_21(acc),
            [106, 111, 103, 97, 115, 122] => lookup_673_22(acc),
            [108, 97, 107, 97, 115] => lookup_673_23(acc),
            [118, 105, 100, 101, 111] => lookup_673_24(acc),
            [99, 111] => lookup_673_25(acc),
            [101, 114, 111, 116, 105, 107, 97] => lookup_673_26(acc),
            [102, 105, 108, 109] => lookup_673_27(acc),
            [115, 117, 108, 105] => lookup_673_28(acc),
            [116, 111, 122, 115, 100, 101] => lookup_673_29(acc),
            [99, 105, 116, 121] => lookup_673_30(acc),
            [115, 104, 111, 112] => lookup_673_31(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_674() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_675() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_676() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_677_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_677_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_677_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_677_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_677_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_677_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_677_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_677<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_677_0(acc),
            [101, 100, 117] => lookup_677_1(acc),
            [110, 101, 116] => lookup_677_2(acc),
            [103, 111, 118] => lookup_677_3(acc),
            [111, 114, 103] => lookup_677_4(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_677_5(acc),
            [110, 121, 109] => lookup_677_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_678() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_679_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_679<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 117] => lookup_679_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_680() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_681() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_682() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_683_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_683_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_683_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_683_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_683_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_683_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_683<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_683_0(acc),
            [108, 97, 98] => lookup_683_1(acc),
            [101, 100, 117] => lookup_683_2(acc),
            [103, 111, 118] => lookup_683_3(acc),
            [110, 101, 116] => lookup_683_4(acc),
            [111, 114, 103] => lookup_683_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_684() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_685() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_686() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_687() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_688() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_689() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_690() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_691() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_692_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_692_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_692_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_692_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_692_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_692_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_692<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [229, 128, 139, 228, 186, 186] => lookup_692_0(acc),
            [229, 133, 172, 229, 143, 184] => lookup_692_1(acc),
            [230, 148, 191, 229, 186, 156] => lookup_692_2(acc),
            [231, 182, 178, 231, 181, 161] => lookup_692_3(acc),
            [231, 181, 132, 231, 185, 148] => lookup_692_4(acc),
            [230, 149, 153, 232, 130, 178] => lookup_692_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_693_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_693_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_693_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_693_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_693<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 101, 116, 116, 101, 114, 45, 116, 104, 97, 110] => lookup_693_0(acc),
            [111, 110, 45, 116, 104, 101, 45, 119, 101, 98] => lookup_693_1(acc),
            [119, 111, 114, 115, 101, 45, 116, 104, 97, 110] => lookup_693_2(acc),
            [100, 121, 110, 100, 110, 115] => lookup_693_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_694() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_695() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_696() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_697() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_698() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_699() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_700() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_701() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_702() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_703_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_703_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_703_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_703_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_703_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_703_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_703<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [208, 190, 209, 128, 208, 179] => lookup_703_0(acc),
            [208, 176, 208, 186] => lookup_703_1(acc),
            [209, 131, 208, 191, 209, 128] => lookup_703_2(acc),
            [208, 190, 208, 177, 209, 128] => lookup_703_3(acc),
            [208, 190, 208, 180] => lookup_703_4(acc),
            [208, 191, 209, 128] => lookup_703_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_704_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_704<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 115, 115] => lookup_704_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_705() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_706() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_707() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_708() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_709() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_710() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_711() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_712_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_712_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_712_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_712_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_712_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_712_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_712<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 114, 101, 115, 115] => lookup_712_0(acc),
            [99, 111] => lookup_712_1(acc),
            [103, 111, 118] => lookup_712_2(acc),
            [110, 101, 116] => lookup_712_3(acc),
            [111, 114, 103] => lookup_712_4(acc),
            [97, 99] => lookup_712_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_713() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_714() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_715_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_715_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_715_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_715_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_715_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_715_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_715_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_715_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_715_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_715_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_715<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_715_0(acc),
            [101, 100, 117] => lookup_715_1(acc),
            [103, 111, 118] => lookup_715_2(acc),
            [98, 105, 122] => lookup_715_3(acc),
            [99, 111, 109] => lookup_715_4(acc),
            [105, 110, 102, 111] => lookup_715_5(acc),
            [110, 101, 116] => lookup_715_6(acc),
            [116, 118] => lookup_715_7(acc),
            [111, 114, 103] => lookup_715_8(acc),
            [115, 116, 111, 114, 101] => lookup_715_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_716_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_716_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_716_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_716<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 116, 104] => lookup_716_0(acc),
            [105, 110, 102, 111] => lookup_716_1(acc),
            [103, 111, 118] => lookup_716_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_717() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_718() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_719() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_720() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_721() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_722() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_723() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_724() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_725() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_726_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_726<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_726_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_727() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_728() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_729() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_730() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_731() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_732() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_733() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_734() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_735() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_736_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_736_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_736_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_736_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_736_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_736_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_736<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_736_0(acc),
            [101, 100, 117] => lookup_736_1(acc),
            [103, 111, 118] => lookup_736_2(acc),
            [110, 101, 116] => lookup_736_3(acc),
            [111, 114, 103] => lookup_736_4(acc),
            [99, 111] => lookup_736_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_737() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_738() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_739() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_740() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_741_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_741_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_741_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_741_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_741_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_741_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_741_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_741<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 116] => lookup_741_0(acc),
            [99, 107] => lookup_741_1(acc),
            [99, 114, 105, 109, 101, 97] => lookup_741_2(acc),
            [108, 118, 105, 118] => lookup_741_3(acc),
            [111, 100] => lookup_741_4(acc),
            [111, 100, 101, 115, 115, 97] => lookup_741_5(acc),
            [108, 103] => lookup_741_6(acc),
            [122, 112] => lookup_741_7(acc),
            [108, 118] => lookup_741_8(acc),
            [111, 114, 103] => lookup_741_9(acc),
            [107, 115] => lookup_741_10(acc),
            [109, 107] => lookup_741_11(acc),
            [99, 104, 101, 114, 110, 111, 118, 116, 115, 121] => lookup_741_12(acc),
            [107, 104] => lookup_741_13(acc),
            [111, 100, 101, 115, 97] => lookup_741_14(acc),
            [112, 111, 108, 116, 97, 118, 97] => lookup_741_15(acc),
            [107, 121, 105, 118] => lookup_741_16(acc),
            [114, 105, 118, 110, 101] => lookup_741_17(acc),
            [116, 101] => lookup_741_18(acc),
            [99, 99] => lookup_741_19(acc),
            [110, 105, 107, 111, 108, 97, 101, 118] => lookup_741_20(acc),
            [99, 104, 101, 114, 110, 105, 118, 116, 115, 105] => lookup_741_21(acc),
            [115, 101, 118, 97, 115, 116, 111, 112, 111, 108] => lookup_741_22(acc),
            [100, 112] => lookup_741_23(acc),
            [117, 122, 104, 103, 111, 114, 111, 100] => lookup_741_24(acc),
            [99, 104, 101, 114, 107, 97, 115, 121] => lookup_741_25(acc),
            [99, 114] => lookup_741_26(acc),
            [105, 102] => lookup_741_27(acc),
            [107, 104, 101, 114, 115, 111, 110] => lookup_741_28(acc),
            [118] => lookup_741_29(acc),
            [107, 109] => lookup_741_30(acc),
            [108, 117, 103, 97, 110, 115, 107] => lookup_741_31(acc),
            [103, 111, 118] => lookup_741_32(acc),
            [109, 121, 107, 111, 108, 97, 105, 118] => lookup_741_33(acc),
            [118, 105, 110, 110, 105, 99, 97] => lookup_741_34(acc),
            [99, 104, 101, 114, 110, 105, 104, 105, 118] => lookup_741_35(acc),
            [108, 117, 116, 115, 107] => lookup_741_36(acc),
            [121, 97, 108, 116, 97] => lookup_741_37(acc),
            [108, 116, 100] => lookup_741_38(acc),
            [99, 111] => lookup_741_39(acc),
            [112, 112] => lookup_741_40(acc),
            [117, 122] => lookup_741_41(acc),
            [122, 104, 121, 116, 111, 109, 121, 114] => lookup_741_42(acc),
            [122, 116] => lookup_741_43(acc),
            [107, 104, 109, 101, 108, 110, 121, 116, 115, 107, 121, 105] => lookup_741_44(acc),
            [115, 101, 98, 97, 115, 116, 111, 112, 111, 108] => lookup_741_45(acc),
            [115, 98] => lookup_741_46(acc),
            [100, 110, 101, 112, 114, 111, 112, 101, 116, 114, 111, 118, 115, 107] => {
                lookup_741_47(acc)
            }
            [99, 118] => lookup_741_48(acc),
            [107, 114] => lookup_741_49(acc),
            [107, 105, 101, 118] => lookup_741_50(acc),
            [122, 104, 105, 116, 111, 109, 105, 114] => lookup_741_51(acc),
            [107, 104, 109, 101, 108, 110, 105, 116, 115, 107, 105, 121] => lookup_741_52(acc),
            [99, 104, 101, 114, 107, 97, 115, 115, 121] => lookup_741_53(acc),
            [105, 110] => lookup_741_54(acc),
            [100, 110] => lookup_741_55(acc),
            [105, 118, 97, 110, 111, 45, 102, 114, 97, 110, 107, 105, 118, 115, 107] => {
                lookup_741_56(acc)
            }
            [112, 108] => lookup_741_57(acc),
            [114, 111, 118, 110, 111] => lookup_741_58(acc),
            [115, 109] => lookup_741_59(acc),
            [115, 117, 109, 121] => lookup_741_60(acc),
            [118, 111, 108, 121, 110] => lookup_741_61(acc),
            [99, 110] => lookup_741_62(acc),
            [107, 104, 97, 114, 107, 105, 118] => lookup_741_63(acc),
            [118, 110] => lookup_741_64(acc),
            [105, 110, 102] => lookup_741_65(acc),
            [118, 105, 110, 110, 121, 116, 115, 105, 97] => lookup_741_66(acc),
            [99, 111, 109] => lookup_741_67(acc),
            [110, 101, 116] => lookup_741_68(acc),
            [99, 104, 101, 114, 110, 105, 103, 111, 118] => lookup_741_69(acc),
            [116, 101, 114, 110, 111, 112, 105, 108] => lookup_741_70(acc),
            [100, 110, 105, 112, 114, 111, 112, 101, 116, 114, 111, 118, 115, 107] => {
                lookup_741_71(acc)
            }
            [101, 100, 117] => lookup_741_72(acc),
            [107, 105, 114, 111, 118, 111, 103, 114, 97, 100] => lookup_741_73(acc),
            [107, 114, 121, 109] => lookup_741_74(acc),
            [122, 97, 112, 111, 114, 105, 122, 104, 122, 104, 105, 97] => lookup_741_75(acc),
            [107, 118] => lookup_741_76(acc),
            [107, 104, 97, 114, 107, 111, 118] => lookup_741_77(acc),
            [114, 118] => lookup_741_78(acc),
            [98, 105, 122] => lookup_741_79(acc),
            [100, 111, 110, 101, 116, 115, 107] => lookup_741_80(acc),
            [122, 97, 112, 111, 114, 105, 122, 104, 122, 104, 101] => lookup_741_81(acc),
            [99, 120] => lookup_741_82(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_742_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_742_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_742_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_742_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_742_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_742_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_742_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_742_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_742<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_742_0(acc),
            [103, 111, 118] => lookup_742_1(acc),
            [112, 118, 116] => lookup_742_2(acc),
            [110, 111, 109] => lookup_742_3(acc),
            [99, 111, 109] => lookup_742_4(acc),
            [110, 101, 116] => lookup_742_5(acc),
            [111, 114, 103] => lookup_742_6(acc),
            [109, 105, 108] => lookup_742_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_743() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_744() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_745() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_746_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_746<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_746_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_747_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_747_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_747_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_747_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_747_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_747_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_747_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_747_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_747_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_747_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_747_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_747_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_747_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_747_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_747<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 114, 111] => lookup_747_0(acc),
            [99, 111, 111, 112] => lookup_747_1(acc),
            [101, 100, 117] => lookup_747_2(acc),
            [103, 111, 118] => lookup_747_3(acc),
            [105, 110, 116] => lookup_747_4(acc),
            [110, 97, 109, 101] => lookup_747_5(acc),
            [98, 105, 122] => lookup_747_6(acc),
            [99, 111, 109] => lookup_747_7(acc),
            [105, 110, 102, 111] => lookup_747_8(acc),
            [97, 101, 114, 111] => lookup_747_9(acc),
            [110, 101, 116] => lookup_747_10(acc),
            [111, 114, 103] => lookup_747_11(acc),
            [109, 117, 115, 101, 117, 109] => lookup_747_12(acc),
            [109, 105, 108] => lookup_747_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_748_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_748_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_748_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_748_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_748_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_748_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_748_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_748<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 111, 112] => lookup_748_0(acc),
            [99, 111] => lookup_748_1(acc),
            [103, 111, 118] => lookup_748_2(acc),
            [110, 101, 116] => lookup_748_3(acc),
            [111, 114, 103] => lookup_748_4(acc),
            [97, 99] => lookup_748_5(acc),
            [109, 105, 108] => lookup_748_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_749() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_750() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_751() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_752_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_752_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_752_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_752_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_752_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_752_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_752_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_752<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_752_0(acc),
            [105, 110, 102, 111] => lookup_752_1(acc),
            [101, 100, 117] => lookup_752_2(acc),
            [103, 111, 118] => lookup_752_3(acc),
            [110, 101, 116] => lookup_752_4(acc),
            [111, 114, 103] => lookup_752_5(acc),
            [98, 105, 122] => lookup_752_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_753() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_754() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_755() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_756() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_757() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_758_0(acc),
            [103, 111, 118] => lookup_758_1(acc),
            [99, 111] => lookup_758_2(acc),
            [116, 109] => lookup_758_3(acc),
            [112, 114, 100] => lookup_758_4(acc),
            [110, 111, 109] => lookup_758_5(acc),
            [99, 111, 109] => lookup_758_6(acc),
            [111, 114, 103] => lookup_758_7(acc),
            [109, 105, 108] => lookup_758_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_759() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_760() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_761() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_762() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_763_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_763_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_763_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_763_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_763_4_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_763_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_763_4_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_763<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 122, 105, 109, 117, 116, 104] => lookup_763_0(acc),
            [116, 108, 111, 110] => lookup_763_1(acc),
            [97, 114, 118, 111] => lookup_763_2(acc),
            [99, 111] => lookup_763_3(acc),
            [97, 108, 99, 101, 115] => lookup_763_4(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_764() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_765() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_766() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_767_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_767_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_767_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_767_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_767_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_767_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_767_6_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_767_6<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_767_6_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_767_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_767_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_767<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_767_0(acc),
            [103, 111, 118] => lookup_767_1(acc),
            [100, 121, 110, 100, 110, 115] => lookup_767_2(acc),
            [109, 121, 112, 101, 116, 115] => lookup_767_3(acc),
            [99, 111, 109] => lookup_767_4(acc),
            [110, 101, 116] => lookup_767_5(acc),
            [97, 100, 118, 105, 115, 111, 114] => lookup_767_6(info, labels, acc),
            [99, 108, 111, 117, 100, 54, 54] => lookup_767_7(acc),
            [111, 114, 103] => lookup_767_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_768() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_769() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_770() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_771() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 117, 100, 101, 110, 116] => lookup_772_0(acc),
            [97, 103, 101, 110, 116, 115] => lookup_772_1(acc),
            [112, 97, 114, 97, 103, 108, 105, 100, 105, 110, 103] => lookup_772_2(acc),
            [97, 105, 114, 99, 114, 97, 102, 116] => lookup_772_3(acc),
            [115, 104, 111, 119] => lookup_772_4(acc),
            [114, 101, 115, 101, 97, 114, 99, 104] => lookup_772_5(acc),
            [97, 101, 114, 111, 100, 114, 111, 109, 101] => lookup_772_6(acc),
            [97, 105, 114, 45, 116, 114, 97, 102, 102, 105, 99, 45, 99, 111, 110, 116, 114, 111, 108] => {
                lookup_772_7(acc)
            }
            [99, 97, 97] => lookup_772_8(acc),
            [99, 101, 114, 116, 105, 102, 105, 99, 97, 116, 105, 111, 110] => lookup_772_9(acc),
            [106, 111, 117, 114, 110, 97, 108, 105, 115, 116] => lookup_772_10(acc),
            [114, 101, 112, 98, 111, 100, 121] => lookup_772_11(acc),
            [106, 111, 117, 114, 110, 97, 108] => lookup_772_12(acc),
            [114, 101, 115] => lookup_772_13(acc),
            [101, 120, 99, 104, 97, 110, 103, 101] => lookup_772_14(acc),
            [97, 117, 116, 104, 111, 114] => lookup_772_15(acc),
            [97, 105, 114, 45, 115, 117, 114, 118, 101, 105, 108, 108, 97, 110, 99, 101] => {
                lookup_772_16(acc)
            }
            [112, 97, 114, 97, 99, 104, 117, 116, 105, 110, 103] => lookup_772_17(acc),
            [97, 101, 114, 111, 99, 108, 117, 98] => lookup_772_18(acc),
            [99, 111, 110, 115, 117, 108, 116, 105, 110, 103] => lookup_772_19(acc),
            [99, 104, 97, 109, 112, 105, 111, 110, 115, 104, 105, 112] => lookup_772_20(acc),
            [115, 99, 105, 101, 110, 116, 105, 115, 116] => lookup_772_21(acc),
            [115, 97, 102, 101, 116, 121] => lookup_772_22(acc),
            [115, 107, 121, 100, 105, 118, 105, 110, 103] => lookup_772_23(acc),
            [103, 114, 111, 117, 110, 100, 104, 97, 110, 100, 108, 105, 110, 103] => {
                lookup_772_24(acc)
            }
            [105, 110, 115, 117, 114, 97, 110, 99, 101] => lookup_772_25(acc),
            [101, 110, 103, 105, 110, 101, 101, 114] => lookup_772_26(acc),
            [109, 97, 105, 110, 116, 101, 110, 97, 110, 99, 101] => lookup_772_27(acc),
            [116, 114, 97, 100, 105, 110, 103] => lookup_772_28(acc),
            [116, 114, 97, 100, 101, 114] => lookup_772_29(acc),
            [99, 104, 97, 114, 116, 101, 114] => lookup_772_30(acc),
            [115, 101, 114, 118, 105, 99, 101, 115] => lookup_772_31(acc),
            [103, 114, 111, 117, 112] => lookup_772_32(acc),
            [101, 109, 101, 114, 103, 101, 110, 99, 121] => lookup_772_33(acc),
            [110, 97, 118, 105, 103, 97, 116, 105, 111, 110] => lookup_772_34(acc),
            [116, 114, 97, 105, 110, 101, 114] => lookup_772_35(acc),
            [97, 105, 114, 108, 105, 110, 101] => lookup_772_36(acc),
            [99, 105, 118, 105, 108, 97, 118, 105, 97, 116, 105, 111, 110] => lookup_772_37(acc),
            [99, 97, 116, 101, 114, 105, 110, 103] => lookup_772_38(acc),
            [112, 114, 111, 100, 117, 99, 116, 105, 111, 110] => lookup_772_39(acc),
            [112, 105, 108, 111, 116] => lookup_772_40(acc),
            [117, 110, 105, 111, 110] => lookup_772_41(acc),
            [119, 111, 114, 107, 105, 110, 103, 103, 114, 111, 117, 112] => lookup_772_42(acc),
            [99, 97, 114, 103, 111] => lookup_772_43(acc),
            [97, 99, 99, 105, 100, 101, 110, 116, 45, 112, 114, 101, 118, 101, 110, 116, 105, 111, 110] => {
                lookup_772_44(acc)
            }
            [104, 97, 110, 103, 103, 108, 105, 100, 105, 110, 103] => lookup_772_45(acc),
            [115, 111, 102, 116, 119, 97, 114, 101] => lookup_772_46(acc),
            [109, 101, 100, 105, 97] => lookup_772_47(acc),
            [99, 111, 110, 115, 117, 108, 116, 97, 110, 116] => lookup_772_48(acc),
            [108, 111, 103, 105, 115, 116, 105, 99, 115] => lookup_772_49(acc),
            [119, 111, 114, 107, 115] => lookup_772_50(acc),
            [102, 108, 105, 103, 104, 116] => lookup_772_51(acc),
            [99, 108, 117, 98] => lookup_772_52(acc),
            [99, 111, 117, 110, 99, 105, 108] => lookup_772_53(acc),
            [101, 120, 112, 114, 101, 115, 115] => lookup_772_54(acc),
            [97, 105, 114, 116, 114, 97, 102, 102, 105, 99] => lookup_772_55(acc),
            [97, 115, 115, 111, 99, 105, 97, 116, 105, 111, 110] => lookup_772_56(acc),
            [101, 110, 103, 105, 110, 101] => lookup_772_57(acc),
            [114, 111, 116, 111, 114, 99, 114, 97, 102, 116] => lookup_772_58(acc),
            [101, 100, 117, 99, 97, 116, 111, 114] => lookup_772_59(acc),
            [101, 110, 116, 101, 114, 116, 97, 105, 110, 109, 101, 110, 116] => lookup_772_60(acc),
            [103, 111, 118, 101, 114, 110, 109, 101, 110, 116] => lookup_772_61(acc),
            [100, 103, 99, 97] => lookup_772_62(acc),
            [97, 101, 114, 111, 98, 97, 116, 105, 99] => lookup_772_63(acc),
            [99, 114, 101, 119] => lookup_772_64(acc),
            [114, 101, 99, 114, 101, 97, 116, 105, 111, 110] => lookup_772_65(acc),
            [98, 97, 108, 108, 111, 111, 110, 105, 110, 103] => lookup_772_66(acc),
            [97, 105, 114, 112, 111, 114, 116] => lookup_772_67(acc),
            [99, 111, 110, 102, 101, 114, 101, 110, 99, 101] => lookup_772_68(acc),
            [97, 99, 99, 105, 100, 101, 110, 116, 45, 105, 110, 118, 101, 115, 116, 105, 103, 97, 116, 105, 111, 110] => {
                lookup_772_69(acc)
            }
            [108, 101, 97, 115, 105, 110, 103] => lookup_772_70(acc),
            [109, 111, 100, 101, 108, 108, 105, 110, 103] => lookup_772_71(acc),
            [109, 105, 99, 114, 111, 108, 105, 103, 104, 116] => lookup_772_72(acc),
            [112, 97, 115, 115, 101, 110, 103, 101, 114, 45, 97, 115, 115, 111, 99, 105, 97, 116, 105, 111, 110] => {
                lookup_772_73(acc)
            }
            [97, 109, 98, 117, 108, 97, 110, 99, 101] => lookup_772_74(acc),
            [104, 111, 109, 101, 98, 117, 105, 108, 116] => lookup_772_75(acc),
            [112, 114, 101, 115, 115] => lookup_772_76(acc),
            [97, 109, 117, 115, 101, 109, 101, 110, 116] => lookup_772_77(acc),
            [100, 101, 115, 105, 103, 110] => lookup_772_78(acc),
            [101, 113, 117, 105, 112, 109, 101, 110, 116] => lookup_772_79(acc),
            [102, 101, 100, 101, 114, 97, 116, 105, 111, 110] => lookup_772_80(acc),
            [98, 114, 111, 107, 101, 114] => lookup_772_81(acc),
            [99, 111, 110, 116, 114, 111, 108] => lookup_772_82(acc),
            [102, 117, 101, 108] => lookup_772_83(acc),
            [109, 97, 103, 97, 122, 105, 110, 101] => lookup_772_84(acc),
            [103, 108, 105, 100, 105, 110, 103] => lookup_772_85(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_773() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_774() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_775() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_776_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_776_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_776_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_776_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_776_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_776_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_776_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_776_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_776<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_776_0(acc),
            [109, 101] => lookup_776_1(acc),
            [99, 111, 109] => lookup_776_2(acc),
            [99, 110] => lookup_776_3(acc),
            [110, 101, 116] => lookup_776_4(acc),
            [98, 108, 111, 103] => lookup_776_5(acc),
            [111, 114, 103] => lookup_776_6(acc),
            [100, 101, 118] => lookup_776_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_777() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_778_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_778_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_778_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_778_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_778_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_778_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_778_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_778_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_778_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_778_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_778_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_778_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_778_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_778_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_778<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 115] => lookup_778_0(acc),
            [105, 110, 102, 111] => lookup_778_1(acc),
            [101, 100, 117] => lookup_778_2(acc),
            [103, 111, 118] => lookup_778_3(acc),
            [103, 111, 107] => lookup_778_4(acc),
            [98, 105, 122] => lookup_778_5(acc),
            [99, 111, 109] => lookup_778_6(acc),
            [103, 111, 112] => lookup_778_7(acc),
            [110, 101, 116] => lookup_778_8(acc),
            [119, 101, 98] => lookup_778_9(acc),
            [103, 111, 110] => lookup_778_10(acc),
            [111, 114, 103] => lookup_778_11(acc),
            [102, 97, 109] => lookup_778_12(acc),
            [103, 111, 98] => lookup_778_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_779() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_780() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_781() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_782_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_782<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_782_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_783() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_784_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_784_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [56] => lookup_784_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_784_1(acc),
            [108] => lookup_784_2(acc),
            [103] => lookup_784_3(acc),
            [50] => lookup_784_4(acc),
            [122] => lookup_784_5(acc),
            [106] => lookup_784_6(acc),
            [117] => lookup_784_7(acc),
            [120] => lookup_784_8(acc),
            [48] => lookup_784_9(acc),
            [112] => lookup_784_10(acc),
            [121] => lookup_784_11(acc),
            [102] => lookup_784_12(acc),
            [116] => lookup_784_13(acc),
            [115] => lookup_784_14(acc),
            [49] => lookup_784_15(acc),
            [119] => lookup_784_16(acc),
            [101] => lookup_784_17(acc),
            [97] => lookup_784_18(acc),
            [105] => lookup_784_19(acc),
            [107] => lookup_784_20(acc),
            [110] => lookup_784_21(acc),
            [53] => lookup_784_22(acc),
            [55] => lookup_784_23(acc),
            [98] => lookup_784_24(acc),
            [51] => lookup_784_25(acc),
            [109] => lookup_784_26(acc),
            [111] => lookup_784_27(acc),
            [100] => lookup_784_28(acc),
            [104] => lookup_784_29(acc),
            [118] => lookup_784_30(acc),
            [113] => lookup_784_31(acc),
            [57] => lookup_784_32(acc),
            [98, 97, 114, 115, 121] => lookup_784_33(acc),
            [54] => lookup_784_34(acc),
            [52] => lookup_784_35(acc),
            [99] => lookup_784_36(acc),
            [114] => lookup_784_37(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_785() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_786() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_787() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_788() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_789() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_791() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_792() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_794() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_795_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_795_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_795<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 110] => lookup_795_0(acc),
            [111, 102] => lookup_795_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_796() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_797() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_798() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_799() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_800() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_801() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_802() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_803() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_804() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_805() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_806() -> Info {
    Info {
        len: 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_807() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_808() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_809() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_810_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_810_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 111, 110, 100, 111, 110] => lookup_810_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_810<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 97, 112, 112, 115] => lookup_810_0(labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_811() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_812() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_813() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_814_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_814<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 104, 97, 116] => lookup_814_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 110, 115] => lookup_815_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_816() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_817() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_819() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_820() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_821_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_821_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_821_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_821<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_821_0(acc),
            [99, 111] => lookup_821_1(acc),
            [97, 99] => lookup_821_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_822() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_823() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_824() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_825() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_826() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_827_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_9_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_9<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [99] => lookup_827_9_0(acc),
            [114, 115, 99] => lookup_827_9_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_827_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_40_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_40_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [115, 115, 108] => lookup_827_40_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_827_40<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [111, 114, 105, 103, 105, 110] => lookup_827_40_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_827_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_50_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_50<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [116, 101, 108, 101] => lookup_827_50_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_827_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_53_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_53_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_53<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 111, 109, 101] => lookup_827_53_0(acc),
            [103, 111] => lookup_827_53_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_827_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_75_0_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_75_0_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112] => lookup_827_75_0_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_827_75_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [111, 115] => lookup_827_75_0_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_827_75_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_75_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_75_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112] => lookup_827_75_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_827_75<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [115, 116, 103] => lookup_827_75_0(info, labels, acc),
            [99, 108, 111, 117, 100] => lookup_827_75_1(acc),
            [111, 115] => lookup_827_75_2(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_827_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_91<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 108] => lookup_827_91_0(acc),
            [99, 97] => lookup_827_91_1(acc),
            [106, 112] => lookup_827_91_2(acc),
            [108, 116] => lookup_827_91_3(acc),
            [107, 114] => lookup_827_91_4(acc),
            [105, 101] => lookup_827_91_5(acc),
            [109, 99] => lookup_827_91_6(acc),
            [109, 116] => lookup_827_91_7(acc),
            [112, 97, 114, 105, 115] => lookup_827_91_8(acc),
            [112, 116] => lookup_827_91_9(acc),
            [115, 105] => lookup_827_91_10(acc),
            [104, 117] => lookup_827_91_11(acc),
            [99, 122] => lookup_827_91_12(acc),
            [102, 114] => lookup_827_91_13(acc),
            [101, 101] => lookup_827_91_14(acc),
            [103, 114] => lookup_827_91_15(acc),
            [102, 105] => lookup_827_91_16(acc),
            [105, 110] => lookup_827_91_17(acc),
            [105, 110, 116] => lookup_827_91_18(acc),
            [105, 115] => lookup_827_91_19(acc),
            [105, 116] => lookup_827_91_20(acc),
            [108, 118] => lookup_827_91_21(acc),
            [98, 103] => lookup_827_91_22(acc),
            [99, 100] => lookup_827_91_23(acc),
            [99, 110] => lookup_827_91_24(acc),
            [105, 108] => lookup_827_91_25(acc),
            [109, 107] => lookup_827_91_26(acc),
            [112, 108] => lookup_827_91_27(acc),
            [113, 45, 97] => lookup_827_91_28(acc),
            [97, 115, 115, 111] => lookup_827_91_29(acc),
            [114, 111] => lookup_827_91_30(acc),
            [98, 101] => lookup_827_91_31(acc),
            [97, 117] => lookup_827_91_32(acc),
            [109, 121] => lookup_827_91_33(acc),
            [101, 115] => lookup_827_91_34(acc),
            [100, 107] => lookup_827_91_35(acc),
            [108, 117] => lookup_827_91_36(acc),
            [104, 114] => lookup_827_91_37(acc),
            [110, 108] => lookup_827_91_38(acc),
            [110, 111] => lookup_827_91_39(acc),
            [99, 121] => lookup_827_91_40(acc),
            [110, 122] => lookup_827_91_41(acc),
            [110, 101, 116] => lookup_827_91_42(acc),
            [114, 117] => lookup_827_91_43(acc),
            [115, 107] => lookup_827_91_44(acc),
            [116, 114] => lookup_827_91_45(acc),
            [117, 107] => lookup_827_91_46(acc),
            [117, 115] => lookup_827_91_47(acc),
            [115, 101] => lookup_827_91_48(acc),
            [99, 104] => lookup_827_91_49(acc),
            [101, 100, 117] => lookup_827_91_50(acc),
            [109, 101] => lookup_827_91_51(acc),
            [97, 116] => lookup_827_91_52(acc),
            [100, 101] => lookup_827_91_53(acc),
            [110, 103] => lookup_827_91_54(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_827_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_827<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 101, 114, 118, 101, 98, 98, 115] => lookup_827_0(acc),
            [100, 110, 115, 97, 108, 105, 97, 115] => lookup_827_1(acc),
            [109, 111, 122, 105, 108, 108, 97, 45, 105, 111, 116] => lookup_827_2(acc),
            [116, 111, 111, 108, 102, 111, 114, 103, 101] => lookup_827_3(acc),
            [107, 105, 99, 107, 115, 45, 97, 115, 115] => lookup_827_4(acc),
            [100, 105, 115, 107, 115, 116, 97, 116, 105, 111, 110] => lookup_827_5(acc),
            [117, 102, 99, 102, 97, 110] => lookup_827_6(acc),
            [100, 121, 110, 97, 108, 105, 97, 115] => lookup_827_7(acc),
            [104, 111, 109, 101, 102, 116, 112] => lookup_827_8(acc),
            [99, 100, 110, 55, 55] => lookup_827_9(info, labels, acc),
            [109, 97, 121, 102, 105, 114, 115, 116] => lookup_827_10(acc),
            [103, 97, 109, 101, 45, 104, 111, 115, 116] => lookup_827_11(acc),
            [99, 111, 117, 99, 104, 112, 111, 116, 97, 116, 111, 102, 114, 105, 101, 115] => {
                lookup_827_12(acc)
            }
            [105, 115, 45, 108, 111, 115, 116] => lookup_827_13(acc),
            [115, 101, 114, 118, 101, 102, 116, 112] => lookup_827_14(acc),
            [103, 111, 116, 100, 110, 115] => lookup_827_15(acc),
            [104, 111, 109, 101, 100, 110, 115] => lookup_827_16(acc),
            [100, 110, 115, 100, 111, 106, 111] => lookup_827_17(acc),
            [119, 109, 102, 108, 97, 98, 115] => lookup_827_18(acc),
            [112, 111, 105, 118, 114, 111, 110] => lookup_827_19(acc),
            [100, 111, 111, 109, 100, 110, 115] => lookup_827_20(acc),
            [117, 115] => lookup_827_21(acc),
            [110, 111, 119, 45, 100, 110, 115] => lookup_827_22(acc),
            [100, 121, 110, 115, 101, 114, 118] => lookup_827_23(acc),
            [102, 114, 111, 109, 45, 109, 101] => lookup_827_24(acc),
            [116, 119, 109, 97, 105, 108] => lookup_827_25(acc),
            [109, 121, 102, 116, 112] => lookup_827_26(acc),
            [102, 114, 101, 101, 100, 100, 110, 115] => lookup_827_27(acc),
            [100, 111, 101, 115, 110, 116, 101, 120, 105, 115, 116] => lookup_827_28(acc),
            [105, 115, 45, 118, 101, 114, 121, 45, 101, 118, 105, 108] => lookup_827_29(acc),
            [105, 115, 45, 97, 45, 99, 97, 110, 100, 105, 100, 97, 116, 101] => lookup_827_30(acc),
            [109, 121, 119, 105, 114, 101] => lookup_827_31(acc),
            [115, 112, 100, 110, 115] => lookup_827_32(acc),
            [105, 115, 45, 97, 45, 99, 104, 101, 102] => lookup_827_33(acc),
            [102, 101, 100, 111, 114, 97, 105, 110, 102, 114, 97, 99, 108, 111, 117, 100] => {
                lookup_827_34(acc)
            }
            [105, 115, 45, 97, 45, 107, 110, 105, 103, 104, 116] => lookup_827_35(acc),
            [104, 107] => lookup_827_36(acc),
            [105, 110, 45, 100, 115, 108] => lookup_827_37(acc),
            [99, 97, 98, 108, 101, 45, 109, 111, 100, 101, 109] => lookup_827_38(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_827_39(acc),
            [99, 100, 110, 55, 55, 45, 115, 101, 99, 117, 114, 101] => {
                lookup_827_40(info, labels, acc)
            }
            [98, 108, 111, 103, 115, 105, 116, 101] => lookup_827_41(acc),
            [105, 115, 45, 118, 101, 114, 121, 45, 115, 119, 101, 101, 116] => lookup_827_42(acc),
            [104, 101, 112, 102, 111, 114, 103, 101] => lookup_827_43(acc),
            [104, 111, 98, 98, 121, 45, 115, 105, 116, 101] => lookup_827_44(acc),
            [110, 111, 45, 105, 112] => lookup_827_45(acc),
            [115, 119, 101, 101, 116, 112, 101, 112, 112, 101, 114] => lookup_827_46(acc),
            [101, 110, 100, 111, 102, 116, 104, 101, 105, 110, 116, 101, 114, 110, 101, 116] => {
                lookup_827_47(acc)
            }
            [115, 101, 108, 108, 115, 121, 111, 117, 114, 104, 111, 109, 101] => lookup_827_48(acc),
            [104, 111, 109, 101, 108, 105, 110, 117, 120] => lookup_827_49(acc),
            [97, 109, 117, 110, 101] => lookup_827_50(info, labels, acc),
            [112, 105, 109, 105, 101, 110, 116, 97] => lookup_827_51(acc),
            [122, 97, 112, 116, 111] => lookup_827_52(acc),
            [100, 121, 110, 100, 110, 115] => lookup_827_53(labels, acc),
            [98, 109, 111, 97, 116, 116, 97, 99, 104, 109, 101, 110, 116, 115] => {
                lookup_827_54(acc)
            }
            [99, 97, 109, 100, 118, 114] => lookup_827_55(acc),
            [101, 100, 117, 103, 105, 116] => lookup_827_56(acc),
            [105, 115, 45, 118, 101, 114, 121, 45, 103, 111, 111, 100] => lookup_827_57(acc),
            [98, 97, 114, 115, 121] => lookup_827_58(acc),
            [97, 101] => lookup_827_59(acc),
            [100, 118, 114, 100, 110, 115] => lookup_827_60(acc),
            [122, 97] => lookup_827_61(acc),
            [112, 111, 116, 97, 103, 101, 114] => lookup_827_62(acc),
            [105, 115, 45, 115, 97, 118, 101, 100] => lookup_827_63(acc),
            [105, 115, 45, 118, 101, 114, 121, 45, 110, 105, 99, 101] => lookup_827_64(acc),
            [98, 108, 111, 103, 100, 110, 115] => lookup_827_65(acc),
            [105, 115, 45, 97, 45, 108, 105, 110, 117, 120, 45, 117, 115, 101, 114] => {
                lookup_827_66(acc)
            }
            [115, 116, 117, 102, 102, 45, 52, 45, 115, 97, 108, 101] => lookup_827_67(acc),
            [110, 102, 108, 102, 97, 110] => lookup_827_68(acc),
            [115, 109, 97, 108, 108, 45, 119, 101, 98] => lookup_827_69(acc),
            [105, 110, 45, 118, 112, 110] => lookup_827_70(acc),
            [114, 101, 97, 100, 109, 121, 98, 108, 111, 103] => lookup_827_71(acc),
            [98, 111, 108, 100, 108, 121, 103, 111, 105, 110, 103, 110, 111, 119, 104, 101, 114, 101] => {
                lookup_827_72(acc)
            }
            [105, 115, 45, 97, 45, 99, 101, 108, 116, 105, 99, 115, 102, 97, 110] => {
                lookup_827_73(acc)
            }
            [109, 108, 98, 102, 97, 110] => lookup_827_74(acc),
            [102, 101, 100, 111, 114, 97, 112, 114, 111, 106, 101, 99, 116] => {
                lookup_827_75(info, labels, acc)
            }
            [102, 114, 101, 101, 100, 101, 115, 107, 116, 111, 112] => lookup_827_76(acc),
            [100, 111, 110, 116, 101, 120, 105, 115, 116] => lookup_827_77(acc),
            [105, 115, 97, 45, 103, 101, 101, 107] => lookup_827_78(acc),
            [115, 101, 114, 118, 101, 103, 97, 109, 101] => lookup_827_79(acc),
            [109, 105, 115, 99, 111, 110, 102, 117, 115, 101, 100] => lookup_827_80(acc),
            [112, 111, 100, 122, 111, 110, 101] => lookup_827_81(acc),
            [116, 117, 120, 102, 97, 109, 105, 108, 121] => lookup_827_82(acc),
            [105, 115, 45, 97, 45, 115, 111, 120, 102, 97, 110] => lookup_827_83(acc),
            [104, 111, 112, 116, 111] => lookup_827_84(acc),
            [109, 121, 102, 105, 114, 101, 119, 97, 108, 108] => lookup_827_85(acc),
            [100, 100, 110, 115, 115] => lookup_827_86(acc),
            [100, 115, 109, 121, 110, 97, 115] => lookup_827_87(acc),
            [119, 101, 98, 104, 111, 112] => lookup_827_88(acc),
            [114, 101, 97, 100, 45, 98, 111, 111, 107, 115] => lookup_827_89(acc),
            [112, 117, 98, 116, 108, 115] => lookup_827_90(acc),
            [101, 117] => lookup_827_91(labels, acc),
            [97, 99, 99, 101, 115, 115, 99, 97, 109] => lookup_827_92(acc),
            [106, 115] => lookup_827_93(acc),
            [99, 101, 114, 116, 109, 103, 114] => lookup_827_94(acc),
            [109, 121, 115, 101, 99, 117, 114, 105, 116, 121, 99, 97, 109, 101, 114, 97] => {
                lookup_827_95(acc)
            }
            [100, 117, 99, 107, 100, 110, 115] => lookup_827_96(acc),
            [105, 115, 45, 118, 101, 114, 121, 45, 98, 97, 100] => lookup_827_97(acc),
            [102, 97, 109, 105, 108, 121, 100, 115] => lookup_827_98(acc),
            [116, 117, 110, 107] => lookup_827_99(acc),
            [99, 111, 108, 108, 101, 103, 101, 102, 97, 110] => lookup_827_100(acc),
            [119, 101, 98, 114, 101, 100, 105, 114, 101, 99, 116] => lookup_827_101(acc),
            [115, 101, 108, 102, 105, 112] => lookup_827_102(acc),
            [102, 101, 100, 111, 114, 97, 112, 101, 111, 112, 108, 101] => lookup_827_103(acc),
            [101, 110, 100, 111, 102, 105, 110, 116, 101, 114, 110, 101, 116] => {
                lookup_827_104(acc)
            }
            [104, 111, 109, 101, 117, 110, 105, 120] => lookup_827_105(acc),
            [105, 115, 45, 97, 45, 112, 97, 116, 115, 102, 97, 110] => lookup_827_106(acc),
            [97, 108, 116, 101, 114, 118, 105, 115, 116, 97] => lookup_827_107(acc),
            [105, 115, 45, 97, 45, 103, 101, 101, 107] => lookup_827_108(acc),
            [105, 115, 45, 97, 45, 98, 114, 117, 105, 110, 115, 102, 97, 110] => {
                lookup_827_109(acc)
            }
            [109, 121, 45, 102, 105, 114, 101, 119, 97, 108, 108] => lookup_827_110(acc),
            [119, 109, 99, 108, 111, 117, 100] => lookup_827_111(acc),
            [105, 115, 45, 102, 111, 117, 110, 100] => lookup_827_112(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_828() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_829() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_830_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_830_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_830_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_830_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_830_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_830_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_830_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_830_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_830_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_830<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115, 106] => lookup_830_0(acc),
            [101, 100, 117] => lookup_830_1(acc),
            [103, 111, 118] => lookup_830_2(acc),
            [122, 97] => lookup_830_3(acc),
            [110, 111, 109] => lookup_830_4(acc),
            [99, 111, 109] => lookup_830_5(acc),
            [110, 101, 116] => lookup_830_6(acc),
            [111, 114, 103] => lookup_830_7(acc),
            [110, 121, 109] => lookup_830_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_831_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_831_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_831_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 121, 109] => lookup_831_0(acc),
            [101, 100, 117] => lookup_831_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_831_2(acc),
            [110, 111, 109] => lookup_831_3(acc),
            [99, 111, 109] => lookup_831_4(acc),
            [110, 101, 116] => lookup_831_5(acc),
            [111, 114, 103] => lookup_831_6(acc),
            [103, 111, 98] => lookup_831_7(acc),
            [109, 105, 108] => lookup_831_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_832() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_833() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_834() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_836() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_837() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_838() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_839() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_840_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_840_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_840_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_840_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_840_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_840_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_840_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_840_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_840_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_840_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_840_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_840_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_840_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_840_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_840_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_840_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_840_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_840_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_840<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 114, 101, 115, 115, 101] => lookup_840_0(acc),
            [102, 105, 110] => lookup_840_1(acc),
            [109, 100] => lookup_840_2(acc),
            [103, 111, 117, 118] => lookup_840_3(acc),
            [101, 100] => lookup_840_4(acc),
            [110, 108] => lookup_840_5(acc),
            [99, 111, 109] => lookup_840_6(acc),
            [110, 101, 116] => lookup_840_7(acc),
            [120, 110, 45, 45, 97, 114, 111, 112, 111, 114, 116, 45, 98, 121, 97] => {
                lookup_840_8(acc)
            }
            [103, 111] => lookup_840_9(acc),
            [111, 114, 103] => lookup_840_10(acc),
            [97, 195, 169, 114, 111, 112, 111, 114, 116] => lookup_840_11(acc),
            [105, 110, 116] => lookup_840_12(acc),
            [99, 111] => lookup_840_13(acc),
            [101, 100, 117] => lookup_840_14(acc),
            [97, 99] => lookup_840_15(acc),
            [111, 114] => lookup_840_16(acc),
            [97, 115, 115, 111] => lookup_840_17(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_841_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_841<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_841_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_842() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_843() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_844() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_845() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_846_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_846_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_846_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_846<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_846_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_846_1(acc),
            [97, 115, 115, 111] => lookup_846_2(acc),
            [110, 111, 109] => lookup_846_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_847() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_848_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_848_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_848_2_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_848_2_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [106, 108] => lookup_848_2_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_848_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 101, 114, 118] => lookup_848_2_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_848_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_848_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_848_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_848_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_848<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_848_0(acc),
            [101, 100, 117] => lookup_848_1(acc),
            [110, 101, 116] => lookup_848_2(labels, acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_848_3(acc),
            [111, 114, 103] => lookup_848_4(acc),
            [103, 111, 98] => lookup_848_5(acc),
            [110, 121, 109] => lookup_848_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_849() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_850() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_852() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_853() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_854() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_855() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_856_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_856_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_856_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_856_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_856_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_856_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_856_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_856_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_856_5_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_856_5_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_856_5<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 117, 103] => lookup_856_5_0(acc),
            [103, 108, 117, 103] => lookup_856_5_1(acc),
            [108, 117, 103, 115] => lookup_856_5_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_856_6_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_856_6_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [106] => lookup_856_6_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_856_6_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_856_6_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_856_6_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_856_6_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_856_6_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_856_6_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_856_6_6<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116] => lookup_856_6_6_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_856_6_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_856_6_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_856_6_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_856_6_9_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_856_6_9<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [118, 109] => lookup_856_6_9_0(acc),
            [100, 104] => lookup_856_6_9_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_856_6<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 97, 121, 101, 114, 115, 104, 105, 102, 116] => lookup_856_6_0(info, labels, acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_856_6_1(acc),
            [110, 111, 45, 105, 112] => lookup_856_6_2(acc),
            [119, 101, 108, 108, 98, 101, 105, 110, 103, 122, 111, 110, 101] => lookup_856_6_3(acc),
            [98, 97, 114, 115, 121] => lookup_856_6_4(acc),
            [103, 119, 105, 100, 100, 108, 101] => lookup_856_6_5(acc),
            [114, 101, 116, 114, 111, 115, 110, 117, 98] => lookup_856_6_6(info, labels, acc),
            [98, 97, 114, 115, 121, 111, 110, 108, 105, 110, 101] => lookup_856_6_7(acc),
            [110, 104, 45, 115, 101, 114, 118] => lookup_856_6_8(acc),
            [98, 121, 116, 101, 109, 97, 114, 107] => lookup_856_6_9(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_856_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_856_7_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_856_7<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 101, 114, 118, 105, 99, 101] => lookup_856_7_0(acc),
            [104, 111, 109, 101, 111, 102, 102, 105, 99, 101] => lookup_856_7_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_856_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_856_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_856_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_856_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_856_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_856_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_856_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_856<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 99, 104] => lookup_856_0(info, labels, acc),
            [112, 121, 109, 110, 116] => lookup_856_1(acc),
            [112, 108, 99] => lookup_856_2(acc),
            [110, 104, 115] => lookup_856_3(acc),
            [110, 101, 116] => lookup_856_4(acc),
            [111, 114, 103] => lookup_856_5(labels, acc),
            [99, 111] => lookup_856_6(labels, acc),
            [103, 111, 118] => lookup_856_7(labels, acc),
            [109, 101] => lookup_856_8(acc),
            [97, 99] => lookup_856_9(acc),
            [108, 116, 100] => lookup_856_10(acc),
            [99, 111, 110, 110] => lookup_856_11(acc),
            [99, 111, 112, 114, 111] => lookup_856_12(acc),
            [98, 97, 114, 115, 121] => lookup_856_13(acc),
            [112, 111, 108, 105, 99, 101] => lookup_856_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_857_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_857_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_857_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_857_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_857_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_857_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_857_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_857_6<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100] => lookup_857_6_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_857_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_857_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_857<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [48, 101] => lookup_857_0(acc),
            [101, 100, 117] => lookup_857_1(acc),
            [103, 111, 118] => lookup_857_2(acc),
            [110, 111, 109] => lookup_857_3(acc),
            [99, 111, 109] => lookup_857_4(acc),
            [110, 101, 116] => lookup_857_5(acc),
            [103, 118] => lookup_857_6(labels, acc),
            [111, 114, 103] => lookup_857_7(acc),
            [109, 105, 108] => lookup_857_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_858() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_859_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_859_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_859_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_859_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 97, 116, 117, 114, 98, 114, 117, 107, 115, 103, 121, 109, 110] => {
                lookup_859_0(acc)
            }
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_859_1(acc),
            [107, 111, 109, 109, 117, 110, 97, 108, 102, 111, 114, 98, 117, 110, 100] => {
                lookup_859_2(acc)
            }
            [108] => lookup_859_3(acc),
            [103] => lookup_859_4(acc),
            [122] => lookup_859_5(acc),
            [111, 114, 103] => lookup_859_6(acc),
            [117] => lookup_859_7(acc),
            [120] => lookup_859_8(acc),
            [102, 104, 115, 107] => lookup_859_9(acc),
            [116, 109] => lookup_859_10(acc),
            [97, 99] => lookup_859_11(acc),
            [107, 111, 109, 102, 111, 114, 98] => lookup_859_12(acc),
            [102] => lookup_859_13(acc),
            [112] => lookup_859_14(acc),
            [116] => lookup_859_15(acc),
            [115] => lookup_859_16(acc),
            [98, 100] => lookup_859_17(acc),
            [97] => lookup_859_18(acc),
            [101] => lookup_859_19(acc),
            [105] => lookup_859_20(acc),
            [102, 104] => lookup_859_21(acc),
            [107] => lookup_859_22(acc),
            [110] => lookup_859_23(acc),
            [102, 104, 118] => lookup_859_24(acc),
            [119] => lookup_859_25(acc),
            [98] => lookup_859_26(acc),
            [121] => lookup_859_27(acc),
            [109] => lookup_859_28(acc),
            [111] => lookup_859_29(acc),
            [99, 111, 109] => lookup_859_30(acc),
            [104] => lookup_859_31(acc),
            [100] => lookup_859_32(acc),
            [99, 111, 110, 102] => lookup_859_33(acc),
            [112, 114, 101, 115, 115] => lookup_859_34(acc),
            [107, 111, 109, 118, 117, 120] => lookup_859_35(acc),
            [112, 112] => lookup_859_36(acc),
            [98, 114, 97, 110, 100] => lookup_859_37(acc),
            [105, 111, 112, 115, 121, 115] => lookup_859_38(acc),
            [108, 97, 110, 98, 105, 98] => lookup_859_39(acc),
            [112, 97, 114, 116, 105] => lookup_859_40(acc),
            [99] => lookup_859_41(acc),
            [114] => lookup_859_42(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_860() -> Info {
    Info {
        len: 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_861() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_862() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_2_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_2_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [101, 117] => lookup_863_2_0(acc),
            [117, 115] => lookup_863_2_1(acc),
            [98, 99] => lookup_863_2_2(acc),
            [101, 110, 116] => lookup_863_2_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [119, 101, 100, 101, 112, 108, 111, 121] => lookup_863_0(acc),
            [103, 111, 118] => lookup_863_1(acc),
            [112, 108, 97, 116, 102, 111, 114, 109] => lookup_863_2(info, labels, acc),
            [99, 111, 109] => lookup_863_3(acc),
            [110, 111, 119] => lookup_863_4(acc),
            [110, 101, 116] => lookup_863_5(acc),
            [104, 97, 115, 104, 98, 97, 110, 103] => lookup_863_6(acc),
            [118, 120, 108] => lookup_863_7(acc),
            [111, 114, 103] => lookup_863_8(acc),
            [98, 105, 112] => lookup_863_9(acc),
            [109, 105, 108] => lookup_863_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_864() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_865() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_866() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_867() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_868() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_869() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_870() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_871() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_11_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_872_11_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_872_11_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_872_11_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_872_11_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_872_11_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_872_11_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_872_11_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_872_11_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_872_11_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_872_11_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_872_11_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_872_11_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_872_11_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_872_11_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_872_11_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_872_11_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_872_11_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_872_11_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_872_11_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_872_11_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_872_11_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_872_11_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_872_11_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_872_11_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_872_11_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_872_11_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_872_11<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 108] => lookup_872_11_0(acc),
            [112, 97] => lookup_872_11_1(acc),
            [101, 115] => lookup_872_11_2(acc),
            [109, 116] => lookup_872_11_3(acc),
            [97, 112] => lookup_872_11_4(acc),
            [114, 110] => lookup_872_11_5(acc),
            [115, 112] => lookup_872_11_6(acc),
            [114, 115] => lookup_872_11_7(acc),
            [103, 111] => lookup_872_11_8(acc),
            [112, 105] => lookup_872_11_9(acc),
            [112, 114] => lookup_872_11_10(acc),
            [114, 111] => lookup_872_11_11(acc),
            [115, 101] => lookup_872_11_12(acc),
            [97, 109] => lookup_872_11_13(acc),
            [116, 111] => lookup_872_11_14(acc),
            [98, 97] => lookup_872_11_15(acc),
            [109, 115] => lookup_872_11_16(acc),
            [97, 99] => lookup_872_11_17(acc),
            [99, 101] => lookup_872_11_18(acc),
            [112, 98] => lookup_872_11_19(acc),
            [112, 101] => lookup_872_11_20(acc),
            [100, 102] => lookup_872_11_21(acc),
            [109, 103] => lookup_872_11_22(acc),
            [109, 97] => lookup_872_11_23(acc),
            [114, 106] => lookup_872_11_24(acc),
            [114, 114] => lookup_872_11_25(acc),
            [115, 99] => lookup_872_11_26(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_872_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_55_0_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_872_55_0_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [117, 115, 101, 114, 115] => lookup_872_55_0_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_872_55_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [115, 99, 97, 108, 101] => lookup_872_55_0_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_872_55_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_872_55<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [118, 105, 114, 116, 117, 97, 108, 99, 108, 111, 117, 100] => {
                lookup_872_55_0(info, labels, acc)
            }
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_872_55_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_872_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_96_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_96_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_96_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_96_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_96_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_96_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_96_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_96_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_96_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_96_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_96_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_96_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_96_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_96_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_96_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_96_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_96_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_96_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_96_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_96_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_96_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_96_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_96_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_96_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_96_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_96_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_96_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_96<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 108] => lookup_872_96_0(acc),
            [112, 97] => lookup_872_96_1(acc),
            [101, 115] => lookup_872_96_2(acc),
            [109, 116] => lookup_872_96_3(acc),
            [97, 112] => lookup_872_96_4(acc),
            [114, 110] => lookup_872_96_5(acc),
            [115, 112] => lookup_872_96_6(acc),
            [114, 115] => lookup_872_96_7(acc),
            [103, 111] => lookup_872_96_8(acc),
            [112, 105] => lookup_872_96_9(acc),
            [112, 114] => lookup_872_96_10(acc),
            [114, 111] => lookup_872_96_11(acc),
            [115, 101] => lookup_872_96_12(acc),
            [97, 109] => lookup_872_96_13(acc),
            [116, 111] => lookup_872_96_14(acc),
            [98, 97] => lookup_872_96_15(acc),
            [109, 115] => lookup_872_96_16(acc),
            [97, 99] => lookup_872_96_17(acc),
            [99, 101] => lookup_872_96_18(acc),
            [112, 98] => lookup_872_96_19(acc),
            [112, 101] => lookup_872_96_20(acc),
            [100, 102] => lookup_872_96_21(acc),
            [109, 103] => lookup_872_96_22(acc),
            [109, 97] => lookup_872_96_23(acc),
            [114, 106] => lookup_872_96_24(acc),
            [114, 114] => lookup_872_96_25(acc),
            [115, 99] => lookup_872_96_26(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_872_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_124_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_124<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_872_124_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_872_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 108, 122] => lookup_872_0(acc),
            [109, 111, 114, 101, 110, 97] => lookup_872_1(acc),
            [116, 109, 112] => lookup_872_2(acc),
            [111, 114, 103] => lookup_872_3(acc),
            [112, 114, 111] => lookup_872_4(acc),
            [101, 99, 111] => lookup_872_5(acc),
            [110, 116, 114] => lookup_872_6(acc),
            [97, 112, 97, 114, 101, 99, 105, 100, 97] => lookup_872_7(acc),
            [111, 110, 103] => lookup_872_8(acc),
            [103, 49, 50] => lookup_872_9(acc),
            [106, 111, 105, 110, 118, 105, 108, 108, 101] => lookup_872_10(acc),
            [108, 101, 103] => lookup_872_11(labels, acc),
            [102, 111, 122] => lookup_872_12(acc),
            [115, 111, 114, 111, 99, 97, 98, 97] => lookup_872_13(acc),
            [102, 101, 105, 114, 97] => lookup_872_14(acc),
            [116, 97, 120, 105] => lookup_872_15(acc),
            [100, 101, 118] => lookup_872_16(acc),
            [99, 105, 109] => lookup_872_17(acc),
            [115, 97, 109, 112, 97] => lookup_872_18(acc),
            [102, 109] => lookup_872_19(acc),
            [98] => lookup_872_20(acc),
            [103, 111, 105, 97, 110, 105, 97] => lookup_872_21(acc),
            [103, 101, 111] => lookup_872_22(acc),
            [106, 100, 102] => lookup_872_23(acc),
            [99, 114, 105] => lookup_872_24(acc),
            [106, 117, 115] => lookup_872_25(acc),
            [101, 115, 112] => lookup_872_26(acc),
            [105, 110, 100] => lookup_872_27(acc),
            [122, 108, 103] => lookup_872_28(acc),
            [110, 97, 116, 97, 108] => lookup_872_29(acc),
            [101, 116, 99] => lookup_872_30(acc),
            [116, 104, 101] => lookup_872_31(acc),
            [98, 109, 100] => lookup_872_32(acc),
            [99, 111, 110, 116, 97, 103, 101, 109] => lookup_872_33(acc),
            [112, 118, 104] => lookup_872_34(acc),
            [98, 105, 111] => lookup_872_35(acc),
            [99, 117, 114, 105, 116, 105, 98, 97] => lookup_872_36(acc),
            [100, 101, 115] => lookup_872_37(acc),
            [98, 97, 114, 117, 101, 114, 105] => lookup_872_38(acc),
            [109, 101, 100] => lookup_872_39(acc),
            [106, 97, 98] => lookup_872_40(acc),
            [115, 108, 103] => lookup_872_41(acc),
            [108, 111, 110, 100, 114, 105, 110, 97] => lookup_872_42(acc),
            [112, 115, 99] => lookup_872_43(acc),
            [116, 101, 99] => lookup_872_44(acc),
            [112, 112, 103] => lookup_872_45(acc),
            [101, 116, 105] => lookup_872_46(acc),
            [112, 111, 97] => lookup_872_47(acc),
            [100, 101, 102] => lookup_872_48(acc),
            [110, 111, 116] => lookup_872_49(acc),
            [116, 114, 100] => lookup_872_50(acc),
            [97, 103, 114] => lookup_872_51(acc),
            [102, 110, 100] => lookup_872_52(acc),
            [100, 101, 116] => lookup_872_53(acc),
            [116, 118] => lookup_872_54(acc),
            [99, 111, 109] => lookup_872_55(labels, acc),
            [114, 97, 100, 105, 111] => lookup_872_56(acc),
            [114, 105, 98, 101, 105, 114, 97, 111] => lookup_872_57(acc),
            [101, 110, 102] => lookup_872_58(acc),
            [112, 115, 105] => lookup_872_59(acc),
            [97, 114, 116] => lookup_872_60(acc),
            [101, 100, 117] => lookup_872_61(acc),
            [97, 100, 109] => lookup_872_62(acc),
            [114, 105, 111, 112, 114, 101, 116, 111] => lookup_872_63(acc),
            [101, 109, 112] => lookup_872_64(acc),
            [97, 114, 113] => lookup_872_65(acc),
            [118, 105, 120] => lookup_872_66(acc),
            [115, 97, 110, 116, 111, 97, 110, 100, 114, 101] => lookup_872_67(acc),
            [116, 117, 114] => lookup_872_68(acc),
            [99, 110, 116] => lookup_872_69(acc),
            [102, 111, 116] => lookup_872_70(acc),
            [116, 101, 111] => lookup_872_71(acc),
            [117, 100, 105] => lookup_872_72(acc),
            [109, 97, 110, 97, 117, 115] => lookup_872_73(acc),
            [115, 101, 103] => lookup_872_74(acc),
            [110, 105, 116, 101, 114, 111, 105] => lookup_872_75(acc),
            [97, 112, 112] => lookup_872_76(acc),
            [111, 115, 97, 115, 99, 111] => lookup_872_77(acc),
            [116, 99] => lookup_872_78(acc),
            [109, 117, 115] => lookup_872_79(acc),
            [102, 108, 111, 103] => lookup_872_80(acc),
            [98, 101, 108, 101, 109] => lookup_872_81(acc),
            [99, 117, 105, 97, 98, 97] => lookup_872_82(acc),
            [106, 97, 109, 112, 97] => lookup_872_83(acc),
            [106, 111, 114] => lookup_872_84(acc),
            [115, 114, 118] => lookup_872_85(acc),
            [103, 114, 117] => lookup_872_86(acc),
            [98, 115, 98] => lookup_872_87(acc),
            [108, 101, 108] => lookup_872_88(acc),
            [114, 105, 111] => lookup_872_89(acc),
            [115, 106, 99] => lookup_872_90(acc),
            [109, 112] => lookup_872_91(acc),
            [57, 103, 117, 97, 99, 117] => lookup_872_92(acc),
            [99, 97, 109, 112, 105, 110, 97, 103, 114, 97, 110, 100, 101] => lookup_872_93(acc),
            [115, 97, 108, 118, 97, 100, 111, 114] => lookup_872_94(acc),
            [99, 111, 122] => lookup_872_95(acc),
            [103, 111, 118] => lookup_872_96(labels, acc),
            [101, 99, 110] => lookup_872_97(acc),
            [109, 97, 99, 101, 105, 111] => lookup_872_98(acc),
            [115, 97, 110, 116, 97, 109, 97, 114, 105, 97] => lookup_872_99(acc),
            [114, 101, 99, 105, 102, 101] => lookup_872_100(acc),
            [102, 97, 114] => lookup_872_101(acc),
            [111, 100, 111] => lookup_872_102(acc),
            [112, 97, 108, 109, 97, 115] => lookup_872_103(acc),
            [98, 105, 98] => lookup_872_104(acc),
            [98, 104, 122] => lookup_872_105(acc),
            [97, 100, 118] => lookup_872_106(acc),
            [113, 115, 108] => lookup_872_107(acc),
            [118, 108, 111, 103] => lookup_872_108(acc),
            [97, 110, 97, 110, 105] => lookup_872_109(acc),
            [114, 101, 112] => lookup_872_110(acc),
            [109, 97, 99, 97, 112, 97] => lookup_872_111(acc),
            [109, 97, 114, 105, 110, 103, 97] => lookup_872_112(acc),
            [114, 105, 111, 98, 114, 97, 110, 99, 111] => lookup_872_113(acc),
            [109, 97, 116] => lookup_872_114(acc),
            [97, 116, 111] => lookup_872_115(acc),
            [99, 97, 109, 112, 105, 110, 97, 115] => lookup_872_116(acc),
            [114, 101, 99] => lookup_872_117(acc),
            [119, 105, 107, 105] => lookup_872_118(acc),
            [115, 97, 111, 103, 111, 110, 99, 97] => lookup_872_119(acc),
            [108, 111, 103] => lookup_872_120(acc),
            [105, 110, 102] => lookup_872_121(acc),
            [115, 97, 111, 98, 101, 114, 110, 97, 114, 100, 111] => lookup_872_122(acc),
            [118, 101, 116] => lookup_872_123(acc),
            [110, 111, 109] => lookup_872_124(info, labels, acc),
            [98, 108, 111, 103] => lookup_872_125(acc),
            [97, 106, 117] => lookup_872_126(acc),
            [99, 97, 120, 105, 97, 115] => lookup_872_127(acc),
            [98, 111, 97, 118, 105, 115, 116, 97] => lookup_872_128(acc),
            [103, 103, 102] => lookup_872_129(acc),
            [102, 108, 111, 114, 105, 112, 97] => lookup_872_130(acc),
            [110, 101, 116] => lookup_872_131(acc),
            [99, 111, 111, 112] => lookup_872_132(acc),
            [97, 109] => lookup_872_133(acc),
            [102, 111, 114, 116, 97, 108] => lookup_872_134(acc),
            [99, 110, 103] => lookup_872_135(acc),
            [101, 110, 103] => lookup_872_136(acc),
            [97, 98, 99] => lookup_872_137(acc),
            [105, 109, 98] => lookup_872_138(acc),
            [102, 115, 116] => lookup_872_139(acc),
            [109, 105, 108] => lookup_872_140(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_873() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_874() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_875_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_875<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_875_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_876() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_877() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_878_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_878_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_878_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_878_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_878<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_878_0(acc),
            [120, 110, 45, 45, 53, 53, 113, 120, 53, 100] => lookup_878_1(acc),
            [231, 182, 178, 231, 181, 161] => lookup_878_2(acc),
            [231, 181, 132, 231, 185, 148] => lookup_878_3(acc),
            [115, 101, 99, 97, 97, 115] => lookup_878_4(acc),
            [120, 110, 45, 45, 109, 120, 116, 113, 49, 109] => lookup_878_5(acc),
            [230, 149, 142, 232, 130, 178] => lookup_878_6(acc),
            [231, 187, 132, 231, 185, 148] => lookup_878_7(acc),
            [111, 114, 103] => lookup_878_8(acc),
            [231, 182, 178, 231, 187, 156] => lookup_878_9(acc),
            [230, 149, 153, 232, 130, 178] => lookup_878_10(acc),
            [120, 110, 45, 45, 109, 107, 48, 97, 120, 105] => lookup_878_11(acc),
            [231, 187, 132, 231, 187, 135] => lookup_878_12(acc),
            [120, 110, 45, 45, 117, 99, 48, 97, 116, 118] => lookup_878_13(acc),
            [120, 110, 45, 45, 119, 99, 118, 115, 50, 50, 100] => lookup_878_14(acc),
            [120, 110, 45, 45, 116, 110, 48, 97, 103] => lookup_878_15(acc),
            [105, 100, 118] => lookup_878_16(acc),
            [231, 174, 135, 228, 186, 186] => lookup_878_17(acc),
            [120, 110, 45, 45, 103, 109, 113, 48, 53, 48, 105] => lookup_878_18(acc),
            [230, 148, 191, 229, 186, 156] => lookup_878_19(acc),
            [231, 189, 145, 231, 181, 161] => lookup_878_20(acc),
            [105, 110, 99] => lookup_878_21(acc),
            [120, 110, 45, 45, 111, 100, 48, 97, 113, 51, 98] => lookup_878_22(acc),
            [229, 133, 172, 229, 143, 184] => lookup_878_23(acc),
            [120, 110, 45, 45, 99, 105, 113, 112, 110] => lookup_878_24(acc),
            [99, 111, 109] => lookup_878_25(acc),
            [229, 128, 139, 228, 186, 186] => lookup_878_26(acc),
            [110, 101, 116] => lookup_878_27(acc),
            [228, 184, 170, 228, 186, 186] => lookup_878_28(acc),
            [231, 181, 132, 231, 187, 135] => lookup_878_29(acc),
            [120, 110, 45, 45, 117, 99, 48, 97, 121, 52, 97] => lookup_878_30(acc),
            [120, 110, 45, 45, 111, 100, 48, 97, 108, 103] => lookup_878_31(acc),
            [101, 100, 117] => lookup_878_32(acc),
            [103, 111, 118] => lookup_878_33(acc),
            [120, 110, 45, 45, 122, 102, 48, 97, 118, 120] => lookup_878_34(acc),
            [231, 189, 145, 231, 187, 156] => lookup_878_35(acc),
            [108, 116, 100] => lookup_878_36(acc),
            [120, 110, 45, 45, 108, 99, 118, 114, 51, 50, 100] => lookup_878_37(acc),
            [120, 110, 45, 45, 103, 109, 113, 119, 53, 97] => lookup_878_38(acc),
            [120, 110, 45, 45, 105, 111, 48, 97, 55, 105] => lookup_878_39(acc),
            [110, 121, 109] => lookup_878_40(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_879() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_880() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_881() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_882() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_883() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_884() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_885() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_886() -> Info {
    Info {
        len: 24usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_887() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_888() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_889() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_890() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_891() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_892() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_893() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_894_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_894_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_894_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_894_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_894_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_894_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_894_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_894_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_894_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_894_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_894_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_894_11_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_894_11<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_894_11_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_894_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_894_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_894_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_894_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_894_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_894_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_894<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 99, 104, 111, 111, 108] => lookup_894_0(acc),
            [120, 110, 45, 45, 109, 111, 114, 105, 45, 113, 115, 97] => lookup_894_1(acc),
            [110, 121, 109] => lookup_894_2(acc),
            [103, 101, 110] => lookup_894_3(acc),
            [103, 111, 118, 116] => lookup_894_4(acc),
            [99, 114, 105] => lookup_894_5(acc),
            [110, 101, 116] => lookup_894_6(acc),
            [109, 196, 129, 111, 114, 105] => lookup_894_7(acc),
            [107, 105, 119, 105] => lookup_894_8(acc),
            [111, 114, 103] => lookup_894_9(acc),
            [112, 97, 114, 108, 105, 97, 109, 101, 110, 116] => lookup_894_10(acc),
            [99, 111] => lookup_894_11(labels, acc),
            [103, 101, 101, 107] => lookup_894_12(acc),
            [109, 97, 111, 114, 105] => lookup_894_13(acc),
            [97, 99] => lookup_894_14(acc),
            [105, 119, 105] => lookup_894_15(acc),
            [104, 101, 97, 108, 116, 104] => lookup_894_16(acc),
            [109, 105, 108] => lookup_894_17(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_895() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_896_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_896_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_896_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_896_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_896_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_896_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_896_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_896<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_896_0(labels, acc),
            [101, 100, 117] => lookup_896_1(acc),
            [111, 114, 103] => lookup_896_2(acc),
            [103, 111, 98] => lookup_896_3(acc),
            [110, 111, 109] => lookup_896_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_897_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_897_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_897_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_897_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_897_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_897_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_897_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_897<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_897_0(acc),
            [101, 100, 117] => lookup_897_1(acc),
            [103, 111, 118] => lookup_897_2(acc),
            [110, 101, 116] => lookup_897_3(acc),
            [103, 111, 117, 118] => lookup_897_4(acc),
            [111, 114, 103] => lookup_897_5(acc),
            [112, 114, 101, 115, 115, 101] => lookup_897_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_898_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_898_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_898_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_898_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_898_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_898_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_898<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 116] => lookup_898_0(acc),
            [99, 111] => lookup_898_1(acc),
            [103, 118] => lookup_898_2(acc),
            [111, 103] => lookup_898_3(acc),
            [101, 100] => lookup_898_4(acc),
            [112, 98] => lookup_898_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_899() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_900() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_901() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_903_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_903<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 102, 102, 105, 99, 105, 97, 108] => lookup_903_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_905() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_906() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_907() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_909() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_910() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_911() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_912_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_912_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_912_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_912_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_912_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_912_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_912_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_912_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_912_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_912_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_912_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_912<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 99, 104] => lookup_912_0(acc),
            [99, 111] => lookup_912_1(acc),
            [103, 111, 118] => lookup_912_2(acc),
            [216, 167, 219, 140, 216, 177, 216, 167, 217, 134] => lookup_912_3(acc),
            [97, 99] => lookup_912_4(acc),
            [216, 167, 217, 138, 216, 177, 216, 167, 217, 134] => lookup_912_5(acc),
            [120, 110, 45, 45, 109, 103, 98, 97, 51, 97, 52, 102, 114, 97] => lookup_912_6(acc),
            [110, 101, 116] => lookup_912_7(acc),
            [120, 110, 45, 45, 109, 103, 98, 97, 51, 97, 52, 102, 49, 54, 97] => lookup_912_8(acc),
            [111, 114, 103] => lookup_912_9(acc),
            [105, 100] => lookup_912_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_913() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_914() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_915() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_916() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_917_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_917_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_917_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_917_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_917_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_917_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_917_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_917_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_917_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_917_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_917_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_917_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_917_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_917_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_917<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 115, 99, 108, 111, 117, 100] => lookup_917_0(acc),
            [100, 121, 110, 100, 110, 115] => lookup_917_1(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_917_2(acc),
            [102, 111, 114, 45, 116, 104, 101] => lookup_917_3(acc),
            [111, 114, 120] => lookup_917_4(acc),
            [106, 111, 122, 105] => lookup_917_5(acc),
            [102, 111, 114, 45, 115, 111, 109, 101] => lookup_917_6(acc),
            [109, 121, 102, 116, 112] => lookup_917_7(acc),
            [110, 111, 45, 105, 112] => lookup_917_8(acc),
            [102, 111, 114, 45, 98, 101, 116, 116, 101, 114] => lookup_917_9(acc),
            [119, 101, 98, 104, 111, 112] => lookup_917_10(acc),
            [109, 109, 97, 102, 97, 110] => lookup_917_11(acc),
            [115, 101, 108, 102, 105, 112] => lookup_917_12(acc),
            [102, 111, 114, 45, 109, 111, 114, 101] => lookup_917_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_918() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_920() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_921() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_922() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_923() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_924() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_926() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_928() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_929() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_930() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_931() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_932() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_933_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_933_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_933_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_933_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_933_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_933_4<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_933_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_933_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_933_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_933_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_933_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_933_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_933<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 110, 116] => lookup_933_0(acc),
            [101, 100, 117] => lookup_933_1(acc),
            [103, 111, 118] => lookup_933_2(acc),
            [116, 117, 114] => lookup_933_3(acc),
            [99, 111, 109] => lookup_933_4(labels, acc),
            [109, 117, 115, 105, 99, 97] => lookup_933_5(acc),
            [110, 101, 116] => lookup_933_6(acc),
            [111, 114, 103] => lookup_933_7(acc),
            [103, 111, 98] => lookup_933_8(acc),
            [109, 105, 108] => lookup_933_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_934_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_934_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_934_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_934_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_934_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_934_4<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_934_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_934_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_934_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_934_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_934_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_934<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 97, 109, 101] => lookup_934_0(acc),
            [101, 100, 117] => lookup_934_1(acc),
            [103, 111, 118] => lookup_934_2(acc),
            [101, 117, 110] => lookup_934_3(acc),
            [99, 111, 109] => lookup_934_4(labels, acc),
            [110, 101, 116] => lookup_934_5(acc),
            [111, 114, 103] => lookup_934_6(acc),
            [115, 99, 105] => lookup_934_7(acc),
            [109, 105, 108] => lookup_934_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_935() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_936_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_936_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_936_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_936_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_936_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_936_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_936_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_936_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_936_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_936_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_936_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_936_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_936_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_936_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_936_14_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_936_14<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_936_14_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_936<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 101, 114, 97] => lookup_936_0(acc),
            [102, 97, 115, 116, 118, 112, 115] => lookup_936_1(acc),
            [108, 111, 103, 105, 110, 108, 105, 110, 101] => lookup_936_2(acc),
            [98, 121, 101, 110] => lookup_936_3(acc),
            [115, 114, 104, 116] => lookup_936_4(acc),
            [102, 111, 108, 105, 111, 110, 101, 116, 119, 111, 114, 107] => lookup_936_5(acc),
            [111, 109, 110, 105, 119, 101] => lookup_936_6(acc),
            [106, 101, 108, 101] => lookup_936_7(acc),
            [102, 110, 119, 107] => lookup_936_8(acc),
            [108, 101, 108, 117, 120] => lookup_936_9(acc),
            [109, 105, 110, 116, 101, 114, 101] => lookup_936_10(acc),
            [98, 97, 114, 115, 121] => lookup_936_11(acc),
            [99, 121, 111, 110] => lookup_936_12(acc),
            [111, 112, 101, 110, 115, 111, 99, 105, 97, 108] => lookup_936_13(acc),
            [112, 108, 97, 116, 102, 111, 114, 109, 115, 104] => lookup_936_14(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_937() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_938() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_939() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_940() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_941_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_941<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_941_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_942_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_942_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_942_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 101, 114, 118, 105, 99, 101] => lookup_942_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_942<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_942_0(acc),
            [103, 111, 118] => lookup_942_1(labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_943() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_944() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_945() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_946() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_947() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_948() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_949() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_950() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_951() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_952() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_953() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_954() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_955_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_955_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_955_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_955_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_955_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_955_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_955_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_955_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_955_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_955_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_955_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_955<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 110, 116] => lookup_955_0(acc),
            [101, 100, 117] => lookup_955_1(acc),
            [103, 111, 118] => lookup_955_2(acc),
            [112, 101, 114] => lookup_955_3(acc),
            [98, 110, 114] => lookup_955_4(acc),
            [99, 111, 109] => lookup_955_5(acc),
            [105, 110, 102, 111] => lookup_955_6(acc),
            [110, 101, 116] => lookup_955_7(acc),
            [111, 114, 103] => lookup_955_8(acc),
            [99] => lookup_955_9(acc),
            [110, 121, 109] => lookup_955_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_956_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_956_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_956_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_956_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_956<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 97, 97] => lookup_956_0(acc),
            [110, 121, 109] => lookup_956_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_956_2(acc),
            [110, 111, 109] => lookup_956_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_957() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_958() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_959() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_960_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_960_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_960_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_960_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_960_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_960_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_960<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 109, 97] => lookup_960_0(acc),
            [104, 115] => lookup_960_1(acc),
            [99, 108, 111, 117, 100, 54, 54] => lookup_960_2(acc),
            [116, 114, 105, 116, 111, 110] => lookup_960_3(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_961() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_962() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_963_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_963_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_963_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_963_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_963_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_963_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_963_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_963_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_963_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_963_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_963<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_963_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_963_1(acc),
            [97, 99] => lookup_963_2(acc),
            [110, 111, 109] => lookup_963_3(acc),
            [99, 111, 109] => lookup_963_4(acc),
            [115, 99] => lookup_963_5(acc),
            [111, 114] => lookup_963_6(acc),
            [103, 111] => lookup_963_7(acc),
            [110, 101] => lookup_963_8(acc),
            [111, 114, 103] => lookup_963_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_964() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_965() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_966() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_967() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_968() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_969() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_970() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_971_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_971_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_971_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_971_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_971_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_971<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_971_0(acc),
            [103, 111, 118] => lookup_971_1(acc),
            [101, 100, 117] => lookup_971_2(acc),
            [111, 114, 103] => lookup_971_3(acc),
            [110, 101, 116] => lookup_971_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_972() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_973() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_974() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_976() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_977() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_978() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_980() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_981() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_982() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_983() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_984() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_985() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_986() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_987() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_988() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_989_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_989_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_989_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_989_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_989_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_989_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_989_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_989_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_989_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_989_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_989<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 100, 102] => lookup_989_0(acc),
            [109, 117, 110, 105] => lookup_989_1(acc),
            [99, 111] => lookup_989_2(labels, acc),
            [103, 111, 118] => lookup_989_3(acc),
            [97, 99] => lookup_989_4(acc),
            [110, 101, 116] => lookup_989_5(acc),
            [111, 114, 103] => lookup_989_6(acc),
            [107, 49, 50] => lookup_989_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_990() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_991() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_992_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_992_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_992_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_992_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_992_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_992_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_992<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_992_0(acc),
            [110, 101, 116] => lookup_992_1(acc),
            [101, 100, 117] => lookup_992_2(acc),
            [103, 111, 118] => lookup_992_3(acc),
            [111, 114, 103] => lookup_992_4(acc),
            [109, 105, 108] => lookup_992_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_993() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_994_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_994_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_994_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_994_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_994_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_994_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_994_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_994_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_994_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_994_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_994_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_994_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_994<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_994_0(acc),
            [104, 111, 116, 101, 108] => lookup_994_1(acc),
            [109, 101] => lookup_994_2(acc),
            [109, 111, 98, 105] => lookup_994_3(acc),
            [97, 99] => lookup_994_4(acc),
            [116, 118] => lookup_994_5(acc),
            [105, 110, 102, 111] => lookup_994_6(acc),
            [111, 114] => lookup_994_7(acc),
            [103, 111] => lookup_994_8(acc),
            [110, 101] => lookup_994_9(acc),
            [115, 99] => lookup_994_10(acc),
            [109, 105, 108] => lookup_994_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_995() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_996() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_997() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_998() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_999() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1000() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1001() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1002() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1003_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1003<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1003_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1004_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1004_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [117, 105] => lookup_1004_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1004<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 97, 98, 117] => lookup_1004_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1005() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1006() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1007() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1008() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1009() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1010() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1011() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1012() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1013() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1015_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1015_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1015_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1015_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1015_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1015_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1015_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1015_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1015_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1015<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109, 109, 117, 110, 101] => lookup_1015_0(acc),
            [99, 111] => lookup_1015_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1015_2(acc),
            [110, 121, 97, 97] => lookup_1015_3(acc),
            [110, 101, 107, 111] => lookup_1015_4(acc),
            [99, 111, 109] => lookup_1015_5(acc),
            [110, 101, 116] => lookup_1015_6(acc),
            [114, 97, 100, 105, 111] => lookup_1015_7(acc),
            [111, 114, 103] => lookup_1015_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1016_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1016_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1016_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1016_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_20_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_20<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 111, 99, 97, 108, 104, 111, 115, 116] => lookup_1016_20_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1016_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1016_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1016_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1016_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1016_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1016_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 115, 99, 108, 111, 117, 100] => lookup_1016_0(acc),
            [105, 50, 51, 52] => lookup_1016_1(acc),
            [115, 111, 117, 110, 100, 99, 97, 115, 116] => lookup_1016_2(acc),
            [100, 105, 115, 107, 115, 116, 97, 116, 105, 111, 110] => lookup_1016_3(acc),
            [112, 114, 105, 118] => lookup_1016_4(acc),
            [104, 111, 112, 116, 111] => lookup_1016_5(acc),
            [110, 111, 104, 111, 115, 116] => lookup_1016_6(acc),
            [109, 99, 100, 105, 114] => lookup_1016_7(acc),
            [101, 100, 103, 101, 115, 116, 97, 99, 107] => lookup_1016_8(acc),
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 97, 117] => lookup_1016_9(acc),
            [111, 114, 103] => lookup_1016_10(acc),
            [102, 105, 108, 101, 103, 101, 97, 114] => lookup_1016_11(acc),
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 105, 101] => lookup_1016_12(acc),
            [100, 100, 110, 115] => lookup_1016_13(acc),
            [108, 111, 103, 105, 110, 116, 111] => lookup_1016_14(acc),
            [119, 101, 98, 104, 111, 112] => lookup_1016_15(acc),
            [119, 101, 100, 101, 112, 108, 111, 121] => lookup_1016_16(acc),
            [97, 99] => lookup_1016_17(acc),
            [100, 110, 115, 102, 111, 114] => lookup_1016_18(acc),
            [109, 99, 112, 101] => lookup_1016_19(acc),
            [100, 97, 112, 108, 105, 101] => lookup_1016_20(labels, acc),
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 115, 103] => lookup_1016_21(acc),
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 103, 98] => lookup_1016_22(acc),
            [121, 111, 109, 98, 111] => lookup_1016_23(acc),
            [99, 111, 117, 107] => lookup_1016_24(acc),
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 100, 101] => lookup_1016_25(acc),
            [103, 108, 105, 116, 99, 104] => lookup_1016_26(acc),
            [116, 99, 112, 52] => lookup_1016_27(acc),
            [110, 101, 116] => lookup_1016_28(acc),
            [115, 121, 110, 111, 108, 111, 103, 121] => lookup_1016_29(acc),
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 106, 112] => lookup_1016_30(acc),
            [119, 98, 113] => lookup_1016_31(acc),
            [109, 121, 100, 115] => lookup_1016_32(acc),
            [110, 99, 116, 117] => lookup_1016_33(acc),
            [105, 116, 115] => lookup_1016_34(acc),
            [99, 111] => lookup_1016_35(acc),
            [101, 100, 117] => lookup_1016_36(acc),
            [103, 111, 118] => lookup_1016_37(acc),
            [114, 97, 118, 101, 110, 100, 98] => lookup_1016_38(acc),
            [98, 97, 114, 115, 121] => lookup_1016_39(acc),
            [108, 111, 104, 109, 117, 115] => lookup_1016_40(acc),
            [99, 54, 54] => lookup_1016_41(acc),
            [98, 114, 97, 115, 105, 108, 105, 97] => lookup_1016_42(acc),
            [117, 107, 99, 111] => lookup_1016_43(acc),
            [110, 111, 105, 112] => lookup_1016_44(acc),
            [110, 121, 109] => lookup_1016_45(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1017() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1018() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1019() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1020_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1020_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1020_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1020_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1020_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1020_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1020_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1020_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1020_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1020_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1020_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1020_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1020_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1020_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1020<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 104, 111] => lookup_1020_0(acc),
            [99, 111] => lookup_1020_1(acc),
            [101, 100, 117] => lookup_1020_2(acc),
            [101, 109, 98, 97, 105, 120, 97, 100, 97] => lookup_1020_3(acc),
            [103, 111, 118] => lookup_1020_4(acc),
            [112, 114, 105, 110, 99, 105, 112, 101] => lookup_1020_5(acc),
            [110, 111, 109] => lookup_1020_6(acc),
            [99, 111, 109] => lookup_1020_7(acc),
            [99, 111, 110, 115, 117, 108, 97, 100, 111] => lookup_1020_8(acc),
            [110, 101, 116] => lookup_1020_9(acc),
            [115, 97, 111, 116, 111, 109, 101] => lookup_1020_10(acc),
            [111, 114, 103] => lookup_1020_11(acc),
            [115, 116, 111, 114, 101] => lookup_1020_12(acc),
            [109, 105, 108] => lookup_1020_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1021_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_9<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 121, 110] => lookup_1021_9_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1021_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_18_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_18<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116, 111, 109, 101, 114] => lookup_1021_18_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1021_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 23usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_31_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_31<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1021_31_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1021_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_39_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_39_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_39<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 121, 110] => lookup_1021_39_0(acc),
            [100, 121, 110, 100, 110, 115] => lookup_1021_39_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1021_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_58_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_58<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [100, 121, 110] => lookup_1021_58_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1021_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1021<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 113, 117, 97, 114, 101, 55] => lookup_1021_0(acc),
            [98, 112, 108, 97, 99, 101, 100] => lookup_1021_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1021_2(acc),
            [115, 99, 104, 117, 108, 115, 101, 114, 118, 101, 114] => lookup_1021_3(acc),
            [100, 121, 110, 45, 105, 112, 50, 52] => lookup_1021_4(acc),
            [102, 105, 114, 101, 119, 97, 108, 108, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_1021_5(acc)
            }
            [105, 110, 45, 98, 101, 114, 108, 105, 110] => lookup_1021_6(acc),
            [116, 101, 115, 116, 45, 105, 115, 101, 114, 118] => lookup_1021_7(acc),
            [109, 121, 45, 119, 97, 110] => lookup_1021_8(acc),
            [104, 111, 109, 101, 45, 119, 101, 98, 115, 101, 114, 118, 101, 114] => {
                lookup_1021_9(labels, acc)
            }
            [105, 110, 45, 118, 112, 110] => lookup_1021_10(acc),
            [116, 97, 105, 102, 117, 110, 45, 100, 110, 115] => lookup_1021_11(acc),
            [118, 105, 114, 116, 117, 97, 108, 45, 117, 115, 101, 114] => lookup_1021_12(acc),
            [100, 110, 115, 104, 111, 109, 101] => lookup_1021_13(acc),
            [100, 110, 115, 117, 112, 100, 97, 116, 101, 114] => lookup_1021_14(acc),
            [108, 101, 105, 116, 117, 110, 103, 115, 101, 110] => lookup_1021_15(acc),
            [107, 101, 121, 109, 97, 99, 104, 105, 110, 101] => lookup_1021_16(acc),
            [100, 114, 97, 121, 100, 110, 115] => lookup_1021_17(acc),
            [115, 112, 101, 101, 100, 112, 97, 114, 116, 110, 101, 114] => {
                lookup_1021_18(info, labels, acc)
            }
            [115, 121, 110, 111, 108, 111, 103, 121, 45, 100, 105, 115, 107, 115, 116, 97, 116, 105, 111, 110] => {
                lookup_1021_19(acc)
            }
            [115, 121, 110, 111, 45, 100, 115] => lookup_1021_20(acc),
            [103, 195, 188, 110, 115, 116, 105, 103, 108, 105, 101, 102, 101, 114, 110] => {
                lookup_1021_21(acc)
            }
            [102, 117, 101, 116, 116, 101, 114, 116, 100, 97, 115, 110, 101, 116, 122] => {
                lookup_1021_22(acc)
            }
            [52, 108, 105, 109, 97] => lookup_1021_23(acc),
            [120, 110, 45, 45, 103, 110, 115, 116, 105, 103, 98, 101, 115, 116, 101, 108, 108, 101, 110, 45, 122, 118, 98] => {
                lookup_1021_24(acc)
            }
            [100, 100, 45, 100, 110, 115] => lookup_1021_25(acc),
            [115, 121, 110, 111, 108, 111, 103, 121, 45, 100, 115] => lookup_1021_26(acc),
            [103, 105, 116, 45, 114, 101, 112, 111, 115] => lookup_1021_27(acc),
            [109, 121, 45, 118, 105, 103, 111, 114] => lookup_1021_28(acc),
            [108, 111, 103, 111, 105, 112] => lookup_1021_29(acc),
            [100, 121, 110, 45, 118, 112, 110] => lookup_1021_30(acc),
            [117, 98, 101, 114, 115, 112, 97, 99, 101] => lookup_1021_31(info, labels, acc),
            [49, 50, 104, 112] => lookup_1021_32(acc),
            [105, 110, 45, 98, 114, 98] => lookup_1021_33(acc),
            [118, 105, 114, 116, 117, 97, 108, 117, 115, 101, 114] => lookup_1021_34(acc),
            [108, 101, 98, 116, 105, 109, 110, 101, 116, 122] => lookup_1021_35(acc),
            [100, 121, 110, 45, 98, 101, 114, 108, 105, 110] => lookup_1021_36(acc),
            [115, 112, 100, 110, 115] => lookup_1021_37(acc),
            [99, 111, 109, 109, 117, 110, 105, 116, 121, 45, 112, 114, 111] => lookup_1021_38(acc),
            [100, 100, 110, 115, 115] => lookup_1021_39(labels, acc),
            [109, 121, 45, 103, 97, 116, 101, 119, 97, 121] => lookup_1021_40(acc),
            [105, 110, 45, 100, 115, 108] => lookup_1021_41(acc),
            [100, 121, 110, 118, 112, 110] => lookup_1021_42(acc),
            [116, 114, 97, 101, 117, 109, 116, 103, 101, 114, 97, 100, 101] => lookup_1021_43(acc),
            [109, 101, 105, 110, 45, 118, 105, 103, 111, 114] => lookup_1021_44(acc),
            [108, 99, 117, 98, 101, 45, 115, 101, 114, 118, 101, 114] => lookup_1021_45(acc),
            [50, 105, 120] => lookup_1021_46(acc),
            [100, 114, 97, 121, 45, 100, 110, 115] => lookup_1021_47(acc),
            [103, 195, 188, 110, 115, 116, 105, 103, 98, 101, 115, 116, 101, 108, 108, 101, 110] => {
                lookup_1021_48(acc)
            }
            [109, 121, 104, 111, 109, 101, 45, 115, 101, 114, 118, 101, 114] => lookup_1021_49(acc),
            [105, 110, 116, 101, 114, 110, 101, 116, 45, 100, 110, 115] => lookup_1021_50(acc),
            [105, 110, 45, 98, 117, 116, 116, 101, 114] => lookup_1021_51(acc),
            [109, 101, 105, 110, 45, 105, 115, 101, 114, 118] => lookup_1021_52(acc),
            [120, 110, 45, 45, 103, 110, 115, 116, 105, 103, 108, 105, 101, 102, 101, 114, 110, 45, 119, 111, 98] => {
                lookup_1021_53(acc)
            }
            [105, 115, 116, 109, 101, 105, 110] => lookup_1021_54(acc),
            [100, 121, 110, 100, 110, 115, 49] => lookup_1021_55(acc),
            [103, 111, 105, 112] => lookup_1021_56(acc),
            [99, 111, 109] => lookup_1021_57(acc),
            [99, 111, 115, 105, 100, 110, 115] => lookup_1021_58(info, labels, acc),
            [100, 121, 110, 97, 109, 105, 115, 99, 104, 101, 115, 45, 100, 110, 115] => {
                lookup_1021_59(acc)
            }
            [105, 115, 116, 101, 105, 110, 103, 101, 101, 107] => lookup_1021_60(acc),
            [100, 105, 115, 107, 117, 115, 115, 105, 111, 110, 115, 98, 101, 114, 101, 105, 99, 104] => {
                lookup_1021_61(acc)
            }
            [98, 97, 114, 115, 121] => lookup_1021_62(acc),
            [108, 45, 111, 45, 103, 45, 105, 45, 110] => lookup_1021_63(acc),
            [108, 105, 109, 97, 45, 99, 105, 116, 121] => lookup_1021_64(acc),
            [109, 121, 45, 114, 111, 117, 116, 101, 114] => lookup_1021_65(acc),
            [115, 118, 110, 45, 114, 101, 112, 111, 115] => lookup_1021_66(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1022_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 97, 109, 101] => lookup_1022_0(acc),
            [101, 100, 117] => lookup_1022_1(acc),
            [115, 99, 104] => lookup_1022_2(acc),
            [103, 111, 118] => lookup_1022_3(acc),
            [99, 111, 109] => lookup_1022_4(acc),
            [110, 101, 116] => lookup_1022_5(acc),
            [111, 114, 103] => lookup_1022_6(acc),
            [109, 105, 108] => lookup_1022_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1023() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1024() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1027() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1028() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1029() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1030() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1031() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1032() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1033() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1034() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1035() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1036() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1037() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1038() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1039() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1040() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1041() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1042_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1042<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 97, 110] => lookup_1042_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1043() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1044() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1045() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1046() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1048_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1048_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1048_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1048_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1048_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1048_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1048<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1048_0(acc),
            [101, 100, 117] => lookup_1048_1(acc),
            [103, 111, 118] => lookup_1048_2(acc),
            [110, 101, 116] => lookup_1048_3(acc),
            [111, 114, 103] => lookup_1048_4(acc),
            [109, 105, 108] => lookup_1048_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1049_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1049_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1049_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1049_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1049_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1049_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1049_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1049_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1049<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1049_0(acc),
            [101, 100, 117] => lookup_1049_1(acc),
            [110, 111, 109] => lookup_1049_2(acc),
            [99, 111, 109] => lookup_1049_3(acc),
            [98, 105, 122] => lookup_1049_4(acc),
            [110, 101, 116] => lookup_1049_5(acc),
            [120, 120] => lookup_1049_6(acc),
            [111, 114, 103] => lookup_1049_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1050() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1051() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1052() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1053() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1054() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1056_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1056_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1056_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1056_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1056_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1056_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1056<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1056_0(acc),
            [101, 100, 117] => lookup_1056_1(acc),
            [110, 101, 116] => lookup_1056_2(acc),
            [103, 111, 118] => lookup_1056_3(acc),
            [111, 114, 103] => lookup_1056_4(acc),
            [105, 110, 102] => lookup_1056_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1057() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1058_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1058_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1058_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1058_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1058_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1058_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1058<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 49, 50, 99, 49, 102, 101, 48, 98, 114] => lookup_1058_0(acc),
            [120, 110, 45, 45, 49, 50, 99, 111, 48, 99, 51, 98, 52, 101, 118, 97] => {
                lookup_1058_1(acc)
            }
            [120, 110, 45, 45, 104, 51, 99, 117, 122, 107, 49, 100, 105] => lookup_1058_2(acc),
            [120, 110, 45, 45, 111, 51, 99, 121, 120, 50, 97] => lookup_1058_3(acc),
            [120, 110, 45, 45, 109, 51, 99, 104, 48, 106, 51, 97] => lookup_1058_4(acc),
            [120, 110, 45, 45, 49, 50, 99, 102, 105, 56, 105, 120, 98, 56, 108] => {
                lookup_1058_5(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1059() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1060_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1060_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1060_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1060_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1060_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1060_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1060_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1060<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 105] => lookup_1060_0(acc),
            [115, 97] => lookup_1060_1(acc),
            [99, 111] => lookup_1060_2(acc),
            [103, 111] => lookup_1060_3(acc),
            [111, 114] => lookup_1060_4(acc),
            [101, 100] => lookup_1060_5(acc),
            [97, 99] => lookup_1060_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1061_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1061_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1061_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1061<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 109] => lookup_1061_0(acc),
            [101, 100, 117] => lookup_1061_1(acc),
            [103, 111, 118] => lookup_1061_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1062() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1063() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1064() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1065() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1066() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1067() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1068() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1069_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1069_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1069_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1069_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1069_3<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1069_3_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1069_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1069_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1069_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1069_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1069_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1069_9_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1069_9<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1069_9_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1069_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1069_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1069_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1069_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1069_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1069_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1069_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1069_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1069_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1069_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1069_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1069_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1069<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 105, 114, 109] => lookup_1069_0(acc),
            [97, 114, 116, 115] => lookup_1069_1(acc),
            [110, 111, 109] => lookup_1069_2(acc),
            [99, 111, 109] => lookup_1069_3(labels, acc),
            [105, 110, 102, 111] => lookup_1069_4(acc),
            [110, 101, 116] => lookup_1069_5(acc),
            [99, 97, 114, 114, 100] => lookup_1069_6(acc),
            [109, 121, 112, 105] => lookup_1069_7(acc),
            [111, 114, 103] => lookup_1069_8(acc),
            [111, 116, 97, 112] => lookup_1069_9(info, labels, acc),
            [108, 101, 97, 100, 112, 97, 103, 101, 115] => lookup_1069_10(acc),
            [110, 111, 100, 117, 109] => lookup_1069_11(acc),
            [105, 110, 116] => lookup_1069_12(acc),
            [101, 100, 117] => lookup_1069_13(acc),
            [103, 111, 118] => lookup_1069_14(acc),
            [99, 114, 100] => lookup_1069_15(acc),
            [114, 101, 112, 108] => lookup_1069_16(acc),
            [110, 52, 116] => lookup_1069_17(acc),
            [119, 101, 98] => lookup_1069_18(acc),
            [108, 112, 97, 103, 101, 115] => lookup_1069_19(acc),
            [114, 101, 99] => lookup_1069_20(acc),
            [109, 105, 108] => lookup_1069_21(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1070() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1071() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1072() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1073() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1074() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1075() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1076() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1077() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1078() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1079() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1080() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1081() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1082() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1083() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1085() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1086() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1087_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1087<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1087_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1088() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1089() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1090() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1093() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1094() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1095_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1095_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1095_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1095_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1095_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1095_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1095_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1095<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 101, 118, 101, 108, 111, 112, 109, 101, 110, 116] => lookup_1095_0(acc),
            [99, 111, 100, 101] => lookup_1095_1(info, labels, acc),
            [104, 115] => lookup_1095_2(acc),
            [114, 97, 118, 101, 110, 100, 98] => lookup_1095_3(acc),
            [114, 101, 112, 108] => lookup_1095_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1096() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1097_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1097<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_1097_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1098_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1098_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1098_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1098_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1098_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1098_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1098_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1098_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1098_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1098_8<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1098_8_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1098_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1098_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1098_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1098_12_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1098_12<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_1098_12_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1098_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1098_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1098_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1098_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1098_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1098_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1098_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1098_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1098_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1098<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 114] => lookup_1098_0(acc),
            [109, 105, 108] => lookup_1098_1(acc),
            [107, 49, 50] => lookup_1098_2(acc),
            [110, 97, 109, 101] => lookup_1098_3(acc),
            [103, 101, 110] => lookup_1098_4(acc),
            [107, 101, 112] => lookup_1098_5(acc),
            [98, 98, 115] => lookup_1098_6(acc),
            [116, 115, 107] => lookup_1098_7(acc),
            [99, 111, 109] => lookup_1098_8(labels, acc),
            [105, 110, 102, 111] => lookup_1098_9(acc),
            [110, 101, 116] => lookup_1098_10(acc),
            [116, 118] => lookup_1098_11(acc),
            [110, 99] => lookup_1098_12(labels, acc),
            [111, 114, 103] => lookup_1098_13(acc),
            [112, 111, 108] => lookup_1098_14(acc),
            [101, 100, 117] => lookup_1098_15(acc),
            [103, 111, 118] => lookup_1098_16(acc),
            [97, 118] => lookup_1098_17(acc),
            [98, 105, 122] => lookup_1098_18(acc),
            [119, 101, 98] => lookup_1098_19(acc),
            [116, 101, 108] => lookup_1098_20(acc),
            [98, 101, 108] => lookup_1098_21(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1099_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1099_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1099_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1099_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1099_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1099_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1099<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 99, 49, 97, 118, 103] => lookup_1099_0(acc),
            [120, 110, 45, 45, 57, 48, 97, 122, 104] => lookup_1099_1(acc),
            [120, 110, 45, 45, 100, 49, 97, 116] => lookup_1099_2(acc),
            [120, 110, 45, 45, 111, 49, 97, 99, 104] => lookup_1099_3(acc),
            [120, 110, 45, 45, 56, 48, 97, 117] => lookup_1099_4(acc),
            [120, 110, 45, 45, 111, 49, 97, 99] => lookup_1099_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1100() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1101() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1102() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1103() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1104() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1105() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1106() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1107() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1108() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1109_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1109_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1109_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1109_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1109_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1109_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1109<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1109_0(acc),
            [101, 100, 117] => lookup_1109_1(acc),
            [103, 111, 118] => lookup_1109_2(acc),
            [110, 101, 116] => lookup_1109_3(acc),
            [111, 114, 103] => lookup_1109_4(acc),
            [98, 105, 122] => lookup_1109_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1110() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1112() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1113() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1114() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1115_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1115_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1115_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1115_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1115_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1115_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1115_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1115_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1115<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 101] => lookup_1115_0(acc),
            [99, 111] => lookup_1115_1(acc),
            [101, 100, 117] => lookup_1115_2(acc),
            [103, 111, 118] => lookup_1115_3(acc),
            [99, 111, 109] => lookup_1115_4(acc),
            [110, 101, 116] => lookup_1115_5(acc),
            [111, 114, 103] => lookup_1115_6(acc),
            [110, 121, 109] => lookup_1115_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1116() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1118() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1119_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1119<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [121, 98, 111] => lookup_1119_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 21usize;
    match labels.next() {
        Some(label) => match label {
            [115, 116, 97, 116, 105, 99] => lookup_1120_5_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_14_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_14<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112] => lookup_1120_14_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_27_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_27<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 117] => lookup_1120_27_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_28_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_28<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 18usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 97, 115] => lookup_1120_28_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_49_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_49_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_49_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_49<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 100] => lookup_1120_49_0(acc),
            [108, 111, 110] => lookup_1120_49_1(acc),
            [114, 121, 100] => lookup_1120_49_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_62_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_62_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 1usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1120_62_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_62<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [114] => lookup_1120_62_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_78_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_78<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 118] => lookup_1120_78_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_107_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_107_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1120_107_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_107_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_107_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_107_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1120_107_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_107_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_107_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1120_107_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_107<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [111, 99, 105] => lookup_1120_107_0(info, labels, acc),
            [111, 99, 112] => lookup_1120_107_2(info, labels, acc),
            [111, 99, 115] => lookup_1120_107_3(info, labels, acc),
            wild => lookup_1120_107_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_120_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_120<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1120_120_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_121_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_121<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112, 115] => lookup_1120_121_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_132_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_132_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_132_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_132_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_132_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_132_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_132_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_132_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_132_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_132_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_132_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_132_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_132_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_132_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_132_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_132_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_132_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_132<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 16usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_1120_132_0(acc)
            }
            [101, 117, 45, 119, 101, 115, 116, 45, 51] => lookup_1120_132_1(acc),
            [115, 97, 45, 101, 97, 115, 116, 45, 49] => lookup_1120_132_2(acc),
            [117, 115, 45, 101, 97, 115, 116, 45, 49] => lookup_1120_132_3(acc),
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_1120_132_4(acc)
            }
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 51] => {
                lookup_1120_132_5(acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_1120_132_6(acc),
            [117, 115, 45, 101, 97, 115, 116, 45, 50] => lookup_1120_132_7(acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 49] => lookup_1120_132_8(acc),
            [101, 117, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => lookup_1120_132_9(acc),
            [117, 115, 45, 103, 111, 118, 45, 119, 101, 115, 116, 45, 49] => {
                lookup_1120_132_10(acc)
            }
            [99, 97, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => lookup_1120_132_11(acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 50] => lookup_1120_132_12(acc),
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_1120_132_13(acc)
            }
            [117, 115, 45, 119, 101, 115, 116, 45, 50] => lookup_1120_132_14(acc),
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_1120_132_15(acc)
            }
            [117, 115, 45, 119, 101, 115, 116, 45, 49] => lookup_1120_132_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_137_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_137_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1120_137_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_137<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [99, 110, 115] => lookup_1120_137_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_155_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_155_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_155<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [117, 50] => lookup_1120_155_0(acc),
            [117, 50, 45, 108, 111, 99, 97, 108] => lookup_1120_155_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_158(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_162_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_162<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1120_162_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_163(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_164(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_165(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_166(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_167(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_168(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_169(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_170(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_171(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_172_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_172_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1120_172_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_172<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 101, 118] => lookup_1120_172_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_173(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_174(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_175(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_176(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_177(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_178(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_179(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_180(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_181(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_182(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_183(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_184(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_185(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_186(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_187(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_188(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_189(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_0_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_0_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1120_190_0_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_190_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_1120_190_0_0(info, labels, acc),
            [115, 51] => lookup_1120_190_0_1(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_1120_190_0_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_190_1_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_1_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1120_190_1_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_190_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_1_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_1120_190_1_0(info, labels, acc),
            [115, 51] => lookup_1120_190_1_1(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_1120_190_1_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_190_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_3_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_3_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1120_190_3_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_190_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_1120_190_3_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_190_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_5_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1120_190_5_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_190_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_7_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_7_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1120_190_7_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_190_7_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_7_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_1120_190_7_0(info, labels, acc),
            [115, 51] => lookup_1120_190_7_1(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_1120_190_7_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_190_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 25usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_12_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_12<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1120_190_12_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_190_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 25usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_18_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_18_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1120_190_18_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_190_18<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_1120_190_18_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_190_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 25usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_21_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_21_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1120_190_21_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_190_21<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_1120_190_21_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_190_22_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_22_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1120_190_22_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_190_22<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_1120_190_22_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_190_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_26_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_26_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1120_190_26_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_190_26_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_26_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_26<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_1120_190_26_0(info, labels, acc),
            [115, 51] => lookup_1120_190_26_1(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_1120_190_26_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_190_27_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_27_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1120_190_27_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_190_27<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_1120_190_27_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_190_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_31_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_31_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1120_190_31_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_190_31_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_31_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_31<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_1120_190_31_0(info, labels, acc),
            [115, 51] => lookup_1120_190_31_1(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_1120_190_31_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_190_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_34_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_34_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1120_190_34_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_190_34_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_34_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_34<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_1120_190_34_0(info, labels, acc),
            [115, 51] => lookup_1120_190_34_1(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_1120_190_34_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_190_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_37_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_37_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1120_190_37_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_190_37_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_37_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_37<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_1120_190_37_0(info, labels, acc),
            [115, 51] => lookup_1120_190_37_1(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_1120_190_37_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_190_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_39_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_39<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1120_190_39_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_190_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_41_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_190_41_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1120_190_41_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_190_41<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_1120_190_41_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_190<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_1120_190_0(info, labels, acc)
            }
            [101, 117, 45, 119, 101, 115, 116, 45, 51] => lookup_1120_190_1(info, labels, acc),
            [115, 51, 45, 115, 97, 45, 101, 97, 115, 116, 45, 49] => lookup_1120_190_2(acc),
            [115, 97, 45, 101, 97, 115, 116, 45, 49] => lookup_1120_190_3(info, labels, acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 101, 117, 45, 119, 101, 115, 116, 45, 49] => {
                lookup_1120_190_4(acc)
            }
            [101, 108, 98] => lookup_1120_190_5(info, labels, acc),
            [115, 51, 45, 97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_1120_190_6(acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_1120_190_7(info, labels, acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 117, 115, 45, 119, 101, 115, 116, 45, 50] => {
                lookup_1120_190_8(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_1120_190_9(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 115, 97, 45, 101, 97, 115, 116, 45, 49] => {
                lookup_1120_190_10(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 117, 115, 45, 101, 97, 115, 116, 45, 49] => {
                lookup_1120_190_11(acc)
            }
            [99, 111, 109, 112, 117, 116, 101, 45, 49] => lookup_1120_190_12(info, labels, acc),
            [115, 51, 45, 101, 117, 45, 119, 101, 115, 116, 45, 50] => lookup_1120_190_13(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_1120_190_14(acc)
            }
            [115, 51, 45, 117, 115, 45, 101, 97, 115, 116, 45, 50] => lookup_1120_190_15(acc),
            [115, 51, 45, 101, 117, 45, 119, 101, 115, 116, 45, 49] => lookup_1120_190_16(acc),
            [115, 51, 45, 117, 115, 45, 119, 101, 115, 116, 45, 50] => lookup_1120_190_17(acc),
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_1120_190_18(info, labels, acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_1120_190_19(acc)
            }
            [115, 51, 45, 101, 120, 116, 101, 114, 110, 97, 108, 45, 49] => lookup_1120_190_20(acc),
            [117, 115, 45, 101, 97, 115, 116, 45, 49] => lookup_1120_190_21(labels, acc),
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_1120_190_22(info, labels, acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 117, 115, 45, 119, 101, 115, 116, 45, 49] => {
                lookup_1120_190_23(acc)
            }
            [115, 51, 45, 101, 117, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_1120_190_24(acc)
            }
            [115, 51, 45, 99, 97, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_1120_190_25(acc)
            }
            [117, 115, 45, 101, 97, 115, 116, 45, 50] => lookup_1120_190_26(info, labels, acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 49] => lookup_1120_190_27(info, labels, acc),
            [115, 51, 45, 97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_1120_190_28(acc)
            }
            [115, 51, 45, 97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_1120_190_29(acc)
            }
            [115, 51, 45, 117, 115, 45, 119, 101, 115, 116, 45, 49] => lookup_1120_190_30(acc),
            [101, 117, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_1120_190_31(info, labels, acc)
            }
            [115, 51, 45, 102, 105, 112, 115, 45, 117, 115, 45, 103, 111, 118, 45, 119, 101, 115, 116, 45, 49] => {
                lookup_1120_190_32(acc)
            }
            [115, 51, 45, 101, 117, 45, 119, 101, 115, 116, 45, 51] => lookup_1120_190_33(acc),
            [99, 97, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_1120_190_34(info, labels, acc)
            }
            [115, 51, 45, 97, 112, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_1120_190_35(acc),
            [115, 51, 45, 117, 115, 45, 103, 111, 118, 45, 119, 101, 115, 116, 45, 49] => {
                lookup_1120_190_36(acc)
            }
            [101, 117, 45, 119, 101, 115, 116, 45, 50] => lookup_1120_190_37(info, labels, acc),
            [115, 51, 45, 97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_1120_190_38(acc)
            }
            [99, 111, 109, 112, 117, 116, 101] => lookup_1120_190_39(info, labels, acc),
            [115, 51] => lookup_1120_190_40(acc),
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_1120_190_41(info, labels, acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_191(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_192(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_193(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_194(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_195(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_196(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_197(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_198(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_199(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_200(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_201(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_202(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_203(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_204(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_205(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_206(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_207(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_208(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_209(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_210(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_211_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_211<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 15usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [106, 115] => lookup_1120_211_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_212(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_213_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_213<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [100, 101, 109, 111] => lookup_1120_213_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_214(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_215(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_216(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_217(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_218(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_219(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_220(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_221(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_222(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_223(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_224(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_225(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_226(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_227_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_227_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_227_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_227_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_227_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_227_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_227_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_227_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_227<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [101, 117, 45, 49] => lookup_1120_227_0(acc),
            [101, 117, 45, 51] => lookup_1120_227_1(acc),
            [117, 115, 45, 52] => lookup_1120_227_2(acc),
            [101, 117, 45, 50] => lookup_1120_227_3(acc),
            [101, 117, 45, 52] => lookup_1120_227_4(acc),
            [117, 115, 45, 50] => lookup_1120_227_5(acc),
            [117, 115, 45, 51] => lookup_1120_227_6(acc),
            [117, 115, 45, 49] => lookup_1120_227_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_228(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_229(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_230(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_231(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_232(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_233(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_234_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_234<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112] => lookup_1120_234_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_235(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_236(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_237(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_238(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_239(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_240(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_241(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_242(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_243(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_244(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_245_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_245<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1120_245_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_246(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_247(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_248(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_249_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_249_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_249_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_249<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117] => lookup_1120_249_0(acc),
            [97, 109, 115] => lookup_1120_249_1(acc),
            [115, 103] => lookup_1120_249_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_250(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_251(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_252(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_253(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_254(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_255(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_256(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_257(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_258(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_259(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_260(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_261(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_262(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_263(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_264_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_264<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 105] => lookup_1120_264_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_265(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_266(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_267(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_268(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_269(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_270(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_271(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_272(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_273_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_273<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [120, 101, 110] => lookup_1120_273_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_274(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_275(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_276(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_277(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_278(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_279(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_280(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_281(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_282(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_283(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_284(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_285(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_286(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_287(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_288(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_289(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_290(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_291(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_292(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_293(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_294(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_295(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_296(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_297(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_298_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_298_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_298<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [106, 99, 108, 111, 117, 100] => lookup_1120_298_0(acc),
            [106, 99, 108, 111, 117, 100, 45, 118, 101, 114, 45, 106, 112, 99] => {
                lookup_1120_298_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_299_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_299_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_299<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 101, 116, 97] => lookup_1120_299_0(acc),
            [97, 108, 112, 104, 97] => lookup_1120_299_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_300(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_301(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_302(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_303(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_304(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_305(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_306(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_307(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_308(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_309_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_309_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_309_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_309_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_309_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_309_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_309_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_309_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_309_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_309_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_309_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_309<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [111, 110, 99, 105, 108, 108, 97] => lookup_1120_309_0(acc),
            [108, 121, 110, 120] => lookup_1120_309_1(acc),
            [111, 110, 122, 97] => lookup_1120_309_2(acc),
            [120] => lookup_1120_309_3(acc),
            [111, 99, 101, 108, 111, 116] => lookup_1120_309_4(acc),
            [99, 97, 114, 97, 99, 97, 108] => lookup_1120_309_5(acc),
            [102, 101, 110, 116, 105, 103, 101, 114] => lookup_1120_309_6(acc),
            [115, 112, 104, 105, 110, 120] => lookup_1120_309_7(acc),
            [121, 97, 108, 105] => lookup_1120_309_8(acc),
            [118, 115] => lookup_1120_309_9(acc),
            [99, 117, 115, 116, 111, 109, 101, 114] => lookup_1120_309_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_310(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_311(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_312(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_313(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_314(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_315(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_316(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_317(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_318(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_319(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_320(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_321(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_322(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_323(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_324(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_325(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_326(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_327(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_328(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_329(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_330(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_331(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_332(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_333(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_334(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_335(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_336(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_337(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_338(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_339(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_340(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_341_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_341<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 103, 101, 115] => lookup_1120_341_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_342(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_343(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_344(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_345(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_346(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_347(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_348(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_349(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_350(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_351(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_352_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_352<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 97, 115] => lookup_1120_352_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_353_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_353_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1120_353_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_353_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_353<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 100, 101, 98, 97, 108, 97, 110, 99, 101, 114] => {
                lookup_1120_353_0(info, labels, acc)
            }
            [109, 101, 109, 98, 101, 114, 115] => lookup_1120_353_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_354(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_355(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_356(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_357(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_358_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_358_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_358<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [114, 97, 103, 45, 99, 108, 111, 117, 100] => lookup_1120_358_0(acc),
            [114, 97, 103, 45, 99, 108, 111, 117, 100, 45, 99, 104] => lookup_1120_358_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_359(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_360(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 105, 100, 111, 114, 97] => lookup_1120_0(acc),
            [100, 110, 115, 97, 108, 105, 97, 115] => lookup_1120_1(acc),
            [98, 112, 108, 97, 99, 101, 100] => lookup_1120_2(acc),
            [105, 115, 45, 97, 45, 98, 108, 111, 103, 103, 101, 114] => lookup_1120_3(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1120_4(acc),
            [111, 98, 115, 101, 114, 118, 97, 98, 108, 101, 117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => {
                lookup_1120_5(info, labels, acc)
            }
            [112, 108, 97, 116, 116, 101, 114, 45, 97, 112, 112] => lookup_1120_6(acc),
            [100, 101, 118, 45, 109, 121, 113, 110, 97, 112, 99, 108, 111, 117, 100] => {
                lookup_1120_7(acc)
            }
            [102, 114, 111, 109, 45, 100, 99] => lookup_1120_8(acc),
            [105, 115, 45, 110, 111, 116, 45, 99, 101, 114, 116, 105, 102, 105, 101, 100] => {
                lookup_1120_9(acc)
            }
            [116, 104, 101, 119, 111, 114, 107, 112, 99] => lookup_1120_10(acc),
            [114, 101, 109, 111, 116, 101, 119, 100] => lookup_1120_11(acc),
            [102, 114, 111, 109, 45, 110, 109] => lookup_1120_12(acc),
            [107, 97, 115, 115, 101, 114, 118, 101, 114] => lookup_1120_13(acc),
            [114, 101, 110, 100, 101, 114] => lookup_1120_14(info, labels, acc),
            [97, 119, 115, 109, 112, 112, 108] => lookup_1120_15(acc),
            [105, 115, 45, 97, 45, 99, 111, 110, 115, 101, 114, 118, 97, 116, 105, 118, 101] => {
                lookup_1120_16(acc)
            }
            [103, 111, 116, 100, 110, 115] => lookup_1120_17(acc),
            [115, 101, 114, 118, 101, 102, 116, 112] => lookup_1120_18(acc),
            [102, 114, 111, 109, 45, 97, 108] => lookup_1120_19(acc),
            [117, 110, 117, 115, 117, 97, 108, 112, 101, 114, 115, 111, 110] => lookup_1120_20(acc),
            [105, 115, 45, 97, 45, 98, 111, 111, 107, 107, 101, 101, 112, 101, 114] => {
                lookup_1120_21(acc)
            }
            [117, 115] => lookup_1120_22(acc),
            [105, 115, 45, 97, 45, 114, 101, 112, 117, 98, 108, 105, 99, 97, 110] => {
                lookup_1120_23(acc)
            }
            [110, 111] => lookup_1120_24(acc),
            [105, 115, 45, 117, 98, 101, 114, 108, 101, 101, 116] => lookup_1120_25(acc),
            [102, 114, 111, 109, 45, 112, 114] => lookup_1120_26(acc),
            [109, 101, 116, 101, 111, 114, 97, 112, 112] => lookup_1120_27(labels, acc),
            [104, 111, 115, 116, 101, 100, 45, 98, 121, 45, 112, 114, 101, 118, 105, 100, 101, 114] => {
                lookup_1120_28(info, labels, acc)
            }
            [98, 97, 114, 115, 121, 99, 101, 110, 116, 101, 114] => lookup_1120_29(acc),
            [109, 121, 113, 110, 97, 112, 99, 108, 111, 117, 100] => lookup_1120_30(acc),
            [102, 114, 111, 109, 45, 105, 108] => lookup_1120_31(acc),
            [100, 121, 110, 100, 110, 115, 45, 119, 111, 114, 107] => lookup_1120_32(acc),
            [100, 121, 110, 100, 110, 115, 45, 119, 101, 98] => lookup_1120_33(acc),
            [102, 114, 111, 109, 45, 99, 116] => lookup_1120_34(acc),
            [106, 112, 110] => lookup_1120_35(acc),
            [117, 107] => lookup_1120_36(acc),
            [102, 114, 111, 109, 45, 109, 116] => lookup_1120_37(acc),
            [109, 121, 118, 110, 99] => lookup_1120_38(acc),
            [103, 111, 116, 112, 97, 110, 116, 104, 101, 111, 110] => lookup_1120_39(acc),
            [102, 114, 111, 109, 45, 97, 114] => lookup_1120_40(acc),
            [102, 114, 111, 109, 45, 109, 111] => lookup_1120_41(acc),
            [115, 101, 114, 118, 101, 105, 114, 99] => lookup_1120_42(acc),
            [116, 104, 105, 110, 103, 100, 117, 115, 116, 100, 97, 116, 97] => lookup_1120_43(acc),
            [110, 102, 115, 104, 111, 115, 116] => lookup_1120_44(acc),
            [100, 111, 101, 115, 110, 116, 101, 120, 105, 115, 116] => lookup_1120_45(acc),
            [105, 115, 45, 97, 45, 116, 101, 99, 104, 105, 101] => lookup_1120_46(acc),
            [98, 114] => lookup_1120_47(acc),
            [112, 97, 103, 101, 115, 112, 101, 101, 100, 109, 111, 98, 105, 108, 105, 122, 101, 114] => {
                lookup_1120_48(acc)
            }
            [119, 97, 102, 97, 105, 99, 108, 111, 117, 100] => lookup_1120_49(info, labels, acc),
            [100, 97, 116, 116, 111, 114, 101, 108, 97, 121] => lookup_1120_50(acc),
            [116, 114, 121, 45, 115, 110, 111, 119, 112, 108, 111, 119] => lookup_1120_51(acc),
            [102, 114, 111, 109, 45, 119, 105] => lookup_1120_52(acc),
            [51, 117, 116, 105, 108, 105, 116, 105, 101, 115] => lookup_1120_53(acc),
            [100, 121, 110, 100, 110, 115, 45, 109, 97, 105, 108] => lookup_1120_54(acc),
            [115, 101, 114, 118, 101, 112, 50, 112] => lookup_1120_55(acc),
            [115, 116, 97, 99, 107, 104, 101, 114, 111, 45, 110, 101, 116, 119, 111, 114, 107] => {
                lookup_1120_56(acc)
            }
            [102, 114, 111, 109, 45, 100, 101] => lookup_1120_57(acc),
            [105, 115, 45, 119, 105, 116, 104, 45, 116, 104, 101, 98, 97, 110, 100] => {
                lookup_1120_58(acc)
            }
            [105, 115, 45, 97, 110, 45, 101, 110, 116, 101, 114, 116, 97, 105, 110, 101, 114] => {
                lookup_1120_59(acc)
            }
            [116, 101, 109, 112, 45, 100, 110, 115] => lookup_1120_60(acc),
            [104, 107] => lookup_1120_61(acc),
            [97, 112, 112, 115, 112, 111, 116] => lookup_1120_62(labels, acc),
            [103, 111, 111, 103, 108, 101, 99, 111, 100, 101] => lookup_1120_63(acc),
            [105, 109, 112, 101, 114, 116, 114, 105, 120] => lookup_1120_64(acc),
            [107, 111, 122, 111, 119] => lookup_1120_65(acc),
            [100, 114, 101, 97, 109, 104, 111, 115, 116, 101, 114, 115] => lookup_1120_66(acc),
            [108, 105, 107, 101, 115, 45, 112, 105, 101] => lookup_1120_67(acc),
            [119, 111, 114, 107, 105, 115, 98, 111, 114, 105, 110, 103] => lookup_1120_68(acc),
            [115, 101, 114, 118, 101, 104, 97, 108, 102, 108, 105, 102, 101] => lookup_1120_69(acc),
            [104, 111, 109, 101, 108, 105, 110, 117, 120] => lookup_1120_70(acc),
            [102, 114, 111, 109, 45, 115, 99] => lookup_1120_71(acc),
            [99, 101, 99, 104, 105, 114, 101] => lookup_1120_72(acc),
            [102, 114, 111, 109, 45, 103, 97] => lookup_1120_73(acc),
            [105, 115, 45, 97, 45, 99, 117, 98, 105, 99, 108, 101, 45, 115, 108, 97, 118, 101] => {
                lookup_1120_74(acc)
            }
            [111, 110, 102, 97, 98, 114, 105, 99, 97] => lookup_1120_75(acc),
            [115, 101, 114, 118, 101, 104, 117, 109, 111, 117, 114] => lookup_1120_76(acc),
            [112, 97, 103, 101, 102, 114, 111, 110, 116, 97, 112, 112] => lookup_1120_77(acc),
            [101, 108, 97, 115, 116, 121, 99, 111] => lookup_1120_78(labels, acc),
            [100, 121, 110, 100, 110, 115, 45, 104, 111, 109, 101] => lookup_1120_79(acc),
            [102, 105, 114, 101, 119, 97, 108, 108, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_1120_80(acc)
            }
            [98, 108, 111, 103, 115, 121, 116, 101] => lookup_1120_81(acc),
            [102, 105, 114, 101, 98, 97, 115, 101, 97, 112, 112] => lookup_1120_82(acc),
            [98, 108, 111, 103, 100, 110, 115] => lookup_1120_83(acc),
            [97, 114] => lookup_1120_84(acc),
            [100, 121, 110, 100, 110, 115, 45, 98, 108, 111, 103] => lookup_1120_85(acc),
            [102, 114, 111, 109, 45, 116, 120] => lookup_1120_86(acc),
            [108, 105, 107, 101, 115, 99, 97, 110, 100, 121] => lookup_1120_87(acc),
            [111, 114, 115, 105, 116, 101, 115] => lookup_1120_88(acc),
            [111, 117, 116, 115, 121, 115, 116, 101, 109, 115, 99, 108, 111, 117, 100] => {
                lookup_1120_89(acc)
            }
            [105, 115, 45, 97, 45, 115, 111, 99, 105, 97, 108, 105, 115, 116] => {
                lookup_1120_90(acc)
            }
            [103, 101, 101, 107, 103, 97, 108, 97, 120, 121] => lookup_1120_91(acc),
            [113, 97, 50] => lookup_1120_92(acc),
            [104, 111, 115, 116, 101, 100, 112, 105] => lookup_1120_93(acc),
            [98, 97, 108, 101, 110, 97, 45, 100, 101, 118, 105, 99, 101, 115] => {
                lookup_1120_94(acc)
            }
            [105, 115, 115, 109, 97, 114, 116, 101, 114, 116, 104, 97, 110, 121, 111, 117] => {
                lookup_1120_95(acc)
            }
            [105, 115, 45, 97, 45, 112, 108, 97, 121, 101, 114] => lookup_1120_96(acc),
            [102, 114, 111, 109, 45, 119, 121] => lookup_1120_97(acc),
            [105, 115, 45, 105, 110, 116, 111, 45, 99, 97, 114, 116, 111, 111, 110, 115] => {
                lookup_1120_98(acc)
            }
            [108, 111, 115, 101, 121, 111, 117, 114, 105, 112] => lookup_1120_99(acc),
            [102, 114, 111, 109, 45, 117, 116] => lookup_1120_100(acc),
            [105, 115, 45, 97, 45, 103, 114, 101, 101, 110] => lookup_1120_101(acc),
            [112, 108, 97, 121, 115, 116, 97, 116, 105, 111, 110, 45, 99, 108, 111, 117, 100] => {
                lookup_1120_102(acc)
            }
            [105, 115, 45, 97, 110, 45, 97, 99, 116, 111, 114] => lookup_1120_103(acc),
            [101, 115, 116, 45, 97, 45, 108, 97, 45, 109, 97, 115, 105, 111, 110] => {
                lookup_1120_104(acc)
            }
            [105, 115, 45, 97, 45, 108, 105, 98, 101, 114, 116, 97, 114, 105, 97, 110] => {
                lookup_1120_105(acc)
            }
            [100, 121, 110, 100, 110, 115, 45, 105, 112] => lookup_1120_106(acc),
            [99, 117, 115, 116, 111, 109, 101, 114, 45, 111, 99, 105] => {
                lookup_1120_107(info, labels, acc)
            }
            [103, 105, 116, 104, 117, 98, 117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => {
                lookup_1120_108(acc)
            }
            [119, 105, 116, 104, 103, 111, 111, 103, 108, 101] => lookup_1120_109(acc),
            [104, 101, 114, 111, 107, 117, 97, 112, 112] => lookup_1120_110(acc),
            [97, 112, 112, 108, 105, 110, 122, 105] => lookup_1120_111(acc),
            [101, 115, 116, 45, 109, 111, 110, 45, 98, 108, 111, 103, 117, 101, 117, 114] => {
                lookup_1120_112(acc)
            }
            [102, 114, 111, 109, 45, 104, 105] => lookup_1120_113(acc),
            [112, 117, 98, 108, 105, 115, 104, 112, 114, 111, 120, 121] => lookup_1120_114(acc),
            [100, 121, 110, 100, 110, 115, 45, 119, 105, 107, 105] => lookup_1120_115(acc),
            [105, 115, 45, 97, 45, 116, 104, 101, 114, 97, 112, 105, 115, 116] => {
                lookup_1120_116(acc)
            }
            [105, 115, 45, 97, 110, 45, 101, 110, 103, 105, 110, 101, 101, 114] => {
                lookup_1120_117(acc)
            }
            [100, 111, 110, 116, 101, 120, 105, 115, 116] => lookup_1120_118(acc),
            [115, 107, 121, 103, 101, 97, 114, 97, 112, 112] => lookup_1120_119(acc),
            [108, 105, 110, 111, 100, 101, 111, 98, 106, 101, 99, 116, 115] => {
                lookup_1120_120(info, labels, acc)
            }
            [102, 98, 115, 98, 120] => lookup_1120_121(info, labels, acc),
            [113, 99] => lookup_1120_122(acc),
            [103, 101, 110, 116, 97, 112, 112, 115] => lookup_1120_123(acc),
            [104, 111, 109, 101, 115, 101, 99, 117, 114, 105, 116, 121, 112, 99] => {
                lookup_1120_124(acc)
            }
            [115, 101, 99, 117, 114, 105, 116, 121, 116, 97, 99, 116, 105, 99, 115] => {
                lookup_1120_125(acc)
            }
            [105, 115, 45, 97, 45, 114, 111, 99, 107, 115, 116, 97, 114] => lookup_1120_126(acc),
            [115, 105, 110, 97, 97, 112, 112] => lookup_1120_127(acc),
            [102, 114, 111, 109, 45, 118, 116] => lookup_1120_128(acc),
            [105, 115, 45, 97, 45, 116, 101, 97, 99, 104, 101, 114] => lookup_1120_129(acc),
            [101, 117] => lookup_1120_130(acc),
            [98, 101, 116, 97, 105, 110, 97, 98, 111, 120] => lookup_1120_131(acc),
            [101, 108, 97, 115, 116, 105, 99, 98, 101, 97, 110, 115, 116, 97, 108, 107] => {
                lookup_1120_132(labels, acc)
            }
            [102, 114, 111, 109, 45, 110, 99] => lookup_1120_133(acc),
            [100, 97, 116, 116, 111, 108, 111, 99, 97, 108] => lookup_1120_134(acc),
            [102, 114, 111, 109, 45, 110, 104] => lookup_1120_135(acc),
            [102, 114, 111, 109, 45, 115, 100] => lookup_1120_136(acc),
            [106, 111, 121, 101, 110, 116] => lookup_1120_137(info, labels, acc),
            [99, 110] => lookup_1120_138(acc),
            [102, 114, 111, 109, 45, 99, 97] => lookup_1120_139(acc),
            [102, 114, 101, 101, 109, 121, 105, 112] => lookup_1120_140(acc),
            [105, 115, 45, 97, 45, 102, 105, 110, 97, 110, 99, 105, 97, 108, 97, 100, 118, 105, 115, 111, 114] => {
                lookup_1120_141(acc)
            }
            [105, 115, 45, 97, 45, 100, 101, 109, 111, 99, 114, 97, 116] => lookup_1120_142(acc),
            [102, 114, 111, 109, 45, 105, 110] => lookup_1120_143(acc),
            [102, 114, 111, 109, 45, 109, 97] => lookup_1120_144(acc),
            [115, 97, 118, 101, 115, 45, 116, 104, 101, 45, 119, 104, 97, 108, 101, 115] => {
                lookup_1120_145(acc)
            }
            [102, 114, 111, 109, 45, 111, 107] => lookup_1120_146(acc),
            [109, 121, 100, 97, 116, 116, 111] => lookup_1120_147(acc),
            [104, 101, 97, 108, 116, 104, 45, 99, 97, 114, 101, 114, 101, 102, 111, 114, 109] => {
                lookup_1120_148(acc)
            }
            [115, 101, 114, 118, 101, 101, 120, 99, 104, 97, 110, 103, 101] => lookup_1120_149(acc),
            [102, 114, 111, 109, 45, 109, 105] => lookup_1120_150(acc),
            [111, 112, 101, 114, 97, 117, 110, 105, 116, 101] => lookup_1120_151(acc),
            [99, 108, 111, 117, 100, 99, 111, 110, 116, 114, 111, 108, 97, 112, 112] => {
                lookup_1120_152(acc)
            }
            [102, 114, 111, 109, 45, 111, 104] => lookup_1120_153(acc),
            [103, 111, 111, 103, 108, 101, 97, 112, 105, 115] => lookup_1120_154(acc),
            [120, 110, 98, 97, 121] => lookup_1120_155(labels, acc),
            [116, 114, 121, 99, 108, 111, 117, 100, 102, 108, 97, 114, 101] => lookup_1120_156(acc),
            [102, 114, 111, 109, 45, 97, 107] => lookup_1120_157(acc),
            [109, 121, 116, 117, 108, 101, 97, 112] => lookup_1120_158(acc),
            [105, 115, 45, 97, 45, 103, 101, 101, 107] => lookup_1120_159(acc),
            [100, 101] => lookup_1120_160(acc),
            [103, 101, 116, 109, 121, 105, 112] => lookup_1120_161(acc),
            [113, 117, 105, 112, 101, 108, 101, 109, 101, 110, 116, 115] => {
                lookup_1120_162(info, labels, acc)
            }
            [121, 111, 108, 97, 115, 105, 116, 101] => lookup_1120_163(acc),
            [100, 121, 110, 97, 108, 105, 97, 115] => lookup_1120_164(acc),
            [115, 101, 114, 118, 101, 98, 98, 115] => lookup_1120_165(acc),
            [102, 114, 111, 109, 45, 109, 110] => lookup_1120_166(acc),
            [105, 115, 45, 97, 45, 99, 97, 116, 101, 114, 101, 114] => lookup_1120_167(acc),
            [111, 111, 103, 117, 121] => lookup_1120_168(acc),
            [100, 121, 110, 100, 110, 115, 45, 102, 114, 101, 101] => lookup_1120_169(acc),
            [111, 119, 110, 112, 114, 111, 118, 105, 100, 101, 114] => lookup_1120_170(acc),
            [97, 102, 114, 105, 99, 97] => lookup_1120_171(acc),
            [97, 100, 111, 98, 101, 97, 101, 109, 99, 108, 111, 117, 100] => {
                lookup_1120_172(labels, acc)
            }
            [106, 100, 101, 118, 99, 108, 111, 117, 100] => lookup_1120_173(acc),
            [102, 114, 111, 109, 45, 105, 100] => lookup_1120_174(acc),
            [100, 100, 110, 115, 102, 114, 101, 101] => lookup_1120_175(acc),
            [113, 98, 117, 115, 101, 114] => lookup_1120_176(acc),
            [105, 115, 45, 97, 45, 97, 110, 97, 114, 99, 104, 105, 115, 116] => {
                lookup_1120_177(acc)
            }
            [102, 114, 111, 109, 45, 109, 100] => lookup_1120_178(acc),
            [105, 115, 45, 97, 45, 109, 117, 115, 105, 99, 105, 97, 110] => lookup_1120_179(acc),
            [100, 110, 115, 100, 111, 106, 111] => lookup_1120_180(acc),
            [109, 121, 97, 115, 117, 115, 116, 111, 114] => lookup_1120_181(acc),
            [52, 117] => lookup_1120_182(acc),
            [116, 101, 97, 99, 104, 101, 115, 45, 121, 111, 103, 97] => lookup_1120_183(acc),
            [112, 111, 105, 110, 116, 50, 116, 104, 105, 115] => lookup_1120_184(acc),
            [100, 111, 111, 109, 100, 110, 115] => lookup_1120_185(acc),
            [100, 121, 110, 100, 110, 115, 45, 97, 116, 45, 104, 111, 109, 101] => {
                lookup_1120_186(acc)
            }
            [100, 114, 97, 121, 100, 100, 110, 115] => lookup_1120_187(acc),
            [48, 48, 49, 119, 119, 119] => lookup_1120_188(acc),
            [114, 117] => lookup_1120_189(acc),
            [97, 109, 97, 122, 111, 110, 97, 119, 115] => lookup_1120_190(info, labels, acc),
            [110, 101, 116, 45, 102, 114, 101, 97, 107, 115] => lookup_1120_191(acc),
            [113, 117, 105, 99, 107, 115, 121, 116, 101, 115] => lookup_1120_192(acc),
            [99, 108, 111, 117, 100, 99, 111, 110, 116, 114, 111, 108, 108, 101, 100] => {
                lookup_1120_193(acc)
            }
            [100, 121, 110, 100, 110, 115, 45, 97, 116, 45, 119, 111, 114, 107] => {
                lookup_1120_194(acc)
            }
            [111, 110, 45, 97, 112, 116, 105, 98, 108, 101] => lookup_1120_195(acc),
            [105, 115, 45, 105, 110, 116, 111, 45, 103, 97, 109, 101, 115] => lookup_1120_196(acc),
            [115, 101, 114, 118, 101, 104, 116, 116, 112] => lookup_1120_197(acc),
            [115, 101, 114, 118, 101, 112, 105, 99, 115] => lookup_1120_198(acc),
            [117, 121] => lookup_1120_199(acc),
            [112, 108, 101, 115, 107, 110, 115] => lookup_1120_200(acc),
            [110, 101, 97, 116, 45, 117, 114, 108] => lookup_1120_201(acc),
            [99, 111] => lookup_1120_202(acc),
            [119, 112, 109, 117, 99, 100, 110] => lookup_1120_203(acc),
            [102, 114, 111, 109, 45, 112, 97] => lookup_1120_204(acc),
            [100, 110, 115, 105, 115, 107, 105, 110, 107, 121] => lookup_1120_205(acc),
            [105, 97, 109, 97, 108, 108, 97, 109, 97] => lookup_1120_206(acc),
            [115, 101, 114, 118, 101, 109, 112, 51] => lookup_1120_207(acc),
            [104, 101, 114, 111, 107, 117, 115, 115, 108] => lookup_1120_208(acc),
            [112, 105, 120, 111, 108, 105, 110, 111] => lookup_1120_209(acc),
            [109, 121, 115, 104, 111, 112, 105, 102, 121] => lookup_1120_210(acc),
            [119, 112, 101, 110, 103, 105, 110, 101, 112, 111, 119, 101, 114, 101, 100] => {
                lookup_1120_211(labels, acc)
            }
            [113, 117, 97, 108, 105, 102, 105, 111, 97, 112, 112] => lookup_1120_212(acc),
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_1120_213(info, labels, acc),
            [105, 115, 45, 97, 45, 112, 101, 114, 115, 111, 110, 97, 108, 116, 114, 97, 105, 110, 101, 114] => {
                lookup_1120_214(acc)
            }
            [102, 114, 111, 109, 45, 119, 97] => lookup_1120_215(acc),
            [102, 114, 111, 109, 45, 107, 115] => lookup_1120_216(acc),
            [115, 101, 108, 108, 115, 45, 102, 111, 114, 45, 108, 101, 115, 115] => {
                lookup_1120_217(acc)
            }
            [101, 115, 116, 45, 97, 45, 108, 97, 45, 109, 97, 105, 115, 111, 110] => {
                lookup_1120_218(acc)
            }
            [115, 112, 97, 99, 101, 45, 116, 111, 45, 114, 101, 110, 116] => lookup_1120_219(acc),
            [102, 114, 101, 101, 98, 111, 120, 111, 115] => lookup_1120_220(acc),
            [105, 115, 45, 97, 45, 99, 104, 101, 102] => lookup_1120_221(acc),
            [103, 108, 101, 101, 122, 101] => lookup_1120_222(acc),
            [99, 105, 115, 99, 111, 102, 114, 101, 97, 107] => lookup_1120_223(acc),
            [104, 117] => lookup_1120_224(acc),
            [102, 114, 111, 109, 45, 110, 100] => lookup_1120_225(acc),
            [105, 115, 45, 97, 45, 110, 97, 115, 99, 97, 114, 102, 97, 110] => lookup_1120_226(acc),
            [101, 118, 101, 110, 110, 111, 100, 101] => lookup_1120_227(info, labels, acc),
            [103, 114] => lookup_1120_228(acc),
            [100, 121, 110, 100, 110, 115, 45, 114, 101, 109, 111, 116, 101] => {
                lookup_1120_229(acc)
            }
            [119, 114, 105, 116, 101, 115, 116, 104, 105, 115, 98, 108, 111, 103] => {
                lookup_1120_230(acc)
            }
            [100, 111, 112, 97, 97, 115] => lookup_1120_231(acc),
            [102, 114, 111, 109, 45, 118, 97] => lookup_1120_232(acc),
            [109, 121, 100, 111, 98, 105, 115, 115] => lookup_1120_233(acc),
            [108, 109, 112, 109] => lookup_1120_234(info, labels, acc),
            [109, 121, 97, 99, 116, 105, 118, 101, 100, 105, 114, 101, 99, 116, 111, 114, 121] => {
                lookup_1120_235(acc)
            }
            [115, 101, 114, 118, 101, 115, 97, 114, 99, 97, 115, 109] => lookup_1120_236(acc),
            [115, 116, 117, 102, 102, 116, 111, 114, 101, 97, 100] => lookup_1120_237(acc),
            [115, 109, 117, 115, 104, 99, 100, 110] => lookup_1120_238(acc),
            [100, 121, 110, 100, 110, 115, 45, 111, 102, 102, 105, 99, 101] => lookup_1120_239(acc),
            [115, 101, 114, 118, 101, 113, 117, 97, 107, 101] => lookup_1120_240(acc),
            [109, 121, 115, 104, 111, 112, 98, 108, 111, 99, 107, 115] => lookup_1120_241(acc),
            [115, 104, 111, 112, 105, 116, 115, 105, 116, 101] => lookup_1120_242(acc),
            [102, 114, 111, 109, 45, 116, 110] => lookup_1120_243(acc),
            [49, 107, 97, 112, 112] => lookup_1120_244(acc),
            [48, 101, 109, 109] => lookup_1120_245(info, labels, acc),
            [104, 111, 98, 98, 121, 45, 115, 105, 116, 101] => lookup_1120_246(acc),
            [103, 101, 110, 116, 108, 101, 110, 116, 97, 112, 105, 115] => lookup_1120_247(acc),
            [119, 112, 104, 111, 115, 116, 101, 100, 109, 97, 105, 108] => lookup_1120_248(acc),
            [99, 108, 111, 117, 100, 115, 119, 105, 116, 99, 104, 101, 115] => {
                lookup_1120_249(info, labels, acc)
            }
            [109, 121, 105, 112, 104, 111, 115, 116] => lookup_1120_250(acc),
            [114, 97, 99, 107, 109, 97, 122, 101] => lookup_1120_251(acc),
            [111, 110, 116, 104, 101, 119, 105, 102, 105] => lookup_1120_252(acc),
            [105, 115, 97, 45, 104, 111, 99, 107, 101, 121, 110, 117, 116] => lookup_1120_253(acc),
            [105, 115, 45, 97, 45, 108, 97, 119, 121, 101, 114] => lookup_1120_254(acc),
            [102, 114, 111, 109, 45, 102, 108] => lookup_1120_255(acc),
            [118, 105, 112, 115, 105, 110, 97, 97, 112, 112] => lookup_1120_256(acc),
            [102, 114, 111, 109, 45, 114, 105] => lookup_1120_257(acc),
            [115, 97] => lookup_1120_258(acc),
            [100, 100, 110, 115, 108, 105, 118, 101] => lookup_1120_259(acc),
            [101, 115, 116, 45, 108, 101, 45, 112, 97, 116, 114, 111, 110] => lookup_1120_260(acc),
            [100, 121, 110, 110, 115] => lookup_1120_261(acc),
            [105, 115, 45, 97, 45, 104, 117, 110, 116, 101, 114] => lookup_1120_262(acc),
            [105, 115, 45, 97, 45, 112, 97, 105, 110, 116, 101, 114] => lookup_1120_263(acc),
            [115, 116, 100, 108, 105, 98] => lookup_1120_264(info, labels, acc),
            [119, 97, 102, 102, 108, 101, 99, 101, 108, 108] => lookup_1120_265(acc),
            [100, 121, 110, 100, 110, 115, 45, 115, 101, 114, 118, 101, 114] => {
                lookup_1120_266(acc)
            }
            [112, 97, 103, 101, 120, 108] => lookup_1120_267(acc),
            [97, 112, 112, 115, 112, 97, 99, 101, 104, 111, 115, 116, 101, 100] => {
                lookup_1120_268(acc)
            }
            [122, 97] => lookup_1120_269(acc),
            [115, 101, 114, 118, 101, 99, 111, 117, 110, 116, 101, 114, 115, 116, 114, 105, 107, 101] => {
                lookup_1120_270(acc)
            }
            [111, 110, 114, 101, 110, 100, 101, 114] => lookup_1120_271(acc),
            [97, 112, 112, 99, 104, 105, 122, 105] => lookup_1120_272(acc),
            [112, 114, 103, 109, 114] => lookup_1120_273(info, labels, acc),
            [105, 115, 45, 97, 45, 112, 104, 111, 116, 111, 103, 114, 97, 112, 104, 101, 114] => {
                lookup_1120_274(acc)
            }
            [102, 114, 101, 101, 98, 111, 120, 45, 111, 115] => lookup_1120_275(acc),
            [97, 112, 112, 115, 112, 97, 99, 101, 117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => {
                lookup_1120_276(acc)
            }
            [109, 101, 120] => lookup_1120_277(acc),
            [100, 97, 109, 110, 115, 101, 114, 118, 101, 114] => lookup_1120_278(acc),
            [100, 121, 110, 45, 111, 45, 115, 97, 117, 114] => lookup_1120_279(acc),
            [105, 115, 45, 97, 45, 104, 97, 114, 100, 45, 119, 111, 114, 107, 101, 114] => {
                lookup_1120_280(acc)
            }
            [115, 99, 114, 121, 115, 101, 99] => lookup_1120_281(acc),
            [107, 105, 108, 97, 116, 105, 114, 111, 110] => lookup_1120_282(acc),
            [98, 117, 105, 108, 116, 119, 105, 116, 104, 100, 97, 114, 107] => lookup_1120_283(acc),
            [97, 108, 112, 104, 97, 45, 109, 121, 113, 110, 97, 112, 99, 108, 111, 117, 100] => {
                lookup_1120_284(acc)
            }
            [105, 109, 112, 101, 114, 116, 114, 105, 120, 99, 100, 110] => lookup_1120_285(acc),
            [102, 114, 111, 109, 45, 110, 106] => lookup_1120_286(acc),
            [105, 115, 45, 97, 45, 98, 117, 108, 108, 115, 45, 102, 97, 110] => {
                lookup_1120_287(acc)
            }
            [105, 115, 45, 103, 111, 110, 101] => lookup_1120_288(acc),
            [102, 97, 115, 116, 108, 121, 45, 116, 101, 114, 114, 97, 114, 105, 117, 109] => {
                lookup_1120_289(acc)
            }
            [108, 112, 117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => {
                lookup_1120_290(acc)
            }
            [103, 105, 105, 122, 101] => lookup_1120_291(acc),
            [102, 114, 97, 109, 101, 114, 99, 97, 110, 118, 97, 115] => lookup_1120_292(acc),
            [115, 101, 114, 118, 101, 98, 101, 101, 114] => lookup_1120_293(acc),
            [108, 111, 103, 111, 105, 112] => lookup_1120_294(acc),
            [98, 108, 111, 120, 99, 109, 115] => lookup_1120_295(acc),
            [105, 100, 110, 98, 108, 111, 103, 103, 101, 114] => lookup_1120_296(acc),
            [105, 115, 45, 97, 110, 45, 97, 114, 116, 105, 115, 116] => lookup_1120_297(acc),
            [105, 107, 45, 115, 101, 114, 118, 101, 114] => lookup_1120_298(info, labels, acc),
            [98, 111, 117, 110, 116, 121, 45, 102, 117, 108, 108] => lookup_1120_299(labels, acc),
            [102, 114, 111, 109, 45, 110, 101] => lookup_1120_300(acc),
            [105, 115, 45, 97, 110, 45, 97, 99, 99, 111, 117, 110, 116, 97, 110, 116] => {
                lookup_1120_301(acc)
            }
            [98, 97, 114, 115, 121, 111, 110, 108, 105, 110, 101] => lookup_1120_302(acc),
            [105, 115, 45, 105, 110, 116, 111, 45, 99, 97, 114, 115] => lookup_1120_303(acc),
            [105, 115, 45, 105, 110, 116, 111, 45, 97, 110, 105, 109, 101] => lookup_1120_304(acc),
            [105, 115, 45, 115, 108, 105, 99, 107] => lookup_1120_305(acc),
            [102, 114, 111, 109, 45, 109, 115] => lookup_1120_306(acc),
            [102, 114, 111, 109, 45, 111, 114] => lookup_1120_307(acc),
            [105, 115, 97, 45, 103, 101, 101, 107] => lookup_1120_308(acc),
            [109, 121, 116, 104, 105, 99, 45, 98, 101, 97, 115, 116, 115] => {
                lookup_1120_309(info, labels, acc)
            }
            [105, 115, 45, 97, 45, 99, 112, 97] => lookup_1120_310(acc),
            [100, 121, 110, 100, 110, 115, 45, 112, 105, 99, 115] => lookup_1120_311(acc),
            [102, 114, 111, 109, 45, 110, 118] => lookup_1120_312(acc),
            [107, 114] => lookup_1120_313(acc),
            [100, 105, 116, 99, 104, 121, 111, 117, 114, 105, 112] => lookup_1120_314(acc),
            [115, 101, 114, 118, 101, 103, 97, 109, 101] => lookup_1120_315(acc),
            [105, 115, 45, 97, 110, 45, 97, 99, 116, 114, 101, 115, 115] => lookup_1120_316(acc),
            [105, 115, 45, 97, 45, 108, 108, 97, 109, 97] => lookup_1120_317(acc),
            [105, 115, 45, 97, 110, 45, 97, 110, 97, 114, 99, 104, 105, 115, 116] => {
                lookup_1120_318(acc)
            }
            [115, 101, 108, 108, 115, 45, 102, 111, 114, 45, 117] => lookup_1120_319(acc),
            [109, 105, 110, 105, 115, 101, 114, 118, 101, 114] => lookup_1120_320(acc),
            [104, 111, 109, 101, 115, 101, 99, 117, 114, 105, 116, 121, 109, 97, 99] => {
                lookup_1120_321(acc)
            }
            [100, 115, 109, 121, 110, 97, 115] => lookup_1120_322(acc),
            [105, 115, 45, 97, 45, 108, 105, 98, 101, 114, 97, 108] => lookup_1120_323(acc),
            [102, 114, 111, 109, 45, 105, 97] => lookup_1120_324(acc),
            [116, 111, 119, 110, 110, 101, 119, 115, 45, 115, 116, 97, 103, 105, 110, 103] => {
                lookup_1120_325(acc)
            }
            [105, 115, 45, 97, 45, 103, 117, 114, 117] => lookup_1120_326(acc),
            [105, 115, 45, 97, 45, 100, 101, 115, 105, 103, 110, 101, 114] => lookup_1120_327(acc),
            [100, 97, 116, 116, 111, 119, 101, 98] => lookup_1120_328(acc),
            [105, 115, 45, 97, 45, 108, 97, 110, 100, 115, 99, 97, 112, 101, 114] => {
                lookup_1120_329(acc)
            }
            [105, 115, 45, 99, 101, 114, 116, 105, 102, 105, 101, 100] => lookup_1120_330(acc),
            [105, 110, 100, 111, 119, 97, 112, 98, 108, 111, 103] => lookup_1120_331(acc),
            [119, 105, 116, 104, 121, 111, 117, 116, 117, 98, 101] => lookup_1120_332(acc),
            [105, 115, 45, 97, 45, 100, 111, 99, 116, 111, 114] => lookup_1120_333(acc),
            [109, 121, 115, 101, 99, 117, 114, 105, 116, 121, 99, 97, 109, 101, 114, 97] => {
                lookup_1120_334(acc)
            }
            [102, 114, 111, 109, 45, 107, 121] => lookup_1120_335(acc),
            [115, 105, 109, 112, 108, 101, 45, 117, 114, 108] => lookup_1120_336(acc),
            [100, 100, 110, 115, 103, 101, 101, 107] => lookup_1120_337(acc),
            [119, 112, 100, 101, 118, 99, 108, 111, 117, 100] => lookup_1120_338(acc),
            [102, 97, 109, 105, 108, 121, 100, 115] => lookup_1120_339(acc),
            [114, 104, 99, 108, 111, 117, 100] => lookup_1120_340(acc),
            [119, 105, 97, 114, 100, 119, 101, 98] => lookup_1120_341(info, labels, acc),
            [105, 115, 45, 108, 101, 101, 116] => lookup_1120_342(acc),
            [112, 103, 102, 111, 103] => lookup_1120_343(acc),
            [105, 115, 45, 97, 45, 115, 116, 117, 100, 101, 110, 116] => lookup_1120_344(acc),
            [115, 101, 108, 102, 105, 112] => lookup_1120_345(acc),
            [119, 111, 108, 116, 108, 97, 98, 45, 100, 101, 109, 111] => lookup_1120_346(acc),
            [104, 111, 109, 101, 117, 110, 105, 120] => lookup_1120_347(acc),
            [103, 98] => lookup_1120_348(acc),
            [102, 114, 111, 109, 45, 119, 118] => lookup_1120_349(acc),
            [99, 108, 105, 99, 107, 101, 116, 99, 108, 111, 117, 100] => lookup_1120_350(acc),
            [109, 121, 100, 114, 111, 98, 111] => lookup_1120_351(acc),
            [109, 97, 115, 115, 105, 118, 101, 103, 114, 105, 100] => {
                lookup_1120_352(info, labels, acc)
            }
            [108, 105, 110, 111, 100, 101] => lookup_1120_353(info, labels, acc),
            [100, 100, 110, 115, 107, 105, 110, 103] => lookup_1120_354(acc),
            [99, 111, 100, 101, 115, 112, 111, 116] => lookup_1120_355(acc),
            [97, 119, 115, 103, 108, 111, 98, 97, 108, 97, 99, 99, 101, 108, 101, 114, 97, 116, 111, 114] => {
                lookup_1120_356(acc)
            }
            [105, 115, 45, 97, 45, 110, 117, 114, 115, 101] => lookup_1120_357(acc),
            [104, 111, 115, 116, 101, 117, 114] => lookup_1120_358(info, labels, acc),
            [102, 97, 115, 116, 118, 112, 115, 45, 115, 101, 114, 118, 101, 114] => {
                lookup_1120_359(acc)
            }
            [109, 121, 114, 97, 118, 101, 110, 100, 98] => lookup_1120_360(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1121() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1122() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1123() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1124() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1125() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1126() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1127() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1128() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1129() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1130() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1131() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1132() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1133() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1134() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1135() -> Info {
    Info {
        len: 23usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1136() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1137() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1138() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1139() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1140() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1141() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1142() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1143_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1143_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1143_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 105, 116, 101, 115] => lookup_1143_0_0(acc),
            [100, 101, 118] => lookup_1143_0_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1143<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 97, 116, 105, 99] => lookup_1143_0(labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1144_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1144_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1144_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1144_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1144_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1144_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1144_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1144_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1144_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1144_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1144<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1144_0(acc),
            [101, 100, 117] => lookup_1144_1(acc),
            [103, 111, 118] => lookup_1144_2(acc),
            [97, 99] => lookup_1144_3(acc),
            [98, 105, 122] => lookup_1144_4(acc),
            [105, 110, 102, 111] => lookup_1144_5(acc),
            [110, 101, 116] => lookup_1144_6(acc),
            [115, 99] => lookup_1144_7(acc),
            [100, 101] => lookup_1144_8(acc),
            [111, 114, 103] => lookup_1144_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1145_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1145_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1145<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1145_0(acc),
            [101, 100, 117] => lookup_1145_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1146() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1147_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1147_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1147_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1147_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1147_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1147<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1147_0(acc),
            [110, 101, 116] => lookup_1147_1(acc),
            [101, 100, 117] => lookup_1147_2(acc),
            [103, 111, 118] => lookup_1147_3(acc),
            [111, 114, 103] => lookup_1147_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1148() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1149() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1150() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1151() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1152() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1153() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1154() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1155() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1156() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1157() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1158() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1159() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1160() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1161() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1162_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1162_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1162_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1162_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1162_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1162_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1162_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1162_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1162<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105] => lookup_1162_0(acc),
            [101, 100, 117] => lookup_1162_1(acc),
            [103, 111, 118] => lookup_1162_2(acc),
            [110, 103, 111] => lookup_1162_3(acc),
            [99, 111, 109] => lookup_1162_4(acc),
            [110, 101, 116] => lookup_1162_5(acc),
            [111, 114, 103] => lookup_1162_6(acc),
            [109, 105, 108] => lookup_1162_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1163_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1163<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1163_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1164() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1165() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1166() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1167_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1167_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1167_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1167_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1167_3_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1167_3_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [109, 101, 108] => lookup_1167_3_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1167_3<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1167_3_0(acc),
            [99, 108, 111, 117, 100, 108, 101, 116, 115] => lookup_1167_3_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1167_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1167_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1167_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1167_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1167_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1167_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1167_10_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1167_10_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1167_10_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1167_10_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1167_10_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1167_10_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1167_10_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1167_10_6<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 99, 104, 111, 111, 108, 115] => lookup_1167_10_6_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1167_10_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1167_10_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1167_10<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 97] => lookup_1167_10_0(acc),
            [97, 99, 116] => lookup_1167_10_1(acc),
            [118, 105, 99] => lookup_1167_10_2(acc),
            [110, 116] => lookup_1167_10_3(acc),
            [113, 108, 100] => lookup_1167_10_4(acc),
            [116, 97, 115] => lookup_1167_10_5(acc),
            [110, 115, 119] => lookup_1167_10_6(labels, acc),
            [99, 97, 116, 104, 111, 108, 105, 99] => lookup_1167_10_7(acc),
            [119, 97] => lookup_1167_10_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1167_11_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1167_11_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1167_11_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1167_11_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1167_11_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1167_11<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 97] => lookup_1167_11_0(acc),
            [118, 105, 99] => lookup_1167_11_1(acc),
            [119, 97] => lookup_1167_11_2(acc),
            [113, 108, 100] => lookup_1167_11_3(acc),
            [116, 97, 115] => lookup_1167_11_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1167_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1167_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1167_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1167_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1167_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1167_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1167<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 110] => lookup_1167_0(acc),
            [97, 99, 116] => lookup_1167_1(acc),
            [116, 97, 115] => lookup_1167_2(acc),
            [99, 111, 109] => lookup_1167_3(labels, acc),
            [105, 110, 102, 111] => lookup_1167_4(acc),
            [110, 101, 116] => lookup_1167_5(acc),
            [111, 114, 103] => lookup_1167_6(acc),
            [105, 100] => lookup_1167_7(acc),
            [99, 111, 110, 102] => lookup_1167_8(acc),
            [111, 122] => lookup_1167_9(acc),
            [101, 100, 117] => lookup_1167_10(labels, acc),
            [103, 111, 118] => lookup_1167_11(labels, acc),
            [115, 97] => lookup_1167_12(acc),
            [110, 116] => lookup_1167_13(acc),
            [113, 108, 100] => lookup_1167_14(acc),
            [118, 105, 99] => lookup_1167_15(acc),
            [110, 115, 119] => lookup_1167_16(acc),
            [119, 97] => lookup_1167_17(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1168() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1169() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1170() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1171() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1172() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1174() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1175_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1175_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1175_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1175_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1175_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1175_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1175_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1175_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1175_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1175<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_1175_0(acc),
            [103, 111, 118] => lookup_1175_1(acc),
            [115, 99, 104] => lookup_1175_2(acc),
            [112, 108, 99] => lookup_1175_3(acc),
            [99, 111, 109] => lookup_1175_4(acc),
            [110, 101, 116] => lookup_1175_5(acc),
            [111, 114, 103] => lookup_1175_6(acc),
            [109, 101, 100] => lookup_1175_7(acc),
            [105, 100] => lookup_1175_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1176() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1177() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1178() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1179() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1180() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1181() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1182() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1183() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1184_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1184_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1184_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 116, 100] => lookup_1184_0_0(acc),
            [112, 108, 99] => lookup_1184_0_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1184_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1184_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1184_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1184_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1184_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1184_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1184_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1184_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1184<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1184_0(labels, acc),
            [97, 99] => lookup_1184_1(acc),
            [116, 118] => lookup_1184_2(acc),
            [99, 111, 109] => lookup_1184_3(acc),
            [116, 116] => lookup_1184_4(acc),
            [110, 101, 116] => lookup_1184_5(acc),
            [110, 111, 109] => lookup_1184_6(acc),
            [111, 114, 103] => lookup_1184_7(acc),
            [114, 111] => lookup_1184_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1185() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1186() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1188() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1189() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1190_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1190<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 111, 114, 106] => lookup_1190_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1191() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1193_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1193_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1193_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1193_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1193_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1193_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1193_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1193_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1193<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 97, 109, 101] => lookup_1193_0(acc),
            [101, 100, 117] => lookup_1193_1(acc),
            [103, 111, 118] => lookup_1193_2(acc),
            [115, 99, 104] => lookup_1193_3(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1193_4(acc),
            [110, 111, 109] => lookup_1193_5(acc),
            [99, 111, 109] => lookup_1193_6(acc),
            [110, 101, 116] => lookup_1193_7(acc),
            [111, 114, 103] => lookup_1193_8(acc),
            [109, 105, 108] => lookup_1193_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1194() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1195() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1196_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 117, 115, 97, 110] => lookup_1196_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1196_1(acc),
            [100, 97, 101, 106, 101, 111, 110] => lookup_1196_2(acc),
            [110, 101] => lookup_1196_3(acc),
            [103, 119, 97, 110, 103, 106, 117] => lookup_1196_4(acc),
            [103, 121, 101, 111, 110, 103, 103, 105] => lookup_1196_5(acc),
            [99, 104, 117, 110, 103, 98, 117, 107] => lookup_1196_6(acc),
            [112, 101] => lookup_1196_7(acc),
            [109, 115] => lookup_1196_8(acc),
            [97, 99] => lookup_1196_9(acc),
            [100, 97, 101, 103, 117] => lookup_1196_10(acc),
            [103, 121, 101, 111, 110, 103, 110, 97, 109] => lookup_1196_11(acc),
            [115, 99] => lookup_1196_12(acc),
            [106, 101, 111, 110, 110, 97, 109] => lookup_1196_13(acc),
            [104, 115] => lookup_1196_14(acc),
            [105, 110, 99, 104, 101, 111, 110] => lookup_1196_15(acc),
            [117, 108, 115, 97, 110] => lookup_1196_16(acc),
            [101, 115] => lookup_1196_17(acc),
            [114, 101] => lookup_1196_18(acc),
            [115, 101, 111, 117, 108] => lookup_1196_19(acc),
            [103, 97, 110, 103, 119, 111, 110] => lookup_1196_20(acc),
            [107, 103] => lookup_1196_21(acc),
            [106, 101, 111, 110, 98, 117, 107] => lookup_1196_22(acc),
            [103, 111] => lookup_1196_23(acc),
            [99, 111] => lookup_1196_24(acc),
            [103, 121, 101, 111, 110, 103, 98, 117, 107] => lookup_1196_25(acc),
            [111, 114] => lookup_1196_26(acc),
            [99, 104, 117, 110, 103, 110, 97, 109] => lookup_1196_27(acc),
            [106, 101, 106, 117] => lookup_1196_28(acc),
            [109, 105, 108] => lookup_1196_29(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1198() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1199_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1199_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1199_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1199_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1199_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1199<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1199_0(acc),
            [101, 100, 117] => lookup_1199_1(acc),
            [103, 111, 118] => lookup_1199_2(acc),
            [110, 101, 116] => lookup_1199_3(acc),
            [111, 114, 103] => lookup_1199_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1200_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1200_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1200<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [114, 97, 118, 101, 110, 100, 98] => lookup_1200_0(acc),
            [109, 121, 102, 111, 114, 117, 109] => lookup_1200_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1201() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1203() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1204_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1204_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1204_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1204_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1204_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1204_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1204_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1204_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1204_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1204_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1204_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1204_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1204_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1204_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1204_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1204_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1204<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 105, 114, 109] => lookup_1204_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1204_1(acc),
            [103, 101, 110] => lookup_1204_2(acc),
            [110, 101, 116] => lookup_1204_3(acc),
            [111, 114, 103] => lookup_1204_4(acc),
            [105, 110, 100] => lookup_1204_5(acc),
            [110, 105, 99] => lookup_1204_6(acc),
            [114, 101, 115] => lookup_1204_7(acc),
            [99, 111] => lookup_1204_8(acc),
            [101, 100, 117] => lookup_1204_9(acc),
            [103, 111, 118] => lookup_1204_10(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_1204_11(acc),
            [97, 99] => lookup_1204_12(acc),
            [98, 97, 114, 115, 121] => lookup_1204_13(acc),
            [119, 101, 98] => lookup_1204_14(acc),
            [109, 105, 108] => lookup_1204_15(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1205() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1206() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1207() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1208() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1209() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1210() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1211() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1212() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1213() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1214() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1215() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1217() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1218() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1219() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1220() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1221() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1222() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1223() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1224_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1224_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1224_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1224_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1224_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1224_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1224_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1224_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1224_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1224_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1224_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1224_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1224_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1224_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1224<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98] => lookup_1224_0(acc),
            [105, 110, 116] => lookup_1224_1(acc),
            [99, 111] => lookup_1224_2(acc),
            [101, 100, 117] => lookup_1224_3(acc),
            [97, 99] => lookup_1224_4(acc),
            [98, 105, 122] => lookup_1224_5(acc),
            [99, 111, 109] => lookup_1224_6(acc),
            [105, 110, 102, 111] => lookup_1224_7(acc),
            [110, 101, 116] => lookup_1224_8(acc),
            [110, 111, 109] => lookup_1224_9(acc),
            [105, 110] => lookup_1224_10(acc),
            [111, 114, 103] => lookup_1224_11(acc),
            [103, 111, 98] => lookup_1224_12(acc),
            [109, 105, 108] => lookup_1224_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1225() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1227() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1228_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1228<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_1228_0(acc),
            [116, 114, 97, 110, 115, 108, 97, 116, 101] => lookup_1228_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1229() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1230() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1231() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1232() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1234() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1236() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1237() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1238() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1239_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1239_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1239_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1239_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1239_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1239_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1239<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 49, 54, 52] => lookup_1239_0(acc),
            [117, 114, 105] => lookup_1239_1(acc),
            [105, 114, 105, 115] => lookup_1239_2(acc),
            [105, 110, 45, 97, 100, 100, 114] => lookup_1239_3(acc),
            [117, 114, 110] => lookup_1239_4(acc),
            [105, 112, 54] => lookup_1239_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1240() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1241() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1243() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1244() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1245() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1246() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1247() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1248_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1248_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1248_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_10_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_10<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1248_10_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1248_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_13_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_13<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116, 111, 109, 101, 114] => lookup_1248_13_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1248_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_15_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_15<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112, 115] => lookup_1248_15_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1248_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_20_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_20_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116] => lookup_1248_20_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1248_20_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_20_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116] => lookup_1248_20_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1248_20_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_20_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116] => lookup_1248_20_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1248_20_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_20_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116] => lookup_1248_20_3_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1248_20<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [100, 105, 115, 114, 101, 99] => lookup_1248_20_0(info, labels, acc),
            [116, 101, 115, 116, 105, 110, 103] => lookup_1248_20_1(info, labels, acc),
            [100, 101, 118] => lookup_1248_20_2(info, labels, acc),
            [112, 114, 111, 100] => lookup_1248_20_3(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1248_21_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_21<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [117, 107, 48] => lookup_1248_21_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1248_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_23_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_23<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1248_23_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1248_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_28_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_28<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [115, 116, 97, 103, 101] => lookup_1248_28_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1248_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_32_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_32<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [103] => lookup_1248_32_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1248_33_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_33_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_33_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_33<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 45, 102, 114, 49] => lookup_1248_33_0(acc),
            [99, 108, 111, 117, 100] => lookup_1248_33_1(acc),
            [99, 108, 111, 117, 100, 45, 100, 101] => lookup_1248_33_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1248_34_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_34<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1248_34_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1248_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_36_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_36<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 15usize;
    match labels.next() {
        Some(label) => match label {
            [111, 99, 115] => lookup_1248_36_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1248_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_39_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_39<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1248_39_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1248_40_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_40<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1248_40_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1248_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_43_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_43_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1248_43_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1248_43_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_43<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [98, 97, 99, 107, 121, 97, 114, 100, 115] => lookup_1248_43_0(info, labels, acc),
            [97, 112, 112] => lookup_1248_43_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1248_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1248_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_52_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_52<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [100, 101, 118, 105, 99, 101, 115] => lookup_1248_52_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1248_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_54_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_54<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [100, 121, 110, 100, 110, 115] => lookup_1248_54_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1248_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_60_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1248_60_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1248_60_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1248_60<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 121, 115] => lookup_1248_60_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1248<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [118, 97, 112, 111, 114, 99, 108, 111, 117, 100] => lookup_1248_0(acc),
            [99, 108, 101, 118, 101, 114, 97, 112, 112, 115] => lookup_1248_1(acc),
            [108, 111, 108, 105, 112, 111, 112] => lookup_1248_2(acc),
            [111, 110, 45, 107, 51, 115] => lookup_1248_3(info, labels, acc),
            [100, 121, 110, 53, 51] => lookup_1248_4(acc),
            [103, 104, 111, 115, 116] => lookup_1248_5(acc),
            [103, 105, 116, 108, 97, 98] => lookup_1248_6(acc),
            [110, 111, 100, 117, 109] => lookup_1248_7(acc),
            [114, 101, 97, 100, 116, 104, 101, 100, 111, 99, 115] => lookup_1248_8(acc),
            [115, 97, 110, 100, 99, 97, 116, 115] => lookup_1248_9(acc),
            [111, 110, 45, 114, 105, 111] => lookup_1248_10(info, labels, acc),
            [119, 101, 100, 101, 112, 108, 111, 121] => lookup_1248_11(acc),
            [115, 104, 105, 102, 116, 101, 100, 105, 116] => lookup_1248_12(acc),
            [101, 110, 111, 110, 105, 99] => lookup_1248_13(labels, acc),
            [98, 45, 100, 97, 116, 97] => lookup_1248_14(acc),
            [108, 97, 105, 114] => lookup_1248_15(info, labels, acc),
            [104, 97, 115, 117, 114, 97, 45, 97, 112, 112] => lookup_1248_16(acc),
            [110, 103, 114, 111, 107] => lookup_1248_17(acc),
            [100, 114, 117, 100] => lookup_1248_18(acc),
            [109, 111, 45, 115, 105, 101, 109, 101, 110, 115] => lookup_1248_19(acc),
            [116, 104, 105, 110, 103, 100, 117, 115, 116] => lookup_1248_20(info, labels, acc),
            [98, 105, 103, 118] => lookup_1248_21(info, labels, acc),
            [114, 101, 115, 105, 110, 100, 101, 118, 105, 99, 101] => lookup_1248_22(acc),
            [109, 111, 111, 110, 115, 99, 97, 108, 101] => lookup_1248_23(info, labels, acc),
            [106, 101, 108, 101] => lookup_1248_24(acc),
            [104, 111, 115, 116, 121, 104, 111, 115, 116, 105, 110, 103] => lookup_1248_25(acc),
            [100, 101, 102, 105, 110, 105, 109, 97] => lookup_1248_26(acc),
            [98, 111, 120, 102, 117, 115, 101] => lookup_1248_27(acc),
            [110, 111, 100, 101, 97, 114, 116] => lookup_1248_28(info, labels, acc),
            [113, 111, 116, 111] => lookup_1248_29(acc),
            [98, 114, 111, 119, 115, 101, 114, 115, 97, 102, 101, 116, 121, 109, 97, 114, 107] => {
                lookup_1248_30(acc)
            }
            [108, 111, 103, 105, 110, 108, 105, 110, 101] => lookup_1248_31(acc),
            [118, 98, 114, 112, 108, 115, 98, 120] => lookup_1248_32(info, labels, acc),
            [117, 110, 105, 115, 112, 97, 99, 101] => lookup_1248_33(info, labels, acc),
            [115, 53, 121] => lookup_1248_34(info, labels, acc),
            [116, 101, 108, 101, 98, 105, 116] => lookup_1248_35(acc),
            [111, 112, 117, 115, 105, 110, 116, 101, 114, 97, 99, 116, 105, 118, 101] => {
                lookup_1248_36(info, labels, acc)
            }
            [110, 105, 100] => lookup_1248_37(acc),
            [97, 112, 105, 103, 101, 101] => lookup_1248_38(acc),
            [115, 116, 111, 108, 111, 115] => lookup_1248_39(info, labels, acc),
            [97, 122, 117, 114, 101, 99, 111, 110, 116, 97, 105, 110, 101, 114] => {
                lookup_1248_40(info, labels, acc)
            }
            [100, 101, 100, 121, 110] => lookup_1248_41(acc),
            [117, 116, 119, 101, 110, 116, 101] => lookup_1248_42(acc),
            [98, 97, 110, 122, 97, 105, 99, 108, 111, 117, 100] => {
                lookup_1248_43(info, labels, acc)
            }
            [119, 101, 98, 116, 104, 105, 110, 103, 115] => lookup_1248_44(acc),
            [112, 97, 110, 116, 104, 101, 111, 110, 115, 105, 116, 101] => lookup_1248_45(acc),
            [99, 111, 109] => lookup_1248_46(acc),
            [102, 104, 45, 109, 117, 101, 110, 115, 116, 101, 114] => lookup_1248_47(acc),
            [103, 105, 116, 104, 117, 98] => lookup_1248_48(acc),
            [98, 97, 115, 105, 99, 115, 101, 114, 118, 101, 114] => lookup_1248_49(acc),
            [115, 112, 97, 99, 101, 107, 105, 116] => lookup_1248_50(acc),
            [50, 48, 51, 56] => lookup_1248_51(acc),
            [114, 101, 115, 105, 110, 115, 116, 97, 103, 105, 110, 103] => {
                lookup_1248_52(info, labels, acc)
            }
            [118, 105, 114, 116, 117, 97, 108, 115, 101, 114, 118, 101, 114] => lookup_1248_53(acc),
            [100, 97, 112, 112, 110, 111, 100, 101] => lookup_1248_54(info, labels, acc),
            [98, 97, 114, 115, 121] => lookup_1248_55(acc),
            [115, 104, 119] => lookup_1248_56(acc),
            [98, 97, 99, 107, 112, 108, 97, 110, 101, 97, 112, 112] => lookup_1248_57(acc),
            [112, 114, 111, 116, 111, 110, 101, 116] => lookup_1248_58(acc),
            [104, 122, 99] => lookup_1248_59(acc),
            [113, 99, 120] => lookup_1248_60(labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1249_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1249_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [117, 115, 101, 114] => lookup_1249_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1249<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 97, 114, 116, 121] => lookup_1249_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1250() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1251() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1252() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1253() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1254_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1254_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1254_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1254<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 121, 109] => lookup_1254_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1254_1(acc),
            [103, 111, 118] => lookup_1254_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1255_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1255_1(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1255<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            [119, 119, 119] => lookup_1255_1(acc),
            wild => lookup_1255_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1256_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1256_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1256_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1256_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1256_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1256_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1256<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [224, 184, 168, 224, 184, 182, 224, 184, 129, 224, 184, 169, 224, 184, 178] => {
                lookup_1256_0(acc)
            }
            [224, 184, 173, 224, 184, 135, 224, 184, 132, 224, 185, 140, 224, 184, 129, 224, 184, 163] => {
                lookup_1256_1(acc)
            }
            [224, 184, 152, 224, 184, 184, 224, 184, 163, 224, 184, 129, 224, 184, 180, 224, 184, 136] => {
                lookup_1256_2(acc)
            }
            [224, 184, 163, 224, 184, 177, 224, 184, 144, 224, 184, 154, 224, 184, 178, 224, 184, 165] => {
                lookup_1256_3(acc)
            }
            [224, 184, 151, 224, 184, 171, 224, 184, 178, 224, 184, 163] => lookup_1256_4(acc),
            [224, 185, 128, 224, 184, 153, 224, 185, 135, 224, 184, 149] => lookup_1256_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1257_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1257<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1257_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1258() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1259() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1260_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1260_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1260_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1260_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1260_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1260_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1260_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1260_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1260_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1260_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1260_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1260_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1260_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1260_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1260_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1260_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1260_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1260_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1260_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1260_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1260_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1260<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 45, 105, 112] => lookup_1260_0(acc),
            [103, 114, 111, 107, 115, 45, 116, 104, 101] => lookup_1260_1(acc),
            [107, 110, 111, 119, 115, 105, 116, 97, 108, 108] => lookup_1260_2(acc),
            [100, 118, 114, 99, 97, 109] => lookup_1260_3(acc),
            [109, 97, 121, 102, 105, 114, 115, 116] => lookup_1260_4(acc),
            [119, 101, 98, 104, 111, 112] => lookup_1260_5(acc),
            [115, 101, 108, 102, 105, 112] => lookup_1260_6(acc),
            [103, 114, 111, 107, 115, 45, 116, 104, 105, 115] => lookup_1260_7(acc),
            [100, 121, 110, 97, 109, 105, 99, 45, 100, 110, 115] => lookup_1260_8(acc),
            [98, 97, 114, 114, 101, 108, 108, 45, 111, 102, 45, 107, 110, 111, 119, 108, 101, 100, 103, 101] => {
                lookup_1260_9(acc)
            }
            [98, 97, 114, 114, 101, 108, 45, 111, 102, 45, 107, 110, 111, 119, 108, 101, 100, 103, 101] => {
                lookup_1260_10(acc)
            }
            [100, 121, 110, 100, 110, 115] => lookup_1260_11(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_1260_12(acc),
            [104, 101, 114, 101, 45, 102, 111, 114, 45, 109, 111, 114, 101] => lookup_1260_13(acc),
            [98, 97, 114, 115, 121] => lookup_1260_14(acc),
            [110, 115, 117, 112, 100, 97, 116, 101] => lookup_1260_15(acc),
            [102, 111, 114, 45, 111, 117, 114] => lookup_1260_16(acc),
            [105, 108, 111, 118, 101, 99, 111, 108, 108, 101, 103, 101] => lookup_1260_17(acc),
            [100, 110, 115, 117, 112, 100, 97, 116, 101] => lookup_1260_18(acc),
            [118, 45, 105, 110, 102, 111] => lookup_1260_19(acc),
            [102, 111, 114, 117, 109, 122] => lookup_1260_20(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1261() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1262() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1263() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1264_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1264_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1264_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1264_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1264_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1264_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1264_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1264_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1264_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1264_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1264_10_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1264_10<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [98, 99, 105] => lookup_1264_10_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1264_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1264_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1264_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1264<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 112, 97] => lookup_1264_0(acc),
            [97, 97, 97] => lookup_1264_1(acc),
            [97, 118, 111, 99, 97, 116] => lookup_1264_2(acc),
            [97, 99, 97] => lookup_1264_3(acc),
            [106, 117, 114] => lookup_1264_4(acc),
            [114, 101, 99, 104, 116] => lookup_1264_5(acc),
            [101, 110, 103] => lookup_1264_6(acc),
            [97, 99, 99, 116] => lookup_1264_7(acc),
            [108, 97, 119] => lookup_1264_8(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_1264_9(acc),
            [100, 110, 115, 116, 114, 97, 99, 101] => lookup_1264_10(info, labels, acc),
            [98, 97, 114, 115, 121] => lookup_1264_11(acc),
            [98, 97, 114] => lookup_1264_12(acc),
            [109, 101, 100] => lookup_1264_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1265() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1266() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1267_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1267_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1267_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1267_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [100, 105, 114, 101, 99, 116] => lookup_1267_7_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1267_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1267_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1267_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1267_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1267<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [114, 100, 118] => lookup_1267_0(acc),
            [118, 112, 110, 112, 108, 117, 115] => lookup_1267_1(acc),
            [101, 100, 117] => lookup_1267_2(acc),
            [103, 111, 118] => lookup_1267_3(acc),
            [110, 121, 97, 110] => lookup_1267_4(acc),
            [111, 121, 97] => lookup_1267_5(acc),
            [99, 111, 109] => lookup_1267_6(acc),
            [113, 117, 105, 99, 107, 99, 111, 110, 110, 101, 99, 116] => {
                lookup_1267_7(info, labels, acc)
            }
            [110, 101, 116] => lookup_1267_8(acc),
            [111, 114, 103] => lookup_1267_9(acc),
            [54, 49, 49] => lookup_1267_10(acc),
            [109, 105, 108] => lookup_1267_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1268() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1269() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1270() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_0_0(acc),
            [108, 105, 98] => lookup_1271_0_1(acc),
            [107, 49, 50] => lookup_1271_0_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_1_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_1_0(acc),
            [108, 105, 98] => lookup_1271_1_1(acc),
            [107, 49, 50] => lookup_1271_1_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_2_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_2_0(acc),
            [108, 105, 98] => lookup_1271_2_1(acc),
            [107, 49, 50] => lookup_1271_2_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_3_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_3<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_3_0(acc),
            [108, 105, 98] => lookup_1271_3_1(acc),
            [107, 49, 50] => lookup_1271_3_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_4_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_4_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_4<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_4_0(acc),
            [108, 105, 98] => lookup_1271_4_1(acc),
            [107, 49, 50] => lookup_1271_4_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_5_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_5_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_5<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_5_0(acc),
            [108, 105, 98] => lookup_1271_5_1(acc),
            [107, 49, 50] => lookup_1271_5_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1271_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_7_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_7_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_7<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_7_0(acc),
            [108, 105, 98] => lookup_1271_7_1(acc),
            [107, 49, 50] => lookup_1271_7_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_8_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_8_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_8<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_8_0(acc),
            [108, 105, 98] => lookup_1271_8_1(acc),
            [107, 49, 50] => lookup_1271_8_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_9_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_9_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_9<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_9_0(acc),
            [108, 105, 98] => lookup_1271_9_1(acc),
            [107, 49, 50] => lookup_1271_9_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_10_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_10_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_10_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_10<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_10_0(acc),
            [108, 105, 98] => lookup_1271_10_1(acc),
            [107, 49, 50] => lookup_1271_10_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_12_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_12<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_12_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_13_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_13_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_13_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_13<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_13_0(acc),
            [108, 105, 98] => lookup_1271_13_1(acc),
            [107, 49, 50] => lookup_1271_13_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1271_15_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_15_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_15_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_15<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_15_0(acc),
            [108, 105, 98] => lookup_1271_15_1(acc),
            [107, 49, 50] => lookup_1271_15_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1271_17_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_17_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_17<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_17_0(acc),
            [108, 105, 98] => lookup_1271_17_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_19_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_19_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_19_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_19<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_19_0(acc),
            [108, 105, 98] => lookup_1271_19_1(acc),
            [107, 49, 50] => lookup_1271_19_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_20_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_20_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_20_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_20<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_20_0(acc),
            [108, 105, 98] => lookup_1271_20_1(acc),
            [107, 49, 50] => lookup_1271_20_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_21_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_21_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_21_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_21<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_21_0(acc),
            [108, 105, 98] => lookup_1271_21_1(acc),
            [107, 49, 50] => lookup_1271_21_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_22_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_22_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_22_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_22<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_22_0(acc),
            [108, 105, 98] => lookup_1271_22_1(acc),
            [107, 49, 50] => lookup_1271_22_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_23_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_23_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_23_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_23<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_23_0(acc),
            [108, 105, 98] => lookup_1271_23_1(acc),
            [107, 49, 50] => lookup_1271_23_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1271_25_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_25_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_25_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_25<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_25_0(acc),
            [108, 105, 98] => lookup_1271_25_1(acc),
            [107, 49, 50] => lookup_1271_25_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_26_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_26_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_26_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_26<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_26_0(acc),
            [108, 105, 98] => lookup_1271_26_1(acc),
            [107, 49, 50] => lookup_1271_26_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1271_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1271_29_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_29_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_29_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_29<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_29_0(acc),
            [108, 105, 98] => lookup_1271_29_1(acc),
            [107, 49, 50] => lookup_1271_29_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_30_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_30_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_30_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_30<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_30_0(acc),
            [108, 105, 98] => lookup_1271_30_1(acc),
            [107, 49, 50] => lookup_1271_30_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_31_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_31_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_31_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_31<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_31_0(acc),
            [108, 105, 98] => lookup_1271_31_1(acc),
            [107, 49, 50] => lookup_1271_31_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_32_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_32_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_32_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_32<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_32_0(acc),
            [108, 105, 98] => lookup_1271_32_1(acc),
            [107, 49, 50] => lookup_1271_32_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1271_34_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_34_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_34_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_34<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_34_0(acc),
            [108, 105, 98] => lookup_1271_34_1(acc),
            [107, 49, 50] => lookup_1271_34_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1271_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_37_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_37_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_37_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_37<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_37_0(acc),
            [108, 105, 98] => lookup_1271_37_1(acc),
            [107, 49, 50] => lookup_1271_37_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1271_39_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_39_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_39_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_39<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_39_0(acc),
            [108, 105, 98] => lookup_1271_39_1(acc),
            [107, 49, 50] => lookup_1271_39_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_40_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_40_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_40_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_40<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_40_0(acc),
            [108, 105, 98] => lookup_1271_40_1(acc),
            [107, 49, 50] => lookup_1271_40_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_41_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_41_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_41<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_41_0(acc),
            [108, 105, 98] => lookup_1271_41_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_42_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_42_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_42_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_42<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_42_0(acc),
            [108, 105, 98] => lookup_1271_42_1(acc),
            [107, 49, 50] => lookup_1271_42_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_43_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_43_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_43_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_43<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_43_0(acc),
            [108, 105, 98] => lookup_1271_43_1(acc),
            [107, 49, 50] => lookup_1271_43_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_44_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_44_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_44<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_44_0(acc),
            [108, 105, 98] => lookup_1271_44_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_46_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_46_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_46_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_46<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_46_0(acc),
            [108, 105, 98] => lookup_1271_46_1(acc),
            [107, 49, 50] => lookup_1271_46_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_47_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_47_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_47_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_47<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_47_0(acc),
            [108, 105, 98] => lookup_1271_47_1(acc),
            [107, 49, 50] => lookup_1271_47_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_48_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_48_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_48_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_48<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_48_0(acc),
            [108, 105, 98] => lookup_1271_48_1(acc),
            [107, 49, 50] => lookup_1271_48_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_49_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_49_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_49_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_49<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_49_0(acc),
            [108, 105, 98] => lookup_1271_49_1(acc),
            [107, 49, 50] => lookup_1271_49_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_50_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_50_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_50_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_50<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_50_0(acc),
            [108, 105, 98] => lookup_1271_50_1(acc),
            [107, 49, 50] => lookup_1271_50_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1271_52_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_52_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_52_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_52<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_52_0(acc),
            [108, 105, 98] => lookup_1271_52_1(acc),
            [107, 49, 50] => lookup_1271_52_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1271_54_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_54_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_54<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_54_0(acc),
            [108, 105, 98] => lookup_1271_54_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_56_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_56_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_56_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_56<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_56_0(acc),
            [108, 105, 98] => lookup_1271_56_1(acc),
            [107, 49, 50] => lookup_1271_56_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_57_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_57_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_57_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_57<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_57_0(acc),
            [108, 105, 98] => lookup_1271_57_1(acc),
            [107, 49, 50] => lookup_1271_57_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_58_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_58_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_58_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_58<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_58_0(acc),
            [108, 105, 98] => lookup_1271_58_1(acc),
            [107, 49, 50] => lookup_1271_58_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_59_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_59_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_59_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_59<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_59_0(acc),
            [108, 105, 98] => lookup_1271_59_1(acc),
            [107, 49, 50] => lookup_1271_59_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_60_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1271_60<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [112, 104, 120] => lookup_1271_60_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_61_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_61_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_61_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_61<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_61_0(acc),
            [108, 105, 98] => lookup_1271_61_1(acc),
            [107, 49, 50] => lookup_1271_61_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_62_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_62_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_62_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_62<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_62_0(acc),
            [108, 105, 98] => lookup_1271_62_1(acc),
            [107, 49, 50] => lookup_1271_62_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_63_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_63_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_63_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_63<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_63_0(acc),
            [108, 105, 98] => lookup_1271_63_1(acc),
            [107, 49, 50] => lookup_1271_63_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_64_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_64_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_64_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_64<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_64_0(acc),
            [108, 105, 98] => lookup_1271_64_1(acc),
            [107, 49, 50] => lookup_1271_64_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_65_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_65_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_65_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_65<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_65_0(acc),
            [108, 105, 98] => lookup_1271_65_1(acc),
            [107, 49, 50] => lookup_1271_65_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_66_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_66_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_66_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_66<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_66_0(acc),
            [108, 105, 98] => lookup_1271_66_1(acc),
            [107, 49, 50] => lookup_1271_66_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_67_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_67_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_67_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_67<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_67_0(acc),
            [108, 105, 98] => lookup_1271_67_1(acc),
            [107, 49, 50] => lookup_1271_67_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1271_69_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_69_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1271_69_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_69<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_69_0(acc),
            [108, 105, 98] => lookup_1271_69_1(acc),
            [107, 49, 50] => lookup_1271_69_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_70_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_70_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_70_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_70_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_70_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_70_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_70_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_70_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_70_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_70_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_70_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_70<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 101, 99] => lookup_1271_70_0(acc),
            [99, 111, 103] => lookup_1271_70_1(acc),
            [97, 110, 110, 45, 97, 114, 98, 111, 114] => lookup_1271_70_2(acc),
            [99, 99] => lookup_1271_70_3(acc),
            [103, 101, 110] => lookup_1271_70_4(acc),
            [119, 97, 115, 104, 116, 101, 110, 97, 119] => lookup_1271_70_5(acc),
            [101, 97, 116, 111, 110] => lookup_1271_70_6(acc),
            [109, 117, 115] => lookup_1271_70_7(acc),
            [108, 105, 98] => lookup_1271_70_8(acc),
            [100, 115, 116] => lookup_1271_70_9(acc),
            [107, 49, 50] => lookup_1271_70_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_71_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_71_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_71_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_71_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_71_2_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_71_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 118, 116] => lookup_1271_71_2_0(acc),
            [99, 104, 116, 114] => lookup_1271_71_2_1(acc),
            [112, 97, 114, 111, 99, 104] => lookup_1271_71_2_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_71<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_71_0(acc),
            [108, 105, 98] => lookup_1271_71_1(acc),
            [107, 49, 50] => lookup_1271_71_2(labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271_72_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_72_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_72_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271_72<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1271_72_0(acc),
            [108, 105, 98] => lookup_1271_72_1(acc),
            [107, 49, 50] => lookup_1271_72_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1271<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 97] => lookup_1271_0(labels, acc),
            [100, 99] => lookup_1271_1(labels, acc),
            [119, 121] => lookup_1271_2(labels, acc),
            [110, 109] => lookup_1271_3(labels, acc),
            [99, 116] => lookup_1271_4(labels, acc),
            [111, 104] => lookup_1271_5(labels, acc),
            [115, 116, 117, 102, 102, 45, 52, 45, 115, 97, 108, 101] => lookup_1271_6(acc),
            [97, 114] => lookup_1271_7(labels, acc),
            [112, 114] => lookup_1271_8(labels, acc),
            [105, 100] => lookup_1271_9(labels, acc),
            [107, 115] => lookup_1271_10(labels, acc),
            [110, 115, 110] => lookup_1271_11(acc),
            [119, 118] => lookup_1271_12(labels, acc),
            [109, 111] => lookup_1271_13(labels, acc),
            [103, 111, 108, 102, 102, 97, 110] => lookup_1271_14(acc),
            [118, 105] => lookup_1271_15(labels, acc),
            [100, 114, 117, 100] => lookup_1271_16(acc),
            [114, 105] => lookup_1271_17(labels, acc),
            [100, 110, 105] => lookup_1271_18(acc),
            [110, 99] => lookup_1271_19(labels, acc),
            [116, 120] => lookup_1271_20(labels, acc),
            [108, 97] => lookup_1271_21(labels, acc),
            [99, 111] => lookup_1271_22(labels, acc),
            [107, 121] => lookup_1271_23(labels, acc),
            [102, 114, 101, 101, 100, 100, 110, 115] => lookup_1271_24(acc),
            [109, 110] => lookup_1271_25(labels, acc),
            [111, 114] => lookup_1271_26(labels, acc),
            [108, 97, 110, 100, 45, 52, 45, 115, 97, 108, 101] => lookup_1271_27(acc),
            [103, 114, 97, 112, 104, 111, 120] => lookup_1271_28(acc),
            [119, 97] => lookup_1271_29(labels, acc),
            [97, 108] => lookup_1271_30(labels, acc),
            [102, 108] => lookup_1271_31(labels, acc),
            [112, 97] => lookup_1271_32(labels, acc),
            [105, 115, 45, 98, 121] => lookup_1271_33(acc),
            [109, 116] => lookup_1271_34(labels, acc),
            [109, 105, 114, 99, 108, 111, 117, 100] => lookup_1271_35(acc),
            [107, 105, 100, 115] => lookup_1271_36(acc),
            [110, 121] => lookup_1271_37(labels, acc),
            [112, 108, 97, 116, 116, 101, 114, 112] => lookup_1271_38(acc),
            [119, 105] => lookup_1271_39(labels, acc),
            [105, 97] => lookup_1271_40(labels, acc),
            [104, 105] => lookup_1271_41(labels, acc),
            [105, 110] => lookup_1271_42(labels, acc),
            [110, 101] => lookup_1271_43(labels, acc),
            [115, 100] => lookup_1271_44(labels, acc),
            [105, 115, 97] => lookup_1271_45(acc),
            [97, 107] => lookup_1271_46(labels, acc),
            [97, 115] => lookup_1271_47(labels, acc),
            [109, 115] => lookup_1271_48(labels, acc),
            [103, 97] => lookup_1271_49(labels, acc),
            [105, 108] => lookup_1271_50(labels, acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_1271_51(acc),
            [115, 99] => lookup_1271_52(labels, acc),
            [112, 111, 105, 110, 116, 116, 111] => lookup_1271_53(acc),
            [110, 100] => lookup_1271_54(labels, acc),
            [102, 101, 100] => lookup_1271_55(acc),
            [97, 122] => lookup_1271_56(labels, acc),
            [109, 100] => lookup_1271_57(labels, acc),
            [116, 110] => lookup_1271_58(labels, acc),
            [118, 97] => lookup_1271_59(labels, acc),
            [101, 110, 115, 99, 97, 108, 101, 100] => lookup_1271_60(info, labels, acc),
            [110, 106] => lookup_1271_61(labels, acc),
            [103, 117] => lookup_1271_62(labels, acc),
            [109, 101] => lookup_1271_63(labels, acc),
            [117, 116] => lookup_1271_64(labels, acc),
            [110, 104] => lookup_1271_65(labels, acc),
            [118, 116] => lookup_1271_66(labels, acc),
            [111, 107] => lookup_1271_67(labels, acc),
            [110, 111, 105, 112] => lookup_1271_68(acc),
            [100, 101] => lookup_1271_69(labels, acc),
            [109, 105] => lookup_1271_70(labels, acc),
            [109, 97] => lookup_1271_71(labels, acc),
            [110, 118] => lookup_1271_72(labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1272() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1273() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1274() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1275_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1275_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1275_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1275_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1275_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1275<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1275_0(acc),
            [99, 111] => lookup_1275_1(acc),
            [110, 101, 116] => lookup_1275_2(acc),
            [111, 114, 103] => lookup_1275_3(acc),
            [107, 49, 50] => lookup_1275_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1276_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1276_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1276_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 97, 103, 105, 110, 103] => lookup_1276_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1276_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1276_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1276_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1276<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [117, 110, 100, 101, 114] => lookup_1276_0(acc),
            [111, 110, 114, 101, 100] => lookup_1276_1(labels, acc),
            [115, 101, 114, 118, 105, 99, 101] => lookup_1276_2(acc),
            [102, 111, 114] => lookup_1276_3(acc),
            [104, 111, 109, 101, 108, 105, 110, 107] => lookup_1276_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1277() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1278() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1279_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1279_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1279_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1279_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1279_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1279_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1279<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1279_0(acc),
            [110, 101, 116] => lookup_1279_1(acc),
            [103, 111, 118] => lookup_1279_2(acc),
            [101, 100, 117] => lookup_1279_3(acc),
            [111, 114, 103] => lookup_1279_4(acc),
            [110, 111, 109] => lookup_1279_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1280() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1281() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1282() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1283() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1284() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1285() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1286_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1286_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1286_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1286_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1286_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1286_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1286_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1286_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1286_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1286_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1286_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1286<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1286_0(acc),
            [101, 100, 117] => lookup_1286_1(acc),
            [103, 111, 118] => lookup_1286_2(acc),
            [115, 99, 104] => lookup_1286_3(acc),
            [97, 99] => lookup_1286_4(acc),
            [98, 105, 122] => lookup_1286_5(acc),
            [99, 111, 109] => lookup_1286_6(acc),
            [105, 110, 102, 111] => lookup_1286_7(acc),
            [110, 101, 116] => lookup_1286_8(acc),
            [111, 114, 103] => lookup_1286_9(acc),
            [109, 105, 108] => lookup_1286_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1287() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1288_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1288<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1288_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1289() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1290_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1290_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1290_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1290_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1290_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1290_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1290_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1290_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1290_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1290_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1290_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1290_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1290_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1290_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1290_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1290_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1290_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1290<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 108] => lookup_1290_0(acc),
            [112, 114, 101, 115, 115, 101] => lookup_1290_1(acc),
            [112, 114, 100] => lookup_1290_2(acc),
            [103, 111, 117, 118] => lookup_1290_3(acc),
            [110, 111, 109] => lookup_1290_4(acc),
            [99, 111, 109] => lookup_1290_5(acc),
            [97, 115, 115] => lookup_1290_6(acc),
            [118, 101, 116, 101, 114, 105, 110, 97, 105, 114, 101] => lookup_1290_7(acc),
            [111, 114, 103] => lookup_1290_8(acc),
            [99, 111, 111, 112] => lookup_1290_9(acc),
            [101, 100, 117] => lookup_1290_10(acc),
            [103, 111, 118] => lookup_1290_11(acc),
            [112, 104, 97, 114, 109, 97, 99, 105, 101, 110, 115] => lookup_1290_12(acc),
            [116, 109] => lookup_1290_13(acc),
            [97, 115, 115, 111] => lookup_1290_14(acc),
            [109, 101, 100, 101, 99, 105, 110] => lookup_1290_15(acc),
            [110, 111, 116, 97, 105, 114, 101, 115] => lookup_1290_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1291() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1292() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1293() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1294() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1295() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1296_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1296<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 110, 112, 121] => lookup_1296_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1297_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1297_0_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1297_0_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1297_0_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1297_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [98, 122, 122] => lookup_1297_0_1(info, labels, acc),
            wild => lookup_1297_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1297<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 97, 112, 112, 115] => lookup_1297_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1298() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1299() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1300() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1301() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1302() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1303() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1304_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1304_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1304_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1304_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1304_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1304_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1304_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1304_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1304<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 110, 116] => lookup_1304_0(acc),
            [101, 100, 117] => lookup_1304_1(acc),
            [103, 111, 118] => lookup_1304_2(acc),
            [99, 117, 112, 99, 97, 107, 101] => lookup_1304_3(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1304_4(acc),
            [99, 111, 109] => lookup_1304_5(acc),
            [110, 101, 116] => lookup_1304_6(acc),
            [111, 114, 103] => lookup_1304_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1305() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1306() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1307() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1308() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1309() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1310() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1312() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1313() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1314_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1314_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1314_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1314_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1314_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1314_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1314_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1314_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1314_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1314_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1314<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 105, 114, 109] => lookup_1314_0(acc),
            [112, 101, 114] => lookup_1314_1(acc),
            [111, 116, 104, 101, 114] => lookup_1314_2(acc),
            [99, 111, 109] => lookup_1314_3(acc),
            [105, 110, 102, 111] => lookup_1314_4(acc),
            [110, 101, 116] => lookup_1314_5(acc),
            [119, 101, 98] => lookup_1314_6(acc),
            [114, 101, 99] => lookup_1314_7(acc),
            [115, 116, 111, 114, 101] => lookup_1314_8(acc),
            [97, 114, 116, 115] => lookup_1314_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1315_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1315_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1315_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1315_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1315_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1315_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1315_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1315_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1315<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1315_0(acc),
            [101, 100, 117] => lookup_1315_1(acc),
            [103, 111, 118] => lookup_1315_2(acc),
            [99, 111, 109] => lookup_1315_3(acc),
            [110, 101, 116] => lookup_1315_4(acc),
            [111, 121] => lookup_1315_5(acc),
            [111, 114, 103] => lookup_1315_6(acc),
            [110, 121, 109] => lookup_1315_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1316() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1317() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1318_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1318_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1318_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1318_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1318_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1318<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [106, 112] => lookup_1318_0(acc),
            [100, 101] => lookup_1318_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1318_2(acc),
            [116, 111] => lookup_1318_3(acc),
            [97, 116] => lookup_1318_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1319_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1319_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1319_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1319_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1319_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1319_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1319_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1319_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1319_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1319_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1319_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1319_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1319_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1319_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1319_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1319_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1319_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1319_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1319_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1319_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1319_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1319<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 105, 110] => lookup_1319_0(acc),
            [111, 114, 97, 110, 103, 101, 99, 108, 111, 117, 100] => lookup_1319_1(acc),
            [99, 111, 109] => lookup_1319_2(acc),
            [105, 110, 116, 108] => lookup_1319_3(acc),
            [110, 97, 116] => lookup_1319_4(acc),
            [110, 101, 116] => lookup_1319_5(acc),
            [105, 110, 102, 111] => lookup_1319_6(acc),
            [111, 114, 103] => lookup_1319_7(acc),
            [105, 110, 100] => lookup_1319_8(acc),
            [100, 101, 102, 101, 110, 115, 101] => lookup_1319_9(acc),
            [116, 117, 114, 101, 110] => lookup_1319_10(acc),
            [97, 103, 114, 105, 110, 101, 116] => lookup_1319_11(acc),
            [112, 101, 114, 115, 111] => lookup_1319_12(acc),
            [103, 111, 118] => lookup_1319_13(acc),
            [101, 100, 117, 110, 101, 116] => lookup_1319_14(acc),
            [114, 110, 115] => lookup_1319_15(acc),
            [116, 111, 117, 114, 105, 115, 109] => lookup_1319_16(acc),
            [114, 110, 117] => lookup_1319_17(acc),
            [109, 105, 110, 99, 111, 109] => lookup_1319_18(acc),
            [114, 110, 114, 116] => lookup_1319_19(acc),
            [101, 110, 115] => lookup_1319_20(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1320() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1321() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1322() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1323() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1324() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1325() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1326() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1327() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1328() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1329() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1330() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1331() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1332() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1333() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1334_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1334<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 102] => lookup_1334_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1335() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1336_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1336_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1336_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1336_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1336_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1336_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1336_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1336_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1336_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1336_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1336<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 116] => lookup_1336_0(acc),
            [101, 100, 117] => lookup_1336_1(acc),
            [103, 111, 118] => lookup_1336_2(acc),
            [115, 108, 100] => lookup_1336_3(acc),
            [99, 111, 109] => lookup_1336_4(acc),
            [110, 101, 116] => lookup_1336_5(acc),
            [119, 101, 98] => lookup_1336_6(acc),
            [111, 114, 103] => lookup_1336_7(acc),
            [103, 111, 98] => lookup_1336_8(acc),
            [109, 105, 108] => lookup_1336_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1337_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1337_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1337_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1337_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1337_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1337_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1337_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1337_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1337<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 97, 109, 101] => lookup_1337_0(acc),
            [101, 100, 117] => lookup_1337_1(acc),
            [103, 111, 118] => lookup_1337_2(acc),
            [98, 105, 122] => lookup_1337_3(acc),
            [99, 111, 109] => lookup_1337_4(acc),
            [105, 110, 102, 111] => lookup_1337_5(acc),
            [110, 101, 116] => lookup_1337_6(acc),
            [111, 114, 103] => lookup_1337_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1338_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1338_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1338_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1338_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1338_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1338<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1338_0(acc),
            [110, 101, 116] => lookup_1338_1(acc),
            [99, 111] => lookup_1338_2(acc),
            [111, 114, 103] => lookup_1338_3(acc),
            [110, 111, 109] => lookup_1338_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1339() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1340() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1341() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1342() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1343() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1344() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1346() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1347() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1348() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1349() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1350() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1351() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 23usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1352_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_114_0_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1352_114_0_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_1352_114_0_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1352_114_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_1352_114_0_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1352_114<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [111, 112, 101, 110] => lookup_1352_114_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1352_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1352_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1352_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_158(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_162(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_163(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_164(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_165(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_166(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_167(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_168(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_169(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_170(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_171(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_172(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_173(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_174(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_175(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_176(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_177(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_178(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_179(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_180(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_181(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_182(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_183(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_184(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_185(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_186(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_187(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_188(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_189(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_190(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_191(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_192(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_193(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_194(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_195(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_196(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_197(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_198(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_199(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_200(acc: usize) -> Info {
    Info {
        len: acc + 1 + 24usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_201(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_202(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_203(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_204(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_205(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_206(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_207(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1352_208(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_209(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_210(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_211(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_212(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_213(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_214(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_215(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_216(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_217(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_218(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_219(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_220(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_221(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_222(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_223(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_224(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_225(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_226(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_227(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_228(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_229(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_230(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_231(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_232(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_233(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_234(acc: usize) -> Info {
    Info {
        len: acc + 1 + 24usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_235(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_236(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_237(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_238(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_239(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_240(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_241(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_242(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_243(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_244(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_245(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_246(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_247(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_248(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_249(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_250(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_251(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_252(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_253(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_254(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_255(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_256(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_257(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_258(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_259(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_260(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_261(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_262(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_263(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_264(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_265(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_266(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_267(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_268(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_269(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_270(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_271(acc: usize) -> Info {
    Info {
        len: acc + 1 + 25usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_272(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_273(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_274(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_275(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_276(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_277(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_278(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_279(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_280_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1352_280<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [106, 99] => lookup_1352_280_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1352_281(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_282(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_283(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_284(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_285(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_286(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_287(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_288(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_289(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_290(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_291(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_292(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_293(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_294(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_295(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_296(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_297(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_298(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_299(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_300(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_301(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_302(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_303(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_304(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_305(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_306(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_307(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_308(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_309(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_310(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_311(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_312(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_313(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_314(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_315(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_316(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_317(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_318(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_319(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_320(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_321(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_322(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_323(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_324(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_325(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_326(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_327(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_328(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_329(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_330(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_331(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_332(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_333(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_334(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_335(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_336(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_337(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_338(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_339(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_340(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_341(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_342(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_343(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_344(acc: usize) -> Info {
    Info {
        len: acc + 1 + 23usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_345(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_346(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_347(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_348(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_349(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_350(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_351(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_352(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_353(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_354(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_355(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_356(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_357(acc: usize) -> Info {
    Info {
        len: acc + 1 + 23usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_358(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_359(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_360(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_361(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_362(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_363(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1352_364(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_365(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_366(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_367(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_368(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_369(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_370(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_371(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_372(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_373(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_374(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_375(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_376(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_377(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_378(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_379(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_380(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_381(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_382(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_383(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_384(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_385(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_386(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_387(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_388(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_389(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_390(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_391(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_392(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_393(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_394(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_395(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_396(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_397(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_398(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_399(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_400(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_401(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_402(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_403(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_404(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_405(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_406(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_407(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_408(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_409(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_410(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_411(acc: usize) -> Info {
    Info {
        len: acc + 1 + 24usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_412(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_413(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_414(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_415(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_416(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_417(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_418(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_419(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_420(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_421(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_422(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_423(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_424(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_425(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_426(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_427(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_428(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_429(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_430(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_431(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352_432(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [118, 97, 108, 108, 101, 100, 97, 111, 115, 116, 97] => lookup_1352_0(acc),
            [118, 97, 108, 108, 195, 169, 101, 45, 97, 111, 115, 116, 101] => lookup_1352_1(acc),
            [116, 114, 101, 110, 116, 105, 110, 111] => lookup_1352_2(acc),
            [97, 114, 101, 122, 122, 111] => lookup_1352_3(acc),
            [99, 108] => lookup_1352_4(acc),
            [120, 110, 45, 45, 98, 111, 122, 101, 110, 45, 115, 100, 116, 105, 114, 111, 108, 45, 50, 111, 98] => {
                lookup_1352_5(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 97, 45, 97, 100, 105, 103, 101] => {
                lookup_1352_6(acc)
            }
            [102, 114, 105, 117, 108, 105, 118, 101, 103, 105, 117, 108, 105, 97] => {
                lookup_1352_7(acc)
            }
            [109, 111, 108] => lookup_1352_8(acc),
            [118, 97, 108, 108, 101, 101, 45, 97, 111, 115, 116, 101] => lookup_1352_9(acc),
            [102, 101, 114, 109, 111] => lookup_1352_10(acc),
            [112, 117, 103, 108, 105, 97] => lookup_1352_11(acc),
            [108, 116] => lookup_1352_12(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 195, 188, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_1352_13(acc)
            }
            [97, 98, 114] => lookup_1352_14(acc),
            [102, 105, 114, 101, 110, 122, 101] => lookup_1352_15(acc),
            [109, 111, 100, 101, 110, 97] => lookup_1352_16(acc),
            [98, 122] => lookup_1352_17(acc),
            [98, 97, 108, 115, 97, 110, 45, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_1352_18(acc)
            }
            [97, 110] => lookup_1352_19(acc),
            [102, 114, 105, 117, 108, 105, 118, 103, 105, 117, 108, 105, 97] => lookup_1352_20(acc),
            [116, 111, 115] => lookup_1352_21(acc),
            [97, 118] => lookup_1352_22(acc),
            [97, 110, 100, 114, 105, 97, 116, 114, 97, 110, 105, 98, 97, 114, 108, 101, 116, 116, 97] => {
                lookup_1352_23(acc)
            }
            [98, 105, 101, 108, 108, 97] => lookup_1352_24(acc),
            [110, 117] => lookup_1352_25(acc),
            [112, 101] => lookup_1352_26(acc),
            [112, 114] => lookup_1352_27(acc),
            [114, 101, 103, 103, 105, 111, 99, 97, 108, 97, 98, 114, 105, 97] => {
                lookup_1352_28(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_1352_29(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_1352_30(acc)
            }
            [120, 110, 45, 45, 98, 117, 108, 115, 97, 110, 45, 115, 100, 116, 105, 114, 111, 108, 45, 110, 115, 98] => {
                lookup_1352_31(acc)
            }
            [99, 105] => lookup_1352_32(acc),
            [103, 111, 114, 105, 122, 105, 97] => lookup_1352_33(acc),
            [108, 101, 99, 99, 101] => lookup_1352_34(acc),
            [110, 97, 112, 111, 108, 105] => lookup_1352_35(acc),
            [110, 111] => lookup_1352_36(acc),
            [114, 101] => lookup_1352_37(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_1352_38(acc)
            }
            [98, 111, 122, 101, 110, 45, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_1352_39(acc)
            }
            [103, 101, 110, 111, 118, 97] => lookup_1352_40(acc),
            [114, 109] => lookup_1352_41(acc),
            [115, 117, 101, 100, 116, 105, 114, 111, 108] => lookup_1352_42(acc),
            [116, 101, 114, 110, 105] => lookup_1352_43(acc),
            [116, 111] => lookup_1352_44(acc),
            [109, 101, 115, 115, 105, 110, 97] => lookup_1352_45(acc),
            [114, 105, 101, 116, 105] => lookup_1352_46(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 117, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_1352_47(acc)
            }
            [118, 97, 108, 45, 100, 45, 97, 111, 115, 116, 97] => lookup_1352_48(acc),
            [118, 101, 110] => lookup_1352_49(acc),
            [118, 97, 108, 100, 45, 97, 111, 115, 116, 97] => lookup_1352_50(acc),
            [99, 97, 103, 108, 105, 97, 114, 105] => lookup_1352_51(acc),
            [102, 111, 103, 103, 105, 97] => lookup_1352_52(acc),
            [112, 103] => lookup_1352_53(acc),
            [118, 99] => lookup_1352_54(acc),
            [109, 111, 108, 105, 115, 101] => lookup_1352_55(acc),
            [118, 101, 110, 105, 99, 101] => lookup_1352_56(acc),
            [118, 97, 108, 45, 100, 97, 111, 115, 116, 97] => lookup_1352_57(acc),
            [108, 117, 99, 99, 97] => lookup_1352_58(acc),
            [98, 111, 122, 101, 110] => lookup_1352_59(acc),
            [109, 111, 110, 122, 97, 45, 98, 114, 105, 97, 110, 122, 97] => lookup_1352_60(acc),
            [110, 117, 111, 114, 111] => lookup_1352_61(acc),
            [120, 110, 45, 45, 99, 101, 115, 101, 110, 97, 45, 102, 111, 114, 108, 45, 109, 99, 98] => {
                lookup_1352_62(acc)
            }
            [98, 114] => lookup_1352_63(acc),
            [98, 114, 101, 115, 99, 105, 97] => lookup_1352_64(acc),
            [98, 101, 110, 101, 118, 101, 110, 116, 111] => lookup_1352_65(acc),
            [101, 110] => lookup_1352_66(acc),
            [115, 105, 99, 105, 108, 105, 97] => lookup_1352_67(acc),
            [118, 97, 108, 108, 195, 169, 101, 97, 111, 115, 116, 101] => lookup_1352_68(acc),
            [97, 103, 114, 105, 103, 101, 110, 116, 111] => lookup_1352_69(acc),
            [118, 97, 108, 108, 101, 45, 100, 45, 97, 111, 115, 116, 97] => lookup_1352_70(acc),
            [99, 97, 115, 101, 114, 116, 97] => lookup_1352_71(acc),
            [98, 117, 108, 115, 97, 110, 45, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_1352_72(acc)
            }
            [99, 97, 109, 112, 97, 110, 105, 97] => lookup_1352_73(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 97, 108, 116, 111, 97, 100, 105, 103, 101] => {
                lookup_1352_74(acc)
            }
            [97, 115, 116, 105] => lookup_1352_75(acc),
            [99, 101, 115, 101, 110, 97, 102, 111, 114, 108, 195, 172] => lookup_1352_76(acc),
            [102, 111, 114, 108, 105, 45, 99, 101, 115, 101, 110, 97] => lookup_1352_77(acc),
            [98, 97, 114, 108, 101, 116, 116, 97, 116, 114, 97, 110, 105, 97, 110, 100, 114, 105, 97] => {
                lookup_1352_78(acc)
            }
            [105, 115] => lookup_1352_79(acc),
            [98, 117, 108, 115, 97, 110, 45, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_1352_80(acc)
            }
            [108, 105, 118, 111, 114, 110, 111] => lookup_1352_81(acc),
            [97, 118, 101, 108, 108, 105, 110, 111] => lookup_1352_82(acc),
            [110, 111, 118, 97, 114, 97] => lookup_1352_83(acc),
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 111, 115, 100, 116, 105, 114, 111, 108, 45, 55, 118, 98] => {
                lookup_1352_84(acc)
            }
            [98, 97] => lookup_1352_85(acc),
            [109, 111, 110, 122, 97, 101, 98, 114, 105, 97, 110, 122, 97] => lookup_1352_86(acc),
            [108, 99] => lookup_1352_87(acc),
            [111, 103] => lookup_1352_88(acc),
            [112, 97, 100, 111, 118, 97] => lookup_1352_89(acc),
            [120, 110, 45, 45, 118, 97, 108, 108, 101, 100, 97, 111, 115, 116, 101, 45, 101, 98, 98] => {
                lookup_1352_90(acc)
            }
            [112, 101, 114, 117, 103, 105, 97] => lookup_1352_91(acc),
            [112, 101, 115, 97, 114, 111, 117, 114, 98, 105, 110, 111] => lookup_1352_92(acc),
            [112, 105, 115, 97] => lookup_1352_93(acc),
            [112, 117] => lookup_1352_94(acc),
            [115, 97, 115, 115, 97, 114, 105] => lookup_1352_95(acc),
            [115, 111, 110, 100, 114, 105, 111] => lookup_1352_96(acc),
            [118, 101, 114, 98, 97, 110, 105, 97] => lookup_1352_97(acc),
            [118, 105, 116, 101, 114, 98, 111] => lookup_1352_98(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1352_99(acc),
            [97, 111] => lookup_1352_100(acc),
            [115, 105, 99, 105, 108, 121] => lookup_1352_101(acc),
            [114, 101, 103, 103, 105, 111, 45, 99, 97, 108, 97, 98, 114, 105, 97] => {
                lookup_1352_102(acc)
            }
            [99, 97, 108, 97, 98, 114, 105, 97] => lookup_1352_103(acc),
            [105, 103, 108, 101, 115, 105, 97, 115, 99, 97, 114, 98, 111, 110, 105, 97] => {
                lookup_1352_104(acc)
            }
            [98, 111, 108, 122, 97, 110, 111, 45, 97, 108, 116, 111, 97, 100, 105, 103, 101] => {
                lookup_1352_105(acc)
            }
            [109, 97, 116, 101, 114, 97] => lookup_1352_106(acc),
            [109, 101, 100, 105, 111, 99, 97, 109, 112, 105, 100, 97, 110, 111] => {
                lookup_1352_107(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_1352_108(acc)
            }
            [112, 97, 108, 101, 114, 109, 111] => lookup_1352_109(acc),
            [116, 110] => lookup_1352_110(acc),
            [120, 110, 45, 45, 102, 111, 114, 108, 99, 101, 115, 101, 110, 97, 45, 99, 56, 97] => {
                lookup_1352_111(acc)
            }
            [117, 114, 98, 105, 110, 111, 45, 112, 101, 115, 97, 114, 111] => lookup_1352_112(acc),
            [118, 97] => lookup_1352_113(acc),
            [116, 105, 109] => lookup_1352_114(info, labels, acc),
            [98, 97, 115, 105, 108, 105, 99, 97, 116, 97] => lookup_1352_115(acc),
            [116, 117, 114, 105, 110] => lookup_1352_116(acc),
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 195, 188, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_1352_117(acc)
            }
            [118, 105, 98, 111, 45, 118, 97, 108, 101, 110, 116, 105, 97] => lookup_1352_118(acc),
            [105, 115, 101, 114, 110, 105, 97] => lookup_1352_119(acc),
            [118, 116] => lookup_1352_120(acc),
            [99, 101, 115, 101, 110, 97, 45, 102, 111, 114, 108, 195, 172] => lookup_1352_121(acc),
            [112, 117, 103] => lookup_1352_122(acc),
            [109, 105] => lookup_1352_123(acc),
            [97, 103] => lookup_1352_124(acc),
            [99, 97] => lookup_1352_125(acc),
            [118, 105] => lookup_1352_126(acc),
            [114, 101, 103, 103, 105, 111, 45, 101, 109, 105, 108, 105, 97] => lookup_1352_127(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 116, 105, 114, 111, 108] => {
                lookup_1352_128(acc)
            }
            [99, 97, 114, 98, 111, 110, 105, 97, 105, 103, 108, 101, 115, 105, 97, 115] => {
                lookup_1352_129(acc)
            }
            [101, 109, 105, 108, 105, 97, 45, 114, 111, 109, 97, 103, 110, 97] => {
                lookup_1352_130(acc)
            }
            [109, 99] => lookup_1352_131(acc),
            [49, 54, 45, 98] => lookup_1352_132(acc),
            [97, 114] => lookup_1352_133(acc),
            [112, 111] => lookup_1352_134(acc),
            [116, 101] => lookup_1352_135(acc),
            [102, 114, 105, 117, 108, 105, 45, 118, 101, 110, 101, 122, 105, 97, 103, 105, 117, 108, 105, 97] => {
                lookup_1352_136(acc)
            }
            [98, 115] => lookup_1352_137(acc),
            [54, 52, 45, 98] => lookup_1352_138(acc),
            [99, 101, 115, 101, 110, 97, 45, 102, 111, 114, 108, 105] => lookup_1352_139(acc),
            [97, 98, 114, 117, 122, 122, 111] => lookup_1352_140(acc),
            [99, 97, 108] => lookup_1352_141(acc),
            [120, 110, 45, 45, 118, 97, 108, 108, 101, 45, 97, 111, 115, 116, 101, 45, 101, 98, 98] => {
                lookup_1352_142(acc)
            }
            [98, 111, 122, 101, 110, 45, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_1352_143(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_1352_144(acc)
            }
            [109, 111] => lookup_1352_145(acc),
            [112, 105, 115, 116, 111, 105, 97] => lookup_1352_146(acc),
            [114, 101, 103, 103, 105, 111, 101, 109, 105, 108, 105, 97] => lookup_1352_147(acc),
            [118, 97, 108, 108, 101, 101, 45, 100, 45, 97, 111, 115, 116, 101] => {
                lookup_1352_148(acc)
            }
            [120, 110, 45, 45, 115, 100, 116, 105, 114, 111, 108, 45, 110, 50, 97] => {
                lookup_1352_149(acc)
            }
            [115, 97, 108, 101, 114, 110, 111] => lookup_1352_150(acc),
            [118, 97, 108, 108, 195, 169, 101, 45, 100, 45, 97, 111, 115, 116, 101] => {
                lookup_1352_151(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 115, 117, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_1352_152(acc)
            }
            [114, 105] => lookup_1352_153(acc),
            [118, 97, 108, 108, 101, 45, 97, 111, 115, 116, 97] => lookup_1352_154(acc),
            [97, 108, 101, 115, 115, 97, 110, 100, 114, 105, 97] => lookup_1352_155(acc),
            [116, 112] => lookup_1352_156(acc),
            [118, 105, 98, 111, 118, 97, 108, 101, 110, 116, 105, 97] => lookup_1352_157(acc),
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_1352_158(acc)
            }
            [118, 101, 110, 101, 122, 105, 97] => lookup_1352_159(acc),
            [99, 97, 114, 98, 111, 110, 105, 97, 45, 105, 103, 108, 101, 115, 105, 97, 115] => {
                lookup_1352_160(acc)
            }
            [109, 111, 110, 122, 97, 101, 100, 101, 108, 108, 97, 98, 114, 105, 97, 110, 122, 97] => {
                lookup_1352_161(acc)
            }
            [97, 110, 100, 114, 105, 97, 45, 116, 114, 97, 110, 105, 45, 98, 97, 114, 108, 101, 116, 116, 97] => {
                lookup_1352_162(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_1352_163(acc)
            }
            [98, 114, 105, 110, 100, 105, 115, 105] => lookup_1352_164(acc),
            [99, 101, 115, 101, 110, 97, 102, 111, 114, 108, 105] => lookup_1352_165(acc),
            [98, 111, 108, 122, 97, 110, 111] => lookup_1352_166(acc),
            [98, 97, 115] => lookup_1352_167(acc),
            [116, 114, 101, 110, 116, 105, 110, 115, 195, 188, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_1352_168(acc)
            }
            [99, 101] => lookup_1352_169(acc),
            [108, 105] => lookup_1352_170(acc),
            [108, 111] => lookup_1352_171(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 116, 105, 114, 111, 108] => {
                lookup_1352_172(acc)
            }
            [111, 114] => lookup_1352_173(acc),
            [116, 101, 114, 97, 109, 111] => lookup_1352_174(acc),
            [102, 114, 105, 117, 108, 105, 118, 101, 110, 101, 122, 105, 97, 103, 105, 117, 108, 105, 97] => {
                lookup_1352_175(acc)
            }
            [117, 100, 105, 110, 101] => lookup_1352_176(acc),
            [117, 100] => lookup_1352_177(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 45, 116, 105, 114, 111, 108] => {
                lookup_1352_178(acc)
            }
            [102, 111, 114, 108, 105, 99, 101, 115, 101, 110, 97] => lookup_1352_179(acc),
            [112, 97] => lookup_1352_180(acc),
            [114, 111, 109, 97] => lookup_1352_181(acc),
            [118, 97, 108, 108, 101, 45, 100, 97, 111, 115, 116, 97] => lookup_1352_182(acc),
            [112, 110] => lookup_1352_183(acc),
            [112, 116] => lookup_1352_184(acc),
            [118, 97, 108, 100, 97, 111, 115, 116, 97] => lookup_1352_185(acc),
            [98, 101, 108, 108, 117, 110, 111] => lookup_1352_186(acc),
            [114, 97] => lookup_1352_187(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 97, 45, 97, 100, 105, 103, 101] => {
                lookup_1352_188(acc)
            }
            [99, 122] => lookup_1352_189(acc),
            [108, 101, 99, 99, 111] => lookup_1352_190(acc),
            [115, 105] => lookup_1352_191(acc),
            [115, 111] => lookup_1352_192(acc),
            [112, 111, 114, 100, 101, 110, 111, 110, 101] => lookup_1352_193(acc),
            [117, 114, 98, 105, 110, 111, 112, 101, 115, 97, 114, 111] => lookup_1352_194(acc),
            [99, 104, 105, 101, 116, 105] => lookup_1352_195(acc),
            [112, 118] => lookup_1352_196(acc),
            [116, 114, 101, 110, 116, 105, 110, 115, 117, 101, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_1352_197(acc)
            }
            [97, 115, 99, 111, 108, 105, 45, 112, 105, 99, 101, 110, 111] => lookup_1352_198(acc),
            [114, 103] => lookup_1352_199(acc),
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 100, 116, 105, 114, 111, 108, 45, 115, 122, 98] => {
                lookup_1352_200(acc)
            }
            [97, 111, 115, 116, 97, 45, 118, 97, 108, 108, 101, 121] => lookup_1352_201(acc),
            [99, 110] => lookup_1352_202(acc),
            [115, 105, 101, 110, 97] => lookup_1352_203(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 97, 108, 116, 111, 45, 97, 100, 105, 103, 101] => {
                lookup_1352_204(acc)
            }
            [118, 101] => lookup_1352_205(acc),
            [116, 114, 97, 110, 105, 97, 110, 100, 114, 105, 97, 98, 97, 114, 108, 101, 116, 116, 97] => {
                lookup_1352_206(acc)
            }
            [51, 50, 45, 98] => lookup_1352_207(acc),
            [101, 109, 114] => lookup_1352_208(acc),
            [99, 97, 116, 97, 110, 122, 97, 114, 111] => lookup_1352_209(acc),
            [99, 114, 101, 109, 111, 110, 97] => lookup_1352_210(acc),
            [99, 115] => lookup_1352_211(acc),
            [99, 117, 110, 101, 111] => lookup_1352_212(acc),
            [102, 114, 105, 117, 108, 105, 118, 101, 110, 101, 122, 105, 97, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_1352_213(acc)
            }
            [109, 97, 114, 99, 104, 101] => lookup_1352_214(acc),
            [116, 114, 97, 110, 105, 45, 97, 110, 100, 114, 105, 97, 45, 98, 97, 114, 108, 101, 116, 116, 97] => {
                lookup_1352_215(acc)
            }
            [99, 104] => lookup_1352_216(acc),
            [109, 101] => lookup_1352_217(acc),
            [99, 97, 114, 114, 97, 114, 97, 45, 109, 97, 115, 115, 97] => lookup_1352_218(acc),
            [116, 117, 115, 99, 97, 110, 121] => lookup_1352_219(acc),
            [99, 111, 115, 101, 110, 122, 97] => lookup_1352_220(acc),
            [99, 97, 109] => lookup_1352_221(acc),
            [118, 105, 99, 101, 110, 122, 97] => lookup_1352_222(acc),
            [109, 97, 114] => lookup_1352_223(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_1352_224(acc)
            }
            [99, 97, 109, 112, 105, 100, 97, 110, 111, 45, 109, 101, 100, 105, 111] => {
                lookup_1352_225(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 97, 108, 116, 111, 97, 100, 105, 103, 101] => {
                lookup_1352_226(acc)
            }
            [116, 97] => lookup_1352_227(acc),
            [117, 109, 98, 114, 105, 97] => lookup_1352_228(acc),
            [111, 103, 108, 105, 97, 115, 116, 114, 97] => lookup_1352_229(acc),
            [102, 114, 105, 117, 108, 105, 45, 118, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_1352_230(acc)
            }
            [112, 109, 110] => lookup_1352_231(acc),
            [98, 116] => lookup_1352_232(acc),
            [99, 116] => lookup_1352_233(acc),
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 45, 115, 100, 45, 116, 105, 114, 111, 108, 45, 114, 122, 98] => {
                lookup_1352_234(acc)
            }
            [108, 111, 109, 98, 97, 114, 100, 121] => lookup_1352_235(acc),
            [98, 111] => lookup_1352_236(acc),
            [120, 110, 45, 45, 102, 111, 114, 108, 45, 99, 101, 115, 101, 110, 97, 45, 102, 99, 98] => {
                lookup_1352_237(acc)
            }
            [108, 111, 100, 105] => lookup_1352_238(acc),
            [97, 115, 99, 111, 108, 105, 112, 105, 99, 101, 110, 111] => lookup_1352_239(acc),
            [102, 105] => lookup_1352_240(acc),
            [100, 101, 108, 108, 111, 103, 108, 105, 97, 115, 116, 114, 97] => lookup_1352_241(acc),
            [98, 97, 108, 115, 97, 110] => lookup_1352_242(acc),
            [109, 97, 115, 115, 97, 45, 99, 97, 114, 114, 97, 114, 97] => lookup_1352_243(acc),
            [115, 97, 114, 100, 105, 110, 105, 97] => lookup_1352_244(acc),
            [112, 101, 115, 97, 114, 111, 45, 117, 114, 98, 105, 110, 111] => lookup_1352_245(acc),
            [103, 101, 110, 111, 97] => lookup_1352_246(acc),
            [98, 97, 114, 105] => lookup_1352_247(acc),
            [114, 105, 109, 105, 110, 105] => lookup_1352_248(acc),
            [120, 110, 45, 45, 118, 97, 108, 108, 101, 97, 111, 115, 116, 101, 45, 101, 55, 97] => {
                lookup_1352_249(acc)
            }
            [118, 97, 108, 108, 101, 97, 111, 115, 116, 97] => lookup_1352_250(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 97, 97, 100, 105, 103, 101] => {
                lookup_1352_251(acc)
            }
            [110, 97, 112, 108, 101, 115] => lookup_1352_252(acc),
            [110, 97] => lookup_1352_253(acc),
            [114, 111, 109, 101] => lookup_1352_254(acc),
            [116, 115] => lookup_1352_255(acc),
            [118, 101, 114, 111, 110, 97] => lookup_1352_256(acc),
            [118, 101, 110, 101, 116, 111] => lookup_1352_257(acc),
            [109, 97, 99, 101, 114, 97, 116, 97] => lookup_1352_258(acc),
            [108, 105, 103, 117, 114, 105, 97] => lookup_1352_259(acc),
            [97, 112] => lookup_1352_260(acc),
            [98, 111, 122, 101, 110, 45, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_1352_261(acc)
            }
            [108, 111, 109, 98, 97, 114, 100, 105, 97] => lookup_1352_262(acc),
            [99, 111, 109, 111] => lookup_1352_263(acc),
            [99, 114] => lookup_1352_264(acc),
            [102, 109] => lookup_1352_265(acc),
            [97, 108, 116, 111, 45, 97, 100, 105, 103, 101] => lookup_1352_266(acc),
            [98, 97, 108, 115, 97, 110, 45, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_1352_267(acc)
            }
            [105, 109, 112, 101, 114, 105, 97] => lookup_1352_268(acc),
            [102, 114, 111, 115, 105, 110, 111, 110, 101] => lookup_1352_269(acc),
            [108, 117] => lookup_1352_270(acc),
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 100, 45, 116, 105, 114, 111, 108, 45, 99, 51, 98] => {
                lookup_1352_271(acc)
            }
            [109, 97, 115, 115, 97, 99, 97, 114, 114, 97, 114, 97] => lookup_1352_272(acc),
            [99, 111] => lookup_1352_273(acc),
            [114, 110] => lookup_1352_274(acc),
            [116, 114, 97, 112, 97, 110, 105] => lookup_1352_275(acc),
            [97, 116] => lookup_1352_276(acc),
            [118, 115] => lookup_1352_277(acc),
            [109, 110] => lookup_1352_278(acc),
            [116, 114, 97, 110, 105, 45, 98, 97, 114, 108, 101, 116, 116, 97, 45, 97, 110, 100, 114, 105, 97] => {
                lookup_1352_279(acc)
            }
            [110, 101, 101, 110] => lookup_1352_280(info, labels, acc),
            [97, 108] => lookup_1352_281(acc),
            [120, 110, 45, 45, 118, 97, 108, 108, 101, 45, 100, 45, 97, 111, 115, 116, 101, 45, 101, 104, 98] => {
                lookup_1352_282(acc)
            }
            [112, 105, 97, 99, 101, 110, 122, 97] => lookup_1352_283(acc),
            [116, 97, 97] => lookup_1352_284(acc),
            [108, 97, 115, 112, 101, 122, 105, 97] => lookup_1352_285(acc),
            [114, 97, 118, 101, 110, 110, 97] => lookup_1352_286(acc),
            [116, 111, 114, 105, 110, 111] => lookup_1352_287(acc),
            [118, 118] => lookup_1352_288(acc),
            [98, 108] => lookup_1352_289(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 97, 97, 100, 105, 103, 101] => {
                lookup_1352_290(acc)
            }
            [108, 97, 45, 115, 112, 101, 122, 105, 97] => lookup_1352_291(acc),
            [112, 105] => lookup_1352_292(acc),
            [116, 114, 105, 101, 115, 116, 101] => lookup_1352_293(acc),
            [116, 114, 101, 110, 116, 105, 110, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_1352_294(acc)
            }
            [103, 114] => lookup_1352_295(acc),
            [118, 100, 97] => lookup_1352_296(acc),
            [112, 114, 97, 116, 111] => lookup_1352_297(acc),
            [114, 111] => lookup_1352_298(acc),
            [116, 114] => lookup_1352_299(acc),
            [109, 115] => lookup_1352_300(acc),
            [112, 101, 115, 99, 97, 114, 97] => lookup_1352_301(acc),
            [116, 97, 114, 97, 110, 116, 111] => lookup_1352_302(acc),
            [109, 97, 110, 116, 111, 118, 97] => lookup_1352_303(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 97, 108, 116, 111, 45, 97, 100, 105, 103, 101] => {
                lookup_1352_304(acc)
            }
            [116, 101, 109, 112, 105, 111, 111, 108, 98, 105, 97] => lookup_1352_305(acc),
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 117, 101, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_1352_306(acc)
            }
            [115, 115] => lookup_1352_307(acc),
            [109, 111, 110, 122, 97, 98, 114, 105, 97, 110, 122, 97] => lookup_1352_308(acc),
            [99, 97, 114, 114, 97, 114, 97, 109, 97, 115, 115, 97] => lookup_1352_309(acc),
            [112, 105, 101, 100, 109, 111, 110, 116] => lookup_1352_310(acc),
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 117, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_1352_311(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 115, 100, 116, 105, 114, 111, 108, 45, 110, 115, 98] => {
                lookup_1352_312(acc)
            }
            [115, 97, 114] => lookup_1352_313(acc),
            [118, 97, 111] => lookup_1352_314(acc),
            [118, 97, 108, 108, 101, 101, 97, 111, 115, 116, 101] => lookup_1352_315(acc),
            [97, 110, 100, 114, 105, 97, 98, 97, 114, 108, 101, 116, 116, 97, 116, 114, 97, 110, 105] => {
                lookup_1352_316(acc)
            }
            [116, 118] => lookup_1352_317(acc),
            [102, 108, 111, 114, 101, 110, 99, 101] => lookup_1352_318(acc),
            [116, 114, 97, 110, 105, 98, 97, 114, 108, 101, 116, 116, 97, 97, 110, 100, 114, 105, 97] => {
                lookup_1352_319(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_1352_320(acc)
            }
            [109, 111, 110, 122, 97] => lookup_1352_321(acc),
            [118, 97, 108, 108, 101, 100, 45, 97, 111, 115, 116, 97] => lookup_1352_322(acc),
            [102, 114, 105, 117, 108, 105, 45, 118, 103, 105, 117, 108, 105, 97] => {
                lookup_1352_323(acc)
            }
            [101, 100, 117] => lookup_1352_324(acc),
            [102, 114, 105, 117, 108, 105, 118, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_1352_325(acc)
            }
            [108, 105, 103] => lookup_1352_326(acc),
            [120, 110, 45, 45, 98, 97, 108, 115, 97, 110, 45, 115, 100, 116, 105, 114, 111, 108, 45, 110, 115, 98] => {
                lookup_1352_327(acc)
            }
            [112, 111, 116, 101, 110, 122, 97] => lookup_1352_328(acc),
            [99, 97, 116, 97, 110, 105, 97] => lookup_1352_329(acc),
            [115, 97] => lookup_1352_330(acc),
            [97, 113, 117, 105, 108, 97] => lookup_1352_331(acc),
            [111, 108, 98, 105, 97, 116, 101, 109, 112, 105, 111] => lookup_1352_332(acc),
            [102, 114, 105, 117, 108, 105, 45, 118, 101, 103, 105, 117, 108, 105, 97] => {
                lookup_1352_333(acc)
            }
            [116, 114, 101, 118, 105, 115, 111] => lookup_1352_334(acc),
            [117, 109, 98] => lookup_1352_335(acc),
            [102, 114, 105, 117, 108, 105, 118, 101, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_1352_336(acc)
            }
            [114, 111, 118, 105, 103, 111] => lookup_1352_337(acc),
            [116, 101, 109, 112, 105, 111, 45, 111, 108, 98, 105, 97] => lookup_1352_338(acc),
            [102, 101] => lookup_1352_339(acc),
            [108, 97, 113, 117, 105, 108, 97] => lookup_1352_340(acc),
            [109, 98] => lookup_1352_341(acc),
            [115, 97, 118, 111, 110, 97] => lookup_1352_342(acc),
            [118, 101, 114, 99, 101, 108, 108, 105] => lookup_1352_343(acc),
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 45, 115, 100, 116, 105, 114, 111, 108, 45, 55, 118, 98] => {
                lookup_1352_344(acc)
            }
            [102, 114, 105, 117, 108, 105, 45, 118, 101, 110, 101, 122, 105, 97, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_1352_345(acc)
            }
            [116, 111, 115, 99, 97, 110, 97] => lookup_1352_346(acc),
            [102, 101, 114, 114, 97, 114, 97] => lookup_1352_347(acc),
            [98, 117, 108, 115, 97, 110] => lookup_1352_348(acc),
            [97, 111, 115, 116, 97, 118, 97, 108, 108, 101, 121] => lookup_1352_349(acc),
            [98, 110] => lookup_1352_350(acc),
            [114, 99] => lookup_1352_351(acc),
            [108, 101] => lookup_1352_352(acc),
            [111, 108, 98, 105, 97, 45, 116, 101, 109, 112, 105, 111] => lookup_1352_353(acc),
            [103, 101] => lookup_1352_354(acc),
            [112, 97, 114, 109, 97] => lookup_1352_355(acc),
            [102, 111, 114, 108, 195, 172, 45, 99, 101, 115, 101, 110, 97] => lookup_1352_356(acc),
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 115, 100, 45, 116, 105, 114, 111, 108, 45, 54, 118, 98] => {
                lookup_1352_357(acc)
            }
            [109, 101, 100, 105, 111, 45, 99, 97, 109, 112, 105, 100, 97, 110, 111] => {
                lookup_1352_358(acc)
            }
            [115, 97, 114, 100, 101, 103, 110, 97] => lookup_1352_359(acc),
            [118, 114] => lookup_1352_360(acc),
            [108, 111, 109] => lookup_1352_361(acc),
            [120, 110, 45, 45, 99, 101, 115, 101, 110, 97, 102, 111, 114, 108, 45, 105, 56, 97] => {
                lookup_1352_362(acc)
            }
            [115, 121, 110, 99, 108, 111, 117, 100] => lookup_1352_363(acc),
            [98, 101, 114, 103, 97, 109, 111] => lookup_1352_364(acc),
            [99, 97, 108, 116, 97, 110, 105, 115, 115, 101, 116, 116, 97] => lookup_1352_365(acc),
            [111, 116] => lookup_1352_366(acc),
            [103, 111, 118] => lookup_1352_367(acc),
            [112, 105, 101, 109, 111, 110, 116, 101] => lookup_1352_368(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_1352_369(acc)
            }
            [118, 97, 108, 108, 195, 169, 101, 100, 97, 111, 115, 116, 101] => lookup_1352_370(acc),
            [105, 109] => lookup_1352_371(acc),
            [112, 100] => lookup_1352_372(acc),
            [118, 97, 114, 101, 115, 101] => lookup_1352_373(acc),
            [102, 118, 103] => lookup_1352_374(acc),
            [118, 98] => lookup_1352_375(acc),
            [97, 111, 115, 116, 97] => lookup_1352_376(acc),
            [115, 105, 99] => lookup_1352_377(acc),
            [98, 97, 114, 108, 101, 116, 116, 97, 45, 116, 114, 97, 110, 105, 45, 97, 110, 100, 114, 105, 97] => {
                lookup_1352_378(acc)
            }
            [114, 97, 103, 117, 115, 97] => lookup_1352_379(acc),
            [115, 105, 114, 97, 99, 117, 115, 97] => lookup_1352_380(acc),
            [107, 114] => lookup_1352_381(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 117, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_1352_382(acc)
            }
            [103, 114, 111, 115, 115, 101, 116, 111] => lookup_1352_383(acc),
            [109, 116] => lookup_1352_384(acc),
            [99, 97, 109, 112, 111, 98, 97, 115, 115, 111] => lookup_1352_385(acc),
            [101, 109, 105, 108, 105, 97, 114, 111, 109, 97, 103, 110, 97] => lookup_1352_386(acc),
            [108, 117, 99, 97, 110, 105, 97] => lookup_1352_387(acc),
            [99, 114, 111, 116, 111, 110, 101] => lookup_1352_388(acc),
            [109, 105, 108, 97, 110, 111] => lookup_1352_389(acc),
            [102, 114] => lookup_1352_390(acc),
            [112, 99] => lookup_1352_391(acc),
            [108, 97, 122, 105, 111] => lookup_1352_392(acc),
            [99, 97, 109, 112, 105, 100, 97, 110, 111, 109, 101, 100, 105, 111] => {
                lookup_1352_393(acc)
            }
            [102, 111, 114, 108, 195, 172, 99, 101, 115, 101, 110, 97] => lookup_1352_394(acc),
            [115, 195, 188, 100, 116, 105, 114, 111, 108] => lookup_1352_395(acc),
            [100, 101, 108, 108, 45, 111, 103, 108, 105, 97, 115, 116, 114, 97] => {
                lookup_1352_396(acc)
            }
            [115, 118] => lookup_1352_397(acc),
            [98, 103] => lookup_1352_398(acc),
            [115, 114] => lookup_1352_399(acc),
            [97, 108, 116, 111, 97, 100, 105, 103, 101] => lookup_1352_400(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_1352_401(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 117, 101, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_1352_402(acc)
            }
            [101, 110, 110, 97] => lookup_1352_403(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 195, 188, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_1352_404(acc)
            }
            [98, 97, 108, 115, 97, 110, 45, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_1352_405(acc)
            }
            [97, 110, 100, 114, 105, 97, 45, 98, 97, 114, 108, 101, 116, 116, 97, 45, 116, 114, 97, 110, 105] => {
                lookup_1352_406(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 45, 116, 105, 114, 111, 108] => {
                lookup_1352_407(acc)
            }
            [102, 103] => lookup_1352_408(acc),
            [109, 111, 110, 122, 97, 45, 101, 45, 100, 101, 108, 108, 97, 45, 98, 114, 105, 97, 110, 122, 97] => {
                lookup_1352_409(acc)
            }
            [97, 110, 99, 111, 110, 97] => lookup_1352_410(acc),
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 111, 115, 100, 45, 116, 105, 114, 111, 108, 45, 114, 122, 98] => {
                lookup_1352_411(acc)
            }
            [97, 113] => lookup_1352_412(acc),
            [108, 97, 116, 105, 110, 97] => lookup_1352_413(acc),
            [97, 111, 115, 116, 101] => lookup_1352_414(acc),
            [105, 103, 108, 101, 115, 105, 97, 115, 45, 99, 97, 114, 98, 111, 110, 105, 97] => {
                lookup_1352_415(acc)
            }
            [98, 105] => lookup_1352_416(acc),
            [98, 111, 108, 111, 103, 110, 97] => lookup_1352_417(acc),
            [99, 98] => lookup_1352_418(acc),
            [103, 111] => lookup_1352_419(acc),
            [109, 105, 108, 97, 110] => lookup_1352_420(acc),
            [112, 97, 100, 117, 97] => lookup_1352_421(acc),
            [98, 117, 108, 115, 97, 110, 45, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_1352_422(acc)
            }
            [112, 97, 118, 105, 97] => lookup_1352_423(acc),
            [112, 122] => lookup_1352_424(acc),
            [115, 112] => lookup_1352_425(acc),
            [116, 114, 101, 110, 116, 111] => lookup_1352_426(acc),
            [111, 114, 105, 115, 116, 97, 110, 111] => lookup_1352_427(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 117, 101, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_1352_428(acc)
            }
            [108, 97, 122] => lookup_1352_429(acc),
            [102, 99] => lookup_1352_430(acc),
            [118, 97, 108, 108, 101, 101, 100, 97, 111, 115, 116, 101] => lookup_1352_431(acc),
            [102, 114, 105, 117, 108, 105, 45, 118, 101, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_1352_432(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1353_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1353_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1353_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1353_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1353_4_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1353_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1353_4_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1353_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1353_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1353_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1353_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1353_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1353_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1353_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1353_12_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1353_12<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [97] => lookup_1353_12_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1353_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1353<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116, 108, 105, 102, 121] => lookup_1353_0(acc),
            [108, 111, 103, 105, 110, 108, 105, 110, 101] => lookup_1353_1(acc),
            [104, 97, 115, 117, 114, 97] => lookup_1353_2(acc),
            [116, 101, 108, 101, 98, 105, 116] => lookup_1353_3(acc),
            [110, 111, 114, 116, 104, 102, 108, 97, 110, 107] => lookup_1353_4(info, labels, acc),
            [112, 108, 97, 116, 102, 111, 114, 109, 48] => lookup_1353_5(acc),
            [118, 101, 114, 99, 101, 108] => lookup_1353_6(acc),
            [102, 105, 114, 101, 119, 101, 98] => lookup_1353_7(acc),
            [119, 110, 101, 120, 116] => lookup_1353_8(acc),
            [101, 100, 103, 101, 99, 111, 109, 112, 117, 116, 101] => lookup_1353_9(acc),
            [102, 114, 97, 109, 101, 114] => lookup_1353_10(acc),
            [119, 101, 98] => lookup_1353_11(acc),
            [114, 117, 110] => lookup_1353_12(labels, acc),
            [111, 110, 100, 105, 103, 105, 116, 97, 108, 111, 99, 101, 97, 110] => {
                lookup_1353_13(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1354() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1355() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1356() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1357() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1358() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1359() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1360_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1360_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1360_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1360_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1360_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1360_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1360_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1360<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1360_0(acc),
            [110, 101, 116] => lookup_1360_1(acc),
            [103, 111, 118] => lookup_1360_2(acc),
            [99, 111] => lookup_1360_3(acc),
            [111, 114, 103] => lookup_1360_4(acc),
            [97, 99] => lookup_1360_5(acc),
            [111, 114] => lookup_1360_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1361() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1362() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1363() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1365() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1366() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1367() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1368_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1368_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1368<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_1368_0(acc),
            [99, 111] => lookup_1368_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1369() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1370() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1371() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1372() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1373() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1374() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1375_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1375_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1375_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1375<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 108, 101, 115, 107] => lookup_1375_0(acc),
            [112, 100, 110, 115] => lookup_1375_1(acc),
            [112, 114, 118, 99, 121] => lookup_1375_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1376() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1377() -> Info {
    Info {
        len: 33usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1378_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1378_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1378_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1378_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1378_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1378_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1378_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1378_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1378_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1378_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1378_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1378_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1378_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1378_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1378_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1378_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1378_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1378<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 105, 114, 109] => lookup_1378_0(acc),
            [97, 114, 116, 115] => lookup_1378_1(acc),
            [99, 111, 109] => lookup_1378_2(acc),
            [105, 110, 102, 111] => lookup_1378_3(acc),
            [110, 101, 116] => lookup_1378_4(acc),
            [101, 49, 50] => lookup_1378_5(acc),
            [111, 114, 103] => lookup_1378_6(acc),
            [103, 111, 98] => lookup_1378_7(acc),
            [115, 116, 111, 114, 101] => lookup_1378_8(acc),
            [116, 101, 99] => lookup_1378_9(acc),
            [105, 110, 116] => lookup_1378_10(acc),
            [99, 111] => lookup_1378_11(acc),
            [101, 100, 117] => lookup_1378_12(acc),
            [103, 111, 118] => lookup_1378_13(acc),
            [119, 101, 98] => lookup_1378_14(acc),
            [114, 101, 99] => lookup_1378_15(acc),
            [109, 105, 108] => lookup_1378_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1379() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1380() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1382() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1383() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1384() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1385() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1386() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1387() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1388_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1388_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1388_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1388_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1388_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1388_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1388_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1388_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1388_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1388_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1388_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1388<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_1388_0(acc),
            [115, 108, 100] => lookup_1388_1(acc),
            [97, 99] => lookup_1388_2(acc),
            [110, 111, 109] => lookup_1388_3(acc),
            [99, 111, 109] => lookup_1388_4(acc),
            [105, 110, 103] => lookup_1388_5(acc),
            [110, 101, 116] => lookup_1388_6(acc),
            [97, 98, 111] => lookup_1388_7(acc),
            [111, 114, 103] => lookup_1388_8(acc),
            [103, 111, 98] => lookup_1388_9(acc),
            [109, 101, 100] => lookup_1388_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1389() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1390() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1391() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1392() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1393() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1394() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1395() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1396_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1396<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 107, 116, 121, 117, 98, 105, 110, 115, 107] => lookup_1396_0(acc),
            [103, 114, 111, 122, 110, 121] => lookup_1396_1(acc),
            [112, 111, 107, 114, 111, 118, 115, 107] => lookup_1396_2(acc),
            [107, 104, 97, 107, 97, 115, 115, 105, 97] => lookup_1396_3(acc),
            [108, 101, 110, 117, 103] => lookup_1396_4(acc),
            [110, 111, 118] => lookup_1396_5(acc),
            [98, 97, 108, 97, 115, 104, 111, 118] => lookup_1396_6(acc),
            [109, 115, 107] => lookup_1396_7(acc),
            [99, 104, 105, 109, 107, 101, 110, 116] => lookup_1396_8(acc),
            [103, 101, 111, 114, 103, 105, 97] => lookup_1396_9(acc),
            [109, 97, 110, 103, 121, 115, 104, 108, 97, 107] => lookup_1396_10(acc),
            [97, 98, 107, 104, 97, 122, 105, 97] => lookup_1396_11(acc),
            [97, 114, 107, 104, 97, 110, 103, 101, 108, 115, 107] => lookup_1396_12(acc),
            [97, 115, 104, 103, 97, 98, 97, 100] => lookup_1396_13(acc),
            [110, 97, 108, 99, 104, 105, 107] => lookup_1396_14(acc),
            [109, 117, 114, 109, 97, 110, 115, 107] => lookup_1396_15(acc),
            [105, 118, 97, 110, 111, 118, 111] => lookup_1396_16(acc),
            [110, 111, 114, 116, 104, 45, 107, 97, 122, 97, 107, 104, 115, 116, 97, 110] => {
                lookup_1396_17(acc)
            }
            [107, 97, 108, 109, 121, 107, 105, 97] => lookup_1396_18(acc),
            [101, 97, 115, 116, 45, 107, 97, 122, 97, 107, 104, 115, 116, 97, 110] => {
                lookup_1396_19(acc)
            }
            [107, 97, 114, 101, 108, 105, 97] => lookup_1396_20(acc),
            [111, 98, 110, 105, 110, 115, 107] => lookup_1396_21(acc),
            [100, 97, 103, 101, 115, 116, 97, 110] => lookup_1396_22(acc),
            [110, 97, 118, 111, 105] => lookup_1396_23(acc),
            [116, 97, 115, 104, 107, 101, 110, 116] => lookup_1396_24(acc),
            [115, 111, 99, 104, 105] => lookup_1396_25(acc),
            [97, 114, 109, 101, 110, 105, 97] => lookup_1396_26(acc),
            [116, 115, 101, 108, 105, 110, 111, 103, 114, 97, 100] => lookup_1396_27(acc),
            [116, 117, 108, 97] => lookup_1396_28(acc),
            [107, 117, 114, 103, 97, 110] => lookup_1396_29(acc),
            [115, 112, 98] => lookup_1396_30(acc),
            [118, 108, 97, 100, 105, 107, 97, 118, 107, 97, 122] => lookup_1396_31(acc),
            [118, 108, 97, 100, 105, 109, 105, 114] => lookup_1396_32(acc),
            [116, 101, 114, 109, 101, 122] => lookup_1396_33(acc),
            [118, 111, 108, 111, 103, 100, 97] => lookup_1396_34(acc),
            [97, 122, 101, 114, 98, 97, 105, 106, 97, 110] => lookup_1396_35(acc),
            [107, 97, 114, 97, 103, 97, 110, 100, 97] => lookup_1396_36(acc),
            [98, 117, 107, 104, 97, 114, 97] => lookup_1396_37(acc),
            [107, 97, 108, 117, 103, 97] => lookup_1396_38(acc),
            [107, 117, 115, 116, 97, 110, 97, 105] => lookup_1396_39(acc),
            [109, 111, 114, 100, 111, 118, 105, 97] => lookup_1396_40(acc),
            [116, 117, 118, 97] => lookup_1396_41(acc),
            [107, 114, 97, 115, 110, 111, 100, 97, 114] => lookup_1396_42(acc),
            [107, 97, 114, 97, 99, 111, 108] => lookup_1396_43(acc),
            [97, 100, 121, 103, 101, 121, 97] => lookup_1396_44(acc),
            [112, 101, 110, 122, 97] => lookup_1396_45(acc),
            [101, 120, 110, 101, 116] => lookup_1396_46(acc),
            [98, 114, 121, 97, 110, 115, 107] => lookup_1396_47(acc),
            [116, 111, 103, 108, 105, 97, 116, 116, 105] => lookup_1396_48(acc),
            [98, 97, 115, 104, 107, 105, 114, 105, 97] => lookup_1396_49(acc),
            [116, 114, 111, 105, 116, 115, 107] => lookup_1396_50(acc),
            [106, 97, 109, 98, 121, 108] => lookup_1396_51(acc),
            [110, 121, 109] => lookup_1396_52(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1397() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1398() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1399() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1400() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1401() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1402() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1403_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1403_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1403_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1403_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1403_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1403_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1403_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1403_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1403_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1403<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 114, 111] => lookup_1403_0(acc),
            [99, 111] => lookup_1403_1(acc),
            [101, 100, 117] => lookup_1403_2(acc),
            [103, 111, 118] => lookup_1403_3(acc),
            [99, 111, 109] => lookup_1403_4(acc),
            [110, 101, 116] => lookup_1403_5(acc),
            [111, 114, 103] => lookup_1403_6(acc),
            [109, 101, 100] => lookup_1403_7(acc),
            [109, 117, 115, 101, 117, 109] => lookup_1403_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1404() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1405() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1406() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1407_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_30_0_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1407_30_0_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1407_30_0_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            [99, 110, 45, 110, 111, 114, 116, 104, 119, 101, 115, 116, 45, 49] => {
                lookup_1407_30_0_0_0(acc)
            }
            [99, 110, 45, 110, 111, 114, 116, 104, 45, 49] => lookup_1407_30_0_0_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1407_30_0_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1407_30_0_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1407_30_0_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1407_30_0_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1407_30_0_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1407_30_0_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1407_30_0_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1407_30_0_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1407_30_0_3_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1407_30_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [101, 98] => lookup_1407_30_0_0(info, labels, acc),
            [99, 111, 109, 112, 117, 116, 101] => lookup_1407_30_0_1(info, labels, acc),
            [101, 108, 98] => lookup_1407_30_0_2(info, labels, acc),
            [99, 110, 45, 110, 111, 114, 116, 104, 45, 49] => lookup_1407_30_0_3(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1407_30<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 109, 97, 122, 111, 110, 97, 119, 115] => lookup_1407_30_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1407_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 104] => lookup_1407_0(acc),
            [108, 110] => lookup_1407_1(acc),
            [120, 110, 45, 45, 53, 53, 113, 120, 53, 100] => lookup_1407_2(acc),
            [231, 182, 178, 231, 181, 161] => lookup_1407_3(acc),
            [110, 109] => lookup_1407_4(acc),
            [110, 120] => lookup_1407_5(acc),
            [113, 104] => lookup_1407_6(acc),
            [105, 110, 115, 116, 97, 110, 116, 99, 108, 111, 117, 100] => lookup_1407_7(acc),
            [104, 105] => lookup_1407_8(acc),
            [104, 107] => lookup_1407_9(acc),
            [111, 114, 103] => lookup_1407_10(acc),
            [115, 100] => lookup_1407_11(acc),
            [116, 106] => lookup_1407_12(acc),
            [106, 108] => lookup_1407_13(acc),
            [102, 106] => lookup_1407_14(acc),
            [97, 99] => lookup_1407_15(acc),
            [106, 115] => lookup_1407_16(acc),
            [106, 120] => lookup_1407_17(acc),
            [115, 99] => lookup_1407_18(acc),
            [120, 122] => lookup_1407_19(acc),
            [103, 115] => lookup_1407_20(acc),
            [104, 110] => lookup_1407_21(acc),
            [109, 111] => lookup_1407_22(acc),
            [115, 120] => lookup_1407_23(acc),
            [115, 110] => lookup_1407_24(acc),
            [103, 122] => lookup_1407_25(acc),
            [229, 133, 172, 229, 143, 184] => lookup_1407_26(acc),
            [121, 110] => lookup_1407_27(acc),
            [116, 119] => lookup_1407_28(acc),
            [98, 106] => lookup_1407_29(acc),
            [99, 111, 109] => lookup_1407_30(labels, acc),
            [103, 100] => lookup_1407_31(acc),
            [110, 101, 116] => lookup_1407_32(acc),
            [104, 98] => lookup_1407_33(acc),
            [104, 108] => lookup_1407_34(acc),
            [104, 97] => lookup_1407_35(acc),
            [120, 110, 45, 45, 111, 100, 48, 97, 108, 103] => lookup_1407_36(acc),
            [101, 100, 117] => lookup_1407_37(acc),
            [103, 111, 118] => lookup_1407_38(acc),
            [115, 104] => lookup_1407_39(acc),
            [231, 189, 145, 231, 187, 156] => lookup_1407_40(acc),
            [103, 120] => lookup_1407_41(acc),
            [104, 101] => lookup_1407_42(acc),
            [120, 106] => lookup_1407_43(acc),
            [122, 106] => lookup_1407_44(acc),
            [99, 113] => lookup_1407_45(acc),
            [120, 110, 45, 45, 105, 111, 48, 97, 55, 105] => lookup_1407_46(acc),
            [109, 105, 108] => lookup_1407_47(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1408() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1409() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1410() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1411() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1412() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1413() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1414() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1415() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1416() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1417() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1418() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1419() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1420() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1421() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1422() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1423() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1424() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1425_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1425_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1425_1_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1425_1_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1425_1_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1425_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [115, 118, 99] => lookup_1425_1_1(info, labels, acc),
            wild => lookup_1425_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1425_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1425_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1425_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1425_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1425_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1425_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1425_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1425_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1425_10_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1425_10_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            [97, 108, 112, 49] => lookup_1425_10_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1425_10_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1425_10<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [97, 101] => lookup_1425_10_0(info, labels, acc),
            [97, 112, 112, 101, 110, 103, 105, 110, 101] => lookup_1425_10_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1425<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 113, 117, 97, 114, 101, 55] => lookup_1425_0(acc),
            [102, 105, 114, 101, 110, 101, 116] => lookup_1425_1(info, labels, acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1425_2(acc),
            [103, 111, 116, 100, 110, 115] => lookup_1425_3(acc),
            [49, 50, 104, 112] => lookup_1425_4(acc),
            [108, 105, 110, 107, 121, 97, 114, 100, 45, 99, 108, 111, 117, 100] => {
                lookup_1425_5(acc)
            }
            [52, 108, 105, 109, 97] => lookup_1425_6(acc),
            [50, 105, 120] => lookup_1425_7(acc),
            [100, 110, 115, 107, 105, 110, 103] => lookup_1425_8(acc),
            [108, 105, 109, 97, 45, 99, 105, 116, 121] => lookup_1425_9(acc),
            [102, 108, 111, 119] => lookup_1425_10(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1426() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1427() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1428() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1429() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1430() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1431() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1432() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1434_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1434_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1434<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1434_0(acc),
            [103, 111, 118] => lookup_1434_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1435() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1436() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1437() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1438_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1438_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1438_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1438_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1438_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1438_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1438<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1438_0(acc),
            [101, 100, 117] => lookup_1438_1(acc),
            [103, 111, 118] => lookup_1438_2(acc),
            [110, 101, 116] => lookup_1438_3(acc),
            [111, 114, 103] => lookup_1438_4(acc),
            [97, 99] => lookup_1438_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1439() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1440_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1440_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1440_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1440_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1440_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1440_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1440_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1440_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1440_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1440_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1440<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 101] => lookup_1440_0(acc),
            [116, 101, 109, 112, 117, 114, 108] => lookup_1440_1(acc),
            [102, 97, 115, 116, 118, 112, 115] => lookup_1440_2(acc),
            [109, 105, 114, 99, 108, 111, 117, 100] => lookup_1440_3(acc),
            [104, 97, 108, 102] => lookup_1440_4(acc),
            [102, 114, 101, 101, 115, 105, 116, 101] => lookup_1440_5(acc),
            [99, 108, 111, 117, 100, 97, 99, 99, 101, 115, 115] => lookup_1440_6(acc),
            [112, 99, 108, 111, 117, 100] => lookup_1440_7(acc),
            [119, 112, 109, 117, 100, 101, 118] => lookup_1440_8(acc),
            [109, 121, 102, 97, 115, 116] => lookup_1440_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1441() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1442() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1443_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1443_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1443_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1443<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 121, 109] => lookup_1443_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1443_1(acc),
            [103, 111, 118] => lookup_1443_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1444() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1445() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1447() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 116, 101] => lookup_1448_0(acc),
            [101, 99, 111, 110, 111, 109, 105, 97] => lookup_1448_1(acc),
            [109, 117, 115, 105, 99, 97] => lookup_1448_2(acc),
            [105, 110, 102, 111] => lookup_1448_3(acc),
            [112, 97, 116, 114, 105, 97] => lookup_1448_4(acc),
            [112, 108, 117, 114, 105, 110, 97, 99, 105, 111, 110, 97, 108] => lookup_1448_5(acc),
            [111, 114, 103] => lookup_1448_6(acc),
            [103, 111, 98] => lookup_1448_7(acc),
            [110, 97, 116, 117, 114, 97, 108] => lookup_1448_8(acc),
            [105, 110, 116] => lookup_1448_9(acc),
            [112, 114, 111, 102, 101, 115, 105, 111, 110, 97, 108] => lookup_1448_10(acc),
            [105, 110, 100, 117, 115, 116, 114, 105, 97] => lookup_1448_11(acc),
            [100, 101, 109, 111, 99, 114, 97, 99, 105, 97] => lookup_1448_12(acc),
            [98, 111, 108, 105, 118, 105, 97] => lookup_1448_13(acc),
            [116, 101, 99, 110, 111, 108, 111, 103, 105, 97] => lookup_1448_14(acc),
            [119, 105, 107, 105] => lookup_1448_15(acc),
            [99, 111, 111, 112, 101, 114, 97, 116, 105, 118, 97] => lookup_1448_16(acc),
            [112, 117, 101, 98, 108, 111] => lookup_1448_17(acc),
            [116, 118] => lookup_1448_18(acc),
            [99, 111, 109] => lookup_1448_19(acc),
            [112, 111, 108, 105, 116, 105, 99, 97] => lookup_1448_20(acc),
            [110, 101, 116] => lookup_1448_21(acc),
            [98, 108, 111, 103] => lookup_1448_22(acc),
            [99, 105, 101, 110, 99, 105, 97] => lookup_1448_23(acc),
            [114, 101, 118, 105, 115, 116, 97] => lookup_1448_24(acc),
            [105, 110, 100, 105, 103, 101, 110, 97] => lookup_1448_25(acc),
            [115, 97, 108, 117, 100] => lookup_1448_26(acc),
            [97, 99, 97, 100, 101, 109, 105, 97] => lookup_1448_27(acc),
            [97, 103, 114, 111] => lookup_1448_28(acc),
            [101, 100, 117] => lookup_1448_29(acc),
            [101, 99, 111, 108, 111, 103, 105, 97] => lookup_1448_30(acc),
            [110, 111, 109, 98, 114, 101] => lookup_1448_31(acc),
            [100, 101, 112, 111, 114, 116, 101] => lookup_1448_32(acc),
            [110, 111, 116, 105, 99, 105, 97, 115] => lookup_1448_33(acc),
            [116, 107, 115, 97, 116] => lookup_1448_34(acc),
            [101, 109, 112, 114, 101, 115, 97] => lookup_1448_35(acc),
            [109, 111, 118, 105, 109, 105, 101, 110, 116, 111] => lookup_1448_36(acc),
            [116, 114, 97, 110, 115, 112, 111, 114, 116, 101] => lookup_1448_37(acc),
            [119, 101, 98] => lookup_1448_38(acc),
            [109, 101, 100, 105, 99, 105, 110, 97] => lookup_1448_39(acc),
            [109, 105, 108] => lookup_1448_40(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1449_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1449_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1449_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1449_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1449_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1449_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1449_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1449<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 108, 111] => lookup_1449_0(acc),
            [115, 101, 99] => lookup_1449_1(acc),
            [101, 100, 117] => lookup_1449_2(acc),
            [103, 111, 118] => lookup_1449_3(acc),
            [99, 111, 109] => lookup_1449_4(acc),
            [111, 114, 103] => lookup_1449_5(acc),
            [110, 101, 116] => lookup_1449_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1450() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1451_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1451_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1451_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1451_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1451_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1451_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1451_5<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1451_5_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1451_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1451_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1451_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1451_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1451<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_1451_0(acc),
            [103, 111, 118] => lookup_1451_1(acc),
            [97, 105, 112] => lookup_1451_2(acc),
            [114, 105, 105, 107] => lookup_1451_3(acc),
            [102, 105, 101] => lookup_1451_4(acc),
            [99, 111, 109] => lookup_1451_5(labels, acc),
            [112, 114, 105] => lookup_1451_6(acc),
            [108, 105, 98] => lookup_1451_7(acc),
            [111, 114, 103] => lookup_1451_8(acc),
            [109, 101, 100] => lookup_1451_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1452_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1452_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1452_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1452_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1452_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1452_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1452_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1452_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1452_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1452<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 97, 109, 101] => lookup_1452_0(acc),
            [101, 100, 117] => lookup_1452_1(acc),
            [103, 111, 118] => lookup_1452_2(acc),
            [105, 110, 102] => lookup_1452_3(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1452_4(acc),
            [110, 111, 109] => lookup_1452_5(acc),
            [99, 111, 109] => lookup_1452_6(acc),
            [110, 101, 116] => lookup_1452_7(acc),
            [111, 114, 103] => lookup_1452_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1453() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1454() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1455() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1456() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1457() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1458() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1459_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1459_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1459_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1459_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1459_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1459_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1459<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1459_0(acc),
            [101, 100, 117] => lookup_1459_1(acc),
            [103, 111, 118] => lookup_1459_2(acc),
            [110, 101, 116] => lookup_1459_3(acc),
            [111, 114, 103] => lookup_1459_4(acc),
            [109, 105, 108] => lookup_1459_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1460() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1461_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1461<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [121, 98, 111] => lookup_1461_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1462() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1463() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1464() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1465() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1466() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1467_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1467_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1467_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1467_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1467<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1467_0(acc),
            [99, 111] => lookup_1467_1(acc),
            [103, 111, 118] => lookup_1467_2(acc),
            [110, 101, 116] => lookup_1467_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1468_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1468_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1468_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1468_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1468_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1468_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1468_6_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1468_6<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1468_6_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1468_7_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1468_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1468_7_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1468_8_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1468_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1468_8_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1468_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1468_10_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1468_10<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1468_10_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1468_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1468_12_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1468_12<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1468_12_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1468_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1468_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1468_15_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1468_15<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1468_15_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1468<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 97, 103, 101, 115] => lookup_1468_0(acc),
            [102, 108, 121] => lookup_1468_1(acc),
            [100, 101, 110, 111] => lookup_1468_2(acc),
            [108, 111, 103, 105, 110, 108, 105, 110, 101] => lookup_1468_3(acc),
            [112, 108, 97, 116, 116, 101, 114, 45, 97, 112, 112] => lookup_1468_4(acc),
            [119, 111, 114, 107, 101, 114, 115] => lookup_1468_5(acc),
            [108, 99, 108, 115, 116, 97, 103, 101] => lookup_1468_6(info, labels, acc),
            [108, 99, 108] => lookup_1468_7(info, labels, acc),
            [115, 116, 103, 115, 116, 97, 103, 101] => lookup_1468_8(info, labels, acc),
            [118, 101, 114, 99, 101, 108] => lookup_1468_9(acc),
            [119, 101, 98, 104, 97, 114, 101] => lookup_1468_10(info, labels, acc),
            [105, 115, 101, 114, 118] => lookup_1468_11(acc),
            [115, 116, 103] => lookup_1468_12(info, labels, acc),
            [99, 117, 114, 118] => lookup_1468_13(acc),
            [100, 101, 110, 111, 45, 115, 116, 97, 103, 105, 110, 103] => lookup_1468_14(acc),
            [103, 97, 116, 101, 119, 97, 121] => lookup_1468_15(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1469_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1469<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 101] => lookup_1469_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1470_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1470_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [118, 105, 112] => lookup_1470_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1470_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1470_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [105, 116, 49, 45, 101, 117, 114] => lookup_1470_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1470_2_0_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1470_2_0_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [105, 116, 49] => lookup_1470_2_0_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1470_2_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [101, 117, 114] => lookup_1470_2_0_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1470_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1470_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [97, 114, 117, 98, 97] => lookup_1470_2_0(info, labels, acc),
            [105, 116, 49] => lookup_1470_2_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1470_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1470_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1470_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1470_4_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1470_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1470_4_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1470_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1470_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1470_6_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1470_6<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 110] => lookup_1470_6_0(acc),
            [117, 107] => lookup_1470_6_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1470_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1470_7<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [117, 107] => lookup_1470_7_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1470_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1470_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1470_9_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1470_9_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1470_9<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [99, 97] => lookup_1470_9_0(acc),
            [117, 107] => lookup_1470_9_1(acc),
            [117, 115] => lookup_1470_9_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1470_10_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1470_10<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [101, 115, 45, 49] => lookup_1470_10_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1470_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1470_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1470_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1470_14_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1470_14<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1470_14_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1470_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1470_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1470_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1470_18_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1470_18<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1470_18_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1470_19_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1470_19<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1470_19_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1470_20_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1470_20_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1470_20<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [100, 101] => lookup_1470_20_0(acc),
            [99, 104] => lookup_1470_20_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1470_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1470<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_1470_0(info, labels, acc),
            [106, 101, 110, 118, 45, 97, 114, 117, 98, 97, 98, 105, 122] => {
                lookup_1470_1(info, labels, acc)
            }
            [106, 101, 110, 118, 45, 97, 114, 117, 98, 97] => lookup_1470_2(info, labels, acc),
            [111, 110, 45, 114, 97, 110, 99, 104, 101, 114] => lookup_1470_3(info, labels, acc),
            [115, 101, 110, 115, 105, 111, 115, 105, 116, 101] => lookup_1470_4(info, labels, acc),
            [107, 117, 108, 101, 117, 118, 101, 110] => lookup_1470_5(acc),
            [111, 120, 97] => lookup_1470_6(labels, acc),
            [112, 114, 105, 109, 101, 116, 101, 108] => lookup_1470_7(labels, acc),
            [108, 105, 110, 107, 121, 97, 114, 100] => lookup_1470_8(acc),
            [114, 101, 99, 108, 97, 105, 109] => lookup_1470_9(info, labels, acc),
            [97, 120, 97, 114, 110, 101, 116] => lookup_1470_10(info, labels, acc),
            [106, 101, 108, 101] => lookup_1470_11(acc),
            [118, 97, 112, 111, 114] => lookup_1470_12(acc),
            [116, 114, 97, 102, 102, 105, 99, 112, 108, 101, 120] => lookup_1470_13(acc),
            [109, 97, 103, 101, 110, 116, 111, 115, 105, 116, 101] => {
                lookup_1470_14(info, labels, acc)
            }
            [112, 101, 114, 115, 112, 101, 99, 116, 97] => lookup_1470_15(acc),
            [117, 114, 111, 119, 110] => lookup_1470_16(acc),
            [118, 111, 111, 114, 108, 111, 112, 101, 114] => lookup_1470_17(acc),
            [98, 97, 110, 122, 97, 105] => lookup_1470_18(info, labels, acc),
            [115, 116, 97, 116, 105, 99, 115] => lookup_1470_19(info, labels, acc),
            [116, 114, 101, 110, 100, 104, 111, 115, 116, 105, 110, 103] => {
                lookup_1470_20(info, labels, acc)
            }
            [100, 105, 97, 100, 101, 109] => lookup_1470_21(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1471() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1472() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1473() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1474() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1475() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1476() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1477() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1478() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1479() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1480() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1481() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1482() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1483() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1484() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1485() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1486() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1487() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1488() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1490() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1491() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1492() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1493() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1494_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1494_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1494_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1494_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1494_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1494<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_1494_0(acc),
            [103, 111, 118] => lookup_1494_1(acc),
            [110, 121, 99] => lookup_1494_2(acc),
            [111, 114, 103] => lookup_1494_3(acc),
            [110, 121, 109] => lookup_1494_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1495() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1496() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1497() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1498() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1499() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1500_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1500<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [121, 98, 111] => lookup_1500_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1501_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1501<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 114, 100, 112, 111, 108] => lookup_1501_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1502_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1502<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 51, 51, 55] => lookup_1502_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1503() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1504() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1505_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1505_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1505_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1505_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1505_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1505_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1505<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 11usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 109, 120, 116, 113, 49, 109] => lookup_1505_0(acc),
            [120, 110, 45, 45, 53, 53, 113, 120, 53, 100] => lookup_1505_1(acc),
            [120, 110, 45, 45, 103, 109, 113, 119, 53, 97] => lookup_1505_2(acc),
            [120, 110, 45, 45, 119, 99, 118, 115, 50, 50, 100] => lookup_1505_3(acc),
            [120, 110, 45, 45, 117, 99, 48, 97, 116, 118] => lookup_1505_4(acc),
            [120, 110, 45, 45, 111, 100, 48, 97, 108, 103] => lookup_1505_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1506() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1507() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1508() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1509() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1510() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1511() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1512() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1513_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1513_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1513_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1513_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1513<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_1513_0(acc),
            [101, 100, 117] => lookup_1513_1(acc),
            [103, 111, 118] => lookup_1513_2(acc),
            [111, 114, 103] => lookup_1513_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1514() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1515() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1516_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1516_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1516_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1516_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1516_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1516_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1516_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1516_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1516_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1516_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1516_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1516_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1516_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1516_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1516_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1516<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 105, 114, 109] => lookup_1516_0(acc),
            [97, 114, 116, 115] => lookup_1516_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1516_2(acc),
            [110, 121, 109] => lookup_1516_3(acc),
            [110, 111, 109] => lookup_1516_4(acc),
            [99, 111, 109] => lookup_1516_5(acc),
            [105, 110, 102, 111] => lookup_1516_6(acc),
            [119, 119, 119] => lookup_1516_7(acc),
            [115, 116, 111, 114, 101] => lookup_1516_8(acc),
            [111, 114, 103] => lookup_1516_9(acc),
            [99, 111] => lookup_1516_10(acc),
            [110, 116] => lookup_1516_11(acc),
            [116, 109] => lookup_1516_12(acc),
            [114, 101, 99] => lookup_1516_13(acc),
            [115, 104, 111, 112] => lookup_1516_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1517_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1517_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1517_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1517_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1517_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1517_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1517_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1517<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1517_0(acc),
            [105, 110, 102, 111] => lookup_1517_1(acc),
            [110, 101, 116] => lookup_1517_2(acc),
            [101, 100, 117] => lookup_1517_3(acc),
            [103, 111, 118] => lookup_1517_4(acc),
            [111, 114, 103] => lookup_1517_5(acc),
            [98, 105, 122] => lookup_1517_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1518_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1518_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1518_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1518_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1518_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1518_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1518_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1518<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1518_0(acc),
            [99, 111, 111, 112] => lookup_1518_1(acc),
            [101, 100, 117] => lookup_1518_2(acc),
            [103, 111, 118] => lookup_1518_3(acc),
            [110, 101, 116] => lookup_1518_4(acc),
            [111, 114, 103] => lookup_1518_5(acc),
            [109, 105, 108] => lookup_1518_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1519() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1520() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1521() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1522() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1523() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1524() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1525() -> Info {
    Info {
        len: 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1526() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1527() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1529() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1530() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1531() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1532() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1533() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1534_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1534_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [102, 111, 114, 103, 111, 116] => lookup_1534_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1534_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1534_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [102, 111, 114, 103, 111, 116] => lookup_1534_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1534<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 101, 114] => lookup_1534_0(info, labels, acc),
            [104, 105, 115] => lookup_1534_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1535() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1536() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1537() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1538() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1539() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1540() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1541() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1542() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1543_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1543_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1543<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1543_0(acc),
            [110, 121, 109] => lookup_1543_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1544() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1545() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1546() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1547() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1548() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1549() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1550_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1550_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1550_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1550_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1550_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1550_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1550_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1550_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1550<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_1550_0(acc),
            [103, 111, 118] => lookup_1550_1(acc),
            [99, 111, 109] => lookup_1550_2(acc),
            [105, 110, 102, 111] => lookup_1550_3(acc),
            [110, 101, 116] => lookup_1550_4(acc),
            [103, 117, 97, 109] => lookup_1550_5(acc),
            [119, 101, 98] => lookup_1550_6(acc),
            [111, 114, 103] => lookup_1550_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1551_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1551_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [103, 105, 116, 45, 112, 97, 103, 101, 115] => lookup_1551_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1551<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [114, 105, 116] => lookup_1551_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1552_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1552_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1552_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1552_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1552_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1552_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1552_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1552_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1552<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_1552_0(acc),
            [103, 111, 118] => lookup_1552_1(acc),
            [115, 99, 104] => lookup_1552_2(acc),
            [99, 111, 109] => lookup_1552_3(acc),
            [110, 101, 116] => lookup_1552_4(acc),
            [112, 117, 98] => lookup_1552_5(acc),
            [111, 114, 103] => lookup_1552_6(acc),
            [109, 101, 100] => lookup_1552_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1553() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1554() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1555() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1556() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1557() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1558() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1559_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1559_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1559<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 110, 100] => lookup_1559_0(acc),
            [102, 111, 114] => lookup_1559_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1560() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1561() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1562() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1563() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1564() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1565() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1566() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1567() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1568_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1568_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1568_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1568_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1568_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1568_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1568_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1568_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1568_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1568_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1568_10_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1568_10<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1568_10_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1568_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1568_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1568_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1568_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1568_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1568_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1568_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1568<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            [97, 108, 116] => lookup_1568_0(acc),
            [103, 114, 111, 110, 100, 97, 114] => lookup_1568_1(acc),
            [115, 99, 104, 111, 111, 108] => lookup_1568_2(acc),
            [110, 103, 111] => lookup_1568_3(acc),
            [110, 111, 109] => lookup_1568_4(acc),
            [97, 103, 114, 105, 99] => lookup_1568_5(acc),
            [108, 97, 119] => lookup_1568_6(acc),
            [110, 101, 116] => lookup_1568_7(acc),
            [111, 114, 103] => lookup_1568_8(acc),
            [110, 105, 99] => lookup_1568_9(acc),
            [99, 111] => lookup_1568_10(labels, acc),
            [101, 100, 117] => lookup_1568_11(acc),
            [103, 111, 118] => lookup_1568_12(acc),
            [116, 109] => lookup_1568_13(acc),
            [97, 99] => lookup_1568_14(acc),
            [119, 101, 98] => lookup_1568_15(acc),
            [110, 105, 115] => lookup_1568_16(acc),
            [109, 105, 108] => lookup_1568_17(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1569() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1570() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1571_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1571_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1571_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1571_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1571_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1571_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1571_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1571_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1571<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1571_0(acc),
            [101, 100, 117] => lookup_1571_1(acc),
            [103, 111, 118] => lookup_1571_2(acc),
            [97, 99] => lookup_1571_3(acc),
            [97, 100, 118] => lookup_1571_4(acc),
            [110, 101, 116] => lookup_1571_5(acc),
            [111, 114, 103] => lookup_1571_6(acc),
            [109, 105, 108] => lookup_1571_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1572() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1573() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1574() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1575() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1576() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1577() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1578() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1580() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1581() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1582_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1582_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1582_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1582_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1582_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1582_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1582_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1582_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1582_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1582_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1582_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1582_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1582_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1582_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1582_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1582_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1582<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 97, 109, 101] => lookup_1582_0(acc),
            [116, 101, 115, 116] => lookup_1582_1(acc),
            [110, 111, 109] => lookup_1582_2(acc),
            [99, 111, 109] => lookup_1582_3(acc),
            [110, 101, 116] => lookup_1582_4(acc),
            [103, 111] => lookup_1582_5(acc),
            [111, 114, 103] => lookup_1582_6(acc),
            [110, 105, 99] => lookup_1582_7(acc),
            [105, 110, 116] => lookup_1582_8(acc),
            [99, 111] => lookup_1582_9(acc),
            [101, 100, 117] => lookup_1582_10(acc),
            [103, 111, 118] => lookup_1582_11(acc),
            [97, 99] => lookup_1582_12(acc),
            [98, 105, 122] => lookup_1582_13(acc),
            [119, 101, 98] => lookup_1582_14(acc),
            [109, 105, 108] => lookup_1582_15(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1583() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1584() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1585() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1586() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1587() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1588() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1589() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1590() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1591() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1592() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1593() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1594() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1595() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1596() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1597() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1598() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1599() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1600() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1601() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1602() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1603() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1604() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1605() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1606() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1607() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1608() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1609() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1610() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1611() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1612() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1613_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1613_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1613_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1613_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1613_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1613_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1613_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1613_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1613_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1613<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1613_0(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_1613_1(acc),
            [98, 101, 108, 97, 117] => lookup_1613_2(acc),
            [101, 100] => lookup_1613_3(acc),
            [110, 111, 109] => lookup_1613_4(acc),
            [120, 52, 52, 51] => lookup_1613_5(acc),
            [111, 114] => lookup_1613_6(acc),
            [103, 111] => lookup_1613_7(acc),
            [110, 101] => lookup_1613_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1614() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1615_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1615<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1615_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1616_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1616<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 115, 105, 116, 101] => lookup_1616_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1617() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1618() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1619() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1620_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1620_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1620_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1620_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1620_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1620_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1620_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1620_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1620_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1620_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1620_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1620_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1620<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1620_0(labels, acc),
            [109, 101] => lookup_1620_1(acc),
            [109, 111, 98, 105] => lookup_1620_2(acc),
            [97, 99] => lookup_1620_3(acc),
            [110, 111, 109] => lookup_1620_4(acc),
            [105, 110, 102, 111] => lookup_1620_5(acc),
            [111, 114] => lookup_1620_6(acc),
            [103, 111] => lookup_1620_7(acc),
            [110, 101] => lookup_1620_8(acc),
            [115, 99] => lookup_1620_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1621() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1622() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1623() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1624() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1625_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1625_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1625_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1625_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1625_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1625<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 119, 101, 98] => lookup_1625_0(info, labels, acc),
            [99, 121, 111, 110] => lookup_1625_1(acc),
            [109, 121, 112, 101, 112] => lookup_1625_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1626_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1626<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1626_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1627() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1628() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1629_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1629_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1629_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1629_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1629_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1629_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1629<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1629_0(labels, acc),
            [101, 100, 117] => lookup_1629_1(acc),
            [110, 101, 116] => lookup_1629_2(acc),
            [111, 114, 103] => lookup_1629_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1630() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1631() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1632() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1633() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1634() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1635() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1636() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1637() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1638() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1639() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1640() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1641() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1642() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1643() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1644() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1645_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1645_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1645_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1645_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1645_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1645<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1645_0(acc),
            [101, 100, 117] => lookup_1645_1(acc),
            [111, 114, 103] => lookup_1645_2(acc),
            [103, 111, 98] => lookup_1645_3(acc),
            [114, 101, 100] => lookup_1645_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1646() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1647() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1648() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1649() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1650() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1651() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1652() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1653() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1654() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1655_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1655_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1655_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1655_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1655_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1655<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1655_0(acc),
            [103, 111, 118] => lookup_1655_1(acc),
            [111, 114, 103] => lookup_1655_2(acc),
            [97, 99] => lookup_1655_3(acc),
            [109, 105, 108] => lookup_1655_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1656() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1657_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1657_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1657_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1657_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1657_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1657_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1657_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1657_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1657_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1657_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1657<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [117, 97] => lookup_1657_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1657_1(acc),
            [101, 100, 117] => lookup_1657_2(acc),
            [99, 111] => lookup_1657_3(acc),
            [103, 111, 118] => lookup_1657_4(acc),
            [97, 99] => lookup_1657_5(acc),
            [110, 111, 109] => lookup_1657_6(acc),
            [111, 120] => lookup_1657_7(acc),
            [105, 110] => lookup_1657_8(acc),
            [111, 114, 103] => lookup_1657_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1658() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1659() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1660() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1661() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1662() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1663_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1663_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1663_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1663<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 119, 111] => lookup_1663_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1664() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1665() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1666() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1667() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1668() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1669() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1670() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1671() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1672() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
