
//! This file is automatically @generated by cargo-make.
//! It is not intended for manual editing.

#![allow(clippy::all)] // TODO lint this code?

use crate::{Info, Type};
#[inline]
pub(super) fn lookup<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let mut info = Info { len: 0, typ: None };
    match labels.next() {
        Some(label) => match label {
            [216, 167, 217, 132, 216, 172, 216, 178, 216, 167, 216, 166, 216, 177] => lookup_0(),
            [216, 167, 217, 132, 216, 179, 216, 185, 217, 136, 216, 175, 217, 138, 217, 135] => {
                lookup_1()
            }
            [104, 111, 116, 101, 108, 115] => lookup_2(),
            [116, 114, 97, 100, 101] => lookup_3(labels),
            [112, 104, 111, 110, 101] => lookup_4(),
            [116, 101, 97, 109] => lookup_5(labels),
            [119, 97, 110, 103] => lookup_6(),
            [98, 97, 110, 107] => lookup_7(),
            [116, 97, 105, 112, 101, 105] => lookup_8(),
            [108, 97] => lookup_9(labels),
            [120, 110, 45, 45, 118, 101, 114, 109, 103, 101, 110, 115, 98, 101, 114, 97, 116, 101, 114, 45, 99, 116, 98] => {
                lookup_10()
            }
            [97, 109, 101, 114, 105, 99, 97, 110, 102, 97, 109, 105, 108, 121] => lookup_11(),
            [99, 108, 111, 117, 100] => lookup_12(labels),
            [97, 109, 97, 122, 111, 110] => lookup_13(),
            [103, 108, 111, 98, 97, 108] => lookup_14(),
            [120, 102, 105, 110, 105, 116, 121] => lookup_15(),
            [105, 113] => lookup_16(labels),
            [216, 167, 219, 140, 216, 177, 216, 167, 217, 134] => lookup_17(),
            [102, 111, 114, 117, 109] => lookup_18(),
            [100, 101, 108, 116, 97] => lookup_19(),
            [112, 105, 110, 107] => lookup_20(),
            [98, 101, 97, 116, 115] => lookup_21(),
            [115, 97, 102, 101] => lookup_22(),
            [122, 101, 114, 111] => lookup_23(),
            [209, 128, 209, 131, 209, 129] => lookup_24(labels),
            [99, 104, 97, 116] => lookup_25(),
            [109, 119] => lookup_26(labels),
            [101, 101] => lookup_27(labels),
            [99, 111, 110, 100, 111, 115] => lookup_28(),
            [99, 98, 110] => lookup_29(),
            [231, 187, 132, 231, 187, 135, 230, 156, 186, 230, 158, 132] => lookup_30(),
            [109, 101, 109, 101] => lookup_31(),
            [98, 111, 115, 116, 105, 107] => lookup_32(),
            [109, 109] => lookup_33(info, labels),
            [99, 122] => lookup_34(labels),
            [231, 189, 145, 231, 187, 156] => lookup_35(),
            [100, 97, 110, 99, 101] => lookup_36(),
            [99, 111, 111, 107, 105, 110, 103, 99, 104, 97, 110, 110, 101, 108] => lookup_37(),
            [230, 155, 184, 231, 177, 141] => lookup_38(),
            [100, 110, 112] => lookup_39(),
            [100, 107] => lookup_40(labels),
            [112, 108, 117, 115] => lookup_41(),
            [108, 116, 100, 97] => lookup_42(),
            [115, 99, 104, 111, 111, 108] => lookup_43(),
            [115, 108, 105, 110, 103] => lookup_44(),
            [216, 167, 216, 170, 216, 181, 216, 167, 217, 132, 216, 167, 216, 170] => lookup_45(),
            [100, 101, 118] => lookup_46(labels),
            [233, 163, 158, 229, 136, 169, 230, 181, 166] => lookup_47(),
            [105, 108] => lookup_48(labels),
            [103, 114, 97, 116, 105, 115] => lookup_49(),
            [113, 118, 99] => lookup_50(),
            [112, 114, 111] => lookup_51(labels),
            [113, 112, 111, 110] => lookup_52(),
            [120, 110, 45, 45, 119, 52, 114, 56, 53, 101, 108, 56, 102, 104, 117, 53, 100, 110, 114, 97] => {
                lookup_53()
            }
            [111, 110, 121, 111, 117, 114, 115, 105, 100, 101] => lookup_54(),
            [99, 111, 109, 112, 97, 110, 121] => lookup_55(),
            [216, 168, 217, 138, 216, 170, 217, 131] => lookup_56(),
            [111, 108, 97, 121, 97, 110, 103, 114, 111, 117, 112] => lookup_57(),
            [119, 97, 108, 116, 101, 114] => lookup_58(),
            [99, 101, 114, 110] => lookup_59(),
            [110, 103, 111] => lookup_60(),
            [97, 108, 115, 116, 111, 109] => lookup_61(),
            [104, 111, 109, 101, 115] => lookup_62(),
            [116, 103] => lookup_63(),
            [208, 190, 208, 189, 208, 187, 208, 176, 208, 185, 208, 189] => lookup_64(),
            [100, 118, 97, 103] => lookup_65(),
            [112, 108, 97, 121, 115, 116, 97, 116, 105, 111, 110] => lookup_66(),
            [102, 111, 114, 115, 97, 108, 101] => lookup_67(),
            [116, 111, 121, 111, 116, 97] => lookup_68(),
            [99, 121, 109, 114, 117] => lookup_69(),
            [120, 110, 45, 45, 110, 121, 113, 121, 50, 54, 97] => lookup_70(),
            [110, 103] => lookup_71(labels),
            [106, 111, 116] => lookup_72(),
            [99, 111, 108, 108, 101, 103, 101] => lookup_73(),
            [115, 107, 121] => lookup_74(),
            [107, 111, 109, 97, 116, 115, 117] => lookup_75(),
            [105, 114, 105, 115, 104] => lookup_76(),
            [120, 110, 45, 45, 109, 103, 98, 97, 51, 97, 52, 102, 114, 97] => lookup_77(),
            [99, 111, 111, 112] => lookup_78(),
            [104, 111, 115, 116, 105, 110, 103] => lookup_79(labels),
            [99, 97, 112, 101, 116, 111, 119, 110] => lookup_80(),
            [115, 97, 102, 101, 116, 121] => lookup_81(),
            [112, 104] => lookup_82(labels),
            [99, 98, 114, 101] => lookup_83(),
            [109, 111, 116, 111, 114, 99, 121, 99, 108, 101, 115] => lookup_84(),
            [110, 101, 117, 115, 116, 97, 114] => lookup_85(),
            [100, 97, 116, 105, 110, 103] => lookup_86(),
            [102, 117, 106, 105, 116, 115, 117] => lookup_87(),
            [117, 111, 108] => lookup_88(),
            [118, 111, 116, 111] => lookup_89(),
            [97, 99] => lookup_90(labels),
            [217, 133, 217, 136, 217, 130, 216, 185] => lookup_91(),
            [100, 111, 116] => lookup_92(),
            [109, 97, 99, 121, 115] => lookup_93(),
            [106, 117, 110, 105, 112, 101, 114] => lookup_94(),
            [120, 110, 45, 45, 102, 104, 98, 101, 105] => lookup_95(),
            [115, 117, 112, 112, 111, 114, 116] => lookup_96(labels),
            [104, 107, 116] => lookup_97(),
            [99, 119] => lookup_98(labels),
            [120, 110, 45, 45, 102, 105, 113, 50, 50, 56, 99, 53, 104, 115] => lookup_99(),
            [114, 101, 120, 114, 111, 116, 104] => lookup_100(),
            [119, 111, 114, 108, 100] => lookup_101(),
            [109, 97, 114, 115, 104, 97, 108, 108, 115] => lookup_102(),
            [110, 101, 119] => lookup_103(),
            [109, 101, 108, 98, 111, 117, 114, 110, 101] => lookup_104(),
            [100, 117, 112, 111, 110, 116] => lookup_105(),
            [105, 109, 97, 109, 97, 116] => lookup_106(),
            [104, 97, 110, 103, 111, 117, 116] => lookup_107(),
            [119, 105, 110, 100, 111, 119, 115] => lookup_108(),
            [117, 121] => lookup_109(labels),
            [99, 114] => lookup_110(labels),
            [97, 109, 102, 97, 109] => lookup_111(),
            [100, 105, 121] => lookup_112(),
            [105, 110, 115, 116, 105, 116, 117, 116, 101] => lookup_113(),
            [102, 97, 110] => lookup_114(),
            [99, 114, 117, 105, 115, 101, 115] => lookup_115(),
            [115, 116, 117, 100, 121] => lookup_116(),
            [99, 99] => lookup_117(labels),
            [97, 117, 99, 116, 105, 111, 110] => lookup_118(),
            [102, 116, 114] => lookup_119(),
            [120, 110, 45, 45, 113, 57, 106, 121, 98, 52, 99] => lookup_120(),
            [120, 110, 45, 45, 99, 99, 107, 119, 99, 120, 101, 116, 100] => lookup_121(),
            [208, 186, 208, 176, 209, 130, 208, 190, 208, 187, 208, 184, 208, 186] => lookup_122(),
            [115, 116, 97, 100, 97] => lookup_123(),
            [118, 101] => lookup_124(labels),
            [217, 133, 217, 136, 216, 177, 217, 138, 216, 170, 216, 167, 217, 134, 217, 138, 216, 167] => {
                lookup_125()
            }
            [120, 110, 45, 45, 53, 52, 98, 55, 102, 116, 97, 48, 99, 99] => lookup_126(),
            [102, 108, 111, 114, 105, 115, 116] => lookup_127(),
            [115, 104, 111, 112] => lookup_128(labels),
            [98, 121] => lookup_129(labels),
            [230, 150, 176, 229, 138, 160, 229, 157, 161] => lookup_130(),
            [99, 97, 114, 115] => lookup_131(),
            [109, 111, 118, 105, 101] => lookup_132(),
            [224, 185, 132, 224, 184, 151, 224, 184, 162] => lookup_133(labels),
            [116, 99] => lookup_134(labels),
            [102, 111, 111, 100, 110, 101, 116, 119, 111, 114, 107] => lookup_135(),
            [120, 101, 114, 111, 120] => lookup_136(),
            [97, 112, 112] => lookup_137(labels),
            [115, 116, 97, 116, 101, 102, 97, 114, 109] => lookup_138(),
            [103, 104] => lookup_139(labels),
            [116, 100, 107] => lookup_140(),
            [99, 108, 105, 110, 105, 99] => lookup_141(),
            [98, 118] => lookup_142(),
            [111, 110, 108, 105, 110, 101] => lookup_143(labels),
            [97, 101, 103] => lookup_144(),
            [108, 111, 99, 117, 115] => lookup_145(),
            [102, 111, 120] => lookup_146(),
            [111, 114, 105, 103, 105, 110, 115] => lookup_147(),
            [227, 131, 157, 227, 130, 164, 227, 131, 179, 227, 131, 136] => lookup_148(),
            [98, 105, 107, 101] => lookup_149(),
            [230, 148, 191, 229, 138, 161] => lookup_150(),
            [116, 106, 109, 97, 120, 120] => lookup_151(),
            [114, 117] => lookup_152(labels),
            [104, 101, 108, 115, 105, 110, 107, 105] => lookup_153(),
            [98, 99, 103] => lookup_154(),
            [115, 116, 111, 114, 101] => lookup_155(labels),
            [120, 110, 45, 45, 116, 105, 113, 52, 57, 120, 113, 121, 106] => lookup_156(),
            [101, 117] => lookup_157(labels),
            [103, 109] => lookup_158(),
            [230, 190, 179, 233, 150, 128] => lookup_159(),
            [98, 116] => lookup_160(labels),
            [118, 103] => lookup_161(labels),
            [108, 112, 108] => lookup_162(),
            [98, 111, 109] => lookup_163(),
            [120, 110, 45, 45, 113, 120, 97, 54, 97] => lookup_164(),
            [97, 108, 102, 97, 114, 111, 109, 101, 111] => lookup_165(),
            [224, 166, 172, 224, 166, 190, 224, 166, 130, 224, 166, 178, 224, 166, 190] => {
                lookup_166()
            }
            [98, 117, 105, 108, 100] => lookup_167(),
            [107, 114, 100] => lookup_168(labels),
            [112, 104, 100] => lookup_169(),
            [114, 111, 103, 101, 114, 115] => lookup_170(),
            [112, 114, 97, 109, 101, 114, 105, 99, 97] => lookup_171(),
            [216, 167, 216, 177, 216, 167, 217, 133, 217, 131, 217, 136] => lookup_172(),
            [100, 118, 114] => lookup_173(),
            [99, 114, 115] => lookup_174(),
            [104, 103, 116, 118] => lookup_175(),
            [103, 111, 100, 97, 100, 100, 121] => lookup_176(),
            [97, 101] => lookup_177(labels),
            [98, 115] => lookup_178(labels),
            [108, 105, 118, 105, 110, 103] => lookup_179(),
            [216, 167, 217, 132, 216, 179, 216, 185, 217, 136, 216, 175, 219, 140, 216, 169] => {
                lookup_180()
            }
            [117, 98, 97, 110, 107] => lookup_181(),
            [118, 111, 116, 101] => lookup_182(),
            [120, 110, 45, 45, 103, 99, 107, 114, 51, 102, 48, 102] => lookup_183(),
            [97, 120, 97] => lookup_184(),
            [109, 101, 100] => lookup_185(),
            [120, 121, 122] => lookup_186(labels),
            [98, 106] => lookup_187(labels),
            [119, 111, 119] => lookup_188(),
            [102, 106] => lookup_189(labels),
            [120, 110, 45, 45, 109, 103, 98, 116, 51, 100, 104, 100] => lookup_190(),
            [101, 110, 103, 105, 110, 101, 101, 114] => lookup_191(),
            [104, 100, 102, 99] => lookup_192(),
            [109, 97, 105, 115, 111, 110] => lookup_193(),
            [231, 189, 145, 231, 171, 153] => lookup_194(),
            [108, 98] => lookup_195(labels),
            [97, 109, 101, 120] => lookup_196(),
            [120, 110, 45, 45, 52, 50, 99, 50, 100, 57, 97] => lookup_197(),
            [115, 116, 121, 108, 101] => lookup_198(),
            [112, 108, 117, 109, 98, 105, 110, 103] => lookup_199(),
            [98, 111, 102, 97] => lookup_200(),
            [119, 105, 110, 110, 101, 114, 115] => lookup_201(),
            [104, 97, 105, 114] => lookup_202(),
            [98, 105, 100] => lookup_203(),
            [112, 97, 114, 116, 110, 101, 114, 115] => lookup_204(),
            [100, 97, 100] => lookup_205(),
            [118, 117, 101, 108, 111, 115] => lookup_206(),
            [120, 110, 45, 45, 51, 100, 115, 52, 52, 51, 103] => lookup_207(),
            [107, 105, 109] => lookup_208(),
            [97, 117, 100, 105] => lookup_209(),
            [114, 101, 118, 105, 101, 119] => lookup_210(labels),
            [105, 110, 107] => lookup_211(),
            [102, 101, 114, 114, 97, 114, 105] => lookup_212(),
            [97, 109, 101, 114, 105, 99, 97, 110, 101, 120, 112, 114, 101, 115, 115] => {
                lookup_213()
            }
            [109, 97, 105, 102] => lookup_214(),
            [115, 104, 111, 117, 106, 105] => lookup_215(),
            [98, 97, 114, 99, 108, 97, 121, 115] => lookup_216(),
            [118, 111, 116, 105, 110, 103] => lookup_217(),
            [103, 114, 111, 99, 101, 114, 121] => lookup_218(),
            [230, 184, 184, 230, 136, 143] => lookup_219(),
            [120, 110, 45, 45, 109, 103, 98, 120, 52, 99, 100, 48, 97, 98] => lookup_220(),
            [99, 97, 116, 101, 114, 105, 110, 103] => lookup_221(),
            [116, 117, 110, 101, 115] => lookup_222(),
            [206, 181, 207, 133] => lookup_223(),
            [114, 115] => lookup_224(labels),
            [119, 116, 99] => lookup_225(),
            [120, 110, 45, 45, 57, 100, 98, 113, 50, 97] => lookup_226(),
            [98, 117, 121] => lookup_227(),
            [224, 182, 189, 224, 182, 130, 224, 182, 154, 224, 183, 143] => lookup_228(),
            [103, 97, 108] => lookup_229(),
            [100, 106] => lookup_230(),
            [116, 108] => lookup_231(labels),
            [98, 109, 115] => lookup_232(),
            [100, 101, 115, 105, 103, 110] => lookup_233(labels),
            [110, 101, 120, 117, 115] => lookup_234(),
            [116, 101, 110, 110, 105, 115] => lookup_235(),
            [118, 105, 110] => lookup_236(),
            [103, 105] => lookup_237(labels),
            [105, 100] => lookup_238(labels),
            [98, 111, 97, 116, 115] => lookup_239(),
            [112, 97, 115, 115, 97, 103, 101, 110, 115] => lookup_240(),
            [114, 111] => lookup_241(labels),
            [115, 104, 111, 112, 112, 105, 110, 103] => lookup_242(),
            [233, 155, 187, 232, 168, 138, 231, 155, 136, 231, 167, 145] => lookup_243(),
            [233, 163, 159, 229, 147, 129] => lookup_244(),
            [100, 116, 118] => lookup_245(),
            [227, 130, 179, 227, 131, 160] => lookup_246(),
            [109, 115] => lookup_247(labels),
            [115, 120] => lookup_248(labels),
            [110, 111, 119] => lookup_249(),
            [110, 97] => lookup_250(labels),
            [115, 101] => lookup_251(labels),
            [120, 110, 45, 45, 111, 51, 99, 119, 52, 104] => lookup_252(labels),
            [98, 114, 97, 100, 101, 115, 99, 111] => lookup_253(),
            [107, 112] => lookup_254(labels),
            [99, 97, 115, 101] => lookup_255(),
            [101, 115, 113] => lookup_256(),
            [103, 109, 120] => lookup_257(),
            [107, 112, 110] => lookup_258(),
            [102, 117, 106, 105, 120, 101, 114, 111, 120] => lookup_259(),
            [112, 105, 99, 115] => lookup_260(),
            [99, 111, 110, 115, 116, 114, 117, 99, 116, 105, 111, 110] => lookup_261(),
            [97, 105, 114, 102, 111, 114, 99, 101] => lookup_262(),
            [101, 113, 117, 105, 112, 109, 101, 110, 116] => lookup_263(),
            [104, 110] => lookup_264(labels),
            [120, 110, 45, 45, 109, 103, 98, 97, 104, 49, 97, 51, 104, 106, 107, 114, 100] => {
                lookup_265()
            }
            [97, 110, 100, 114, 111, 105, 100] => lookup_266(),
            [99, 104, 97, 114, 105, 116, 121] => lookup_267(),
            [115, 101, 108, 101, 99, 116] => lookup_268(),
            [109, 100] => lookup_269(labels),
            [111, 114, 97, 110, 103, 101] => lookup_270(),
            [116, 97, 120, 105] => lookup_271(),
            [117, 103] => lookup_272(labels),
            [108, 105, 110, 107] => lookup_273(labels),
            [105, 102, 109] => lookup_274(),
            [120, 110, 45, 45, 116, 99, 107, 119, 101] => lookup_275(),
            [108, 105, 120, 105, 108] => lookup_276(),
            [103, 111, 111, 100, 121, 101, 97, 114] => lookup_277(),
            [98, 97, 98, 121] => lookup_278(),
            [98, 108, 97, 99, 107] => lookup_279(),
            [99, 107] => lookup_280(info, labels),
            [98, 97] => lookup_281(labels),
            [118, 105, 112] => lookup_282(),
            [228, 186, 154, 233, 169, 172, 233, 128, 138] => lookup_283(),
            [231, 189, 145, 229, 157, 128] => lookup_284(),
            [224, 186, 165, 224, 186, 178, 224, 186, 167] => lookup_285(),
            [120, 110, 45, 45, 115, 101, 115, 53, 53, 52, 103] => lookup_286(),
            [104, 114] => lookup_287(labels),
            [115, 101, 99, 117, 114, 101] => lookup_288(),
            [108, 105, 100, 108] => lookup_289(),
            [108, 111, 97, 110] => lookup_290(),
            [97, 108, 108, 121] => lookup_291(),
            [115, 118] => lookup_292(labels),
            [118, 101, 103, 97, 115] => lookup_293(),
            [229, 168, 177, 228, 185, 144] => lookup_294(),
            [109, 101] => lookup_295(labels),
            [100, 101] => lookup_296(labels),
            [98, 103] => lookup_297(labels),
            [100, 97, 98, 117, 114] => lookup_298(),
            [99, 104, 97, 110, 101, 108] => lookup_299(),
            [100, 101, 110, 116, 97, 108] => lookup_300(),
            [118, 105, 108, 108, 97, 115] => lookup_301(),
            [119, 97, 108, 109, 97, 114, 116] => lookup_302(),
            [116, 114, 97, 118, 101, 108, 99, 104, 97, 110, 110, 101, 108] => lookup_303(),
            [120, 110, 45, 45, 107, 112, 114, 121, 53, 55, 100] => lookup_304(),
            [120, 110, 45, 45, 106, 54, 119, 49, 57, 51, 103] => lookup_305(labels),
            [101, 112, 115, 111, 110] => lookup_306(),
            [106, 112, 109, 111, 114, 103, 97, 110] => lookup_307(),
            [109, 116, 110] => lookup_308(),
            [99, 100] => lookup_309(labels),
            [224, 164, 149, 224, 165, 137, 224, 164, 174] => lookup_310(),
            [230, 150, 176, 233, 151, 187] => lookup_311(),
            [120, 110, 45, 45, 105, 111, 48, 97, 55, 105] => lookup_312(),
            [115, 122] => lookup_313(labels),
            [120, 110, 45, 45, 113, 99, 107, 97, 49, 112, 109, 99] => lookup_314(),
            [224, 168, 173, 224, 168, 190, 224, 168, 176, 224, 168, 164] => lookup_315(),
            [118, 97] => lookup_316(),
            [106, 108, 108] => lookup_317(),
            [108, 101, 102, 114, 97, 107] => lookup_318(),
            [98, 111] => lookup_319(labels),
            [115, 97, 118, 101] => lookup_320(),
            [102, 111, 117, 110, 100, 97, 116, 105, 111, 110] => lookup_321(),
            [108, 101, 99, 108, 101, 114, 99] => lookup_322(),
            [99, 102, 100] => lookup_323(),
            [216, 180, 216, 168, 217, 131, 216, 169] => lookup_324(),
            [115, 97, 110, 100, 118, 105, 107, 99, 111, 114, 111, 109, 97, 110, 116] => {
                lookup_325()
            }
            [104, 98, 111] => lookup_326(),
            [111, 116, 115, 117, 107, 97] => lookup_327(),
            [115, 111] => lookup_328(labels),
            [108, 101, 103, 97, 108] => lookup_329(),
            [120, 110, 45, 45, 98, 52, 119, 54, 48, 53, 102, 101, 114, 100] => lookup_330(),
            [120, 110, 45, 45, 110, 103, 98, 99, 53, 97, 122, 100] => lookup_331(),
            [110, 101, 99] => lookup_332(),
            [97, 99, 99, 111, 117, 110, 116, 97, 110, 116] => lookup_333(),
            [115, 99, 104, 111, 108, 97, 114, 115, 104, 105, 112, 115] => lookup_334(),
            [120, 110, 45, 45, 51, 48, 114, 114, 55, 121] => lookup_335(),
            [230, 156, 186, 230, 158, 132] => lookup_336(),
            [107, 114, 101, 100] => lookup_337(),
            [98, 97, 110, 100] => lookup_338(),
            [210, 155, 208, 176, 208, 183] => lookup_339(),
            [99, 97, 112, 105, 116, 97, 108] => lookup_340(),
            [109, 97, 112] => lookup_341(),
            [108, 105, 110, 100, 101] => lookup_342(),
            [100, 111] => lookup_343(labels),
            [115, 104, 105, 107, 115, 104, 97] => lookup_344(),
            [224, 176, 173, 224, 176, 190, 224, 176, 176, 224, 176, 164, 224, 177, 141] => {
                lookup_345()
            }
            [109, 120] => lookup_346(labels),
            [99, 111, 108, 111, 103, 110, 101] => lookup_347(),
            [110, 111, 107, 105, 97] => lookup_348(),
            [114, 121, 117, 107, 121, 117] => lookup_349(),
            [115, 99, 104, 97, 101, 102, 102, 108, 101, 114] => lookup_350(),
            [97, 103, 97, 107, 104, 97, 110] => lookup_351(),
            [101, 120, 112, 114, 101, 115, 115] => lookup_352(),
            [109, 111, 100, 97] => lookup_353(),
            [115, 99, 106, 111, 104, 110, 115, 111, 110] => lookup_354(),
            [115, 117, 99, 107, 115] => lookup_355(),
            [115, 103] => lookup_356(labels),
            [120, 110, 45, 45, 52, 53, 98, 114, 53, 99, 121, 108] => lookup_357(),
            [114, 105, 108] => lookup_358(),
            [112, 119, 99] => lookup_359(),
            [227, 131, 149, 227, 130, 161, 227, 131, 131, 227, 130, 183, 227, 131, 167, 227, 131, 179] => {
                lookup_360()
            }
            [103, 111, 108, 100, 112, 111, 105, 110, 116] => lookup_361(),
            [105, 107, 97, 110, 111] => lookup_362(),
            [120, 110, 45, 45, 114, 111, 118, 117, 56, 56, 98] => lookup_363(),
            [105, 110, 99] => lookup_364(),
            [112, 114, 111, 112, 101, 114, 116, 121] => lookup_365(),
            [115, 99, 104, 119, 97, 114, 122] => lookup_366(),
            [109, 101, 100, 105, 97] => lookup_367(),
            [106, 105, 111] => lookup_368(),
            [99, 109] => lookup_369(labels),
            [116, 99, 105] => lookup_370(),
            [118, 111, 108, 107, 115, 119, 97, 103, 101, 110] => lookup_371(),
            [97, 117, 100, 105, 98, 108, 101] => lookup_372(),
            [105, 112, 105, 114, 97, 110, 103, 97] => lookup_373(),
            [102, 114] => lookup_374(labels),
            [99, 111, 117, 114, 115, 101, 115] => lookup_375(),
            [120, 110, 45, 45, 109, 105, 120, 56, 57, 49, 102] => lookup_376(),
            [97, 108, 115, 97, 99, 101] => lookup_377(),
            [118, 101, 110, 116, 117, 114, 101, 115] => lookup_378(),
            [120, 110, 45, 45, 53, 116, 122, 109, 53, 103] => lookup_379(),
            [118, 110] => lookup_380(labels),
            [111, 110, 105, 111, 110] => lookup_381(),
            [97, 105, 103] => lookup_382(),
            [120, 110, 45, 45, 106, 49, 97, 109, 104] => lookup_383(),
            [119, 105, 110] => lookup_384(labels),
            [229, 152, 137, 233, 135, 140] => lookup_385(),
            [98, 97, 114, 99, 108, 97, 121, 99, 97, 114, 100] => lookup_386(),
            [98, 98] => lookup_387(labels),
            [107, 105] => lookup_388(labels),
            [109, 101, 114, 99, 107, 109, 115, 100] => lookup_389(),
            [110, 105, 107, 111, 110] => lookup_390(),
            [103, 102] => lookup_391(),
            [112, 119] => lookup_392(labels),
            [115, 112, 111, 116] => lookup_393(),
            [103, 98] => lookup_394(),
            [109, 97, 116, 116, 101, 108] => lookup_395(),
            [115, 116, 97, 116, 101, 98, 97, 110, 107] => lookup_396(),
            [116, 111] => lookup_397(labels),
            [217, 190, 216, 167, 217, 131, 216, 179, 216, 170, 216, 167, 217, 134] => lookup_398(),
            [99, 111, 117, 112, 111, 110] => lookup_399(),
            [120, 110, 45, 45, 109, 103, 98, 101, 114, 112, 52, 97, 53, 100, 52, 97, 114] => {
                lookup_400()
            }
            [110, 117] => lookup_401(labels),
            [109, 97, 114, 107, 101, 116, 105, 110, 103] => lookup_402(labels),
            [97, 117, 116, 104, 111, 114] => lookup_403(),
            [109, 111, 109] => lookup_404(labels),
            [99, 114, 105, 99, 107, 101, 116] => lookup_405(),
            [109, 111, 101] => lookup_406(),
            [115, 101, 101, 107] => lookup_407(),
            [120, 110, 45, 45, 51, 104, 99, 114, 106, 57, 99] => lookup_408(),
            [114, 97, 105, 100] => lookup_409(),
            [102, 108, 111, 119, 101, 114, 115] => lookup_410(),
            [105, 110, 116, 117, 105, 116] => lookup_411(),
            [100, 101, 108, 108] => lookup_412(),
            [108, 97, 109, 98, 111, 114, 103, 104, 105, 110, 105] => lookup_413(),
            [108, 111, 118, 101] => lookup_414(),
            [115, 98, 105] => lookup_415(),
            [229, 133, 172, 229, 143, 184] => lookup_416(),
            [120, 110, 45, 45, 115, 57, 98, 114, 106, 57, 99] => lookup_417(),
            [102, 121, 105] => lookup_418(),
            [98, 101, 114, 108, 105, 110] => lookup_419(),
            [119, 101, 98, 99, 97, 109] => lookup_420(),
            [110, 114] => lookup_421(labels),
            [120, 110, 45, 45, 109, 103, 98, 103, 117, 56, 50, 97] => lookup_422(),
            [122, 109] => lookup_423(labels),
            [120, 110, 45, 45, 112, 115, 115, 121, 50, 117] => lookup_424(),
            [114, 101, 118, 105, 101, 119, 115] => lookup_425(),
            [235, 139, 183, 235, 132, 183] => lookup_426(),
            [99, 105, 116, 121] => lookup_427(),
            [112, 117, 98] => lookup_428(labels),
            [120, 110, 45, 45, 56, 48, 97, 113, 101, 99, 100, 114, 49, 97] => lookup_429(),
            [102, 117, 116, 98, 111, 108] => lookup_430(),
            [108, 97, 115, 97, 108, 108, 101] => lookup_431(),
            [114, 101, 110, 116, 97, 108, 115] => lookup_432(),
            [115, 99] => lookup_433(labels),
            [98, 97, 114] => lookup_434(),
            [115, 105, 110, 97] => lookup_435(),
            [232, 135, 186, 231, 129, 163] => lookup_436(),
            [100, 117, 110, 108, 111, 112] => lookup_437(),
            [102, 97, 105, 108] => lookup_438(),
            [217, 133, 216, 181, 216, 177] => lookup_439(),
            [115, 111, 108, 117, 116, 105, 111, 110, 115] => lookup_440(),
            [108, 105, 110, 99, 111, 108, 110] => lookup_441(),
            [116, 106, 120] => lookup_442(),
            [107, 122] => lookup_443(labels),
            [115, 97, 115] => lookup_444(),
            [115, 111, 102, 116, 98, 97, 110, 107] => lookup_445(),
            [99, 121] => lookup_446(labels),
            [228, 189, 155, 229, 177, 177] => lookup_447(),
            [120, 110, 45, 45, 49, 49, 98, 52, 99, 51, 100] => lookup_448(),
            [108, 111, 110, 100, 111, 110] => lookup_449(labels),
            [111, 109] => lookup_450(labels),
            [110, 122] => lookup_451(labels),
            [115, 107, 105, 110] => lookup_452(),
            [119, 116, 102] => lookup_453(),
            [120, 110, 45, 45, 102, 106, 113, 55, 50, 48, 97] => lookup_454(),
            [229, 164, 169, 228, 184, 187, 230, 149, 153] => lookup_455(),
            [103, 112] => lookup_456(labels),
            [109, 115, 100] => lookup_457(),
            [108, 97, 110, 100] => lookup_458(labels),
            [120, 110, 45, 45, 99, 108, 99, 104, 99, 48, 101, 97, 48, 98, 50, 103, 50, 97, 57, 103, 99, 100] => {
                lookup_459()
            }
            [102, 108, 105, 114] => lookup_460(),
            [106, 109] => lookup_461(info, labels),
            [115, 100] => lookup_462(labels),
            [224, 164, 173, 224, 164, 190, 224, 164, 176, 224, 165, 139, 224, 164, 164] => {
                lookup_463()
            }
            [101, 115, 116, 97, 116, 101] => lookup_464(labels),
            [103, 105, 102, 116] => lookup_465(),
            [109, 97, 110, 103, 111] => lookup_466(),
            [97, 109] => lookup_467(labels),
            [115, 116, 111, 114, 97, 103, 101] => lookup_468(),
            [97, 109, 115, 116, 101, 114, 100, 97, 109] => lookup_469(),
            [110, 114, 97] => lookup_470(),
            [97, 113, 117, 97, 114, 101, 108, 108, 101] => lookup_471(),
            [110, 97, 103, 111, 121, 97] => lookup_472(),
            [233, 155, 134, 229, 155, 162] => lookup_473(),
            [122, 117, 101, 114, 105, 99, 104] => lookup_474(),
            [105, 99, 98, 99] => lookup_475(),
            [101, 120, 112, 111, 115, 101, 100] => lookup_476(),
            [99, 97, 116] => lookup_477(),
            [120, 110, 45, 45, 109, 103, 98, 101, 114, 112, 52, 97, 53, 100, 52, 97, 56, 55, 103] => {
                lookup_478()
            }
            [107, 117, 111, 107, 103, 114, 111, 117, 112] => lookup_479(),
            [110, 101, 116, 119, 111, 114, 107] => lookup_480(labels),
            [111, 111, 111] => lookup_481(),
            [112, 121] => lookup_482(labels),
            [104, 111, 109, 101, 103, 111, 111, 100, 115] => lookup_483(),
            [225, 131, 146, 225, 131, 148] => lookup_484(),
            [102, 97, 115, 116] => lookup_485(),
            [115, 105] => lookup_486(labels),
            [109, 111, 98, 105, 108, 101] => lookup_487(),
            [108, 101, 103, 111] => lookup_488(),
            [112, 114, 111, 102] => lookup_489(),
            [120, 110, 45, 45, 100, 49, 97, 99, 106, 51, 98] => lookup_490(),
            [112, 114, 111, 116, 101, 99, 116, 105, 111, 110] => lookup_491(),
            [216, 168, 216, 167, 216, 177, 216, 170] => lookup_492(),
            [227, 130, 175, 227, 131, 169, 227, 130, 166, 227, 131, 137] => lookup_493(),
            [120, 110, 45, 45, 109, 103, 98, 97, 55, 99, 48, 98, 98, 110, 48, 97] => lookup_494(),
            [216, 168, 216, 167, 216, 178, 216, 167, 216, 177] => lookup_495(),
            [108, 100, 115] => lookup_496(),
            [103, 110] => lookup_497(labels),
            [120, 110, 45, 45, 56, 48, 97, 115, 119, 103] => lookup_498(),
            [98, 109] => lookup_499(labels),
            [109, 101, 110] => lookup_500(labels),
            [115, 109, 105, 108, 101] => lookup_501(),
            [122, 97] => lookup_502(info, labels),
            [120, 110, 45, 45, 106, 108, 113, 52, 56, 48, 110, 50, 114, 103] => lookup_503(),
            [110, 111, 119, 116, 118] => lookup_504(),
            [98, 117, 105, 108, 100, 101, 114, 115] => lookup_505(labels),
            [108, 105, 108, 108, 121] => lookup_506(),
            [118, 111, 121, 97, 103, 101] => lookup_507(),
            [98, 111, 111, 107] => lookup_508(),
            [100, 105, 114, 101, 99, 116] => lookup_509(),
            [103, 117, 99, 99, 105] => lookup_510(),
            [102, 105, 114, 101] => lookup_511(),
            [99, 108, 117, 98] => lookup_512(labels),
            [101, 110, 103, 105, 110, 101, 101, 114, 105, 110, 103] => lookup_513(),
            [103, 97, 108, 108, 101, 114, 121] => lookup_514(),
            [98, 97, 114, 103, 97, 105, 110, 115] => lookup_515(),
            [105, 110, 102, 105, 110, 105, 116, 105] => lookup_516(),
            [109, 105, 99, 114, 111, 115, 111, 102, 116] => lookup_517(),
            [101, 120, 112, 101, 114, 116] => lookup_518(),
            [103, 109, 111] => lookup_519(),
            [115, 98, 115] => lookup_520(),
            [115, 99, 104, 117, 108, 101] => lookup_521(),
            [115, 112, 97, 99, 101] => lookup_522(labels),
            [110, 111, 119, 114, 117, 122] => lookup_523(),
            [209, 129, 209, 128, 208, 177] => lookup_524(labels),
            [116, 114, 97, 118, 101, 108] => lookup_525(),
            [103, 111, 108, 100] => lookup_526(),
            [105, 115, 116, 97, 110, 98, 117, 108] => lookup_527(),
            [114, 117, 104, 114] => lookup_528(),
            [119, 111, 114, 107, 115] => lookup_529(),
            [115, 111, 102, 116, 119, 97, 114, 101] => lookup_530(),
            [105, 99, 117] => lookup_531(),
            [120, 110, 45, 45, 51, 98, 115, 116, 48, 48, 109] => lookup_532(),
            [216, 167, 217, 132, 217, 133, 216, 186, 216, 177, 216, 168] => lookup_533(),
            [233, 128, 154, 232, 178, 169] => lookup_534(),
            [100, 99, 108, 107] => lookup_535(),
            [230, 139, 155, 232, 129, 152] => lookup_536(),
            [110, 101, 116, 98, 97, 110, 107] => lookup_537(),
            [115, 104, 101, 108, 108] => lookup_538(),
            [98, 114] => lookup_539(labels),
            [116, 116] => lookup_540(labels),
            [108, 101, 97, 115, 101] => lookup_541(),
            [115, 105, 110, 103, 108, 101, 115] => lookup_542(),
            [101, 100, 101, 107, 97] => lookup_543(),
            [118, 105] => lookup_544(labels),
            [102, 111, 111] => lookup_545(),
            [105, 115] => lookup_546(labels),
            [102, 101, 100, 101, 120] => lookup_547(),
            [109, 111] => lookup_548(labels),
            [102, 105, 116, 110, 101, 115, 115] => lookup_549(),
            [98, 97, 114, 101, 102, 111, 111, 116] => lookup_550(),
            [102, 117, 110, 100] => lookup_551(),
            [103, 114] => lookup_552(labels),
            [98, 97, 110, 97, 110, 97, 114, 101, 112, 117, 98, 108, 105, 99] => lookup_553(),
            [99, 104, 97, 115, 101] => lookup_554(),
            [103, 117, 105, 100, 101] => lookup_555(),
            [106, 97, 118, 97] => lookup_556(),
            [108, 116, 100] => lookup_557(),
            [101, 120, 116, 114, 97, 115, 112, 97, 99, 101] => lookup_558(),
            [107, 101, 114, 114, 121, 104, 111, 116, 101, 108, 115] => lookup_559(),
            [109, 97, 115, 101, 114, 97, 116, 105] => lookup_560(),
            [120, 110, 45, 45, 57, 48, 97, 105, 115] => lookup_561(),
            [206, 181, 206, 187] => lookup_562(),
            [115, 111, 110, 103] => lookup_563(),
            [118, 101, 114, 109, 195, 182, 103, 101, 110, 115, 98, 101, 114, 97, 116, 101, 114] => {
                lookup_564()
            }
            [104, 111, 108, 105, 100, 97, 121] => lookup_565(),
            [118, 101, 114, 115, 105, 99, 104, 101, 114, 117, 110, 103] => lookup_566(),
            [100, 105, 103, 105, 116, 97, 108] => lookup_567(labels),
            [115, 97, 114, 108] => lookup_568(),
            [98, 111, 116] => lookup_569(),
            [108, 97, 110, 120, 101, 115, 115] => lookup_570(),
            [115, 116, 117, 100, 105, 111] => lookup_571(),
            [97, 114, 109, 121] => lookup_572(),
            [216, 185, 216, 177, 216, 167, 217, 130] => lookup_573(),
            [107, 101, 114, 114, 121, 108, 111, 103, 105, 115, 116, 105, 99, 115] => lookup_574(),
            [103, 113] => lookup_575(),
            [115, 116] => lookup_576(labels),
            [120, 110, 45, 45, 109, 103, 98, 113, 108, 121, 55, 99, 48, 97, 54, 55, 102, 98, 99] => {
                lookup_577()
            }
            [97, 105, 114, 98, 117, 115] => lookup_578(),
            [115, 97, 120, 111] => lookup_579(),
            [230, 133, 136, 229, 150, 132] => lookup_580(),
            [99, 111] => lookup_581(labels),
            [120, 110, 45, 45, 113, 55, 99, 101, 54, 97] => lookup_582(),
            [233, 166, 153, 230, 184, 175] => lookup_583(labels),
            [120, 110, 45, 45, 121, 102, 114, 111, 52, 105, 54, 55, 111] => lookup_584(),
            [100, 101, 97, 108, 101, 114] => lookup_585(),
            [102, 105, 115, 104, 105, 110, 103] => lookup_586(),
            [98, 97, 117, 104, 97, 117, 115] => lookup_587(),
            [97, 98, 97, 114, 116, 104] => lookup_588(),
            [99, 104] => lookup_589(labels),
            [102, 105, 116] => lookup_590(),
            [103, 117, 97, 114, 100, 105, 97, 110] => lookup_591(),
            [105, 101, 101, 101] => lookup_592(),
            [105, 110, 115, 117, 114, 97, 110, 99, 101] => lookup_593(),
            [216, 179, 217, 136, 216, 177, 217, 138, 216, 167] => lookup_594(),
            [108, 117, 120, 117, 114, 121] => lookup_595(),
            [115, 99, 105, 101, 110, 99, 101] => lookup_596(labels),
            [118, 105, 115, 97] => lookup_597(),
            [98, 110] => lookup_598(labels),
            [100, 97, 116, 97] => lookup_599(),
            [99, 111, 109, 112, 97, 114, 101] => lookup_600(),
            [104, 111, 116, 101, 108, 101, 115] => lookup_601(),
            [99, 97, 108, 118, 105, 110, 107, 108, 101, 105, 110] => lookup_602(),
            [224, 170, 173, 224, 170, 190, 224, 170, 176, 224, 170, 164] => lookup_603(),
            [106, 117, 101, 103, 111, 115] => lookup_604(),
            [112, 110, 99] => lookup_605(),
            [107, 105, 116, 99, 104, 101, 110] => lookup_606(),
            [119, 115] => lookup_607(labels),
            [97, 110, 97, 108, 121, 116, 105, 99, 115] => lookup_608(),
            [99, 105, 114, 99, 108, 101] => lookup_609(),
            [102, 114, 111, 103, 97, 110, 115] => lookup_610(),
            [97, 119] => lookup_611(labels),
            [114, 111, 99, 104, 101, 114] => lookup_612(),
            [115, 102, 114] => lookup_613(),
            [208, 188, 208, 190, 209, 129, 208, 186, 208, 178, 208, 176] => lookup_614(),
            [217, 131, 217, 136, 217, 133] => lookup_615(),
            [120, 110, 45, 45, 53, 115, 117, 51, 52, 106, 57, 51, 54, 98, 103, 115, 103] => {
                lookup_616()
            }
            [111, 115, 97, 107, 97] => lookup_617(),
            [110, 111, 114, 116, 111, 110] => lookup_618(),
            [112, 114, 117] => lookup_619(),
            [103, 101, 97] => lookup_620(),
            [103, 109, 98, 104] => lookup_621(),
            [109, 98, 97] => lookup_622(),
            [120, 110, 45, 45, 56, 48, 97, 111, 50, 49, 97] => lookup_623(),
            [114, 101, 97, 108, 101, 115, 116, 97, 116, 101] => lookup_624(),
            [115, 101, 120] => lookup_625(),
            [112, 103] => lookup_626(info, labels),
            [106, 101, 116, 122, 116] => lookup_627(),
            [98, 105] => lookup_628(labels),
            [99, 97, 102, 101] => lookup_629(),
            [99, 104, 101, 97, 112] => lookup_630(),
            [102, 97, 109, 105, 108, 121] => lookup_631(),
            [108, 97, 116, 105, 110, 111] => lookup_632(),
            [112, 108, 97, 121] => lookup_633(),
            [109, 118] => lookup_634(labels),
            [99, 111, 109, 112, 117, 116, 101, 114] => lookup_635(),
            [102, 108, 121] => lookup_636(),
            [105, 115, 109, 97, 105, 108, 105] => lookup_637(),
            [110, 97, 98] => lookup_638(),
            [115, 97, 109, 115, 99, 108, 117, 98] => lookup_639(),
            [108, 97, 109, 101, 114] => lookup_640(),
            [115, 111, 108, 97, 114] => lookup_641(),
            [116, 97, 120] => lookup_642(),
            [116, 104, 101, 97, 116, 101, 114] => lookup_643(),
            [120, 110, 45, 45, 56, 48, 97, 100, 120, 104, 107, 115] => lookup_644(),
            [229, 149, 134, 229, 186, 151] => lookup_645(),
            [98, 111, 111] => lookup_646(),
            [102, 105, 100, 111] => lookup_647(),
            [98, 108, 111, 103] => lookup_648(),
            [114, 105, 111] => lookup_649(),
            [224, 174, 154, 224, 174, 191, 224, 174, 153, 224, 175, 141, 224, 174, 149, 224, 174, 170, 224, 175, 141, 224, 174, 170, 224, 175, 130, 224, 174, 176, 224, 175, 141] => {
                lookup_650()
            }
            [102, 105, 114, 101, 115, 116, 111, 110, 101] => lookup_651(),
            [97, 98, 98, 111, 116, 116] => lookup_652(),
            [120, 110, 45, 45, 109, 103, 98, 97, 51, 97, 52, 102, 49, 54, 97] => lookup_653(),
            [103, 97, 109, 101] => lookup_654(),
            [108, 108, 99] => lookup_655(),
            [115, 97, 107, 117, 114, 97] => lookup_656(),
            [104, 100, 102, 99, 98, 97, 110, 107] => lookup_657(),
            [116, 109, 97, 108, 108] => lookup_658(),
            [120, 110, 45, 45, 99, 50, 98, 114, 55, 103] => lookup_659(),
            [108, 111, 116, 116, 111] => lookup_660(),
            [120, 110, 45, 45, 99, 122, 114, 54, 57, 52, 98] => lookup_661(),
            [103, 121] => lookup_662(labels),
            [228, 184, 150, 231, 149, 140] => lookup_663(),
            [216, 167, 217, 138, 216, 177, 216, 167, 217, 134] => lookup_664(),
            [98, 111, 120] => lookup_665(),
            [120, 110, 45, 45, 102, 99, 116, 52, 50, 57, 107] => lookup_666(),
            [230, 190, 179, 233, 151, 168] => lookup_667(),
            [209, 129, 208, 176, 208, 185, 209, 130] => lookup_668(),
            [105, 115, 116] => lookup_669(),
            [232, 129, 148, 233, 128, 154] => lookup_670(),
            [216, 179, 217, 136, 216, 177, 217, 138, 216, 169] => lookup_671(),
            [230, 151, 182, 229, 176, 154] => lookup_672(),
            [120, 110, 45, 45, 107, 99, 114, 120, 55, 55, 100, 49, 120, 52, 97] => lookup_673(),
            [97, 98, 99] => lookup_674(),
            [99, 97, 114, 101, 101, 114, 115] => lookup_675(),
            [120, 110, 45, 45, 54, 113, 113, 57, 56, 54, 98, 51, 120, 108] => lookup_676(),
            [103, 97, 114, 100, 101, 110] => lookup_677(),
            [103, 114, 101, 101, 110] => lookup_678(),
            [97, 98, 98, 118, 105, 101] => lookup_679(),
            [120, 110, 45, 45, 112, 49, 97, 99, 102] => lookup_680(labels),
            [97, 111] => lookup_681(labels),
            [115, 97, 110, 100, 118, 105, 107] => lookup_682(),
            [99, 101, 110, 116, 101, 114] => lookup_683(),
            [109, 111, 110, 101, 121] => lookup_684(),
            [111, 110, 101] => lookup_685(labels),
            [120, 110, 45, 45, 109, 103, 98, 50, 100, 100, 101, 115] => lookup_686(),
            [107, 97, 117, 102, 101, 110] => lookup_687(),
            [120, 110, 45, 45, 119, 52, 114, 115, 52, 48, 108] => lookup_688(),
            [232, 176, 183, 230, 173, 140] => lookup_689(),
            [97, 122, 117, 114, 101] => lookup_690(),
            [98, 122, 104] => lookup_691(),
            [109, 111, 114, 109, 111, 110] => lookup_692(),
            [121, 97, 109, 97, 120, 117, 110] => lookup_693(),
            [103, 97, 108, 108, 111] => lookup_694(),
            [99, 111, 117, 112, 111, 110, 115] => lookup_695(),
            [120, 110, 45, 45, 106, 108, 113, 54, 49, 117, 57, 119, 55, 98] => lookup_696(),
            [216, 167, 217, 132, 216, 179, 216, 185, 217, 136, 216, 175, 219, 140, 219, 131] => {
                lookup_697()
            }
            [114, 101, 100, 117, 109, 98, 114, 101, 108, 108, 97] => lookup_698(),
            [119, 105, 108, 108, 105, 97, 109, 104, 105, 108, 108] => lookup_699(),
            [105, 110, 115, 117, 114, 101] => lookup_700(),
            [217, 131, 216, 167, 216, 171, 217, 136, 217, 132, 217, 138, 217, 131] => lookup_701(),
            [111, 110, 108] => lookup_702(),
            [115, 116, 99] => lookup_703(),
            [108, 97, 110, 100, 114, 111, 118, 101, 114] => lookup_704(),
            [108, 105, 112, 115, 121] => lookup_705(),
            [97, 108, 105, 98, 97, 98, 97] => lookup_706(),
            [97, 108, 108, 115, 116, 97, 116, 101] => lookup_707(),
            [101, 100, 117, 99, 97, 116, 105, 111, 110] => lookup_708(labels),
            [104, 111, 108, 100, 105, 110, 103, 115] => lookup_709(),
            [109, 99, 107, 105, 110, 115, 101, 121] => lookup_710(),
            [115, 97, 108, 111, 110] => lookup_711(),
            [115, 108] => lookup_712(labels),
            [109, 109, 97] => lookup_713(),
            [115, 116, 114, 101, 97, 109] => lookup_714(),
            [229, 133, 171, 229, 141, 166] => lookup_715(),
            [229, 149, 134, 230, 160, 135] => lookup_716(),
            [110, 104, 107] => lookup_717(),
            [121, 111, 117, 116, 117, 98, 101] => lookup_718(),
            [102, 105, 110, 97, 108] => lookup_719(),
            [109, 108, 115] => lookup_720(),
            [116, 114, 117, 115, 116] => lookup_721(),
            [98, 101, 101, 114] => lookup_722(),
            [104, 101, 114, 109, 101, 115] => lookup_723(),
            [118, 101, 114, 109, 195, 182, 103, 101, 110, 115, 98, 101, 114, 97, 116, 117, 110, 103] => {
                lookup_724()
            }
            [110, 101, 119, 115] => lookup_725(labels),
            [100, 97, 116, 115, 117, 110] => lookup_726(),
            [103, 101] => lookup_727(labels),
            [120, 110, 45, 45, 109, 103, 98, 97, 121, 104, 55, 103, 112, 97] => lookup_728(),
            [97, 99, 99, 111, 117, 110, 116, 97, 110, 116, 115] => lookup_729(),
            [114, 101, 100] => lookup_730(),
            [107, 100, 100, 105] => lookup_731(),
            [108, 105, 118, 101] => lookup_732(),
            [120, 110, 45, 45, 99, 99, 107, 50, 98, 51, 98] => lookup_733(),
            [99, 108, 105, 110, 105, 113, 117, 101] => lookup_734(),
            [107, 112, 109, 103] => lookup_735(),
            [110, 121, 99] => lookup_736(),
            [113, 117, 101, 98, 101, 99] => lookup_737(),
            [119, 111, 114, 107] => lookup_738(labels),
            [217, 130, 216, 183, 216, 177] => lookup_739(),
            [98, 102] => lookup_740(labels),
            [119, 101, 97, 116, 104, 101, 114] => lookup_741(),
            [103, 100] => lookup_742(labels),
            [112, 111, 115, 116] => lookup_743(),
            [97, 99, 116, 111, 114] => lookup_744(),
            [109, 116, 114] => lookup_745(),
            [99, 115, 99] => lookup_746(),
            [108, 97, 110, 99, 105, 97] => lookup_747(),
            [229, 143, 176, 231, 129, 163] => lookup_748(),
            [97, 100, 97, 99] => lookup_749(),
            [102, 97, 115, 104, 105, 111, 110] => lookup_750(labels),
            [98, 109, 119] => lookup_751(),
            [112, 114, 111, 103, 114, 101, 115, 115, 105, 118, 101] => lookup_752(),
            [115, 116, 99, 103, 114, 111, 117, 112] => lookup_753(),
            [97, 115, 115, 111, 99, 105, 97, 116, 101, 115] => lookup_754(),
            [98, 105, 110, 103] => lookup_755(),
            [120, 110, 45, 45, 107, 112, 117, 116, 51, 105] => lookup_756(),
            [229, 164, 167, 230, 139, 191] => lookup_757(),
            [229, 143, 176, 230, 185, 190] => lookup_758(),
            [101, 115] => lookup_759(labels),
            [99, 117] => lookup_760(labels),
            [216, 170, 217, 136, 217, 134, 216, 179] => lookup_761(),
            [98, 98, 99] => lookup_762(),
            [102, 105, 114, 109, 100, 97, 108, 101] => lookup_763(),
            [99, 97, 109, 101, 114, 97] => lookup_764(),
            [106, 101, 119, 101, 108, 114, 121] => lookup_765(),
            [108, 105, 109, 105, 116, 101, 100] => lookup_766(),
            [108, 105, 109, 111] => lookup_767(),
            [115, 101, 114, 118, 105, 99, 101, 115] => lookup_768(labels),
            [115, 116, 97, 114] => lookup_769(),
            [116, 105, 97, 97] => lookup_770(),
            [97, 114, 116, 101] => lookup_771(),
            [99, 111, 114, 115, 105, 99, 97] => lookup_772(),
            [101, 110, 101, 114, 103, 121] => lookup_773(),
            [118, 97, 99, 97, 116, 105, 111, 110, 115] => lookup_774(),
            [99, 105, 112, 114, 105, 97, 110, 105] => lookup_775(),
            [115, 99, 111, 116] => lookup_776(labels),
            [112, 101, 116] => lookup_777(),
            [118, 105, 100, 101, 111] => lookup_778(),
            [119, 111, 111, 100, 115, 105, 100, 101] => lookup_779(),
            [99, 114, 117, 105, 115, 101] => lookup_780(),
            [99, 97, 108] => lookup_781(),
            [120, 110, 45, 45, 118, 117, 113, 56, 54, 49, 98] => lookup_782(),
            [111, 108, 100, 110, 97, 118, 121] => lookup_783(),
            [99, 97, 116, 104, 111, 108, 105, 99] => lookup_784(),
            [99, 111, 110, 115, 117, 108, 116, 105, 110, 103] => lookup_785(),
            [98, 119] => lookup_786(labels),
            [110, 97, 116, 105, 111, 110, 119, 105, 100, 101] => lookup_787(),
            [106, 101, 101, 112] => lookup_788(),
            [97, 98, 108, 101] => lookup_789(),
            [115, 97] => lookup_790(labels),
            [224, 180, 173, 224, 180, 190, 224, 180, 176, 224, 180, 164, 224, 180, 130] => {
                lookup_791()
            }
            [120, 110, 45, 45, 109, 105, 120, 48, 56, 50, 102] => lookup_792(),
            [112, 97] => lookup_793(labels),
            [116, 117, 115, 104, 117] => lookup_794(),
            [120, 110, 45, 45, 102, 105, 113, 115, 56, 115] => lookup_795(),
            [224, 172, 173, 224, 172, 190, 224, 172, 176, 224, 172, 164] => lookup_796(),
            [103, 114, 97, 112, 104, 105, 99, 115] => lookup_797(),
            [120, 110, 45, 45, 120, 107, 99, 50, 97, 108, 51, 104, 121, 101, 50, 97] => {
                lookup_798()
            }
            [108, 112, 108, 102, 105, 110, 97, 110, 99, 105, 97, 108] => lookup_799(),
            [100, 101, 115, 105] => lookup_800(),
            [110, 111, 114, 116, 104, 119, 101, 115, 116, 101, 114, 110, 109, 117, 116, 117, 97, 108] => {
                lookup_801()
            }
            [208, 190, 209, 128, 208, 179] => lookup_802(),
            [216, 167, 217, 133, 216, 167, 216, 177, 216, 167, 216, 170] => lookup_803(),
            [115, 110] => lookup_804(labels),
            [99, 118] => lookup_805(labels),
            [224, 166, 173, 224, 166, 190, 224, 166, 176, 224, 166, 164] => lookup_806(),
            [98, 101] => lookup_807(labels),
            [102, 107] => lookup_808(info, labels),
            [109, 105, 108] => lookup_809(),
            [116, 118] => lookup_810(labels),
            [108, 103, 98, 116] => lookup_811(),
            [112, 97, 114, 116, 121] => lookup_812(labels),
            [98, 114, 111, 97, 100, 119, 97, 121] => lookup_813(),
            [105, 110, 100, 117, 115, 116, 114, 105, 101, 115] => lookup_814(),
            [120, 110, 45, 45, 109, 120, 116, 113, 49, 109] => lookup_815(),
            [120, 110, 45, 45, 109, 103, 98, 97, 97, 107, 99, 55, 100, 118, 102] => lookup_816(),
            [227, 130, 176, 227, 131, 188, 227, 130, 176, 227, 131, 171] => lookup_817(),
            [105, 114] => lookup_818(labels),
            [107, 110] => lookup_819(labels),
            [122, 119] => lookup_820(labels),
            [99, 97, 114, 97, 118, 97, 110] => lookup_821(),
            [99, 111, 109, 109, 98, 97, 110, 107] => lookup_822(),
            [99, 97, 114, 101, 101, 114] => lookup_823(),
            [105, 116, 97, 117] => lookup_824(),
            [118, 117] => lookup_825(labels),
            [99, 98, 97] => lookup_826(),
            [111, 108, 97, 121, 97, 110] => lookup_827(),
            [98, 105, 111] => lookup_828(),
            [116, 100] => lookup_829(labels),
            [114, 101, 110, 116] => lookup_830(),
            [99, 102, 97] => lookup_831(),
            [120, 110, 45, 45, 109, 103, 98, 116, 120, 50, 98] => lookup_832(),
            [99, 104, 114, 111, 109, 101] => lookup_833(),
            [107, 104] => lookup_834(info, labels),
            [112, 97, 114, 115] => lookup_835(),
            [120, 110, 45, 45, 113, 120, 97, 109] => lookup_836(),
            [115, 97, 110, 111, 102, 105] => lookup_837(),
            [115, 104, 97, 110, 103, 114, 105, 108, 97] => lookup_838(),
            [115, 117, 112, 112, 108, 121] => lookup_839(),
            [115, 117, 114, 102] => lookup_840(),
            [98, 108, 97, 99, 107, 102, 114, 105, 100, 97, 121] => lookup_841(),
            [99, 111, 100, 101, 115] => lookup_842(labels),
            [100, 101, 108, 111, 105, 116, 116, 101] => lookup_843(),
            [103, 101, 110, 116, 105, 110, 103] => lookup_844(),
            [116, 109] => lookup_845(labels),
            [228, 184, 173, 229, 155, 189] => lookup_846(),
            [103, 103, 101, 101] => lookup_847(),
            [103, 108, 111, 98, 111] => lookup_848(),
            [98, 97, 110, 97, 109, 101, 120] => lookup_849(),
            [103, 114, 111, 117, 112] => lookup_850(labels),
            [107, 105, 119, 105] => lookup_851(),
            [116, 104, 100] => lookup_852(),
            [116, 111, 107, 121, 111] => lookup_853(),
            [98, 100] => lookup_854(info, labels),
            [115, 107] => lookup_855(labels),
            [117, 98, 115] => lookup_856(),
            [101, 100, 117] => lookup_857(labels),
            [120, 110, 45, 45, 57, 48, 97, 51, 97, 99] => lookup_858(labels),
            [112, 107] => lookup_859(labels),
            [108, 118] => lookup_860(labels),
            [100, 122] => lookup_861(labels),
            [103, 115] => lookup_862(),
            [99, 104, 97, 110, 110, 101, 108] => lookup_863(),
            [100, 111, 109, 97, 105, 110, 115] => lookup_864(),
            [111, 98, 115, 101, 114, 118, 101, 114] => lookup_865(),
            [119, 101, 98, 115, 105, 116, 101] => lookup_866(),
            [228, 184, 173, 228, 191, 161] => lookup_867(),
            [120, 110, 45, 45, 109, 103, 98, 105, 52, 101, 99, 101, 120, 112] => lookup_868(),
            [110, 97, 116, 117, 114, 97] => lookup_869(),
            [229, 190, 174, 229, 141, 154] => lookup_870(),
            [98, 105, 98, 108, 101] => lookup_871(),
            [119, 97, 116, 99, 104] => lookup_872(),
            [114, 105, 99, 104] => lookup_873(),
            [102, 97, 114, 109, 101, 114, 115] => lookup_874(),
            [110, 98, 97] => lookup_875(),
            [114, 101, 112, 117, 98, 108, 105, 99, 97, 110] => lookup_876(),
            [118, 97, 110, 97] => lookup_877(),
            [99, 97, 115, 105, 110, 111] => lookup_878(),
            [119, 105, 101, 110] => lookup_879(),
            [97, 110, 113, 117, 97, 110] => lookup_880(),
            [105, 111] => lookup_881(labels),
            [99, 104, 117, 114, 99, 104] => lookup_882(),
            [99, 111, 111, 108] => lookup_883(labels),
            [216, 168, 218, 190, 216, 167, 216, 177, 216, 170] => lookup_884(),
            [97, 116] => lookup_885(labels),
            [114, 101, 115, 116, 97, 117, 114, 97, 110, 116] => lookup_886(),
            [100, 109] => lookup_887(labels),
            [118, 101, 114, 105, 115, 105, 103, 110] => lookup_888(),
            [120, 110, 45, 45, 106, 49, 97, 101, 102] => lookup_889(),
            [120, 110, 45, 45, 109, 103, 98, 116, 102, 56, 102, 108] => lookup_890(),
            [103, 116] => lookup_891(labels),
            [98, 114, 111, 107, 101, 114] => lookup_892(),
            [99, 97, 115, 97] => lookup_893(labels),
            [115, 119, 105, 115, 115] => lookup_894(),
            [120, 110, 45, 45, 117, 110, 117, 112, 52, 121] => lookup_895(),
            [99, 104, 105, 110, 116, 97, 105] => lookup_896(),
            [106, 111, 98, 115] => lookup_897(),
            [116, 102] => lookup_898(),
            [103, 101, 110, 116] => lookup_899(),
            [99, 97, 109] => lookup_900(),
            [106, 110, 106] => lookup_901(),
            [105, 110, 118, 101, 115, 116, 109, 101, 110, 116, 115] => lookup_902(),
            [111, 110, 103] => lookup_903(),
            [106, 112] => lookup_904(labels),
            [114, 105, 112] => lookup_905(labels),
            [116, 101, 99, 104, 110, 111, 108, 111, 103, 121] => lookup_906(labels),
            [116, 105, 114, 101, 115] => lookup_907(),
            [115, 104, 111, 119, 116, 105, 109, 101] => lookup_908(),
            [116, 111, 116, 97, 108] => lookup_909(),
            [120, 110, 45, 45, 105, 49, 98, 54, 98, 49, 97, 54, 97, 50, 101] => lookup_910(),
            [120, 110, 45, 45, 118, 101, 114, 109, 103, 101, 110, 115, 98, 101, 114, 97, 116, 117, 110, 103, 45, 112, 119, 98] => {
                lookup_911()
            }
            [228, 188, 129, 228, 184, 154] => lookup_912(),
            [120, 110, 45, 45, 104, 50, 98, 114, 101, 103, 51, 101, 118, 101] => lookup_913(),
            [120, 110, 45, 45, 120, 104, 113, 53, 50, 49, 98] => lookup_914(),
            [100, 117, 99, 107] => lookup_915(),
            [105, 110] => lookup_916(labels),
            [120, 110, 45, 45, 102, 112, 99, 114, 106, 57, 99, 51, 100] => lookup_917(),
            [97, 102, 97, 109, 105, 108, 121, 99, 111, 109, 112, 97, 110, 121] => lookup_918(),
            [97, 101, 114, 111] => lookup_919(labels),
            [97, 99, 99, 101, 110, 116, 117, 114, 101] => lookup_920(),
            [98, 114, 117, 115, 115, 101, 108, 115] => lookup_921(),
            [228, 184, 173, 229, 156, 139] => lookup_922(),
            [101, 118, 101, 110, 116, 115] => lookup_923(labels),
            [105, 118, 101, 99, 111] => lookup_924(),
            [112, 105, 122, 122, 97] => lookup_925(),
            [115, 104, 97, 114, 112] => lookup_926(),
            [233, 166, 153, 230, 160, 188, 233, 135, 140, 230, 139, 137] => lookup_927(),
            [120, 110, 45, 45, 103, 107, 51, 97, 116, 49, 101] => lookup_928(),
            [110, 105] => lookup_929(labels),
            [120, 110, 45, 45, 52, 103, 98, 114, 105, 109] => lookup_930(),
            [109, 97, 114, 114, 105, 111, 116, 116] => lookup_931(),
            [114, 101, 104, 97, 98] => lookup_932(),
            [101, 103] => lookup_933(labels),
            [97, 108, 108, 102, 105, 110, 97, 110, 122] => lookup_934(),
            [104, 111, 117, 115, 101] => lookup_935(),
            [120, 110, 45, 45, 53, 53, 113, 119, 52, 50, 103] => lookup_936(),
            [99, 98, 115] => lookup_937(),
            [103, 97, 108, 108, 117, 112] => lookup_938(),
            [115, 109, 97, 114, 116] => lookup_939(),
            [105, 110, 103] => lookup_940(),
            [109, 104] => lookup_941(),
            [120, 110, 45, 45, 98, 99, 107, 49, 98, 57, 97, 53, 100, 114, 101, 52, 99] => {
                lookup_942()
            }
            [111, 107, 105, 110, 97, 119, 97] => lookup_943(),
            [120, 110, 45, 45, 108, 103, 98, 98, 97, 116, 49, 97, 100, 56, 106] => lookup_944(),
            [120, 110, 45, 45, 110, 103, 98, 101, 57, 101, 48, 97] => lookup_945(),
            [116, 97, 108, 107] => lookup_946(),
            [97, 103] => lookup_947(labels),
            [116, 114, 97, 118, 101, 108, 101, 114, 115, 105, 110, 115, 117, 114, 97, 110, 99, 101] => {
                lookup_948()
            }
            [112, 111, 108, 105, 116, 105, 101] => lookup_949(),
            [97, 110, 122] => lookup_950(),
            [117, 112, 115] => lookup_951(),
            [119, 101, 100, 100, 105, 110, 103] => lookup_952(),
            [110, 97, 109, 101] => lookup_953(labels),
            [107, 109] => lookup_954(labels),
            [99, 97, 109, 112] => lookup_955(),
            [103, 114, 105, 112, 101] => lookup_956(),
            [112, 101] => lookup_957(labels),
            [114, 111, 111, 109] => lookup_958(),
            [112, 114, 111, 100] => lookup_959(),
            [115, 101, 97, 114, 99, 104] => lookup_960(),
            [100, 105, 114, 101, 99, 116, 111, 114, 121] => lookup_961(),
            [101, 114, 110, 105] => lookup_962(),
            [115, 104, 111, 101, 115] => lookup_963(),
            [116, 114, 97, 118, 101, 108, 101, 114, 115] => lookup_964(),
            [109, 117] => lookup_965(labels),
            [231, 130, 185, 231, 156, 139] => lookup_966(),
            [120, 110, 45, 45, 99, 122, 114, 117, 50, 100] => lookup_967(),
            [232, 180, 173, 231, 137, 169] => lookup_968(),
            [235, 139, 183, 236, 187, 180] => lookup_969(),
            [99, 97, 114, 101] => lookup_970(),
            [216, 185, 216, 177, 216, 168] => lookup_971(),
            [104, 111, 115, 116] => lookup_972(labels),
            [114, 101, 105, 116] => lookup_973(),
            [98, 97, 105, 100, 117] => lookup_974(),
            [105, 116, 118] => lookup_975(),
            [97, 114, 97, 109, 99, 111] => lookup_976(),
            [114, 101, 112, 97, 105, 114] => lookup_977(),
            [116, 111, 117, 114, 115] => lookup_978(),
            [99, 110] => lookup_979(labels),
            [110, 101] => lookup_980(),
            [98, 117, 100, 97, 112, 101, 115, 116] => lookup_981(),
            [99, 114, 101, 100, 105, 116, 99, 97, 114, 100] => lookup_982(),
            [103, 105, 118, 105, 110, 103] => lookup_983(),
            [104, 105, 115, 97, 109, 105, 116, 115, 117] => lookup_984(),
            [99, 105, 116, 105] => lookup_985(),
            [99, 108, 97, 105, 109, 115] => lookup_986(),
            [116, 122] => lookup_987(labels),
            [97, 114, 99, 104, 105] => lookup_988(),
            [217, 129, 217, 132, 216, 179, 216, 183, 217, 138, 217, 134] => lookup_989(),
            [98, 111, 115, 116, 111, 110] => lookup_990(),
            [99, 105, 116, 97, 100, 101, 108] => lookup_991(),
            [103, 109, 97, 105, 108] => lookup_992(),
            [109, 105, 97, 109, 105] => lookup_993(),
            [111, 116, 116] => lookup_994(),
            [112, 102, 105, 122, 101, 114] => lookup_995(),
            [105, 110, 116] => lookup_996(labels),
            [118, 105, 114, 103, 105, 110] => lookup_997(),
            [100, 101, 97, 108, 115] => lookup_998(),
            [119, 109, 101] => lookup_999(),
            [120, 110, 45, 45, 57, 48, 97, 101] => lookup_1000(),
            [102, 111, 114, 101, 120] => lookup_1001(),
            [108, 105, 102, 101, 115, 116, 121, 108, 101] => lookup_1002(),
            [120, 110, 45, 45, 57, 107, 114, 116, 48, 48, 97] => lookup_1003(),
            [229, 149, 134, 229, 159, 142] => lookup_1004(),
            [121, 111, 103, 97] => lookup_1005(),
            [115, 116, 97, 112, 108, 101, 115] => lookup_1006(),
            [228, 184, 173, 230, 150, 135, 231, 189, 145] => lookup_1007(),
            [120, 110, 45, 45, 102, 105, 113, 54, 52, 98] => lookup_1008(),
            [110, 102, 108] => lookup_1009(),
            [100, 100, 115] => lookup_1010(),
            [108, 111, 108] => lookup_1011(labels),
            [97, 114] => lookup_1012(labels),
            [102, 105, 97, 116] => lookup_1013(),
            [116, 97, 116, 116, 111, 111] => lookup_1014(),
            [116, 111, 112] => lookup_1015(labels),
            [224, 164, 184, 224, 164, 130, 224, 164, 151, 224, 164, 160, 224, 164, 168] => {
                lookup_1016()
            }
            [122, 105, 112] => lookup_1017(),
            [97, 102, 114, 105, 99, 97] => lookup_1018(),
            [100, 111, 99, 115] => lookup_1019(),
            [116, 107, 109, 97, 120, 120] => lookup_1020(),
            [99, 114, 101, 100, 105, 116, 117, 110, 105, 111, 110] => lookup_1021(),
            [227, 130, 162, 227, 131, 158, 227, 130, 190, 227, 131, 179] => lookup_1022(),
            [99, 105, 116, 105, 99] => lookup_1023(),
            [98, 98, 116] => lookup_1024(),
            [110, 111] => lookup_1025(labels),
            [102, 108, 105, 103, 104, 116, 115] => lookup_1026(),
            [108, 111, 97, 110, 115] => lookup_1027(),
            [112, 114, 97, 120, 105] => lookup_1028(),
            [112, 114, 111, 109, 111] => lookup_1029(),
            [233, 164, 144, 229, 142, 133] => lookup_1030(),
            [229, 185, 191, 228, 184, 156] => lookup_1031(),
            [101, 120, 99, 104, 97, 110, 103, 101] => lookup_1032(),
            [108, 105, 103, 104, 116, 105, 110, 103] => lookup_1033(),
            [106, 111] => lookup_1034(labels),
            [102, 101, 114, 114, 101, 114, 111] => lookup_1035(),
            [102, 97, 105, 114, 119, 105, 110, 100, 115] => lookup_1036(),
            [104, 105, 112, 104, 111, 112] => lookup_1037(),
            [119, 97, 108, 101, 115] => lookup_1038(),
            [120, 110, 45, 45, 109, 103, 98, 98, 104, 49, 97] => lookup_1039(),
            [104, 101, 97, 108, 116, 104, 99, 97, 114, 101] => lookup_1040(),
            [120, 110, 45, 45, 51, 111, 113, 49, 56, 118, 108, 56, 112, 110, 51, 54, 97] => {
                lookup_1041()
            }
            [216, 185, 217, 133, 216, 167, 217, 134] => lookup_1042(),
            [97, 117, 116, 111, 115] => lookup_1043(),
            [116, 105, 99, 107, 101, 116, 115] => lookup_1044(),
            [110, 99] => lookup_1045(labels),
            [98, 108, 111, 99, 107, 98, 117, 115, 116, 101, 114] => lookup_1046(),
            [97, 118, 105, 97, 110, 99, 97] => lookup_1047(),
            [114, 105, 99, 104, 97, 114, 100, 108, 105] => lookup_1048(),
            [99, 97, 110, 99, 101, 114, 114, 101, 115, 101, 97, 114, 99, 104] => lookup_1049(),
            [103, 111, 112] => lookup_1050(),
            [109, 108, 98] => lookup_1051(),
            [109, 114] => lookup_1052(labels),
            [98, 117, 115, 105, 110, 101, 115, 115] => lookup_1053(labels),
            [109, 97, 114, 107, 101, 116] => lookup_1054(),
            [120, 110, 45, 45, 110, 111, 100, 101] => lookup_1055(),
            [106, 111, 121] => lookup_1056(),
            [120, 110, 45, 45, 121, 57, 97, 51, 97, 113] => lookup_1057(),
            [120, 110, 45, 45, 112, 49, 97, 105] => lookup_1058(),
            [110, 116, 116] => lookup_1059(),
            [115, 112, 114, 101, 97, 100, 98, 101, 116, 116, 105, 110, 103] => lookup_1060(),
            [119, 101, 98, 101, 114] => lookup_1061(),
            [104, 111, 109, 101, 115, 101, 110, 115, 101] => lookup_1062(),
            [100, 105, 97, 109, 111, 110, 100, 115] => lookup_1063(),
            [104, 111, 99, 107, 101, 121] => lookup_1064(),
            [106, 109, 112] => lookup_1065(),
            [103, 108, 97, 115, 115] => lookup_1066(),
            [229, 156, 168, 231, 186, 191] => lookup_1067(),
            [108, 111, 102, 116] => lookup_1068(),
            [99, 111, 110, 116, 114, 97, 99, 116, 111, 114, 115] => lookup_1069(),
            [107, 105, 97] => lookup_1070(),
            [102, 111, 114, 100] => lookup_1071(),
            [111, 118, 104] => lookup_1072(labels),
            [115, 114, 108] => lookup_1073(),
            [97, 100, 115] => lookup_1074(),
            [115, 121, 115, 116, 101, 109, 115] => lookup_1075(labels),
            [116, 111, 111, 108, 115] => lookup_1076(),
            [97, 98, 111, 103, 97, 100, 111] => lookup_1077(),
            [102, 105, 108, 109] => lookup_1078(),
            [120, 110, 45, 45, 101, 102, 118, 121, 56, 56, 104] => lookup_1079(),
            [120, 110, 45, 45, 102, 122, 121, 115, 56, 100, 54, 57, 117, 118, 103, 109] => {
                lookup_1080()
            }
            [120, 110, 45, 45, 111, 103, 98, 112, 102, 56, 102, 108] => lookup_1081(),
            [107, 121, 111, 116, 111] => lookup_1082(),
            [118, 105, 97, 106, 101, 115] => lookup_1083(),
            [97, 117] => lookup_1084(labels),
            [107, 103] => lookup_1085(labels),
            [104, 115, 98, 99] => lookup_1086(),
            [121, 111, 107, 111, 104, 97, 109, 97] => lookup_1087(),
            [112, 105, 111, 110, 101, 101, 114] => lookup_1088(),
            [115, 119, 105, 102, 116, 99, 111, 118, 101, 114] => lookup_1089(),
            [98, 111, 111, 107, 105, 110, 103] => lookup_1090(),
            [99, 111, 109] => lookup_1091(labels),
            [110, 101, 120, 116] => lookup_1092(),
            [229, 133, 172, 231, 155, 138] => lookup_1093(),
            [99, 97, 98] => lookup_1094(),
            [103, 105, 118, 101, 115] => lookup_1095(),
            [120, 110, 45, 45, 105, 109, 114, 53, 49, 51, 110] => lookup_1096(),
            [98, 98, 118, 97] => lookup_1097(),
            [102, 114, 101, 115, 101, 110, 105, 117, 115] => lookup_1098(),
            [100, 97, 121] => lookup_1099(),
            [107, 105, 110, 100, 101, 114] => lookup_1100(),
            [115, 111, 99, 99, 101, 114] => lookup_1101(),
            [120, 110, 45, 45, 49, 99, 107, 50, 101, 49, 98] => lookup_1102(),
            [109, 105, 116] => lookup_1103(),
            [109, 105, 116, 115, 117, 98, 105, 115, 104, 105] => lookup_1104(),
            [112, 105, 99, 116, 117, 114, 101, 115] => lookup_1105(labels),
            [120, 105, 104, 117, 97, 110] => lookup_1106(),
            [216, 167, 217, 132, 216, 185, 217, 132, 217, 138, 216, 167, 217, 134] => lookup_1107(),
            [116, 118, 115] => lookup_1108(),
            [111, 102, 102] => lookup_1109(),
            [237, 149, 156, 234, 181, 173] => lookup_1110(),
            [116, 101, 99, 104] => lookup_1111(),
            [112, 102] => lookup_1112(labels),
            [119, 104, 111, 115, 119, 104, 111] => lookup_1113(),
            [112, 114, 105, 109, 101] => lookup_1114(),
            [118, 105, 115, 105, 111, 110] => lookup_1115(),
            [114, 101, 100, 115, 116, 111, 110, 101] => lookup_1116(),
            [97, 99, 111] => lookup_1117(),
            [98, 108, 111, 111, 109, 98, 101, 114, 103] => lookup_1118(),
            [112, 105, 99, 116, 101, 116] => lookup_1119(),
            [115, 111, 104, 117] => lookup_1120(),
            [114, 117, 103, 98, 121] => lookup_1121(),
            [97, 113] => lookup_1122(),
            [119, 102] => lookup_1123(),
            [115, 112, 97] => lookup_1124(),
            [224, 164, 173, 224, 164, 190, 224, 164, 176, 224, 164, 164, 224, 164, 174, 224, 165, 141] => {
                lookup_1125()
            }
            [97, 117, 115, 112, 111, 115, 116] => lookup_1126(),
            [116, 105, 112, 115] => lookup_1127(),
            [103, 114, 97, 105, 110, 103, 101, 114] => lookup_1128(),
            [119, 105, 107, 105] => lookup_1129(),
            [120, 110, 45, 45, 99, 49, 97, 118, 103] => lookup_1130(),
            [120, 110, 45, 45, 109, 103, 98, 97, 105, 57, 97, 122, 103, 113, 112, 54, 106] => {
                lookup_1131()
            }
            [108, 105, 102, 101, 105, 110, 115, 117, 114, 97, 110, 99, 101] => lookup_1132(),
            [216, 167, 217, 132, 216, 167, 216, 177, 216, 175, 217, 134] => lookup_1133(),
            [120, 110, 45, 45, 102, 122, 99, 50, 99, 57, 101, 50, 99] => lookup_1134(),
            [98, 101, 115, 116] => lookup_1135(),
            [103, 97, 109, 101, 115] => lookup_1136(),
            [105, 110, 102, 111] => lookup_1137(labels),
            [101, 114, 105, 99, 115, 115, 111, 110] => lookup_1138(),
            [115, 101, 110, 101, 114] => lookup_1139(),
            [120, 110, 45, 45, 103, 50, 120, 120, 52, 56, 99] => lookup_1140(),
            [104, 111, 119] => lookup_1141(),
            [108, 111, 99, 107, 101, 114] => lookup_1142(),
            [115, 97, 112] => lookup_1143(),
            [98, 97, 115, 107, 101, 116, 98, 97, 108, 108] => lookup_1144(labels),
            [109, 111, 105] => lookup_1145(),
            [109, 111, 118] => lookup_1146(),
            [119, 101, 105, 114] => lookup_1147(),
            [97, 107, 100, 110] => lookup_1148(),
            [103, 117] => lookup_1149(labels),
            [120, 110, 45, 45, 103, 101, 99, 114, 106, 57, 99] => lookup_1150(),
            [97, 112, 112, 108, 101] => lookup_1151(),
            [101, 97, 114, 116, 104] => lookup_1152(labels),
            [109, 101, 110, 117] => lookup_1153(labels),
            [100, 111, 103] => lookup_1154(),
            [114, 101, 115, 116] => lookup_1155(),
            [109, 116] => lookup_1156(labels),
            [115, 99, 98] => lookup_1157(),
            [115, 117, 112, 112, 108, 105, 101, 115] => lookup_1158(),
            [116, 97, 116, 97, 109, 111, 116, 111, 114, 115] => lookup_1159(),
            [97, 101, 116, 110, 97] => lookup_1160(),
            [109, 111, 114, 116, 103, 97, 103, 101] => lookup_1161(),
            [120, 110, 45, 45, 51, 101, 48, 98, 55, 48, 55, 101] => lookup_1162(),
            [115, 97, 97, 114, 108, 97, 110, 100] => lookup_1163(),
            [236, 130, 188, 236, 132, 177] => lookup_1164(),
            [109, 111, 110, 97, 115, 104] => lookup_1165(),
            [109, 107] => lookup_1166(labels),
            [105, 98, 109] => lookup_1167(),
            [101, 99] => lookup_1168(labels),
            [120, 110, 45, 45, 100, 49, 97, 108, 102] => lookup_1169(),
            [97, 112, 97, 114, 116, 109, 101, 110, 116, 115] => lookup_1170(),
            [110, 105, 115, 115, 97, 110] => lookup_1171(),
            [120, 110, 45, 45, 110, 113, 118, 55, 102] => lookup_1172(),
            [120, 105, 110] => lookup_1173(),
            [104, 121, 97, 116, 116] => lookup_1174(),
            [112, 109] => lookup_1175(labels),
            [120, 110, 45, 45, 114, 118, 99, 49, 101, 48, 97, 109, 51, 101] => lookup_1176(),
            [120, 110, 45, 45, 109, 103, 98, 113, 108, 121, 55, 99, 118, 97, 102, 114] => {
                lookup_1177()
            }
            [103, 100, 110] => lookup_1178(labels),
            [115, 101, 118, 101, 110] => lookup_1179(),
            [109, 108] => lookup_1180(labels),
            [116, 105, 114, 111, 108] => lookup_1181(),
            [109, 103] => lookup_1182(labels),
            [98, 111, 115, 99, 104] => lookup_1183(),
            [114, 101, 105, 115, 101, 110] => lookup_1184(),
            [104, 101, 114, 101] => lookup_1185(),
            [99, 108, 111, 116, 104, 105, 110, 103] => lookup_1186(),
            [109, 122] => lookup_1187(labels),
            [120, 110, 45, 45, 104, 50, 98, 114, 106, 57, 99] => lookup_1188(),
            [105, 109, 100, 98] => lookup_1189(),
            [99, 97, 110, 111, 110] => lookup_1190(),
            [208, 177, 208, 181, 208, 187] => lookup_1191(),
            [120, 110, 45, 45, 102, 105, 113, 122, 57, 115] => lookup_1192(),
            [97, 114, 97, 98] => lookup_1193(),
            [224, 174, 135, 224, 174, 178, 224, 174, 153, 224, 175, 141, 224, 174, 149, 224, 175, 136] => {
                lookup_1194()
            }
            [104, 105, 116, 97, 99, 104, 105] => lookup_1195(),
            [108, 101, 120, 117, 115] => lookup_1196(),
            [99, 97, 112, 105, 116, 97, 108, 111, 110, 101] => lookup_1197(),
            [106, 112, 114, 115] => lookup_1198(),
            [108, 117, 120, 101] => lookup_1199(),
            [98, 101, 115, 116, 98, 117, 121] => lookup_1200(),
            [101, 116, 105, 115, 97, 108, 97, 116] => lookup_1201(),
            [112, 114, 117, 100, 101, 110, 116, 105, 97, 108] => lookup_1202(),
            [114, 111, 100, 101, 111] => lookup_1203(),
            [104, 111, 115, 112, 105, 116, 97, 108] => lookup_1204(),
            [115, 101, 115] => lookup_1205(),
            [115, 110, 99, 102] => lookup_1206(),
            [116, 114, 97, 105, 110, 105, 110, 103] => lookup_1207(),
            [97, 120] => lookup_1208(labels),
            [120, 110, 45, 45, 99, 122, 114, 115, 48, 116] => lookup_1209(),
            [98, 104, 97, 114, 116, 105] => lookup_1210(),
            [229, 129, 165, 229, 186, 183] => lookup_1211(),
            [216, 167, 217, 132, 217, 138, 217, 133, 217, 134] => lookup_1212(),
            [120, 110, 45, 45, 99, 103, 52, 98, 107, 105] => lookup_1213(),
            [103, 97] => lookup_1214(),
            [104, 109] => lookup_1215(),
            [120, 110, 45, 45, 121, 103, 98, 105, 50, 97, 109, 109, 120] => lookup_1216(),
            [118, 105, 107, 105, 110, 103] => lookup_1217(),
            [120, 110, 45, 45, 109, 103, 98, 99, 48, 97, 57, 97, 122, 99, 103] => lookup_1218(),
            [120, 110, 45, 45, 56, 48, 97, 115, 101, 104, 100, 98] => lookup_1219(),
            [120, 110, 45, 45, 108, 49, 97, 99, 99] => lookup_1220(),
            [112, 115] => lookup_1221(labels),
            [120, 110, 45, 45, 120, 107, 99, 50, 100, 108, 51, 97, 53, 101, 101, 48, 104] => {
                lookup_1222()
            }
            [227, 130, 185, 227, 131, 136, 227, 130, 162] => lookup_1223(),
            [118, 97, 110, 103, 117, 97, 114, 100] => lookup_1224(),
            [112, 105, 110] => lookup_1225(),
            [112, 114, 111, 112, 101, 114, 116, 105, 101, 115] => lookup_1226(),
            [118, 105, 118, 111] => lookup_1227(),
            [97, 98, 98] => lookup_1228(),
            [102, 111] => lookup_1229(),
            [104, 111, 109, 101, 100, 101, 112, 111, 116] => lookup_1230(),
            [102, 105, 115, 104] => lookup_1231(),
            [114, 101, 97, 108, 116, 111, 114] => lookup_1232(),
            [120, 110, 45, 45, 109, 103, 98, 97, 105, 57, 97, 53, 101, 118, 97, 48, 48, 98] => {
                lookup_1233()
            }
            [120, 110, 45, 45, 112, 103, 98, 115, 48, 100, 104] => lookup_1234(),
            [213, 176, 213, 161, 213, 181] => lookup_1235(),
            [108, 105, 107, 101] => lookup_1236(),
            [115, 105, 108, 107] => lookup_1237(),
            [120, 110, 45, 45, 110, 110, 120, 51, 56, 56, 97] => lookup_1238(),
            [99, 108, 101, 97, 110, 105, 110, 103] => lookup_1239(),
            [103, 111, 116] => lookup_1240(),
            [109, 111, 116, 111] => lookup_1241(),
            [109, 117, 115, 101, 117, 109] => lookup_1242(labels),
            [114, 109, 105, 116] => lookup_1243(),
            [116, 111, 114, 97, 121] => lookup_1244(),
            [105, 110, 116, 101, 114, 110, 97, 116, 105, 111, 110, 97, 108] => lookup_1245(),
            [109, 97, 100, 114, 105, 100] => lookup_1246(),
            [120, 110, 45, 45, 111, 116, 117, 55, 57, 54, 100] => lookup_1247(),
            [228, 191, 161, 230, 129, 175] => lookup_1248(),
            [114, 111, 99, 107, 115] => lookup_1249(labels),
            [108, 121] => lookup_1250(labels),
            [107, 119] => lookup_1251(labels),
            [115, 104, 105, 97] => lookup_1252(),
            [97, 97, 97] => lookup_1253(),
            [97, 116, 116, 111, 114, 110, 101, 121] => lookup_1254(),
            [102, 97, 103, 101] => lookup_1255(),
            [110, 105, 107, 101] => lookup_1256(),
            [120, 110, 45, 45, 54, 102, 114, 122, 56, 50, 103] => lookup_1257(),
            [105, 101] => lookup_1258(labels),
            [100, 105, 115, 99, 111, 117, 110, 116] => lookup_1259(),
            [108, 97, 119, 121, 101, 114] => lookup_1260(),
            [112, 111, 107, 101, 114] => lookup_1261(),
            [97, 97, 114, 112] => lookup_1262(),
            [112, 104, 111, 116, 111, 103, 114, 97, 112, 104, 121] => lookup_1263(),
            [99, 114, 111, 119, 110] => lookup_1264(),
            [115, 111, 99, 105, 97, 108] => lookup_1265(),
            [108, 114] => lookup_1266(labels),
            [97, 111, 108] => lookup_1267(),
            [112, 104, 111, 116, 111] => lookup_1268(),
            [115, 119, 97, 116, 99, 104] => lookup_1269(),
            [118, 111, 100, 107, 97] => lookup_1270(),
            [120, 110, 45, 45, 49, 113, 113, 119, 50, 51, 97] => lookup_1271(),
            [98, 99, 110] => lookup_1272(),
            [99, 97, 114] => lookup_1273(),
            [112, 114, 101, 115, 115] => lookup_1274(),
            [115, 121, 100, 110, 101, 121] => lookup_1275(),
            [114, 97, 100, 105, 111] => lookup_1276(),
            [120, 110, 45, 45, 109, 107, 49, 98, 117, 52, 52, 99] => lookup_1277(),
            [116, 107] => lookup_1278(),
            [121, 97, 104, 111, 111] => lookup_1279(),
            [120, 110, 45, 45, 51, 112, 120, 117, 56, 107] => lookup_1280(),
            [120, 110, 45, 45, 106, 118, 114, 49, 56, 57, 109] => lookup_1281(),
            [109, 97, 107, 101, 117, 112] => lookup_1282(),
            [112, 99, 99, 119] => lookup_1283(),
            [120, 110, 45, 45, 109, 103, 98, 98, 104, 49, 97, 55, 49, 101] => lookup_1284(),
            [116, 106] => lookup_1285(labels),
            [99, 97, 114, 100, 115] => lookup_1286(),
            [112, 104, 121, 115, 105, 111] => lookup_1287(),
            [106, 99, 98] => lookup_1288(),
            [108, 105, 102, 101] => lookup_1289(),
            [227, 129, 191, 227, 130, 147, 227, 129, 170] => lookup_1290(),
            [101, 99, 111] => lookup_1291(),
            [115, 114] => lookup_1292(),
            [104, 111, 114, 115, 101] => lookup_1293(),
            [101, 117, 115] => lookup_1294(labels),
            [101, 109, 97, 105, 108] => lookup_1295(),
            [97, 114, 112, 97] => lookup_1296(labels),
            [100, 114, 105, 118, 101] => lookup_1297(),
            [104, 101, 108, 112] => lookup_1298(),
            [108, 111, 116, 116, 101] => lookup_1299(),
            [117, 110, 111] => lookup_1300(),
            [120, 110, 45, 45, 109, 103, 98, 97, 98, 50, 98, 100] => lookup_1301(),
            [119, 97, 110, 103, 103, 111, 117] => lookup_1302(),
            [116, 97, 116, 97, 114] => lookup_1303(),
            [112, 116] => lookup_1304(labels),
            [120, 110, 45, 45, 119, 103, 98, 108, 54, 97] => lookup_1305(),
            [102, 97, 105, 116, 104] => lookup_1306(labels),
            [104, 117, 103, 104, 101, 115] => lookup_1307(),
            [119, 111, 108, 116, 101, 114, 115, 107, 108, 117, 119, 101, 114] => lookup_1308(),
            [107, 114] => lookup_1309(labels),
            [108, 107] => lookup_1310(labels),
            [105, 116] => lookup_1311(labels),
            [99, 102] => lookup_1312(labels),
            [115, 109] => lookup_1313(),
            [120, 110, 45, 45, 109, 103, 98, 97, 97, 109, 55, 97, 56, 104] => lookup_1314(),
            [98, 108, 117, 101] => lookup_1315(),
            [99, 112, 97] => lookup_1316(),
            [114, 101, 112, 111, 114, 116] => lookup_1317(),
            [231, 167, 187, 229, 138, 168] => lookup_1318(),
            [208, 186, 208, 190, 208, 188] => lookup_1319(),
            [106, 101] => lookup_1320(labels),
            [229, 152, 137, 233, 135, 140, 229, 164, 167, 233, 133, 146, 229, 186, 151] => {
                lookup_1321()
            }
            [99, 103] => lookup_1322(),
            [108, 115] => lookup_1323(labels),
            [98, 111, 110, 100] => lookup_1324(),
            [119, 101, 105, 98, 111] => lookup_1325(),
            [117, 110, 105, 118, 101, 114, 115, 105, 116, 121] => lookup_1326(),
            [111, 114, 103, 97, 110, 105, 99] => lookup_1327(),
            [120, 110, 45, 45, 56, 121, 48, 97, 48, 54, 51, 97] => lookup_1328(),
            [120, 110, 45, 45, 109, 103, 98, 97, 51, 97, 51, 101, 106, 116] => lookup_1329(),
            [108, 99] => lookup_1330(labels),
            [101, 109, 101, 114, 99, 107] => lookup_1331(),
            [120, 110, 45, 45, 107, 112, 114, 119, 49, 51, 100] => lookup_1332(),
            [99, 111, 117, 110, 116, 114, 121] => lookup_1333(),
            [102, 114, 108] => lookup_1334(),
            [102, 109] => lookup_1335(labels),
            [101, 117, 114, 111, 118, 105, 115, 105, 111, 110] => lookup_1336(),
            [97, 100, 117, 108, 116] => lookup_1337(),
            [102, 114, 101, 101] => lookup_1338(),
            [103, 108, 97, 100, 101] => lookup_1339(),
            [118, 99] => lookup_1340(labels),
            [114, 97, 99, 105, 110, 103] => lookup_1341(),
            [115, 112, 111, 114, 116] => lookup_1342(),
            [229, 164, 167, 228, 188, 151, 230, 177, 189, 232, 189, 166] => lookup_1343(),
            [120, 110, 45, 45, 104, 50, 98, 114, 106, 57, 99, 56, 99] => lookup_1344(),
            [107, 101] => lookup_1345(labels),
            [99, 117, 105, 115, 105, 110, 101, 108, 108, 97] => lookup_1346(),
            [216, 167, 216, 168, 217, 136, 216, 184, 216, 168, 217, 138] => lookup_1347(),
            [122, 97, 114, 97] => lookup_1348(),
            [98, 105, 110, 103, 111] => lookup_1349(),
            [97, 115] => lookup_1350(labels),
            [99, 111, 109, 99, 97, 115, 116] => lookup_1351(),
            [102, 101, 101, 100, 98, 97, 99, 107] => lookup_1352(),
            [105, 109, 109, 111] => lookup_1353(),
            [115, 104, 97, 119] => lookup_1354(),
            [122, 97, 112, 112, 111, 115] => lookup_1355(),
            [114, 101, 99, 105, 112, 101, 115] => lookup_1356(),
            [224, 178, 173, 224, 178, 190, 224, 178, 176, 224, 178, 164] => lookup_1357(),
            [121, 111, 100, 111, 98, 97, 115, 104, 105] => lookup_1358(),
            [103, 103] => lookup_1359(labels),
            [104, 111, 110, 100, 97] => lookup_1360(),
            [97, 119, 115] => lookup_1361(),
            [98, 111, 117, 116, 105, 113, 117, 101] => lookup_1362(),
            [99, 101, 111] => lookup_1363(),
            [112, 108] => lookup_1364(labels),
            [97, 102] => lookup_1365(labels),
            [208, 177, 208, 179] => lookup_1366(),
            [98, 101, 97, 117, 116, 121] => lookup_1367(),
            [104, 121, 117, 110, 100, 97, 105] => lookup_1368(),
            [103, 101, 111, 114, 103, 101] => lookup_1369(),
            [110, 105, 115, 115, 97, 121] => lookup_1370(),
            [120, 98, 111, 120] => lookup_1371(),
            [103, 98, 105, 122] => lookup_1372(),
            [100, 117, 98, 97, 105] => lookup_1373(),
            [115, 101, 99, 117, 114, 105, 116, 121] => lookup_1374(),
            [209, 128, 209, 132] => lookup_1375(),
            [116, 119] => lookup_1376(labels),
            [110, 105, 110, 106, 97] => lookup_1377(),
            [114, 101, 97, 100] => lookup_1378(),
            [119, 97, 116, 99, 104, 101, 115] => lookup_1379(),
            [208, 188, 208, 190, 208, 189] => lookup_1380(),
            [104, 107] => lookup_1381(labels),
            [102, 114, 111, 110, 116, 100, 111, 111, 114] => lookup_1382(),
            [106, 97, 103, 117, 97, 114] => lookup_1383(),
            [109, 113] => lookup_1384(),
            [108, 97, 99, 97, 105, 120, 97] => lookup_1385(),
            [110, 97, 118, 121] => lookup_1386(),
            [224, 174, 135, 224, 174, 168, 224, 175, 141, 224, 174, 164, 224, 174, 191, 224, 174, 175, 224, 174, 190] => {
                lookup_1387()
            }
            [120, 110, 45, 45, 119, 103, 98, 104, 49, 99] => lookup_1388(),
            [224, 166, 173, 224, 166, 190, 224, 167, 176, 224, 166, 164] => lookup_1389(),
            [108, 116] => lookup_1390(labels),
            [109, 111, 110, 115, 116, 101, 114] => lookup_1391(),
            [116, 105, 102, 102, 97, 110, 121] => lookup_1392(),
            [230, 148, 191, 229, 186, 156] => lookup_1393(),
            [108, 108, 112] => lookup_1394(),
            [111, 109, 101, 103, 97] => lookup_1395(),
            [110, 105, 99, 111] => lookup_1396(),
            [104, 105, 118] => lookup_1397(),
            [112, 105, 100] => lookup_1398(),
            [115, 104, 111, 119] => lookup_1399(),
            [99, 108, 117, 98, 109, 101, 100] => lookup_1400(),
            [116, 97, 114, 103, 101, 116] => lookup_1401(),
            [121, 97, 99, 104, 116, 115] => lookup_1402(),
            [98, 105, 122] => lookup_1403(labels),
            [98, 117, 103, 97, 116, 116, 105] => lookup_1404(),
            [99, 111, 109, 109, 117, 110, 105, 116, 121] => lookup_1405(labels),
            [109, 105, 110, 105] => lookup_1406(),
            [115, 101, 97, 116] => lookup_1407(),
            [117, 107] => lookup_1408(labels),
            [116, 111, 119, 110] => lookup_1409(),
            [114, 101, 105, 115, 101] => lookup_1410(),
            [109, 99] => lookup_1411(labels),
            [104, 101, 97, 108, 116, 104] => lookup_1412(),
            [110, 101, 116] => lookup_1413(labels),
            [98, 122] => lookup_1414(labels),
            [109, 111, 98, 105] => lookup_1415(labels),
            [114, 117, 110] => lookup_1416(labels),
            [119, 105, 110, 101] => lookup_1417(),
            [118, 101, 116] => lookup_1418(),
            [100, 101, 110, 116, 105, 115, 116] => lookup_1419(),
            [109, 97] => lookup_1420(labels),
            [115, 106] => lookup_1421(),
            [101, 114] => lookup_1422(info, labels),
            [216, 167, 217, 132, 216, 168, 216, 173, 216, 177, 217, 138, 217, 134] => lookup_1423(),
            [100, 117, 114, 98, 97, 110] => lookup_1424(),
            [102, 105, 100, 101, 108, 105, 116, 121] => lookup_1425(),
            [98, 114, 111, 116, 104, 101, 114] => lookup_1426(),
            [103, 111, 118] => lookup_1427(),
            [117, 122] => lookup_1428(labels),
            [99, 105, 115, 99, 111] => lookup_1429(),
            [99, 114, 101, 100, 105, 116] => lookup_1430(),
            [216, 179, 217, 136, 216, 175, 216, 167, 217, 134] => lookup_1431(),
            [98, 97, 114, 99, 101, 108, 111, 110, 97] => lookup_1432(),
            [100, 101, 97, 108] => lookup_1433(),
            [111, 98, 105] => lookup_1434(),
            [105, 109, 109, 111, 98, 105, 108, 105, 101, 110] => lookup_1435(),
            [103, 119] => lookup_1436(),
            [97, 105, 114, 116, 101, 108] => lookup_1437(),
            [103, 97, 112] => lookup_1438(),
            [103, 111, 111, 103, 108, 101] => lookup_1439(),
            [98, 101, 116] => lookup_1440(),
            [97, 102, 108] => lookup_1441(),
            [100, 97, 116, 101] => lookup_1442(),
            [104, 111, 116, 109, 97, 105, 108] => lookup_1443(),
            [109, 101, 109, 111, 114, 105, 97, 108] => lookup_1444(),
            [103, 108, 101] => lookup_1445(),
            [107, 102, 104] => lookup_1446(),
            [111, 112, 101, 110] => lookup_1447(),
            [108, 97, 116, 114, 111, 98, 101] => lookup_1448(),
            [112, 97, 110, 97, 115, 111, 110, 105, 99] => lookup_1449(),
            [113, 117, 101, 115, 116] => lookup_1450(),
            [114, 101, 97, 108, 116, 121] => lookup_1451(),
            [114, 101, 110] => lookup_1452(),
            [115, 107, 105] => lookup_1453(),
            [112, 105, 110, 103] => lookup_1454(),
            [102, 105, 110, 97, 110, 99, 101] => lookup_1455(),
            [100, 111, 119, 110, 108, 111, 97, 100] => lookup_1456(),
            [115, 97, 109, 115, 117, 110, 103] => lookup_1457(),
            [99, 111, 111, 107, 105, 110, 103] => lookup_1458(),
            [115, 107, 121, 112, 101] => lookup_1459(),
            [116, 114, 118] => lookup_1460(),
            [99, 97] => lookup_1461(labels),
            [113, 97] => lookup_1462(labels),
            [116, 117, 105] => lookup_1463(),
            [118, 105, 103] => lookup_1464(),
            [230, 137, 139, 230, 156, 186] => lookup_1465(),
            [103, 111, 111, 103] => lookup_1466(labels),
            [216, 167, 217, 132, 216, 179, 216, 185, 217, 136, 216, 175, 217, 138, 216, 169] => {
                lookup_1467()
            }
            [121, 101] => lookup_1468(labels),
            [107, 121] => lookup_1469(labels),
            [120, 110, 45, 45, 122, 102, 114, 49, 54, 52, 98] => lookup_1470(),
            [121, 111, 117] => lookup_1471(),
            [98, 104] => lookup_1472(labels),
            [108, 105] => lookup_1473(labels),
            [102, 117, 110] => lookup_1474(),
            [102, 105] => lookup_1475(labels),
            [120, 110, 45, 45, 52, 53, 98, 114, 106, 57, 99] => lookup_1476(),
            [102, 111, 111, 116, 98, 97, 108, 108] => lookup_1477(),
            [110, 108] => lookup_1478(labels),
            [112, 108, 97, 99, 101] => lookup_1479(labels),
            [110, 102] => lookup_1480(labels),
            [115, 121] => lookup_1481(labels),
            [114, 101, 108, 105, 97, 110, 99, 101] => lookup_1482(),
            [115, 111, 110, 121] => lookup_1483(),
            [120, 120, 120] => lookup_1484(),
            [98, 114, 105, 100, 103, 101, 115, 116, 111, 110, 101] => lookup_1485(),
            [121, 116] => lookup_1486(labels),
            [97, 100] => lookup_1487(labels),
            [99, 108] => lookup_1488(labels),
            [120, 110, 45, 45, 101, 49, 97, 52, 99] => lookup_1489(),
            [97, 108] => lookup_1490(labels),
            [224, 164, 173, 224, 164, 190, 224, 164, 176, 224, 164, 164] => lookup_1491(),
            [120, 110, 45, 45, 50, 115, 99, 114, 106, 57, 99] => lookup_1492(),
            [97, 114, 116] => lookup_1493(),
            [100, 105, 115, 104] => lookup_1494(),
            [102, 97, 114, 109] => lookup_1495(labels),
            [112, 97, 103, 101] => lookup_1496(labels),
            [115, 101, 119] => lookup_1497(),
            [115, 117, 122, 117, 107, 105] => lookup_1498(),
            [111, 114, 97, 99, 108, 101] => lookup_1499(),
            [107, 111, 115, 104, 101, 114] => lookup_1500(),
            [102, 97, 110, 115] => lookup_1501(),
            [120, 110, 45, 45, 109, 103, 98, 99, 112, 113, 54, 103, 112, 97, 49, 97] => {
                lookup_1502()
            }
            [109, 97, 114, 107, 101, 116, 115] => lookup_1503(),
            [104, 117] => lookup_1504(labels),
            [120, 110, 45, 45, 109, 103, 98, 112, 108, 50, 102, 104] => lookup_1505(),
            [108, 97, 110, 99, 97, 115, 116, 101, 114] => lookup_1506(),
            [115, 98] => lookup_1507(labels),
            [97, 99, 97, 100, 101, 109, 121] => lookup_1508(labels),
            [100, 101, 109, 111, 99, 114, 97, 116] => lookup_1509(),
            [103, 117, 103, 101] => lookup_1510(),
            [110, 114, 119] => lookup_1511(),
            [111, 108, 108, 111] => lookup_1512(),
            [115, 99, 97] => lookup_1513(),
            [116, 111, 121, 115] => lookup_1514(),
            [208, 181, 209, 142] => lookup_1515(),
            [103, 105, 102, 116, 115] => lookup_1516(),
            [116, 101, 118, 97] => lookup_1517(),
            [115, 116, 111, 99, 107, 104, 111, 108, 109] => lookup_1518(),
            [116, 114, 97, 100, 105, 110, 103] => lookup_1519(),
            [115, 104] => lookup_1520(labels),
            [103, 117, 105, 116, 97, 114, 115] => lookup_1521(),
            [116, 104, 101, 97, 116, 114, 101] => lookup_1522(),
            [112, 104, 97, 114, 109, 97, 99, 121] => lookup_1523(),
            [115, 97, 108, 101] => lookup_1524(labels),
            [103, 108] => lookup_1525(labels),
            [111, 102, 102, 105, 99, 101] => lookup_1526(),
            [105, 99, 101] => lookup_1527(),
            [117, 115] => lookup_1528(labels),
            [98, 97, 115, 101, 98, 97, 108, 108] => lookup_1529(),
            [118, 108, 97, 97, 110, 100, 101, 114, 101, 110] => lookup_1530(),
            [101, 116] => lookup_1531(labels),
            [101, 110, 116, 101, 114, 112, 114, 105, 115, 101, 115] => lookup_1532(),
            [116, 104] => lookup_1533(labels),
            [102, 117, 114, 110, 105, 116, 117, 114, 101] => lookup_1534(),
            [99, 97, 108, 108] => lookup_1535(),
            [115, 105, 116, 101] => lookup_1536(labels),
            [118, 111, 108, 118, 111] => lookup_1537(),
            [114, 105, 99, 111, 104] => lookup_1538(),
            [97, 116, 104, 108, 101, 116, 97] => lookup_1539(),
            [217, 190, 216, 167, 218, 169, 216, 179, 216, 170, 216, 167, 217, 134] => lookup_1540(),
            [107, 105, 110, 100, 108, 101] => lookup_1541(),
            [114, 119] => lookup_1542(labels),
            [116, 97, 98] => lookup_1543(),
            [227, 130, 187, 227, 131, 188, 227, 131, 171] => lookup_1544(),
            [224, 184, 132, 224, 184, 173, 224, 184, 161] => lookup_1545(),
            [99, 121, 111, 117] => lookup_1546(),
            [104, 111, 116] => lookup_1547(),
            [120, 110, 45, 45, 52, 53, 113, 49, 49, 99] => lookup_1548(),
            [231, 189, 145, 229, 186, 151] => lookup_1549(),
            [232, 175, 186, 229, 159, 186, 228, 186, 154] => lookup_1550(),
            [119, 101, 97, 116, 104, 101, 114, 99, 104, 97, 110, 110, 101, 108] => lookup_1551(),
            [120, 110, 45, 45, 109, 103, 98, 99, 97, 55, 100, 122, 100, 111] => lookup_1552(),
            [120, 110, 45, 45, 101, 99, 107, 118, 100, 116, 99, 57, 100] => lookup_1553(),
            [120, 110, 45, 45, 114, 104, 113, 118, 57, 54, 103] => lookup_1554(),
            [116, 111, 100, 97, 121] => lookup_1555(),
            [120, 110, 45, 45, 118, 104, 113, 117, 118] => lookup_1556(),
            [97, 117, 116, 111] => lookup_1557(),
            [97, 103, 101, 110, 99, 121] => lookup_1558(),
            [117, 110, 105, 99, 111, 109] => lookup_1559(),
            [109, 97, 110] => lookup_1560(),
            [215, 167, 215, 149, 215, 157] => lookup_1561(),
            [114, 115, 118, 112] => lookup_1562(),
            [224, 164, 168, 224, 165, 135, 224, 164, 159] => lookup_1563(),
            [120, 110, 45, 45, 110, 113, 118, 55, 102, 115, 48, 48, 101, 109, 97] => lookup_1564(),
            [99, 108, 105, 99, 107] => lookup_1565(),
            [104, 116] => lookup_1566(labels),
            [99, 111, 110, 116, 97, 99, 116] => lookup_1567(),
            [121, 97, 110, 100, 101, 120] => lookup_1568(),
            [99, 111, 102, 102, 101, 101] => lookup_1569(),
            [102, 105, 110, 97, 110, 99, 105, 97, 108] => lookup_1570(labels),
            [120, 110, 45, 45, 53, 53, 113, 120, 53, 100] => lookup_1571(),
            [117, 97] => lookup_1572(labels),
            [122, 111, 110, 101] => lookup_1573(labels),
            [115, 115] => lookup_1574(labels),
            [106, 111, 98, 117, 114, 103] => lookup_1575(),
            [116, 101, 109, 97, 115, 101, 107] => lookup_1576(),
            [97, 105] => lookup_1577(labels),
            [102, 114, 111, 110, 116, 105, 101, 114] => lookup_1578(),
            [115, 117] => lookup_1579(labels),
            [112, 110] => lookup_1580(labels),
            [217, 133, 217, 132, 217, 138, 216, 179, 217, 138, 216, 167] => lookup_1581(),
            [98, 97, 121, 101, 114, 110] => lookup_1582(),
            [108, 117] => lookup_1583(labels),
            [100, 101, 103, 114, 101, 101] => lookup_1584(),
            [103, 97, 121] => lookup_1585(),
            [107, 111, 101, 108, 110] => lookup_1586(),
            [100, 104, 108] => lookup_1587(),
            [208, 188, 208, 186, 208, 180] => lookup_1588(),
            [101, 97, 116] => lookup_1589(),
            [109, 110] => lookup_1590(labels),
            [109, 112] => lookup_1591(),
            [99, 105, 116, 121, 101, 97, 116, 115] => lookup_1592(),
            [100, 105, 101, 116] => lookup_1593(),
            [109, 117, 116, 117, 97, 108] => lookup_1594(),
            [110, 101, 120, 116, 100, 105, 114, 101, 99, 116] => lookup_1595(),
            [100, 101, 108, 105, 118, 101, 114, 121] => lookup_1596(),
            [112, 111, 114, 110] => lookup_1597(labels),
            [108, 97, 116] => lookup_1598(),
            [112, 111, 104, 108] => lookup_1599(),
            [114, 119, 101] => lookup_1600(),
            [116, 110] => lookup_1601(labels),
            [115, 117, 114, 103, 101, 114, 121] => lookup_1602(),
            [116, 117, 98, 101] => lookup_1603(),
            [118, 105, 118, 97] => lookup_1604(),
            [120, 110, 45, 45, 57, 101, 116, 53, 50, 117] => lookup_1605(),
            [120, 110, 45, 45, 104, 120, 116, 56, 49, 52, 101] => lookup_1606(),
            [121, 117, 110] => lookup_1607(),
            [209, 131, 208, 186, 209, 128] => lookup_1608(),
            [218, 128, 216, 167, 216, 177, 216, 170] => lookup_1609(),
            [120, 110, 45, 45, 109, 103, 98, 57, 97, 119, 98, 102] => lookup_1610(),
            [99, 111, 97, 99, 104] => lookup_1611(),
            [112, 104, 105, 108, 105, 112, 115] => lookup_1612(),
            [97, 117, 100, 105, 111] => lookup_1613(),
            [98, 117, 122, 122] => lookup_1614(),
            [112, 114, 111, 100, 117, 99, 116, 105, 111, 110, 115] => lookup_1615(),
            [112, 97, 114, 105, 115] => lookup_1616(),
            [97, 122] => lookup_1617(labels),
            [98, 111, 101, 104, 114, 105, 110, 103, 101, 114] => lookup_1618(),
            [102, 111, 111, 100] => lookup_1619(),
            [230, 136, 145, 231, 136, 177, 228, 189, 160] => lookup_1620(),
            [230, 183, 161, 233, 169, 172, 233, 148, 161] => lookup_1621(),
            [120, 110, 45, 45, 110, 103, 98, 114, 120] => lookup_1622(),
            [112, 114] => lookup_1623(labels),
            [99, 104, 114, 105, 115, 116, 109, 97, 115] => lookup_1624(),
            [115, 111, 121] => lookup_1625(),
            [110, 112] => lookup_1626(info, labels),
            [116, 97, 111, 98, 97, 111] => lookup_1627(),
            [100, 105, 115, 99, 111, 118, 101, 114] => lookup_1628(),
            [112, 97, 114, 116, 115] => lookup_1629(),
            [116, 101, 108] => lookup_1630(),
            [109, 97, 110, 97, 103, 101, 109, 101, 110, 116] => lookup_1631(labels),
            [110, 101, 116, 102, 108, 105, 120] => lookup_1632(),
            [208, 180, 208, 181, 209, 130, 208, 184] => lookup_1633(),
            [120, 110, 45, 45, 102, 108, 119, 51, 53, 49, 101] => lookup_1634(),
            [115, 99, 104, 109, 105, 100, 116] => lookup_1635(),
            [112, 104, 111, 116, 111, 115] => lookup_1636(),
            [97, 109, 105, 99, 97] => lookup_1637(),
            [114, 101] => lookup_1638(labels),
            [98, 101, 110, 116, 108, 101, 121] => lookup_1639(),
            [104, 97, 109, 98, 117, 114, 103] => lookup_1640(),
            [111, 114, 103] => lookup_1641(labels),
            [104, 97, 117, 115] => lookup_1642(),
            [99, 105] => lookup_1643(labels),
            [99, 97, 115, 104] => lookup_1644(),
            [109, 121] => lookup_1645(labels),
            [108, 117, 110, 100, 98, 101, 99, 107] => lookup_1646(),
            [116, 111, 115, 104, 105, 98, 97] => lookup_1647(),
            [98, 110, 112, 112, 97, 114, 105, 98, 97, 115] => lookup_1648(),
            [108, 97, 119] => lookup_1649(),
            [109, 105, 110, 116] => lookup_1650(),
            [116, 114] => lookup_1651(labels),
            [112, 97, 121] => lookup_1652(),
            [97, 115, 100, 97] => lookup_1653(),
            [105, 109] => lookup_1654(labels),
            [102, 108, 105, 99, 107, 114] => lookup_1655(),
            [229, 174, 182, 233, 155, 187] => lookup_1656(),
            [107, 101, 114, 114, 121, 112, 114, 111, 112, 101, 114, 116, 105, 101, 115] => {
                lookup_1657()
            }
            [115, 101, 120, 121] => lookup_1658(),
            [100, 111, 99, 116, 111, 114] => lookup_1659(),
            [116, 105, 101, 110, 100, 97] => lookup_1660(),
            [97, 98, 117, 100, 104, 97, 98, 105] => lookup_1661(),
            [97, 108, 105, 112, 97, 121] => lookup_1662(),
            [109, 101, 101, 116] => lookup_1663(),
            [103, 111, 108, 102] => lookup_1664(),
            [109, 111, 115, 99, 111, 119] => lookup_1665(),
            [103, 111, 111] => lookup_1666(),
            [97, 115, 105, 97] => lookup_1667(labels),
            [217, 135, 217, 133, 216, 177, 216, 167, 217, 135] => lookup_1668(),
            [120, 110, 45, 45, 116, 54, 48, 98, 53, 54, 97] => lookup_1669(),
            [103, 117, 114, 117] => lookup_1670(),
            [99, 111, 109, 115, 101, 99] => lookup_1671(),
            [99, 120] => lookup_1672(labels),
            wild => {
                info.len = wild.len();
                info
            }
        },
        None => info,
    }
}
#[inline]
fn lookup_0() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_2() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_3<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [121, 98, 111] => lookup_3_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_4() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_5_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_5<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_5_0(acc),
            [100, 105, 115, 99, 111, 117, 114, 115, 101] => lookup_5_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_6() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_7() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_8() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_9_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_9_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_9_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_9_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_9_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_9_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_9_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_9_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_9_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_9_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_9<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 110, 116] => lookup_9_0(acc),
            [103, 111, 118] => lookup_9_1(acc),
            [99] => lookup_9_2(acc),
            [110, 121, 109] => lookup_9_3(acc),
            [111, 114, 103] => lookup_9_4(acc),
            [105, 110, 102, 111] => lookup_9_5(acc),
            [98, 110, 114] => lookup_9_6(acc),
            [110, 101, 116] => lookup_9_7(acc),
            [112, 101, 114] => lookup_9_8(acc),
            [99, 111, 109] => lookup_9_9(acc),
            [101, 100, 117] => lookup_9_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_10() -> Info {
    Info {
        len: 23usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_11() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_12_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_12_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_12_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [118, 105, 112] => lookup_12_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_12_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_12_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_12_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_12_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_12_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_12_5_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_12_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_12_5_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_12_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_12_6<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [101, 115, 45, 49] => lookup_12_6_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_12_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_12_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_12_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_12_10_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_12_10_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_12_10<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 110] => lookup_12_10_0(acc),
            [117, 107] => lookup_12_10_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_12_11_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_12_11<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [105, 116, 49, 45, 101, 117, 114] => lookup_12_11_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_12_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_12_13_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_12_13_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_12_13<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [100, 101] => lookup_12_13_0(acc),
            [99, 104] => lookup_12_13_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_12_14_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_12_14<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_12_14_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_12_15_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_12_15<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_12_15_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_12_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_12_17_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_12_17<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [117, 107] => lookup_12_17_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_12_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_12_19_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_12_19_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_12_19_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_12_19<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [117, 115] => lookup_12_19_0(acc),
            [99, 97] => lookup_12_19_1(acc),
            [117, 107] => lookup_12_19_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_12_20_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_12_20_1_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_12_20_1_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [105, 116, 49] => lookup_12_20_1_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_12_20_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [101, 117, 114] => lookup_12_20_1_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_12_20<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [105, 116, 49] => lookup_12_20_0(acc),
            [97, 114, 117, 98, 97] => lookup_12_20_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_12_21_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_12_21<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_12_21_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_12<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 105, 97, 100, 101, 109] => lookup_12_0(acc),
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_12_1(info, labels, acc),
            [117, 114, 111, 119, 110] => lookup_12_2(acc),
            [111, 110, 45, 114, 97, 110, 99, 104, 101, 114] => lookup_12_3(info, labels, acc),
            [118, 97, 112, 111, 114] => lookup_12_4(acc),
            [98, 97, 110, 122, 97, 105] => lookup_12_5(info, labels, acc),
            [97, 120, 97, 114, 110, 101, 116] => lookup_12_6(info, labels, acc),
            [106, 101, 108, 101] => lookup_12_7(acc),
            [107, 117, 108, 101, 117, 118, 101, 110] => lookup_12_8(acc),
            [116, 114, 97, 102, 102, 105, 99, 112, 108, 101, 120] => lookup_12_9(acc),
            [111, 120, 97] => lookup_12_10(labels, acc),
            [106, 101, 110, 118, 45, 97, 114, 117, 98, 97, 98, 105, 122] => {
                lookup_12_11(info, labels, acc)
            }
            [108, 105, 110, 107, 121, 97, 114, 100] => lookup_12_12(acc),
            [116, 114, 101, 110, 100, 104, 111, 115, 116, 105, 110, 103] => {
                lookup_12_13(info, labels, acc)
            }
            [109, 97, 103, 101, 110, 116, 111, 115, 105, 116, 101] => {
                lookup_12_14(info, labels, acc)
            }
            [115, 101, 110, 115, 105, 111, 115, 105, 116, 101] => lookup_12_15(info, labels, acc),
            [118, 111, 111, 114, 108, 111, 112, 101, 114] => lookup_12_16(acc),
            [112, 114, 105, 109, 101, 116, 101, 108] => lookup_12_17(labels, acc),
            [112, 101, 114, 115, 112, 101, 99, 116, 97] => lookup_12_18(acc),
            [114, 101, 99, 108, 97, 105, 109] => lookup_12_19(info, labels, acc),
            [106, 101, 110, 118, 45, 97, 114, 117, 98, 97] => lookup_12_20(info, labels, acc),
            [115, 116, 97, 116, 105, 99, 115] => lookup_12_21(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_13() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_14() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_15() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_16_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_16_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_16_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_16_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_16_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_16_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_16<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 108] => lookup_16_0(acc),
            [111, 114, 103] => lookup_16_1(acc),
            [110, 101, 116] => lookup_16_2(acc),
            [101, 100, 117] => lookup_16_3(acc),
            [99, 111, 109] => lookup_16_4(acc),
            [103, 111, 118] => lookup_16_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_17() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_18() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_19() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_20() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_24_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_24_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_24_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_24_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_24_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_24_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_24_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_24_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_24_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_24_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_24<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [209, 129, 208, 190, 209, 135, 208, 184] => lookup_24_0(acc),
            [208, 186, 208, 190, 208, 188] => lookup_24_1(acc),
            [208, 188, 209, 129, 208, 186] => lookup_24_2(acc),
            [209, 129, 208, 191, 208, 177] => lookup_24_3(acc),
            [209, 129, 208, 176, 208, 188, 208, 176, 209, 128, 208, 176] => lookup_24_4(acc),
            [208, 186, 209, 128, 209, 139, 208, 188] => lookup_24_5(acc),
            [208, 188, 208, 184, 209, 128] => lookup_24_6(acc),
            [208, 177, 208, 184, 208, 183] => lookup_24_7(acc),
            [208, 190, 209, 128, 208, 179] => lookup_24_8(acc),
            [209, 143] => lookup_24_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_25() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_26_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_26_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_26_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_26_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_26_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_26_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_26_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_26_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_26_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_26_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_26_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_26<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_26_0(acc),
            [99, 111, 109] => lookup_26_1(acc),
            [97, 99] => lookup_26_2(acc),
            [105, 110, 116] => lookup_26_3(acc),
            [110, 101, 116] => lookup_26_4(acc),
            [111, 114, 103] => lookup_26_5(acc),
            [99, 111, 111, 112] => lookup_26_6(acc),
            [109, 117, 115, 101, 117, 109] => lookup_26_7(acc),
            [101, 100, 117] => lookup_26_8(acc),
            [99, 111] => lookup_26_9(acc),
            [103, 111, 118] => lookup_26_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_27_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_27_8<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_27_8_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_27_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 101, 100] => lookup_27_0(acc),
            [108, 105, 98] => lookup_27_1(acc),
            [102, 105, 101] => lookup_27_2(acc),
            [97, 105, 112] => lookup_27_3(acc),
            [111, 114, 103] => lookup_27_4(acc),
            [114, 105, 105, 107] => lookup_27_5(acc),
            [112, 114, 105] => lookup_27_6(acc),
            [101, 100, 117] => lookup_27_7(acc),
            [99, 111, 109] => lookup_27_8(labels, acc),
            [103, 111, 118] => lookup_27_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_28() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_29() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_30() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_31() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_32() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_33_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_33<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_33_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_34_0_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_34_0_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_34_0_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_34_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_34_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_34_0_0(info, labels, acc),
            [99, 117, 115, 116, 111, 109] => lookup_34_0_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_34_1_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_34_1_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_34_1_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [102, 108, 116] => lookup_34_1_0_0(acc),
            [117, 115, 114] => lookup_34_1_0_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_34_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_34_1_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_34_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_34_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_34_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_34_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_34<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 101, 116, 97, 99, 101, 110, 116, 114, 117, 109] => lookup_34_0(info, labels, acc),
            [109, 117, 110, 105] => lookup_34_1(info, labels, acc),
            [114, 101, 97, 108, 109] => lookup_34_2(acc),
            [99, 111] => lookup_34_3(acc),
            [101, 52] => lookup_34_4(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_34_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_35() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_36() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_37() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_38() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_39() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_40_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_40_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_40_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_40_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_40_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_40_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_40<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_40_0(acc),
            [115, 116, 111, 114, 101] => lookup_40_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_40_2(acc),
            [99, 111] => lookup_40_3(acc),
            [114, 101, 103] => lookup_40_4(acc),
            [102, 105, 114, 109] => lookup_40_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_41() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_42() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_43() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_44() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_45() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_46_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_46_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_46_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_46_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_46_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_46_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_46_4_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_46_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_46_4_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_46_5_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_46_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_46_5_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_46_6_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_46_6<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_46_6_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_46_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_46_8_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_46_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_46_8_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_46_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_46_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_46_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_46_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_46_13_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_46_13<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_46_13_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_46_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_46_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_46<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [119, 111, 114, 107, 101, 114, 115] => lookup_46_0(acc),
            [105, 115, 101, 114, 118] => lookup_46_1(acc),
            [108, 99, 108, 115, 116, 97, 103, 101] => lookup_46_2(info, labels, acc),
            [100, 101, 110, 111, 45, 115, 116, 97, 103, 105, 110, 103] => lookup_46_3(acc),
            [108, 99, 108] => lookup_46_4(info, labels, acc),
            [115, 116, 103] => lookup_46_5(info, labels, acc),
            [115, 116, 103, 115, 116, 97, 103, 101] => lookup_46_6(info, labels, acc),
            [100, 101, 110, 111] => lookup_46_7(acc),
            [103, 97, 116, 101, 119, 97, 121] => lookup_46_8(info, labels, acc),
            [112, 97, 103, 101, 115] => lookup_46_9(acc),
            [118, 101, 114, 99, 101, 108] => lookup_46_10(acc),
            [99, 117, 114, 118] => lookup_46_11(acc),
            [108, 111, 103, 105, 110, 108, 105, 110, 101] => lookup_46_12(acc),
            [119, 101, 98, 104, 97, 114, 101] => lookup_46_13(info, labels, acc),
            [102, 108, 121] => lookup_46_14(acc),
            [112, 108, 97, 116, 116, 101, 114, 45, 97, 112, 112] => lookup_46_15(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_47() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_48_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_48_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_48_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_48_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_48_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_48_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_48_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_48_6<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_48_6_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_48_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_48<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_48_0(acc),
            [105, 100, 102] => lookup_48_1(acc),
            [109, 117, 110, 105] => lookup_48_2(acc),
            [107, 49, 50] => lookup_48_3(acc),
            [111, 114, 103] => lookup_48_4(acc),
            [110, 101, 116] => lookup_48_5(acc),
            [99, 111] => lookup_48_6(labels, acc),
            [97, 99] => lookup_48_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_49() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_50() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_51_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_51_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_51_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_51_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_51_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_51_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_51_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_51_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_51_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_51_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_51_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_51_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_51_12_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_51_12<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [98, 99, 105] => lookup_51_12_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_51_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_51<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 112, 97] => lookup_51_0(acc),
            [97, 118, 111, 99, 97, 116] => lookup_51_1(acc),
            [106, 117, 114] => lookup_51_2(acc),
            [109, 101, 100] => lookup_51_3(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_51_4(acc),
            [97, 97, 97] => lookup_51_5(acc),
            [97, 99, 97] => lookup_51_6(acc),
            [98, 97, 114] => lookup_51_7(acc),
            [97, 99, 99, 116] => lookup_51_8(acc),
            [101, 110, 103] => lookup_51_9(acc),
            [108, 97, 119] => lookup_51_10(acc),
            [114, 101, 99, 104, 116] => lookup_51_11(acc),
            [100, 110, 115, 116, 114, 97, 99, 101] => lookup_51_12(info, labels, acc),
            [98, 97, 114, 115, 121] => lookup_51_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_52() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_53() -> Info {
    Info {
        len: 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_54() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_55() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_56() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_57() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_58() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_59() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_60() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_61() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_62() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_63() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_64() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_65() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_66() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_67() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_68() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_69() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_70() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_71_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_71_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_71_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_71_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_71_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_71_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_71_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_71_6<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_71_6_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_71_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_71_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_71_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_71_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_71_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_71_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_71_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_71_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_71<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 111, 98, 105] => lookup_71_0(acc),
            [110, 103, 111] => lookup_71_1(acc),
            [105] => lookup_71_2(acc),
            [109, 105, 108] => lookup_71_3(acc),
            [115, 99, 104] => lookup_71_4(acc),
            [110, 97, 109, 101] => lookup_71_5(acc),
            [99, 111, 109] => lookup_71_6(labels, acc),
            [103, 111, 118] => lookup_71_7(acc),
            [99, 111, 108] => lookup_71_8(acc),
            [111, 114, 103] => lookup_71_9(acc),
            [103, 101, 110] => lookup_71_10(acc),
            [108, 116, 100] => lookup_71_11(acc),
            [110, 101, 116] => lookup_71_12(acc),
            [101, 100, 117] => lookup_71_13(acc),
            [102, 105, 114, 109] => lookup_71_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_72() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_73() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_74() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_75() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_76() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_78() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_79_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_79<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 112, 101, 110, 99, 114, 97, 102, 116] => lookup_79_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_80() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_81() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_82_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_82_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_82_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_82_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_82_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_82_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_82_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_82_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_82<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_82_0(acc),
            [105] => lookup_82_1(acc),
            [111, 114, 103] => lookup_82_2(acc),
            [109, 105, 108] => lookup_82_3(acc),
            [110, 101, 116] => lookup_82_4(acc),
            [101, 100, 117] => lookup_82_5(acc),
            [99, 111, 109] => lookup_82_6(acc),
            [110, 103, 111] => lookup_82_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_83() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_84() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_85() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_86() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_87() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_88() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_89() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_90_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_90_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_90_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_90_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_90_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_90_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_90<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 108] => lookup_90_0(acc),
            [111, 114, 103] => lookup_90_1(acc),
            [110, 101, 116] => lookup_90_2(acc),
            [101, 100, 117] => lookup_90_3(acc),
            [99, 111, 109] => lookup_90_4(acc),
            [103, 111, 118] => lookup_90_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_91() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_92() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_93() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_94() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_95() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_96_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_96<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_96_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_97() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_98_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_98_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_98_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_98_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_98<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_98_0(acc),
            [110, 101, 116] => lookup_98_1(acc),
            [101, 100, 117] => lookup_98_2(acc),
            [99, 111, 109] => lookup_98_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_99() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_100() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_101() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_102() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_103() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_104() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_105() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_106() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_107() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_108() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_109_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_109_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_109_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_109_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_109_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_109_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_109_5<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_109_5_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_109_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_109<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 108] => lookup_109_0(acc),
            [111, 114, 103] => lookup_109_1(acc),
            [103, 117, 98] => lookup_109_2(acc),
            [110, 101, 116] => lookup_109_3(acc),
            [101, 100, 117] => lookup_109_4(acc),
            [99, 111, 109] => lookup_109_5(labels, acc),
            [110, 111, 109] => lookup_109_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_110_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_110_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_110_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_110_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_110_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_110_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_110_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_110<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 105] => lookup_110_0(acc),
            [101, 100] => lookup_110_1(acc),
            [103, 111] => lookup_110_2(acc),
            [111, 114] => lookup_110_3(acc),
            [99, 111] => lookup_110_4(acc),
            [115, 97] => lookup_110_5(acc),
            [97, 99] => lookup_110_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_111() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_112() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_113() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_114() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_115() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_116() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_117_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_117_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_117_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_117_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_117_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_117_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_117_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_117_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_117<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 99, 114, 97, 112, 112, 105, 110, 103] => lookup_117_0(acc),
            [99, 115, 120] => lookup_117_1(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_117_2(acc),
            [102, 97, 110, 116, 97, 115, 121, 108, 101, 97, 103, 117, 101] => lookup_117_3(acc),
            [102, 116, 112, 97, 99, 99, 101, 115, 115] => lookup_117_4(acc),
            [109, 121, 112, 104, 111, 116, 111, 115] => lookup_117_5(acc),
            [116, 119, 109, 97, 105, 108] => lookup_117_6(acc),
            [103, 97, 109, 101, 45, 115, 101, 114, 118, 101, 114] => lookup_117_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_118() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_119() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_120() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_121() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_122() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_123() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_124_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_124_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_124_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_124_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_124_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_124_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_124_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_124_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_124_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_124_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_124_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_124_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_124_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_124_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_124_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_124_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_124_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_124<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [114, 101, 99] => lookup_124_0(acc),
            [103, 111, 98] => lookup_124_1(acc),
            [102, 105, 114, 109] => lookup_124_2(acc),
            [101, 49, 50] => lookup_124_3(acc),
            [109, 105, 108] => lookup_124_4(acc),
            [105, 110, 102, 111] => lookup_124_5(acc),
            [99, 111, 109] => lookup_124_6(acc),
            [103, 111, 118] => lookup_124_7(acc),
            [97, 114, 116, 115] => lookup_124_8(acc),
            [115, 116, 111, 114, 101] => lookup_124_9(acc),
            [119, 101, 98] => lookup_124_10(acc),
            [111, 114, 103] => lookup_124_11(acc),
            [116, 101, 99] => lookup_124_12(acc),
            [110, 101, 116] => lookup_124_13(acc),
            [99, 111] => lookup_124_14(acc),
            [105, 110, 116] => lookup_124_15(acc),
            [101, 100, 117] => lookup_124_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_125() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_127() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_128_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_128<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_128_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_129_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_129_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_129_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_129_4<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_129_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_129_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 108] => lookup_129_0(acc),
            [109, 121, 99, 108, 111, 117, 100] => lookup_129_1(acc),
            [110, 121, 109] => lookup_129_2(acc),
            [111, 102] => lookup_129_3(acc),
            [99, 111, 109] => lookup_129_4(labels, acc),
            [103, 111, 118] => lookup_129_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_130() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_131() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_132() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_133_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_133_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_133_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_133_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_133_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_133_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_133<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [224, 184, 163, 224, 184, 177, 224, 184, 144, 224, 184, 154, 224, 184, 178, 224, 184, 165] => {
                lookup_133_0(acc)
            }
            [224, 184, 168, 224, 184, 182, 224, 184, 129, 224, 184, 169, 224, 184, 178] => {
                lookup_133_1(acc)
            }
            [224, 184, 151, 224, 184, 171, 224, 184, 178, 224, 184, 163] => lookup_133_2(acc),
            [224, 184, 152, 224, 184, 184, 224, 184, 163, 224, 184, 129, 224, 184, 180, 224, 184, 136] => {
                lookup_133_3(acc)
            }
            [224, 185, 128, 224, 184, 153, 224, 185, 135, 224, 184, 149] => lookup_133_4(acc),
            [224, 184, 173, 224, 184, 135, 224, 184, 132, 224, 185, 140, 224, 184, 129, 224, 184, 163] => {
                lookup_133_5(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_134_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_134_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_134_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_134<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 101] => lookup_134_0(acc),
            [119, 101] => lookup_134_1(acc),
            [99, 104] => lookup_134_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_135() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_136() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_137_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_137_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_137_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [97] => lookup_137_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_137_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_137_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_137_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_137_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_137_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_137_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_137_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_137_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_137_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_137_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_137_12_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_137_12<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_137_12_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_137_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_137<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [119, 110, 101, 120, 116] => lookup_137_0(acc),
            [114, 117, 110] => lookup_137_1(labels, acc),
            [116, 101, 108, 101, 98, 105, 116] => lookup_137_2(acc),
            [119, 101, 98] => lookup_137_3(acc),
            [111, 110, 100, 105, 103, 105, 116, 97, 108, 111, 99, 101, 97, 110] => {
                lookup_137_4(acc)
            }
            [102, 105, 114, 101, 119, 101, 98] => lookup_137_5(acc),
            [108, 111, 103, 105, 110, 108, 105, 110, 101] => lookup_137_6(acc),
            [110, 101, 116, 108, 105, 102, 121] => lookup_137_7(acc),
            [102, 114, 97, 109, 101, 114] => lookup_137_8(acc),
            [112, 108, 97, 116, 102, 111, 114, 109, 48] => lookup_137_9(acc),
            [104, 97, 115, 117, 114, 97] => lookup_137_10(acc),
            [118, 101, 114, 99, 101, 108] => lookup_137_11(acc),
            [110, 111, 114, 116, 104, 102, 108, 97, 110, 107] => lookup_137_12(info, labels, acc),
            [101, 100, 103, 101, 99, 111, 109, 112, 117, 116, 101] => lookup_137_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_138() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_139_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_139_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_139_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_139_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_139_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_139<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_139_0(acc),
            [109, 105, 108] => lookup_139_1(acc),
            [101, 100, 117] => lookup_139_2(acc),
            [99, 111, 109] => lookup_139_3(acc),
            [103, 111, 118] => lookup_139_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_140() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_141() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_142() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_143_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_143<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_143_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_144() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_145() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_146() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_147() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_150() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_151() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_27_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_27<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_152_27_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_152_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_34_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_34<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [104, 98] => lookup_152_34_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_152_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_36_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_36_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_152_36_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_152_36_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_36_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_152_36_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_152_36_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_36_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_152_36_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_152_36_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_36_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_152_36_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_152_36<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 111, 115, 116, 105, 110, 103] => lookup_152_36_0(info, labels, acc),
            [118, 112, 115] => lookup_152_36_1(info, labels, acc),
            [108, 97, 110, 100, 105, 110, 103] => lookup_152_36_2(info, labels, acc),
            [115, 112, 101, 99, 116, 114, 117, 109] => lookup_152_36_3(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_152_37_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_37<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [118, 112, 115] => lookup_152_37_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_152_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_152<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 98, 103] => lookup_152_0(acc),
            [122, 115, 101, 119] => lookup_152_1(acc),
            [114, 97, 115] => lookup_152_2(acc),
            [97, 100, 121, 103, 101, 121, 97] => lookup_152_3(acc),
            [109, 105, 114, 99, 108, 111, 117, 100] => lookup_152_4(acc),
            [107, 97, 108, 109, 121, 107, 105, 97] => lookup_152_5(acc),
            [109, 105, 108] => lookup_152_6(acc),
            [110, 97, 52, 117] => lookup_152_7(acc),
            [118, 108, 97, 100, 105, 109, 105, 114] => lookup_152_8(acc),
            [109, 115, 107] => lookup_152_9(acc),
            [109, 97, 114, 105, 110, 101] => lookup_152_10(acc),
            [109, 99, 112, 114, 101] => lookup_152_11(acc),
            [99, 111, 109] => lookup_152_12(acc),
            [103, 114, 111, 122, 110, 121] => lookup_152_13(acc),
            [97, 99] => lookup_152_14(acc),
            [108, 107, 51] => lookup_152_15(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_152_16(acc),
            [111, 114, 103] => lookup_152_17(acc),
            [100, 97, 103, 101, 115, 116, 97, 110] => lookup_152_18(acc),
            [110, 111, 118] => lookup_152_19(acc),
            [116, 101, 115, 116] => lookup_152_20(acc),
            [98, 105, 114] => lookup_152_21(acc),
            [110, 101, 116] => lookup_152_22(acc),
            [109, 111, 114, 100, 111, 118, 105, 97] => lookup_152_23(acc),
            [105, 110, 116] => lookup_152_24(acc),
            [101, 117, 114, 111, 100, 105, 114] => lookup_152_25(acc),
            [114, 97, 45, 114, 117] => lookup_152_26(acc),
            [114, 101, 103, 114, 117, 104, 111, 115, 116, 105, 110, 103] => {
                lookup_152_27(info, labels, acc)
            }
            [110, 97, 108, 99, 104, 105, 107] => lookup_152_28(acc),
            [98, 97, 115, 104, 107, 105, 114, 105, 97] => lookup_152_29(acc),
            [107, 117, 115, 116, 97, 110, 97, 105] => lookup_152_30(acc),
            [103, 111, 118] => lookup_152_31(acc),
            [118, 108, 97, 100, 105, 107, 97, 118, 107, 97, 122] => lookup_152_32(acc),
            [112, 121, 97, 116, 105, 103, 111, 114, 115, 107] => lookup_152_33(acc),
            [99, 108, 100, 109, 97, 105, 108] => lookup_152_34(info, labels, acc),
            [109, 121, 116, 105, 115] => lookup_152_35(acc),
            [109, 121, 106, 105, 110, 111] => lookup_152_36(labels, acc),
            [109, 99, 100, 105, 114] => lookup_152_37(labels, acc),
            [115, 112, 98] => lookup_152_38(acc),
            [101, 100, 117] => lookup_152_39(acc),
            [112, 112] => lookup_152_40(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_153() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_154() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_155_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_155<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 104, 111, 112, 119, 97, 114, 101] => lookup_155_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_156() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_157_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_157_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_157_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_157_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_157_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_157_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_157_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_157_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_157_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_157_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_157_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_157_6<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 97, 115] => lookup_157_6_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_157_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_157_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_157<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 114, 97, 110, 115, 117, 114, 108] => lookup_157_0(info, labels, acc),
            [109, 121, 99, 100] => lookup_157_1(acc),
            [100, 111, 103, 97, 100, 111] => lookup_157_2(info, labels, acc),
            [119, 101, 108, 108, 98, 101, 105, 110, 103, 122, 111, 110, 101] => lookup_157_3(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_157_4(acc),
            [98, 97, 114, 115, 121] => lookup_157_5(acc),
            [108, 101, 118, 105, 114, 97, 99, 108, 111, 117, 100] => {
                lookup_157_6(info, labels, acc)
            }
            [100, 105, 115, 107, 115, 116, 97, 116, 105, 111, 110] => lookup_157_7(acc),
            [115, 112, 100, 110, 115] => lookup_157_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_158() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_159() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_160_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_160_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_160_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_160_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_160_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_160<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_160_0(acc),
            [110, 101, 116] => lookup_160_1(acc),
            [101, 100, 117] => lookup_160_2(acc),
            [99, 111, 109] => lookup_160_3(acc),
            [103, 111, 118] => lookup_160_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_161_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_161_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_161<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 109] => lookup_161_0(acc),
            [97, 116] => lookup_161_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_162() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_165() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_166() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_168_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_168<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_168_0(acc),
            [101, 100, 117] => lookup_168_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_169() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_170() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_171() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_172() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_173() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_174() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_175() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_176() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_177_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_177_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_177_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_177_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_177_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_177_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_177_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_177<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_177_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_177_1(acc),
            [110, 111, 109] => lookup_177_2(acc),
            [111, 114, 103] => lookup_177_3(acc),
            [109, 105, 108] => lookup_177_4(acc),
            [110, 101, 116] => lookup_177_5(acc),
            [99, 111] => lookup_177_6(acc),
            [115, 99, 104] => lookup_177_7(acc),
            [103, 111, 118] => lookup_177_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_178_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_178_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_178_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_178_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_178_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_178_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_178<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_178_0(acc),
            [119, 101] => lookup_178_1(acc),
            [110, 101, 116] => lookup_178_2(acc),
            [101, 100, 117] => lookup_178_3(acc),
            [99, 111, 109] => lookup_178_4(acc),
            [103, 111, 118] => lookup_178_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_179() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_181() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_182() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_183() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_184() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_185() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_186_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_186_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_186_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_186_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_186_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_186_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_186_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_186<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 101, 108, 101, 98, 105, 116] => lookup_186_0(info, labels, acc),
            [98, 108, 111, 103, 115, 105, 116, 101] => lookup_186_1(acc),
            [108, 111, 99, 97, 108, 122, 111, 110, 101] => lookup_186_2(acc),
            [99, 114, 97, 102, 116, 105, 110, 103] => lookup_186_3(acc),
            [122, 97, 112, 116, 111] => lookup_186_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_187_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_187_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_187_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_187_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_187<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 117, 118] => lookup_187_0(acc),
            [97, 115, 115, 111] => lookup_187_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_187_2(acc),
            [98, 97, 114, 114, 101, 97, 117] => lookup_187_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_188() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_189_0(acc),
            [97, 99] => lookup_189_1(acc),
            [112, 114, 111] => lookup_189_2(acc),
            [109, 105, 108] => lookup_189_3(acc),
            [105, 110, 102, 111] => lookup_189_4(acc),
            [111, 114, 103] => lookup_189_5(acc),
            [110, 97, 109, 101] => lookup_189_6(acc),
            [110, 101, 116] => lookup_189_7(acc),
            [99, 111, 109] => lookup_189_8(acc),
            [103, 111, 118] => lookup_189_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_190() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_192() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_193() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_194() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_195_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_195_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_195_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_195_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_195_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_195<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_195_0(acc),
            [110, 101, 116] => lookup_195_1(acc),
            [101, 100, 117] => lookup_195_2(acc),
            [99, 111, 109] => lookup_195_3(acc),
            [103, 111, 118] => lookup_195_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_196() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_197() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_198() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_199() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_200() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_201() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_202() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_203() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_204() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_205() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_206() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_207() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_208() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_209() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_210_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_210<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [121, 98, 111] => lookup_210_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_211() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_212() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_213() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_214() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_215() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_216() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_217() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_218() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_219() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_221() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_222() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_223() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_224_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_224_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_224_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_224_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_224_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_224_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_224_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_224_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_224_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_224_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_224<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_224_0(acc),
            [105, 110] => lookup_224_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_224_2(acc),
            [117, 97] => lookup_224_3(acc),
            [110, 111, 109] => lookup_224_4(acc),
            [111, 120] => lookup_224_5(acc),
            [111, 114, 103] => lookup_224_6(acc),
            [99, 111] => lookup_224_7(acc),
            [101, 100, 117] => lookup_224_8(acc),
            [103, 111, 118] => lookup_224_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_225() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_226() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_227() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_228() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_229() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_230() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_231_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_231<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_231_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_232() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_233_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_233<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 115, 115] => lookup_233_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_234() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_235() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_236() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_237_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_237_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_237_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_237_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_237_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_237_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_237<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 111, 100] => lookup_237_0(acc),
            [111, 114, 103] => lookup_237_1(acc),
            [108, 116, 100] => lookup_237_2(acc),
            [101, 100, 117] => lookup_237_3(acc),
            [99, 111, 109] => lookup_237_4(acc),
            [103, 111, 118] => lookup_237_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_238_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_238_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_238_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_238_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_13_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_238_13<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_238_13_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 108] => lookup_238_0(acc),
            [102, 111, 114, 116, 101] => lookup_238_1(acc),
            [115, 99, 104] => lookup_238_2(acc),
            [119, 98, 108, 111, 103] => lookup_238_3(acc),
            [97, 99] => lookup_238_4(acc),
            [98, 105, 122] => lookup_238_5(acc),
            [111, 114] => lookup_238_6(acc),
            [102, 108, 97, 112] => lookup_238_7(acc),
            [100, 101, 115, 97] => lookup_238_8(acc),
            [119, 101, 98] => lookup_238_9(acc),
            [98, 108, 111, 103, 101, 114] => lookup_238_10(acc),
            [103, 111] => lookup_238_11(acc),
            [110, 101, 116] => lookup_238_12(acc),
            [99, 111] => lookup_238_13(labels, acc),
            [112, 111, 110, 112, 101, 115] => lookup_238_14(acc),
            [109, 121] => lookup_238_15(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_239() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_240() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_241_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_241_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_241_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_241_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_241_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_241_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_241_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_241_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_241_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_241_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_241_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_241_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_241_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_241_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_241_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_241<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [114, 101, 99] => lookup_241_0(acc),
            [110, 121, 109] => lookup_241_1(acc),
            [115, 104, 111, 112] => lookup_241_2(acc),
            [105, 110, 102, 111] => lookup_241_3(acc),
            [99, 111, 109] => lookup_241_4(acc),
            [97, 114, 116, 115] => lookup_241_5(acc),
            [115, 116, 111, 114, 101] => lookup_241_6(acc),
            [116, 109] => lookup_241_7(acc),
            [110, 111, 109] => lookup_241_8(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_241_9(acc),
            [111, 114, 103] => lookup_241_10(acc),
            [119, 119, 119] => lookup_241_11(acc),
            [99, 111] => lookup_241_12(acc),
            [110, 116] => lookup_241_13(acc),
            [102, 105, 114, 109] => lookup_241_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_242() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_243() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_244() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_245() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_246() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_247_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_247_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_247_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_247_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_247_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_247_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_247<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_247_0(acc),
            [108, 97, 98] => lookup_247_1(acc),
            [110, 101, 116] => lookup_247_2(acc),
            [101, 100, 117] => lookup_247_3(acc),
            [99, 111, 109] => lookup_247_4(acc),
            [103, 111, 118] => lookup_247_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_248_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_248<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 121, 109] => lookup_248_0(acc),
            [103, 111, 118] => lookup_248_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_249() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 111, 98, 105] => lookup_250_0(acc),
            [105, 110] => lookup_250_1(acc),
            [115, 99, 104, 111, 111, 108] => lookup_250_2(acc),
            [100, 114] => lookup_250_3(acc),
            [109, 120] => lookup_250_4(acc),
            [105, 110, 102, 111] => lookup_250_5(acc),
            [116, 118] => lookup_250_6(acc),
            [110, 97, 109, 101] => lookup_250_7(acc),
            [112, 114, 111] => lookup_250_8(acc),
            [99, 111, 109] => lookup_250_9(acc),
            [111, 114] => lookup_250_10(acc),
            [99, 97] => lookup_250_11(acc),
            [117, 115] => lookup_250_12(acc),
            [99, 99] => lookup_250_13(acc),
            [111, 114, 103] => lookup_250_14(acc),
            [119, 115] => lookup_250_15(acc),
            [99, 111] => lookup_250_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_251_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_251_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_251_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_251_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_251_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 97, 116, 117, 114, 98, 114, 117, 107, 115, 103, 121, 109, 110] => {
                lookup_251_0(acc)
            }
            [102, 104, 115, 107] => lookup_251_1(acc),
            [119] => lookup_251_2(acc),
            [121] => lookup_251_3(acc),
            [112, 97, 114, 116, 105] => lookup_251_4(acc),
            [107, 111, 109, 102, 111, 114, 98] => lookup_251_5(acc),
            [109] => lookup_251_6(acc),
            [99, 111, 109] => lookup_251_7(acc),
            [97, 99] => lookup_251_8(acc),
            [104] => lookup_251_9(acc),
            [108] => lookup_251_10(acc),
            [110] => lookup_251_11(acc),
            [107, 111, 109, 109, 117, 110, 97, 108, 102, 111, 114, 98, 117, 110, 100] => {
                lookup_251_12(acc)
            }
            [111, 114, 103] => lookup_251_13(acc),
            [111] => lookup_251_14(acc),
            [103] => lookup_251_15(acc),
            [107] => lookup_251_16(acc),
            [117] => lookup_251_17(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_251_18(acc),
            [105, 111, 112, 115, 121, 115] => lookup_251_19(acc),
            [122] => lookup_251_20(acc),
            [102, 104] => lookup_251_21(acc),
            [107, 111, 109, 118, 117, 120] => lookup_251_22(acc),
            [112] => lookup_251_23(acc),
            [105] => lookup_251_24(acc),
            [120] => lookup_251_25(acc),
            [99, 111, 110, 102] => lookup_251_26(acc),
            [99] => lookup_251_27(acc),
            [100] => lookup_251_28(acc),
            [102, 104, 118] => lookup_251_29(acc),
            [101] => lookup_251_30(acc),
            [108, 97, 110, 98, 105, 98] => lookup_251_31(acc),
            [112, 114, 101, 115, 115] => lookup_251_32(acc),
            [116, 109] => lookup_251_33(acc),
            [115] => lookup_251_34(acc),
            [114] => lookup_251_35(acc),
            [98] => lookup_251_36(acc),
            [98, 100] => lookup_251_37(acc),
            [102] => lookup_251_38(acc),
            [116] => lookup_251_39(acc),
            [98, 114, 97, 110, 100] => lookup_251_40(acc),
            [112, 112] => lookup_251_41(acc),
            [97] => lookup_251_42(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_252_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 49, 50, 99, 111, 48, 99, 51, 98, 52, 101, 118, 97] => {
                lookup_252_0(acc)
            }
            [120, 110, 45, 45, 109, 51, 99, 104, 48, 106, 51, 97] => lookup_252_1(acc),
            [120, 110, 45, 45, 111, 51, 99, 121, 120, 50, 97] => lookup_252_2(acc),
            [120, 110, 45, 45, 49, 50, 99, 49, 102, 101, 48, 98, 114] => lookup_252_3(acc),
            [120, 110, 45, 45, 104, 51, 99, 117, 122, 107, 49, 100, 105] => lookup_252_4(acc),
            [120, 110, 45, 45, 49, 50, 99, 102, 105, 56, 105, 120, 98, 56, 108] => {
                lookup_252_5(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_253() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_254_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_254_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_254_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_254_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_254_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_254_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_254<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_254_0(acc),
            [116, 114, 97] => lookup_254_1(acc),
            [114, 101, 112] => lookup_254_2(acc),
            [101, 100, 117] => lookup_254_3(acc),
            [99, 111, 109] => lookup_254_4(acc),
            [103, 111, 118] => lookup_254_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_255() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_256() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_257() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_259() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_260() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_261() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_263() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_264_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_264_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_264_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_264_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_264_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_264_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_264_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_264_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_264<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 109] => lookup_264_0(acc),
            [99, 99] => lookup_264_1(acc),
            [111, 114, 103] => lookup_264_2(acc),
            [109, 105, 108] => lookup_264_3(acc),
            [110, 101, 116] => lookup_264_4(acc),
            [101, 100, 117] => lookup_264_5(acc),
            [99, 111, 109] => lookup_264_6(acc),
            [103, 111, 98] => lookup_264_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_266() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_267() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_268() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_269_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 101] => lookup_269_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_269_1(acc),
            [97, 116] => lookup_269_2(acc),
            [106, 112] => lookup_269_3(acc),
            [116, 111] => lookup_269_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_270() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_271() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_272_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_272_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_272_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_272_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_272_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_272_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_272_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_272_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_272_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_272_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_272<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_272_0(acc),
            [111, 114] => lookup_272_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_272_2(acc),
            [110, 111, 109] => lookup_272_3(acc),
            [115, 99] => lookup_272_4(acc),
            [111, 114, 103] => lookup_272_5(acc),
            [103, 111] => lookup_272_6(acc),
            [99, 111] => lookup_272_7(acc),
            [99, 111, 109] => lookup_272_8(acc),
            [110, 101] => lookup_272_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_273_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_273_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_273_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_273_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_273_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_273<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 121, 112, 101, 112] => lookup_273_0(acc),
            [99, 121, 111, 110] => lookup_273_1(acc),
            [100, 119, 101, 98] => lookup_273_2(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_274() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_275() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_276() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_277() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_278() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_279() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_280_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_280_1(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_280<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            [119, 119, 119] => lookup_280_1(acc),
            wild => lookup_280_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_281_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_281_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_281_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_281_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_281_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_281_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_281_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_281<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 108] => lookup_281_0(acc),
            [111, 114, 103] => lookup_281_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_281_2(acc),
            [110, 101, 116] => lookup_281_3(acc),
            [101, 100, 117] => lookup_281_4(acc),
            [99, 111, 109] => lookup_281_5(acc),
            [103, 111, 118] => lookup_281_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_282() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_283() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_284() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_285() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_286() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_287_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_287_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_287_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_287_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_287_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_287_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_287<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 114, 101, 101] => lookup_287_0(acc),
            [102, 114, 111, 109] => lookup_287_1(acc),
            [105, 122] => lookup_287_2(acc),
            [110, 97, 109, 101] => lookup_287_3(acc),
            [99, 111, 109] => lookup_287_4(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_287_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_288() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_289() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_290() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_291() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_292_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_292_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_292_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_292_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_292_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_292<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_292_0(acc),
            [114, 101, 100] => lookup_292_1(acc),
            [101, 100, 117] => lookup_292_2(acc),
            [99, 111, 109] => lookup_292_3(acc),
            [103, 111, 98] => lookup_292_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_293() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_294() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_295_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_295_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_295_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_295_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_295_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_295_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_295_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_295_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_295_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_295_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_295_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_295_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_295_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_295_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_295_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_295_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_295_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_295_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_295_18_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_295_18<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 111, 99, 97, 108, 104, 111, 115, 116] => lookup_295_18_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_295_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_295_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_295_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_295_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_295_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_295_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_295_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_295_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_295_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_295_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_295_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_295_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_295_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_295_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_295_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_295_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_295_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_295_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_295_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_295_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_295_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_295_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_295_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_295_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_295_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_295_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_295_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_295<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 121, 110, 111, 108, 111, 103, 121] => lookup_295_0(acc),
            [98, 114, 97, 115, 105, 108, 105, 97] => lookup_295_1(acc),
            [100, 110, 115, 102, 111, 114] => lookup_295_2(acc),
            [110, 99, 116, 117] => lookup_295_3(acc),
            [110, 111, 104, 111, 115, 116] => lookup_295_4(acc),
            [109, 99, 112, 101] => lookup_295_5(acc),
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 103, 98] => lookup_295_6(acc),
            [104, 111, 112, 116, 111] => lookup_295_7(acc),
            [108, 111, 103, 105, 110, 116, 111] => lookup_295_8(acc),
            [101, 100, 103, 101, 115, 116, 97, 99, 107] => lookup_295_9(acc),
            [121, 111, 109, 98, 111] => lookup_295_10(acc),
            [97, 99] => lookup_295_11(acc),
            [119, 98, 113] => lookup_295_12(acc),
            [105, 116, 115] => lookup_295_13(acc),
            [119, 101, 98, 104, 111, 112] => lookup_295_14(acc),
            [98, 97, 114, 115, 121] => lookup_295_15(acc),
            [99, 111, 117, 107] => lookup_295_16(acc),
            [111, 114, 103] => lookup_295_17(acc),
            [100, 97, 112, 108, 105, 101] => lookup_295_18(labels, acc),
            [109, 121, 100, 115] => lookup_295_19(acc),
            [110, 101, 116] => lookup_295_20(acc),
            [100, 105, 115, 107, 115, 116, 97, 116, 105, 111, 110] => lookup_295_21(acc),
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 106, 112] => lookup_295_22(acc),
            [110, 121, 109] => lookup_295_23(acc),
            [103, 108, 105, 116, 99, 104] => lookup_295_24(acc),
            [105, 50, 51, 52] => lookup_295_25(acc),
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 115, 103] => lookup_295_26(acc),
            [100, 115, 99, 108, 111, 117, 100] => lookup_295_27(acc),
            [119, 101, 100, 101, 112, 108, 111, 121] => lookup_295_28(acc),
            [102, 105, 108, 101, 103, 101, 97, 114] => lookup_295_29(acc),
            [103, 111, 118] => lookup_295_30(acc),
            [114, 97, 118, 101, 110, 100, 98] => lookup_295_31(acc),
            [99, 54, 54] => lookup_295_32(acc),
            [115, 111, 117, 110, 100, 99, 97, 115, 116] => lookup_295_33(acc),
            [116, 99, 112, 52] => lookup_295_34(acc),
            [100, 100, 110, 115] => lookup_295_35(acc),
            [108, 111, 104, 109, 117, 115] => lookup_295_36(acc),
            [110, 111, 105, 112] => lookup_295_37(acc),
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 97, 117] => lookup_295_38(acc),
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 100, 101] => lookup_295_39(acc),
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 105, 101] => lookup_295_40(acc),
            [109, 99, 100, 105, 114] => lookup_295_41(acc),
            [112, 114, 105, 118] => lookup_295_42(acc),
            [117, 107, 99, 111] => lookup_295_43(acc),
            [99, 111] => lookup_295_44(acc),
            [101, 100, 117] => lookup_295_45(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_296_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_12_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_12_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_12<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 121, 110, 100, 110, 115] => lookup_296_12_0(acc),
            [100, 121, 110] => lookup_296_12_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_296_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_20_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_20<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 121, 110] => lookup_296_20_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_296_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_30_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_30<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [100, 121, 110] => lookup_296_30_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_296_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_35_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_35<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116, 111, 109, 101, 114] => lookup_296_35_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_296_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 23usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_62_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_62<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_296_62_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_296_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 101, 105, 116, 117, 110, 103, 115, 101, 110] => lookup_296_0(acc),
            [109, 121, 104, 111, 109, 101, 45, 115, 101, 114, 118, 101, 114] => lookup_296_1(acc),
            [105, 110, 45, 118, 112, 110] => lookup_296_2(acc),
            [118, 105, 114, 116, 117, 97, 108, 45, 117, 115, 101, 114] => lookup_296_3(acc),
            [105, 110, 116, 101, 114, 110, 101, 116, 45, 100, 110, 115] => lookup_296_4(acc),
            [103, 105, 116, 45, 114, 101, 112, 111, 115] => lookup_296_5(acc),
            [50, 105, 120] => lookup_296_6(acc),
            [109, 121, 45, 118, 105, 103, 111, 114] => lookup_296_7(acc),
            [98, 112, 108, 97, 99, 101, 100] => lookup_296_8(acc),
            [49, 50, 104, 112] => lookup_296_9(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_296_10(acc),
            [98, 97, 114, 115, 121] => lookup_296_11(acc),
            [100, 100, 110, 115, 115] => lookup_296_12(labels, acc),
            [108, 111, 103, 111, 105, 112] => lookup_296_13(acc),
            [115, 113, 117, 97, 114, 101, 55] => lookup_296_14(acc),
            [105, 115, 116, 101, 105, 110, 103, 101, 101, 107] => lookup_296_15(acc),
            [115, 118, 110, 45, 114, 101, 112, 111, 115] => lookup_296_16(acc),
            [116, 97, 105, 102, 117, 110, 45, 100, 110, 115] => lookup_296_17(acc),
            [100, 100, 45, 100, 110, 115] => lookup_296_18(acc),
            [100, 121, 110, 100, 110, 115, 49] => lookup_296_19(acc),
            [104, 111, 109, 101, 45, 119, 101, 98, 115, 101, 114, 118, 101, 114] => {
                lookup_296_20(labels, acc)
            }
            [105, 110, 45, 98, 114, 98] => lookup_296_21(acc),
            [115, 99, 104, 117, 108, 115, 101, 114, 118, 101, 114] => lookup_296_22(acc),
            [100, 110, 115, 117, 112, 100, 97, 116, 101, 114] => lookup_296_23(acc),
            [105, 110, 45, 98, 117, 116, 116, 101, 114] => lookup_296_24(acc),
            [115, 121, 110, 111, 45, 100, 115] => lookup_296_25(acc),
            [102, 117, 101, 116, 116, 101, 114, 116, 100, 97, 115, 110, 101, 116, 122] => {
                lookup_296_26(acc)
            }
            [116, 101, 115, 116, 45, 105, 115, 101, 114, 118] => lookup_296_27(acc),
            [100, 105, 115, 107, 117, 115, 115, 105, 111, 110, 115, 98, 101, 114, 101, 105, 99, 104] => {
                lookup_296_28(acc)
            }
            [100, 121, 110, 45, 105, 112, 50, 52] => lookup_296_29(acc),
            [99, 111, 115, 105, 100, 110, 115] => lookup_296_30(info, labels, acc),
            [109, 101, 105, 110, 45, 118, 105, 103, 111, 114] => lookup_296_31(acc),
            [103, 195, 188, 110, 115, 116, 105, 103, 108, 105, 101, 102, 101, 114, 110] => {
                lookup_296_32(acc)
            }
            [100, 121, 110, 45, 98, 101, 114, 108, 105, 110] => lookup_296_33(acc),
            [115, 121, 110, 111, 108, 111, 103, 121, 45, 100, 105, 115, 107, 115, 116, 97, 116, 105, 111, 110] => {
                lookup_296_34(acc)
            }
            [115, 112, 101, 101, 100, 112, 97, 114, 116, 110, 101, 114] => {
                lookup_296_35(info, labels, acc)
            }
            [99, 111, 109] => lookup_296_36(acc),
            [108, 101, 98, 116, 105, 109, 110, 101, 116, 122] => lookup_296_37(acc),
            [120, 110, 45, 45, 103, 110, 115, 116, 105, 103, 98, 101, 115, 116, 101, 108, 108, 101, 110, 45, 122, 118, 98] => {
                lookup_296_38(acc)
            }
            [109, 101, 105, 110, 45, 105, 115, 101, 114, 118] => lookup_296_39(acc),
            [115, 112, 100, 110, 115] => lookup_296_40(acc),
            [100, 121, 110, 45, 118, 112, 110] => lookup_296_41(acc),
            [109, 121, 45, 119, 97, 110] => lookup_296_42(acc),
            [100, 121, 110, 118, 112, 110] => lookup_296_43(acc),
            [100, 110, 115, 104, 111, 109, 101] => lookup_296_44(acc),
            [118, 105, 114, 116, 117, 97, 108, 117, 115, 101, 114] => lookup_296_45(acc),
            [116, 114, 97, 101, 117, 109, 116, 103, 101, 114, 97, 100, 101] => lookup_296_46(acc),
            [108, 99, 117, 98, 101, 45, 115, 101, 114, 118, 101, 114] => lookup_296_47(acc),
            [100, 114, 97, 121, 45, 100, 110, 115] => lookup_296_48(acc),
            [99, 111, 109, 109, 117, 110, 105, 116, 121, 45, 112, 114, 111] => lookup_296_49(acc),
            [103, 195, 188, 110, 115, 116, 105, 103, 98, 101, 115, 116, 101, 108, 108, 101, 110] => {
                lookup_296_50(acc)
            }
            [108, 45, 111, 45, 103, 45, 105, 45, 110] => lookup_296_51(acc),
            [107, 101, 121, 109, 97, 99, 104, 105, 110, 101] => lookup_296_52(acc),
            [120, 110, 45, 45, 103, 110, 115, 116, 105, 103, 108, 105, 101, 102, 101, 114, 110, 45, 119, 111, 98] => {
                lookup_296_53(acc)
            }
            [108, 105, 109, 97, 45, 99, 105, 116, 121] => lookup_296_54(acc),
            [105, 110, 45, 98, 101, 114, 108, 105, 110] => lookup_296_55(acc),
            [115, 121, 110, 111, 108, 111, 103, 121, 45, 100, 115] => lookup_296_56(acc),
            [109, 121, 45, 114, 111, 117, 116, 101, 114] => lookup_296_57(acc),
            [105, 110, 45, 100, 115, 108] => lookup_296_58(acc),
            [109, 121, 45, 103, 97, 116, 101, 119, 97, 121] => lookup_296_59(acc),
            [102, 105, 114, 101, 119, 97, 108, 108, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_296_60(acc)
            }
            [105, 115, 116, 109, 101, 105, 110] => lookup_296_61(acc),
            [117, 98, 101, 114, 115, 112, 97, 99, 101] => lookup_296_62(info, labels, acc),
            [52, 108, 105, 109, 97] => lookup_296_63(acc),
            [100, 121, 110, 97, 109, 105, 115, 99, 104, 101, 115, 45, 100, 110, 115] => {
                lookup_296_64(acc)
            }
            [103, 111, 105, 112] => lookup_296_65(acc),
            [100, 114, 97, 121, 100, 110, 115] => lookup_296_66(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_297_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_297_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_297_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [121] => lookup_297_0(acc),
            [50] => lookup_297_1(acc),
            [52] => lookup_297_2(acc),
            [109] => lookup_297_3(acc),
            [54] => lookup_297_4(acc),
            [56] => lookup_297_5(acc),
            [55] => lookup_297_6(acc),
            [57] => lookup_297_7(acc),
            [104] => lookup_297_8(acc),
            [108] => lookup_297_9(acc),
            [117] => lookup_297_10(acc),
            [110] => lookup_297_11(acc),
            [111] => lookup_297_12(acc),
            [113] => lookup_297_13(acc),
            [103] => lookup_297_14(acc),
            [107] => lookup_297_15(acc),
            [51] => lookup_297_16(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_297_17(acc),
            [98, 97, 114, 115, 121] => lookup_297_18(acc),
            [122] => lookup_297_19(acc),
            [118] => lookup_297_20(acc),
            [112] => lookup_297_21(acc),
            [120] => lookup_297_22(acc),
            [105] => lookup_297_23(acc),
            [99] => lookup_297_24(acc),
            [100] => lookup_297_25(acc),
            [49] => lookup_297_26(acc),
            [101] => lookup_297_27(acc),
            [106] => lookup_297_28(acc),
            [53] => lookup_297_29(acc),
            [115] => lookup_297_30(acc),
            [114] => lookup_297_31(acc),
            [116] => lookup_297_32(acc),
            [119] => lookup_297_33(acc),
            [48] => lookup_297_34(acc),
            [98] => lookup_297_35(acc),
            [102] => lookup_297_36(acc),
            [97] => lookup_297_37(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_298() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_299() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_300() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_301() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_302() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_303() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_304() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_305_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_305_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_305_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_305_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_305_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_305_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_305<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 11usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 111, 100, 48, 97, 108, 103] => lookup_305_0(acc),
            [120, 110, 45, 45, 53, 53, 113, 120, 53, 100] => lookup_305_1(acc),
            [120, 110, 45, 45, 119, 99, 118, 115, 50, 50, 100] => lookup_305_2(acc),
            [120, 110, 45, 45, 103, 109, 113, 119, 53, 97] => lookup_305_3(acc),
            [120, 110, 45, 45, 109, 120, 116, 113, 49, 109] => lookup_305_4(acc),
            [120, 110, 45, 45, 117, 99, 48, 97, 116, 118] => lookup_305_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_306() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_307() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_308() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_309_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_309<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_309_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_310() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_311() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_312() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_313_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_313_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_313_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_313<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_313_0(acc),
            [99, 111] => lookup_313_1(acc),
            [97, 99] => lookup_313_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_314() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_315() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_316() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_317() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_318() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 99, 111, 108, 111, 103, 105, 97] => lookup_319_0(acc),
            [116, 101, 99, 110, 111, 108, 111, 103, 105, 97] => lookup_319_1(acc),
            [98, 108, 111, 103] => lookup_319_2(acc),
            [112, 117, 101, 98, 108, 111] => lookup_319_3(acc),
            [116, 114, 97, 110, 115, 112, 111, 114, 116, 101] => lookup_319_4(acc),
            [109, 105, 108] => lookup_319_5(acc),
            [105, 110, 102, 111] => lookup_319_6(acc),
            [116, 118] => lookup_319_7(acc),
            [110, 111, 116, 105, 99, 105, 97, 115] => lookup_319_8(acc),
            [98, 111, 108, 105, 118, 105, 97] => lookup_319_9(acc),
            [99, 111, 109] => lookup_319_10(acc),
            [105, 110, 100, 117, 115, 116, 114, 105, 97] => lookup_319_11(acc),
            [112, 114, 111, 102, 101, 115, 105, 111, 110, 97, 108] => lookup_319_12(acc),
            [109, 111, 118, 105, 109, 105, 101, 110, 116, 111] => lookup_319_13(acc),
            [119, 101, 98] => lookup_319_14(acc),
            [112, 108, 117, 114, 105, 110, 97, 99, 105, 111, 110, 97, 108] => lookup_319_15(acc),
            [100, 101, 109, 111, 99, 114, 97, 99, 105, 97] => lookup_319_16(acc),
            [111, 114, 103] => lookup_319_17(acc),
            [109, 117, 115, 105, 99, 97] => lookup_319_18(acc),
            [97, 114, 116, 101] => lookup_319_19(acc),
            [110, 101, 116] => lookup_319_20(acc),
            [100, 101, 112, 111, 114, 116, 101] => lookup_319_21(acc),
            [103, 111, 98] => lookup_319_22(acc),
            [105, 110, 116] => lookup_319_23(acc),
            [112, 97, 116, 114, 105, 97] => lookup_319_24(acc),
            [110, 111, 109, 98, 114, 101] => lookup_319_25(acc),
            [116, 107, 115, 97, 116] => lookup_319_26(acc),
            [99, 111, 111, 112, 101, 114, 97, 116, 105, 118, 97] => lookup_319_27(acc),
            [112, 111, 108, 105, 116, 105, 99, 97] => lookup_319_28(acc),
            [97, 103, 114, 111] => lookup_319_29(acc),
            [99, 105, 101, 110, 99, 105, 97] => lookup_319_30(acc),
            [110, 97, 116, 117, 114, 97, 108] => lookup_319_31(acc),
            [101, 109, 112, 114, 101, 115, 97] => lookup_319_32(acc),
            [101, 99, 111, 110, 111, 109, 105, 97] => lookup_319_33(acc),
            [114, 101, 118, 105, 115, 116, 97] => lookup_319_34(acc),
            [109, 101, 100, 105, 99, 105, 110, 97] => lookup_319_35(acc),
            [105, 110, 100, 105, 103, 101, 110, 97] => lookup_319_36(acc),
            [97, 99, 97, 100, 101, 109, 105, 97] => lookup_319_37(acc),
            [115, 97, 108, 117, 100] => lookup_319_38(acc),
            [119, 105, 107, 105] => lookup_319_39(acc),
            [101, 100, 117] => lookup_319_40(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_320() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_321() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_322() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_323() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_324() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_325() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_326() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_327() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_328_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_328_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_328_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_328_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_328_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_328_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_328_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_328<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 101] => lookup_328_0(acc),
            [111, 114, 103] => lookup_328_1(acc),
            [115, 99, 104] => lookup_328_2(acc),
            [110, 101, 116] => lookup_328_3(acc),
            [101, 100, 117] => lookup_328_4(acc),
            [99, 111, 109] => lookup_328_5(acc),
            [103, 111, 118] => lookup_328_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_329() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_330() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_331() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_332() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_333() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_334() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_335() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_337() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_338() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_339() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_340() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_341() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_342() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_343_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_343_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_343_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_343_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_343_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_343_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_343_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_343_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_343_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_343_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_343<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 98] => lookup_343_0(acc),
            [115, 108, 100] => lookup_343_1(acc),
            [119, 101, 98] => lookup_343_2(acc),
            [109, 105, 108] => lookup_343_3(acc),
            [111, 114, 103] => lookup_343_4(acc),
            [97, 114, 116] => lookup_343_5(acc),
            [110, 101, 116] => lookup_343_6(acc),
            [101, 100, 117] => lookup_343_7(acc),
            [99, 111, 109] => lookup_343_8(acc),
            [103, 111, 118] => lookup_343_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_344() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_345() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_346_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_346_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_346_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_346_3_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_346_3_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [106, 108] => lookup_346_3_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_346_3<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 101, 114, 118] => lookup_346_3_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_346_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_346_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_346_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_346<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_346_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_346_1(acc),
            [110, 121, 109] => lookup_346_2(acc),
            [110, 101, 116] => lookup_346_3(labels, acc),
            [101, 100, 117] => lookup_346_4(acc),
            [99, 111, 109] => lookup_346_5(acc),
            [103, 111, 98] => lookup_346_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_347() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_348() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_350() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_351() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_352() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_353() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_354() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_355() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_356_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_356_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_356_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_356_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_356_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_356_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_356_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_356_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_356<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_356_0(acc),
            [101, 110, 115, 99, 97, 108, 101, 100] => lookup_356_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_356_2(acc),
            [111, 114, 103] => lookup_356_3(acc),
            [110, 101, 116] => lookup_356_4(acc),
            [112, 101, 114] => lookup_356_5(acc),
            [101, 100, 117] => lookup_356_6(acc),
            [99, 111, 109] => lookup_356_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_357() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_358() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_359() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_361() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_362() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_363() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_364() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_365() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_366() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_367() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_368() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_369_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_369_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_369_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_369_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_369<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 116] => lookup_369_0(acc),
            [99, 111] => lookup_369_1(acc),
            [99, 111, 109] => lookup_369_2(acc),
            [103, 111, 118] => lookup_369_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_370() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_371() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_372() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_373() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_374_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_374_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_374_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 31usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_374_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_374_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_374_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_374_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_374_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 104, 97, 109, 98, 97, 103, 114, 105] => lookup_374_0(acc),
            [103, 114, 101, 116, 97] => lookup_374_1(acc),
            [110, 111, 116, 97, 105, 114, 101, 115] => lookup_374_2(acc),
            [103, 111, 117, 118] => lookup_374_3(acc),
            [97, 118, 111, 117, 101, 115] => lookup_374_4(acc),
            [118, 101, 116, 101, 114, 105, 110, 97, 105, 114, 101] => lookup_374_5(acc),
            [99, 99, 105] => lookup_374_6(acc),
            [99, 111, 109] => lookup_374_7(acc),
            [104, 117, 105, 115, 115, 105, 101, 114, 45, 106, 117, 115, 116, 105, 99, 101] => {
                lookup_374_8(acc)
            }
            [102, 114, 101, 101, 98, 111, 120, 111, 115] => lookup_374_9(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_374_10(acc),
            [99, 104, 105, 114, 117, 114, 103, 105, 101, 110, 115, 45, 100, 101, 110, 116, 105, 115, 116, 101, 115] => {
                lookup_374_11(acc)
            }
            [97, 101, 114, 111, 112, 111, 114, 116] => lookup_374_12(acc),
            [102, 98, 120, 45, 111, 115] => lookup_374_13(acc),
            [99, 104, 105, 114, 117, 114, 103, 105, 101, 110, 115, 45, 100, 101, 110, 116, 105, 115, 116, 101, 115, 45, 101, 110, 45, 102, 114, 97, 110, 99, 101] => {
                lookup_374_14(acc)
            }
            [112, 114, 100] => lookup_374_15(acc),
            [112, 111, 114, 116] => lookup_374_16(acc),
            [111, 110, 45, 119, 101, 98] => lookup_374_17(acc),
            [116, 109] => lookup_374_18(acc),
            [97, 118, 111, 99, 97, 116] => lookup_374_19(acc),
            [102, 98, 120, 111, 115] => lookup_374_20(acc),
            [110, 111, 109] => lookup_374_21(acc),
            [102, 114, 101, 101, 98, 111, 120, 45, 111, 115] => lookup_374_22(acc),
            [101, 110, 45, 114, 111, 111, 116] => lookup_374_23(acc),
            [103, 101, 111, 109, 101, 116, 114, 101, 45, 101, 120, 112, 101, 114, 116] => {
                lookup_374_24(acc)
            }
            [112, 104, 97, 114, 109, 97, 99, 105, 101, 110] => lookup_374_25(acc),
            [101, 120, 112, 101, 114, 116, 115, 45, 99, 111, 109, 112, 116, 97, 98, 108, 101, 115] => {
                lookup_374_26(acc)
            }
            [97, 115, 115, 111] => lookup_374_27(acc),
            [109, 101, 100, 101, 99, 105, 110] => lookup_374_28(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_375() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_376() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_377() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_378() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_379() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_380_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_380_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_380_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_380_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_380_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_380_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_380_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_380_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_380_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_380_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_380_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_380_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_380_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_380<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_380_0(acc),
            [103, 111, 118] => lookup_380_1(acc),
            [98, 105, 122] => lookup_380_2(acc),
            [110, 97, 109, 101] => lookup_380_3(acc),
            [112, 114, 111] => lookup_380_4(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_380_5(acc),
            [111, 114, 103] => lookup_380_6(acc),
            [105, 110, 102, 111] => lookup_380_7(acc),
            [104, 101, 97, 108, 116, 104] => lookup_380_8(acc),
            [110, 101, 116] => lookup_380_9(acc),
            [101, 100, 117] => lookup_380_10(acc),
            [105, 110, 116] => lookup_380_11(acc),
            [97, 99] => lookup_380_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_381() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_382() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_383() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_384_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_384<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 104, 97, 116] => lookup_384_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_385() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_386() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_387_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_387_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_387_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_387_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_387_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_387_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_387_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_387_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_387_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_387_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_387<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_387_0(acc),
            [101, 100, 117] => lookup_387_1(acc),
            [115, 116, 111, 114, 101] => lookup_387_2(acc),
            [111, 114, 103] => lookup_387_3(acc),
            [105, 110, 102, 111] => lookup_387_4(acc),
            [116, 118] => lookup_387_5(acc),
            [110, 101, 116] => lookup_387_6(acc),
            [99, 111] => lookup_387_7(acc),
            [99, 111, 109] => lookup_387_8(acc),
            [103, 111, 118] => lookup_387_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_388_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_388_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_388_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_388_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_388_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_388_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_388_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_388<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_388_0(acc),
            [111, 114, 103] => lookup_388_1(acc),
            [105, 110, 102, 111] => lookup_388_2(acc),
            [110, 101, 116] => lookup_388_3(acc),
            [101, 100, 117] => lookup_388_4(acc),
            [99, 111, 109] => lookup_388_5(acc),
            [103, 111, 118] => lookup_388_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_389() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_390() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_391() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_392_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_392_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_392_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_392_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_392_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_392_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_392_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_392_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_392_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_392<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114] => lookup_392_0(acc),
            [110, 111, 109] => lookup_392_1(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_392_2(acc),
            [120, 52, 52, 51] => lookup_392_3(acc),
            [98, 101, 108, 97, 117] => lookup_392_4(acc),
            [101, 100] => lookup_392_5(acc),
            [103, 111] => lookup_392_6(acc),
            [99, 111] => lookup_392_7(acc),
            [110, 101] => lookup_392_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_393() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_394() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_395() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_396() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_397_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_397_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_397_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [100, 105, 114, 101, 99, 116] => lookup_397_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_397_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_397_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_397_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_397_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_397_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_397_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_397_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_397_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_397_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_397_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_397<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [114, 100, 118] => lookup_397_0(acc),
            [113, 117, 105, 99, 107, 99, 111, 110, 110, 101, 99, 116] => {
                lookup_397_1(info, labels, acc)
            }
            [111, 121, 97] => lookup_397_2(acc),
            [54, 49, 49] => lookup_397_3(acc),
            [111, 114, 103] => lookup_397_4(acc),
            [109, 105, 108] => lookup_397_5(acc),
            [110, 121, 97, 110] => lookup_397_6(acc),
            [118, 112, 110, 112, 108, 117, 115] => lookup_397_7(acc),
            [110, 101, 116] => lookup_397_8(acc),
            [101, 100, 117] => lookup_397_9(acc),
            [99, 111, 109] => lookup_397_10(acc),
            [103, 111, 118] => lookup_397_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_398() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_399() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_400() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_401_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_401_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_401_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_401_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_401_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_401_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_401<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 110, 116, 101, 114, 112, 114, 105, 115, 101, 99, 108, 111, 117, 100] => {
                lookup_401_0(acc)
            }
            [109, 105, 110, 101] => lookup_401_1(acc),
            [115, 104, 97, 99, 107, 110, 101, 116] => lookup_401_2(acc),
            [110, 111, 109] => lookup_401_3(acc),
            [117, 119, 117] => lookup_401_4(acc),
            [109, 101, 114, 115, 101, 105, 110, 101] => lookup_401_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_402_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_402_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_402<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 114, 111, 109] => lookup_402_0(acc),
            [119, 105, 116, 104] => lookup_402_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_403() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_404_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_404_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_404<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 110, 100] => lookup_404_0(acc),
            [102, 111, 114] => lookup_404_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_405() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_406() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_407() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_408() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_409() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_410() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_411() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_412() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_413() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_414() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_415() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_416() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_417() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_418() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_419() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_420() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_421_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_421_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_421_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_421_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_421_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_421_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_421_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_421<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_421_0(acc),
            [105, 110, 102, 111] => lookup_421_1(acc),
            [111, 114, 103] => lookup_421_2(acc),
            [110, 101, 116] => lookup_421_3(acc),
            [101, 100, 117] => lookup_421_4(acc),
            [99, 111, 109] => lookup_421_5(acc),
            [103, 111, 118] => lookup_421_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_422() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_423_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_423_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_423_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_423_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_423_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_423_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_423_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_423_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_423_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_423_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_423_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_423<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_423_0(acc),
            [99, 111, 109] => lookup_423_1(acc),
            [97, 99] => lookup_423_2(acc),
            [115, 99, 104] => lookup_423_3(acc),
            [109, 105, 108] => lookup_423_4(acc),
            [105, 110, 102, 111] => lookup_423_5(acc),
            [111, 114, 103] => lookup_423_6(acc),
            [110, 101, 116] => lookup_423_7(acc),
            [101, 100, 117] => lookup_423_8(acc),
            [99, 111] => lookup_423_9(acc),
            [103, 111, 118] => lookup_423_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_424() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_425() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_426() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_427() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_428_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_428<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_428_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_429() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_430() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_431() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_432() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_433_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_433_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_433_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_433_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_433_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_433<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_433_0(acc),
            [110, 101, 116] => lookup_433_1(acc),
            [101, 100, 117] => lookup_433_2(acc),
            [99, 111, 109] => lookup_433_3(acc),
            [103, 111, 118] => lookup_433_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_434() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_435() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_436() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_437() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_438() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_439() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_440() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_441() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_442() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_443_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_443_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_443_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_443_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_443_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_443_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [117, 112, 97, 97, 115] => lookup_443_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_443_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_443_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_443_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_443_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_443<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 121, 109] => lookup_443_0(acc),
            [106, 99, 108, 111, 117, 100] => lookup_443_1(acc),
            [111, 114, 103] => lookup_443_2(acc),
            [109, 105, 108] => lookup_443_3(acc),
            [107, 97, 122, 116, 101, 108, 101, 112, 111, 114, 116] => {
                lookup_443_4(info, labels, acc)
            }
            [110, 101, 116] => lookup_443_5(acc),
            [101, 100, 117] => lookup_443_6(acc),
            [99, 111, 109] => lookup_443_7(acc),
            [103, 111, 118] => lookup_443_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_444() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_445() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_446_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_446_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_446_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_446_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_446_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_446_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_446_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_446_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_446_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_446_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_446_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_446_11_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_446_11_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_446_11_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [106] => lookup_446_11_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_446_11<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_446_11_0(acc),
            [115, 99, 97, 108, 101, 102, 111, 114, 99, 101] => lookup_446_11_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_446_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_446<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_446_0(acc),
            [101, 107, 108, 111, 103, 101, 115] => lookup_446_1(acc),
            [97, 99] => lookup_446_2(acc),
            [112, 97, 114, 108, 105, 97, 109, 101, 110, 116] => lookup_446_3(acc),
            [112, 114, 101, 115, 115] => lookup_446_4(acc),
            [112, 114, 111] => lookup_446_5(acc),
            [116, 109] => lookup_446_6(acc),
            [111, 114, 103] => lookup_446_7(acc),
            [108, 116, 100] => lookup_446_8(acc),
            [110, 97, 109, 101] => lookup_446_9(acc),
            [110, 101, 116] => lookup_446_10(acc),
            [99, 111, 109] => lookup_446_11(labels, acc),
            [103, 111, 118] => lookup_446_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_447() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_448() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_449_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_449_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_449<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 102] => lookup_449_0(acc),
            [105, 110] => lookup_449_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_450_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_450_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_450_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_450_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_450_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_450_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_450_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_450_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_450_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_450<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_450_0(acc),
            [109, 101, 100] => lookup_450_1(acc),
            [101, 100, 117] => lookup_450_2(acc),
            [112, 114, 111] => lookup_450_3(acc),
            [111, 114, 103] => lookup_450_4(acc),
            [110, 101, 116] => lookup_450_5(acc),
            [109, 117, 115, 101, 117, 109] => lookup_450_6(acc),
            [99, 111] => lookup_450_7(acc),
            [103, 111, 118] => lookup_450_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_451_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_451_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_451_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_451_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_451_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_451_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_451_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_451_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_451_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_451_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_451_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_451_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_451_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_451_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_451_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_451_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_451_16_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_451_16<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_451_16_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_451_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_451<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 119, 105] => lookup_451_0(acc),
            [110, 121, 109] => lookup_451_1(acc),
            [103, 111, 118, 116] => lookup_451_2(acc),
            [112, 97, 114, 108, 105, 97, 109, 101, 110, 116] => lookup_451_3(acc),
            [115, 99, 104, 111, 111, 108] => lookup_451_4(acc),
            [109, 105, 108] => lookup_451_5(acc),
            [107, 105, 119, 105] => lookup_451_6(acc),
            [109, 196, 129, 111, 114, 105] => lookup_451_7(acc),
            [97, 99] => lookup_451_8(acc),
            [103, 101, 101, 107] => lookup_451_9(acc),
            [99, 114, 105] => lookup_451_10(acc),
            [109, 97, 111, 114, 105] => lookup_451_11(acc),
            [103, 101, 110] => lookup_451_12(acc),
            [104, 101, 97, 108, 116, 104] => lookup_451_13(acc),
            [111, 114, 103] => lookup_451_14(acc),
            [110, 101, 116] => lookup_451_15(acc),
            [99, 111] => lookup_451_16(labels, acc),
            [120, 110, 45, 45, 109, 111, 114, 105, 45, 113, 115, 97] => lookup_451_17(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_452() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_453() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_454() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_455() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_456_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_456_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_456_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_456_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_456_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_456_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_456_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_456<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 111, 98, 105] => lookup_456_0(acc),
            [111, 114, 103] => lookup_456_1(acc),
            [97, 115, 115, 111] => lookup_456_2(acc),
            [110, 101, 116] => lookup_456_3(acc),
            [101, 100, 117] => lookup_456_4(acc),
            [99, 111, 109] => lookup_456_5(acc),
            [97, 112, 112] => lookup_456_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_457() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_458_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_458_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_458_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 105, 116, 101, 115] => lookup_458_0_0(acc),
            [100, 101, 118] => lookup_458_0_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_458<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 97, 116, 105, 99] => lookup_458_0(labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_459() -> Info {
    Info {
        len: 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_460() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_461_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_461<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_461_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_462_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_462_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_462_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_462_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_462_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_462_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_462_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_462_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_462<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 101, 100] => lookup_462_0(acc),
            [111, 114, 103] => lookup_462_1(acc),
            [105, 110, 102, 111] => lookup_462_2(acc),
            [116, 118] => lookup_462_3(acc),
            [110, 101, 116] => lookup_462_4(acc),
            [101, 100, 117] => lookup_462_5(acc),
            [99, 111, 109] => lookup_462_6(acc),
            [103, 111, 118] => lookup_462_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_463() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_464_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_464_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_464_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_464<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109, 112, 117, 116, 101] => lookup_464_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_465() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_466() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_467_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_467_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_467_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_467_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_467_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_467_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_467_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_467_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_467_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_467<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [114, 97, 100, 105, 111] => lookup_467_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_467_1(acc),
            [99, 111, 109, 109, 117, 110, 101] => lookup_467_2(acc),
            [111, 114, 103] => lookup_467_3(acc),
            [110, 121, 97, 97] => lookup_467_4(acc),
            [110, 101, 116] => lookup_467_5(acc),
            [99, 111] => lookup_467_6(acc),
            [99, 111, 109] => lookup_467_7(acc),
            [110, 101, 107, 111] => lookup_467_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_468() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_469() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_470() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_471() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_472() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_473() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_474() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_475() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_476() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_477() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_478() -> Info {
    Info {
        len: 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_479() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_480_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_480_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_480_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_480_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_480_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_480_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_480_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_480<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 122, 105, 109, 117, 116, 104] => lookup_480_0(acc),
            [116, 108, 111, 110] => lookup_480_1(acc),
            [99, 111] => lookup_480_2(acc),
            [97, 108, 99, 101, 115] => lookup_480_3(info, labels, acc),
            [97, 114, 118, 111] => lookup_480_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_481() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_482_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_482_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_482_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_482_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_482_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_482_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_482_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_482<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 108] => lookup_482_0(acc),
            [111, 114, 103] => lookup_482_1(acc),
            [99, 111, 111, 112] => lookup_482_2(acc),
            [110, 101, 116] => lookup_482_3(acc),
            [101, 100, 117] => lookup_482_4(acc),
            [99, 111, 109] => lookup_482_5(acc),
            [103, 111, 118] => lookup_482_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_483() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_484() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_485() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_486_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_486_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_486_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_486_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_486<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 105, 116, 97, 112, 112] => lookup_486_0(acc),
            [103, 105, 116, 112, 97, 103, 101] => lookup_486_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_486_2(acc),
            [110, 111, 109] => lookup_486_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_487() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_488() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_489() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_490() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_491() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_492() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_493() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_494() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_495() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_496() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_497_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_497_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_497_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_497_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_497_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_497_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_497<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_497_0(acc),
            [111, 114, 103] => lookup_497_1(acc),
            [110, 101, 116] => lookup_497_2(acc),
            [101, 100, 117] => lookup_497_3(acc),
            [99, 111, 109] => lookup_497_4(acc),
            [97, 99] => lookup_497_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_498() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_499_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_499_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_499_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_499_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_499_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_499<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_499_0(acc),
            [110, 101, 116] => lookup_499_1(acc),
            [101, 100, 117] => lookup_499_2(acc),
            [99, 111, 109] => lookup_499_3(acc),
            [103, 111, 118] => lookup_499_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_500_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_500_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_500<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 111, 114] => lookup_500_0(acc),
            [114, 101, 112, 97, 105, 114] => lookup_500_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_501() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_502_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_502_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_502_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_502_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_502_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_502_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_502_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_502_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_502_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_502_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_502_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_502_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_502_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_502_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_502_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_502_15_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_502_15<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_502_15_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_502_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_502_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_502<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            [115, 99, 104, 111, 111, 108] => lookup_502_0(acc),
            [97, 108, 116] => lookup_502_1(acc),
            [97, 103, 114, 105, 99] => lookup_502_2(acc),
            [108, 97, 119] => lookup_502_3(acc),
            [109, 105, 108] => lookup_502_4(acc),
            [110, 105, 115] => lookup_502_5(acc),
            [110, 105, 99] => lookup_502_6(acc),
            [103, 111, 118] => lookup_502_7(acc),
            [103, 114, 111, 110, 100, 97, 114] => lookup_502_8(acc),
            [97, 99] => lookup_502_9(acc),
            [116, 109] => lookup_502_10(acc),
            [110, 111, 109] => lookup_502_11(acc),
            [119, 101, 98] => lookup_502_12(acc),
            [111, 114, 103] => lookup_502_13(acc),
            [110, 101, 116] => lookup_502_14(acc),
            [99, 111] => lookup_502_15(labels, acc),
            [101, 100, 117] => lookup_502_16(acc),
            [110, 103, 111] => lookup_502_17(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_503() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_504() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_505_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_505<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 115, 105, 116, 101] => lookup_505_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_506() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_507() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_508() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_510() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_511() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_512_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_512_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_512_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_512_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_512<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 101] => lookup_512_0(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_512_1(acc),
            [112, 111, 110, 121] => lookup_512_2(acc),
            [98, 97, 114, 115, 121] => lookup_512_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_513() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_514() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_515() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_516() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_518() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_519() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_520() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_521() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_522_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_522_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_522<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [117, 98, 101, 114] => lookup_522_0(acc),
            [109, 121, 102, 97, 115, 116] => lookup_522_1(acc),
            [120, 115, 52, 97, 108, 108] => lookup_522_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_523() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_524_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_524_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_524_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_524_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_524_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_524_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_524<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [208, 190, 208, 180] => lookup_524_0(acc),
            [208, 191, 209, 128] => lookup_524_1(acc),
            [208, 190, 209, 128, 208, 179] => lookup_524_2(acc),
            [209, 131, 208, 191, 209, 128] => lookup_524_3(acc),
            [208, 190, 208, 177, 209, 128] => lookup_524_4(acc),
            [208, 176, 208, 186] => lookup_524_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_525() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_526() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_527() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_528() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_529() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_530() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_531() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_532() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_534() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_535() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_536() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_538() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_37_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_539_37_1_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_539_37_1_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [117, 115, 101, 114, 115] => lookup_539_37_1_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_539_37_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [115, 99, 97, 108, 101] => lookup_539_37_1_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_539_37<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_539_37_0(acc),
            [118, 105, 114, 116, 117, 97, 108, 99, 108, 111, 117, 100] => {
                lookup_539_37_1(info, labels, acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_539_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_63_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_63<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_539_63_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_539_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_100_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_539_100_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_539_100_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_539_100_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_539_100_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_539_100_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_539_100_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_539_100_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_539_100_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_539_100_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_539_100_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_539_100_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_539_100_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_539_100_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_539_100_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_539_100_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_539_100_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_539_100_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_539_100_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_539_100_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_539_100_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_539_100_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_539_100_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_539_100_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_539_100_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_539_100_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_539_100_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_539_100<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 112] => lookup_539_100_0(acc),
            [112, 105] => lookup_539_100_1(acc),
            [114, 110] => lookup_539_100_2(acc),
            [114, 111] => lookup_539_100_3(acc),
            [114, 114] => lookup_539_100_4(acc),
            [115, 112] => lookup_539_100_5(acc),
            [109, 115] => lookup_539_100_6(acc),
            [99, 101] => lookup_539_100_7(acc),
            [109, 97] => lookup_539_100_8(acc),
            [100, 102] => lookup_539_100_9(acc),
            [115, 101] => lookup_539_100_10(acc),
            [116, 111] => lookup_539_100_11(acc),
            [97, 108] => lookup_539_100_12(acc),
            [101, 115] => lookup_539_100_13(acc),
            [97, 99] => lookup_539_100_14(acc),
            [112, 98] => lookup_539_100_15(acc),
            [98, 97] => lookup_539_100_16(acc),
            [112, 97] => lookup_539_100_17(acc),
            [112, 101] => lookup_539_100_18(acc),
            [114, 106] => lookup_539_100_19(acc),
            [114, 115] => lookup_539_100_20(acc),
            [115, 99] => lookup_539_100_21(acc),
            [103, 111] => lookup_539_100_22(acc),
            [112, 114] => lookup_539_100_23(acc),
            [97, 109] => lookup_539_100_24(acc),
            [109, 116] => lookup_539_100_25(acc),
            [109, 103] => lookup_539_100_26(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_539_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_131_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_131_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_131_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_131_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_131_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_131_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_131_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_131_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_131_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_131_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_131_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_131_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_131_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_131_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_131_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_131_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_131_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_131_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_131_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_131_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_131_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_131_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_131_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_131_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_131_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_131_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_131_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_131<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 112] => lookup_539_131_0(acc),
            [112, 105] => lookup_539_131_1(acc),
            [114, 110] => lookup_539_131_2(acc),
            [114, 111] => lookup_539_131_3(acc),
            [114, 114] => lookup_539_131_4(acc),
            [115, 112] => lookup_539_131_5(acc),
            [109, 115] => lookup_539_131_6(acc),
            [99, 101] => lookup_539_131_7(acc),
            [109, 97] => lookup_539_131_8(acc),
            [100, 102] => lookup_539_131_9(acc),
            [115, 101] => lookup_539_131_10(acc),
            [116, 111] => lookup_539_131_11(acc),
            [97, 108] => lookup_539_131_12(acc),
            [101, 115] => lookup_539_131_13(acc),
            [97, 99] => lookup_539_131_14(acc),
            [112, 98] => lookup_539_131_15(acc),
            [98, 97] => lookup_539_131_16(acc),
            [112, 97] => lookup_539_131_17(acc),
            [112, 101] => lookup_539_131_18(acc),
            [114, 106] => lookup_539_131_19(acc),
            [114, 115] => lookup_539_131_20(acc),
            [115, 99] => lookup_539_131_21(acc),
            [103, 111] => lookup_539_131_22(acc),
            [112, 114] => lookup_539_131_23(acc),
            [97, 109] => lookup_539_131_24(acc),
            [109, 116] => lookup_539_131_25(acc),
            [109, 103] => lookup_539_131_26(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_539_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 106, 117] => lookup_539_0(acc),
            [102, 111, 114, 116, 97, 108] => lookup_539_1(acc),
            [101, 99, 110] => lookup_539_2(acc),
            [112, 115, 105] => lookup_539_3(acc),
            [109, 105, 108] => lookup_539_4(acc),
            [115, 114, 118] => lookup_539_5(acc),
            [116, 118] => lookup_539_6(acc),
            [99, 110, 116] => lookup_539_7(acc),
            [109, 101, 100] => lookup_539_8(acc),
            [105, 110, 100] => lookup_539_9(acc),
            [108, 111, 110, 100, 114, 105, 110, 97] => lookup_539_10(acc),
            [109, 117, 115] => lookup_539_11(acc),
            [102, 108, 111, 103] => lookup_539_12(acc),
            [99, 105, 109] => lookup_539_13(acc),
            [98, 105, 111] => lookup_539_14(acc),
            [97, 103, 114] => lookup_539_15(acc),
            [106, 111, 114] => lookup_539_16(acc),
            [99, 110, 103] => lookup_539_17(acc),
            [111, 100, 111] => lookup_539_18(acc),
            [110, 116, 114] => lookup_539_19(acc),
            [115, 108, 122] => lookup_539_20(acc),
            [99, 117, 114, 105, 116, 105, 98, 97] => lookup_539_21(acc),
            [97, 114, 116] => lookup_539_22(acc),
            [109, 97, 99, 101, 105, 111] => lookup_539_23(acc),
            [103, 103, 102] => lookup_539_24(acc),
            [114, 97, 100, 105, 111] => lookup_539_25(acc),
            [99, 97, 109, 112, 105, 110, 97, 103, 114, 97, 110, 100, 101] => lookup_539_26(acc),
            [101, 100, 117] => lookup_539_27(acc),
            [115, 108, 103] => lookup_539_28(acc),
            [114, 101, 99] => lookup_539_29(acc),
            [100, 101, 102] => lookup_539_30(acc),
            [98, 108, 111, 103] => lookup_539_31(acc),
            [101, 99, 111] => lookup_539_32(acc),
            [114, 105, 111] => lookup_539_33(acc),
            [111, 115, 97, 115, 99, 111] => lookup_539_34(acc),
            [100, 101, 118] => lookup_539_35(acc),
            [109, 97, 99, 97, 112, 97] => lookup_539_36(acc),
            [99, 111, 109] => lookup_539_37(labels, acc),
            [97, 114, 113] => lookup_539_38(acc),
            [101, 116, 99] => lookup_539_39(acc),
            [112, 114, 111] => lookup_539_40(acc),
            [115, 106, 99] => lookup_539_41(acc),
            [98, 105, 98] => lookup_539_42(acc),
            [115, 97, 111, 98, 101, 114, 110, 97, 114, 100, 111] => lookup_539_43(acc),
            [102, 97, 114] => lookup_539_44(acc),
            [115, 97, 110, 116, 111, 97, 110, 100, 114, 101] => lookup_539_45(acc),
            [109, 97, 110, 97, 117, 115] => lookup_539_46(acc),
            [98, 104, 122] => lookup_539_47(acc),
            [114, 101, 112] => lookup_539_48(acc),
            [98, 115, 98] => lookup_539_49(acc),
            [112, 112, 103] => lookup_539_50(acc),
            [97, 98, 99] => lookup_539_51(acc),
            [99, 97, 109, 112, 105, 110, 97, 115] => lookup_539_52(acc),
            [112, 115, 99] => lookup_539_53(acc),
            [102, 111, 116] => lookup_539_54(acc),
            [109, 97, 116] => lookup_539_55(acc),
            [110, 97, 116, 97, 108] => lookup_539_56(acc),
            [115, 101, 103] => lookup_539_57(acc),
            [114, 105, 98, 101, 105, 114, 97, 111] => lookup_539_58(acc),
            [97, 110, 97, 110, 105] => lookup_539_59(acc),
            [111, 110, 103] => lookup_539_60(acc),
            [116, 97, 120, 105] => lookup_539_61(acc),
            [101, 116, 105] => lookup_539_62(acc),
            [110, 111, 109] => lookup_539_63(info, labels, acc),
            [99, 97, 120, 105, 97, 115] => lookup_539_64(acc),
            [99, 114, 105] => lookup_539_65(acc),
            [109, 111, 114, 101, 110, 97] => lookup_539_66(acc),
            [116, 101, 99] => lookup_539_67(acc),
            [99, 111, 111, 112] => lookup_539_68(acc),
            [102, 109] => lookup_539_69(acc),
            [116, 104, 101] => lookup_539_70(acc),
            [106, 111, 105, 110, 118, 105, 108, 108, 101] => lookup_539_71(acc),
            [97, 109] => lookup_539_72(acc),
            [102, 110, 100] => lookup_539_73(acc),
            [103, 114, 117] => lookup_539_74(acc),
            [108, 111, 103] => lookup_539_75(acc),
            [115, 97, 109, 112, 97] => lookup_539_76(acc),
            [119, 105, 107, 105] => lookup_539_77(acc),
            [103, 111, 105, 97, 110, 105, 97] => lookup_539_78(acc),
            [122, 108, 103] => lookup_539_79(acc),
            [100, 101, 116] => lookup_539_80(acc),
            [113, 115, 108] => lookup_539_81(acc),
            [112, 111, 97] => lookup_539_82(acc),
            [101, 115, 112] => lookup_539_83(acc),
            [112, 118, 104] => lookup_539_84(acc),
            [109, 112] => lookup_539_85(acc),
            [114, 105, 111, 98, 114, 97, 110, 99, 111] => lookup_539_86(acc),
            [115, 97, 110, 116, 97, 109, 97, 114, 105, 97] => lookup_539_87(acc),
            [103, 49, 50] => lookup_539_88(acc),
            [106, 97, 98] => lookup_539_89(acc),
            [99, 111, 122] => lookup_539_90(acc),
            [102, 111, 122] => lookup_539_91(acc),
            [105, 109, 98] => lookup_539_92(acc),
            [106, 117, 115] => lookup_539_93(acc),
            [115, 97, 108, 118, 97, 100, 111, 114] => lookup_539_94(acc),
            [102, 101, 105, 114, 97] => lookup_539_95(acc),
            [98, 109, 100] => lookup_539_96(acc),
            [118, 108, 111, 103] => lookup_539_97(acc),
            [101, 109, 112] => lookup_539_98(acc),
            [110, 111, 116] => lookup_539_99(acc),
            [108, 101, 103] => lookup_539_100(labels, acc),
            [118, 105, 120] => lookup_539_101(acc),
            [116, 101, 111] => lookup_539_102(acc),
            [106, 97, 109, 112, 97] => lookup_539_103(acc),
            [102, 115, 116] => lookup_539_104(acc),
            [100, 101, 115] => lookup_539_105(acc),
            [97, 100, 118] => lookup_539_106(acc),
            [116, 109, 112] => lookup_539_107(acc),
            [99, 111, 110, 116, 97, 103, 101, 109] => lookup_539_108(acc),
            [101, 110, 103] => lookup_539_109(acc),
            [102, 108, 111, 114, 105, 112, 97] => lookup_539_110(acc),
            [99, 117, 105, 97, 98, 97] => lookup_539_111(acc),
            [103, 101, 111] => lookup_539_112(acc),
            [108, 101, 108] => lookup_539_113(acc),
            [109, 97, 114, 105, 110, 103, 97] => lookup_539_114(acc),
            [116, 99] => lookup_539_115(acc),
            [97, 112, 97, 114, 101, 99, 105, 100, 97] => lookup_539_116(acc),
            [97, 112, 112] => lookup_539_117(acc),
            [116, 114, 100] => lookup_539_118(acc),
            [111, 114, 103] => lookup_539_119(acc),
            [114, 105, 111, 112, 114, 101, 116, 111] => lookup_539_120(acc),
            [110, 101, 116] => lookup_539_121(acc),
            [57, 103, 117, 97, 99, 117] => lookup_539_122(acc),
            [98, 97, 114, 117, 101, 114, 105] => lookup_539_123(acc),
            [114, 101, 99, 105, 102, 101] => lookup_539_124(acc),
            [118, 101, 116] => lookup_539_125(acc),
            [98, 111, 97, 118, 105, 115, 116, 97] => lookup_539_126(acc),
            [115, 97, 111, 103, 111, 110, 99, 97] => lookup_539_127(acc),
            [97, 116, 111] => lookup_539_128(acc),
            [97, 100, 109] => lookup_539_129(acc),
            [98, 101, 108, 101, 109] => lookup_539_130(acc),
            [103, 111, 118] => lookup_539_131(labels, acc),
            [105, 110, 102] => lookup_539_132(acc),
            [110, 105, 116, 101, 114, 111, 105] => lookup_539_133(acc),
            [112, 97, 108, 109, 97, 115] => lookup_539_134(acc),
            [115, 111, 114, 111, 99, 97, 98, 97] => lookup_539_135(acc),
            [117, 100, 105] => lookup_539_136(acc),
            [116, 117, 114] => lookup_539_137(acc),
            [98] => lookup_539_138(acc),
            [101, 110, 102] => lookup_539_139(acc),
            [106, 100, 102] => lookup_539_140(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_540_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_540_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_540_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_540_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_540_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_540_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_540_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_540_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_540_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_540_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_540_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_540_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_540_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_540_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_540_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_540_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_540_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_540<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 111, 98, 105] => lookup_540_0(acc),
            [97, 101, 114, 111] => lookup_540_1(acc),
            [105, 110, 102, 111] => lookup_540_2(acc),
            [109, 117, 115, 101, 117, 109] => lookup_540_3(acc),
            [106, 111, 98, 115] => lookup_540_4(acc),
            [99, 111, 109] => lookup_540_5(acc),
            [112, 114, 111] => lookup_540_6(acc),
            [98, 105, 122] => lookup_540_7(acc),
            [110, 97, 109, 101] => lookup_540_8(acc),
            [103, 111, 118] => lookup_540_9(acc),
            [111, 114, 103] => lookup_540_10(acc),
            [116, 114, 97, 118, 101, 108] => lookup_540_11(acc),
            [99, 111, 111, 112] => lookup_540_12(acc),
            [110, 101, 116] => lookup_540_13(acc),
            [99, 111] => lookup_540_14(acc),
            [105, 110, 116] => lookup_540_15(acc),
            [101, 100, 117] => lookup_540_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_541() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_542() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_543() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_544_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_544_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_544_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_544_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_544_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_544<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_544_0(acc),
            [110, 101, 116] => lookup_544_1(acc),
            [99, 111] => lookup_544_2(acc),
            [99, 111, 109] => lookup_544_3(acc),
            [107, 49, 50] => lookup_544_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_545() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_546_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_546_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_546_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_546_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_546_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_546_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_546_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_546_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_546<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_546_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_546_1(acc),
            [111, 114, 103] => lookup_546_2(acc),
            [99, 117, 112, 99, 97, 107, 101] => lookup_546_3(acc),
            [110, 101, 116] => lookup_546_4(acc),
            [101, 100, 117] => lookup_546_5(acc),
            [105, 110, 116] => lookup_546_6(acc),
            [99, 111, 109] => lookup_546_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_547() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_548_0(acc),
            [110, 101, 116] => lookup_548_1(acc),
            [101, 100, 117] => lookup_548_2(acc),
            [99, 111, 109] => lookup_548_3(acc),
            [103, 111, 118] => lookup_548_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_549() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_550() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_551() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_552_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_552_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_552_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_552_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_552_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_552_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_552_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_552<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_552_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_552_1(acc),
            [110, 121, 109] => lookup_552_2(acc),
            [110, 101, 116] => lookup_552_3(acc),
            [101, 100, 117] => lookup_552_4(acc),
            [99, 111, 109] => lookup_552_5(acc),
            [103, 111, 118] => lookup_552_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_553() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_554() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_555() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_556() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_557() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_558() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_559() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_560() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_561() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_562() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_563() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_564() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_565() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_566() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_567_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_567_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 111, 110, 100, 111, 110] => lookup_567_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_567<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 97, 112, 112, 115] => lookup_567_0(labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_568() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_569() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_570() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_571() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_572() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_573() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_574() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_575() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_576_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_576_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_576_0(acc),
            [115, 97, 111, 116, 111, 109, 101] => lookup_576_1(acc),
            [112, 114, 105, 110, 99, 105, 112, 101] => lookup_576_2(acc),
            [115, 116, 111, 114, 101] => lookup_576_3(acc),
            [99, 111, 110, 115, 117, 108, 97, 100, 111] => lookup_576_4(acc),
            [110, 111, 109] => lookup_576_5(acc),
            [110, 111, 104, 111] => lookup_576_6(acc),
            [101, 109, 98, 97, 105, 120, 97, 100, 97] => lookup_576_7(acc),
            [109, 105, 108] => lookup_576_8(acc),
            [111, 114, 103] => lookup_576_9(acc),
            [110, 101, 116] => lookup_576_10(acc),
            [99, 111] => lookup_576_11(acc),
            [99, 111, 109] => lookup_576_12(acc),
            [103, 111, 118] => lookup_576_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_577() -> Info {
    Info {
        len: 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_578() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_579() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_581_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_581_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_581_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_581_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_581_4_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_581_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_581_4_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_581_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_581_5<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_581_5_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_581_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_581_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_581_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_581_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_581_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_581_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_581_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_581_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_581_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_581_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_581_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_581_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_581_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_581_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_581_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_581_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_581<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [114, 101, 99] => lookup_581_0(acc),
            [108, 112, 97, 103, 101, 115] => lookup_581_1(acc),
            [109, 105, 108] => lookup_581_2(acc),
            [105, 110, 102, 111] => lookup_581_3(acc),
            [111, 116, 97, 112] => lookup_581_4(info, labels, acc),
            [99, 111, 109] => lookup_581_5(labels, acc),
            [103, 111, 118] => lookup_581_6(acc),
            [99, 97, 114, 114, 100] => lookup_581_7(acc),
            [97, 114, 116, 115] => lookup_581_8(acc),
            [99, 114, 100] => lookup_581_9(acc),
            [114, 101, 112, 108] => lookup_581_10(acc),
            [110, 111, 109] => lookup_581_11(acc),
            [119, 101, 98] => lookup_581_12(acc),
            [108, 101, 97, 100, 112, 97, 103, 101, 115] => lookup_581_13(acc),
            [109, 121, 112, 105] => lookup_581_14(acc),
            [111, 114, 103] => lookup_581_15(acc),
            [110, 111, 100, 117, 109] => lookup_581_16(acc),
            [110, 52, 116] => lookup_581_17(acc),
            [110, 101, 116] => lookup_581_18(acc),
            [101, 100, 117] => lookup_581_19(acc),
            [105, 110, 116] => lookup_581_20(acc),
            [102, 105, 114, 109] => lookup_581_21(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_582() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_583_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_583_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_583_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_583_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_583_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_583_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_583<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [230, 148, 191, 229, 186, 156] => lookup_583_0(acc),
            [229, 128, 139, 228, 186, 186] => lookup_583_1(acc),
            [230, 149, 153, 232, 130, 178] => lookup_583_2(acc),
            [231, 182, 178, 231, 181, 161] => lookup_583_3(acc),
            [231, 181, 132, 231, 185, 148] => lookup_583_4(acc),
            [229, 133, 172, 229, 143, 184] => lookup_583_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_584() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_585() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_586() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_587() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_588() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_589_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_589_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_589_1_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_589_1_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_589_1_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_589_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [115, 118, 99] => lookup_589_1_1(info, labels, acc),
            wild => lookup_589_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_589_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_589_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_589_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_589_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_589_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_589_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_589_7_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_589_7_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            [97, 108, 112, 49] => lookup_589_7_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_589_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112, 101, 110, 103, 105, 110, 101] => lookup_589_7_0(acc),
            [97, 101] => lookup_589_7_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_589_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_589_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_589_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_589<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 113, 117, 97, 114, 101, 55] => lookup_589_0(acc),
            [102, 105, 114, 101, 110, 101, 116] => lookup_589_1(info, labels, acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_589_2(acc),
            [100, 110, 115, 107, 105, 110, 103] => lookup_589_3(acc),
            [103, 111, 116, 100, 110, 115] => lookup_589_4(acc),
            [49, 50, 104, 112] => lookup_589_5(acc),
            [50, 105, 120] => lookup_589_6(acc),
            [102, 108, 111, 119] => lookup_589_7(info, labels, acc),
            [108, 105, 110, 107, 121, 97, 114, 100, 45, 99, 108, 111, 117, 100] => {
                lookup_589_8(acc)
            }
            [52, 108, 105, 109, 97] => lookup_589_9(acc),
            [108, 105, 109, 97, 45, 99, 105, 116, 121] => lookup_589_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_590() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_591() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_593() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_594() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_595() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_596_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_596<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [121, 98, 111] => lookup_596_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_597() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_598_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_598_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_598_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_598_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_598_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_598_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_598<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_598_0(acc),
            [99, 111] => lookup_598_1(acc),
            [110, 101, 116] => lookup_598_2(acc),
            [101, 100, 117] => lookup_598_3(acc),
            [99, 111, 109] => lookup_598_4(acc),
            [103, 111, 118] => lookup_598_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_599() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_600() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_601() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_602() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_604() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_605() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_606() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_607_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_607_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_607_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_607_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_607_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_607_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_607_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_607_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_607_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_607_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_607_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_607<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 121, 110, 100, 110, 115] => lookup_607_0(acc),
            [109, 121, 112, 101, 116, 115] => lookup_607_1(acc),
            [99, 108, 111, 117, 100, 54, 54] => lookup_607_2(acc),
            [97, 100, 118, 105, 115, 111, 114] => lookup_607_3(info, labels, acc),
            [111, 114, 103] => lookup_607_4(acc),
            [110, 101, 116] => lookup_607_5(acc),
            [101, 100, 117] => lookup_607_6(acc),
            [99, 111, 109] => lookup_607_7(acc),
            [103, 111, 118] => lookup_607_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_608() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_609() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_610() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_611_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_611<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_611_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_612() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_613() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_614() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_616() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_617() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_618() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_621() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_622() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_624() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_625() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_626_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_626<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_626_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_627() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_628_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_628_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_628_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_628_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_628_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_628<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_628_0(acc),
            [111, 114] => lookup_628_1(acc),
            [99, 111] => lookup_628_2(acc),
            [99, 111, 109] => lookup_628_3(acc),
            [101, 100, 117] => lookup_628_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_629() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_630() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_631() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_632() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_633() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_634_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_634_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_634_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_634_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_634_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_634_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_634_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_634_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_634_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_634_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_634_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_634_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_634_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_634_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_634<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_634_0(acc),
            [105, 110, 116] => lookup_634_1(acc),
            [110, 97, 109, 101] => lookup_634_2(acc),
            [110, 101, 116] => lookup_634_3(acc),
            [97, 101, 114, 111] => lookup_634_4(acc),
            [112, 114, 111] => lookup_634_5(acc),
            [109, 105, 108] => lookup_634_6(acc),
            [105, 110, 102, 111] => lookup_634_7(acc),
            [99, 111, 111, 112] => lookup_634_8(acc),
            [111, 114, 103] => lookup_634_9(acc),
            [109, 117, 115, 101, 117, 109] => lookup_634_10(acc),
            [101, 100, 117] => lookup_634_11(acc),
            [99, 111, 109] => lookup_634_12(acc),
            [103, 111, 118] => lookup_634_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_636() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_637() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_638() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_639() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_641() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_642() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_643() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_644() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_645() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_646() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_647() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_648() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_649() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_650() -> Info {
    Info {
        len: 33usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_651() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_653() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_654() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_655() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_656() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_657() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_658() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_659() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_660() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_661() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_662_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_662_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_662_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_662_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_662_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_662_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_662_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_662_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_662<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 121, 109] => lookup_662_0(acc),
            [101, 100, 117] => lookup_662_1(acc),
            [111, 114, 103] => lookup_662_2(acc),
            [98, 101] => lookup_662_3(acc),
            [110, 101, 116] => lookup_662_4(acc),
            [99, 111] => lookup_662_5(acc),
            [99, 111, 109] => lookup_662_6(acc),
            [103, 111, 118] => lookup_662_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_663() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_664() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_665() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_666() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_667() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_668() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_669() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_671() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_672() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_674() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_675() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_676() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_677() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_678() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_679() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_680_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_680_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_680_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_680_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_680_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_680_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_680_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_680_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_680_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_680_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_680<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 104, 49, 97, 108, 105, 122] => lookup_680_0(acc),
            [120, 110, 45, 45, 106, 49, 97, 100, 112] => lookup_680_1(acc),
            [120, 110, 45, 45, 56, 48, 97, 97, 97, 48, 99, 118, 97, 99] => lookup_680_2(acc),
            [120, 110, 45, 45, 106, 49, 97, 101, 108, 56, 98] => lookup_680_3(acc),
            [120, 110, 45, 45, 57, 48, 97, 49, 97, 102] => lookup_680_4(acc),
            [120, 110, 45, 45, 52, 49, 97] => lookup_680_5(acc),
            [120, 110, 45, 45, 106, 49, 97, 101, 102] => lookup_680_6(acc),
            [120, 110, 45, 45, 57, 48, 97, 109, 99] => lookup_680_7(acc),
            [120, 110, 45, 45, 104, 49, 97, 104, 110] => lookup_680_8(acc),
            [120, 110, 45, 45, 99, 49, 97, 118, 103] => lookup_680_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_681_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_681_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_681_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_681_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_681_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_681_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_681<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 98] => lookup_681_0(acc),
            [101, 100] => lookup_681_1(acc),
            [105, 116] => lookup_681_2(acc),
            [111, 103] => lookup_681_3(acc),
            [103, 118] => lookup_681_4(acc),
            [99, 111] => lookup_681_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_682() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_683() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_684() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_685_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_685_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_685_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_685_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_685_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_685_4<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 97, 103, 105, 110, 103] => lookup_685_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_685<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [117, 110, 100, 101, 114] => lookup_685_0(acc),
            [115, 101, 114, 118, 105, 99, 101] => lookup_685_1(acc),
            [104, 111, 109, 101, 108, 105, 110, 107] => lookup_685_2(acc),
            [102, 111, 114] => lookup_685_3(acc),
            [111, 110, 114, 101, 100] => lookup_685_4(labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_686() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_687() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_688() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_689() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_690() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_691() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_692() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_693() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_694() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_695() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_696() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_697() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_698() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_699() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_700() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_701() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_702() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_703() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_704() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_705() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_706() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_707() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_708_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_708<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_708_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_709() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_710() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_711() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_712_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_712_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_712_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_712_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_712_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_712<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_712_0(acc),
            [110, 101, 116] => lookup_712_1(acc),
            [101, 100, 117] => lookup_712_2(acc),
            [99, 111, 109] => lookup_712_3(acc),
            [103, 111, 118] => lookup_712_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_713() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_714() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_715() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_716() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_717() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_718() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_719() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_720() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_721() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_722() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_723() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_724() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_725_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_725<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 105, 99, 101, 97, 98, 108, 101] => lookup_725_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_726() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_727_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_727_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_727_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_727_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_727_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_727_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_727_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_727_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_727<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 109] => lookup_727_0(acc),
            [112, 118, 116] => lookup_727_1(acc),
            [111, 114, 103] => lookup_727_2(acc),
            [109, 105, 108] => lookup_727_3(acc),
            [110, 101, 116] => lookup_727_4(acc),
            [101, 100, 117] => lookup_727_5(acc),
            [99, 111, 109] => lookup_727_6(acc),
            [103, 111, 118] => lookup_727_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_728() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_729() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_730() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_731() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_732() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_733() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_734() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_735() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_736() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_737() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_738_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_738_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_738<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 114, 111, 109] => lookup_738_0(acc),
            [116, 111] => lookup_738_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_739() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_740_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_740<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_740_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_741() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_742_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_742_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_742_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_742<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 109] => lookup_742_0(acc),
            [101, 100, 117] => lookup_742_1(acc),
            [103, 111, 118] => lookup_742_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_743() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_744() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_745() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_746() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_747() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_748() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_749() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_750_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_750<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 102] => lookup_750_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_751() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_752() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_753() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_754() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_755() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_756() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_757() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_759_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_759_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_759_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_759_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_759_3<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_759_3_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_759_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_759<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_759_0(acc),
            [110, 111, 109] => lookup_759_1(acc),
            [101, 100, 117] => lookup_759_2(acc),
            [99, 111, 109] => lookup_759_3(labels, acc),
            [103, 111, 98] => lookup_759_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_760_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_760_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_760_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_760_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_760_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_760_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_760<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_760_0(acc),
            [105, 110, 102] => lookup_760_1(acc),
            [110, 101, 116] => lookup_760_2(acc),
            [101, 100, 117] => lookup_760_3(acc),
            [99, 111, 109] => lookup_760_4(acc),
            [103, 111, 118] => lookup_760_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_761() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_762() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_763() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_764() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_765() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_766() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_767() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_768_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_768<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 111, 103, 105, 110, 108, 105, 110, 101] => lookup_768_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_769() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_770() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_771() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_773() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_774() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_775() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_776_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_776_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_776_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 101, 114, 118, 105, 99, 101] => lookup_776_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_776<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_776_0(acc),
            [103, 111, 118] => lookup_776_1(labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_777() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_778() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_779() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_780() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_781() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_782() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_783() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_785() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_786_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_786_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_786<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_786_0(acc),
            [99, 111] => lookup_786_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_787() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_788() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_789() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 117, 98] => lookup_790_0(acc),
            [109, 101, 100] => lookup_790_1(acc),
            [115, 99, 104] => lookup_790_2(acc),
            [111, 114, 103] => lookup_790_3(acc),
            [110, 101, 116] => lookup_790_4(acc),
            [101, 100, 117] => lookup_790_5(acc),
            [99, 111, 109] => lookup_790_6(acc),
            [103, 111, 118] => lookup_790_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_791() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_792() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_793_0(acc),
            [103, 111, 98] => lookup_793_1(acc),
            [105, 110, 103] => lookup_793_2(acc),
            [109, 101, 100] => lookup_793_3(acc),
            [110, 111, 109] => lookup_793_4(acc),
            [111, 114, 103] => lookup_793_5(acc),
            [97, 98, 111] => lookup_793_6(acc),
            [110, 101, 116] => lookup_793_7(acc),
            [101, 100, 117] => lookup_793_8(acc),
            [115, 108, 100] => lookup_793_9(acc),
            [97, 99] => lookup_793_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_794() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_795() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_796() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_797() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_798() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_799() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_800() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_801() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_802() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_803() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_804_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_804_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_804_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_804_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_804_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_804_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_804_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_804_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_804<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [117, 110, 105, 118] => lookup_804_0(acc),
            [112, 101, 114, 115, 111] => lookup_804_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_804_2(acc),
            [103, 111, 117, 118] => lookup_804_3(acc),
            [111, 114, 103] => lookup_804_4(acc),
            [97, 114, 116] => lookup_804_5(acc),
            [101, 100, 117] => lookup_804_6(acc),
            [99, 111, 109] => lookup_804_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_805_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_805<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_805_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_806() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_807_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_807_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [101, 122, 112, 114, 111, 120, 121] => lookup_807_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_807_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_807_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_807_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 18usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_807_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_807_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_807_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_807_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_807_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_807_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_807<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 117, 108, 101, 117, 118, 101, 110] => lookup_807_0(info, labels, acc),
            [119, 101, 98, 104, 111, 115, 116, 105, 110, 103] => lookup_807_1(acc),
            [105, 110, 116, 101, 114, 104, 111, 115, 116, 115, 111, 108, 117, 116, 105, 111, 110, 115] => {
                lookup_807_2(info, labels, acc)
            }
            [116, 114, 97, 110, 115, 117, 114, 108] => lookup_807_3(info, labels, acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_807_4(acc),
            [97, 99] => lookup_807_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_808_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_808<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_808_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_809() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_810_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_810_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_810_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_810_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_810<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [119, 111, 114, 115, 101, 45, 116, 104, 97, 110] => lookup_810_0(acc),
            [98, 101, 116, 116, 101, 114, 45, 116, 104, 97, 110] => lookup_810_1(acc),
            [100, 121, 110, 100, 110, 115] => lookup_810_2(acc),
            [111, 110, 45, 116, 104, 101, 45, 119, 101, 98] => lookup_810_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_811() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_812_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [121, 98, 111] => lookup_812_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_813() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_814() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_815() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_816() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_817() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 100] => lookup_818_0(acc),
            [103, 111, 118] => lookup_818_1(acc),
            [216, 167, 217, 138, 216, 177, 216, 167, 217, 134] => lookup_818_2(acc),
            [216, 167, 219, 140, 216, 177, 216, 167, 217, 134] => lookup_818_3(acc),
            [111, 114, 103] => lookup_818_4(acc),
            [120, 110, 45, 45, 109, 103, 98, 97, 51, 97, 52, 102, 114, 97] => lookup_818_5(acc),
            [120, 110, 45, 45, 109, 103, 98, 97, 51, 97, 52, 102, 49, 54, 97] => lookup_818_6(acc),
            [115, 99, 104] => lookup_818_7(acc),
            [110, 101, 116] => lookup_818_8(acc),
            [99, 111] => lookup_818_9(acc),
            [97, 99] => lookup_818_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_819_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_819_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_819_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_819_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_819<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_819_0(acc),
            [110, 101, 116] => lookup_819_1(acc),
            [101, 100, 117] => lookup_819_2(acc),
            [103, 111, 118] => lookup_819_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_820_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_820_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_820_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_820_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_820_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_820<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_820_0(acc),
            [109, 105, 108] => lookup_820_1(acc),
            [111, 114, 103] => lookup_820_2(acc),
            [99, 111] => lookup_820_3(acc),
            [103, 111, 118] => lookup_820_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_821() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_822() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_823() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_824() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_825_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_825_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_825_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_825_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_825_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_825_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_825_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_825_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_825<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103] => lookup_825_0(acc),
            [111, 114, 103] => lookup_825_1(acc),
            [100, 101, 118] => lookup_825_2(acc),
            [109, 101] => lookup_825_3(acc),
            [110, 101, 116] => lookup_825_4(acc),
            [101, 100, 117] => lookup_825_5(acc),
            [99, 111, 109] => lookup_825_6(acc),
            [99, 110] => lookup_825_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_826() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_827() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_828() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_829_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_829<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_829_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_830() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_833() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_834_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_834<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_834_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_835() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_836() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_837() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_838() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_839() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_840() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_841() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_842_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_842_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_842_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_842<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 119, 111] => lookup_842_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_843() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_844() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_845_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_845_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_845_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_845_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_845_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_845_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_845_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_845_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_845<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_845_0(acc),
            [110, 111, 109] => lookup_845_1(acc),
            [111, 114, 103] => lookup_845_2(acc),
            [109, 105, 108] => lookup_845_3(acc),
            [110, 101, 116] => lookup_845_4(acc),
            [99, 111] => lookup_845_5(acc),
            [99, 111, 109] => lookup_845_6(acc),
            [103, 111, 118] => lookup_845_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_846() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_847() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_848() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_849() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_850_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_850<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 105, 115, 99, 111, 117, 114, 115, 101] => lookup_850_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_851() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_852() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_853() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_854_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_854<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_854_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_855_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_855_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_855<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_855_0(acc),
            [110, 121, 109] => lookup_855_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_856() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_857_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_857_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [103, 105, 116, 45, 112, 97, 103, 101, 115] => lookup_857_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_857<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [114, 105, 116] => lookup_857_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_858_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_858_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_858_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_858_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_858_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_858_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_858<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 57, 48, 97, 122, 104] => lookup_858_0(acc),
            [120, 110, 45, 45, 111, 49, 97, 99, 104] => lookup_858_1(acc),
            [120, 110, 45, 45, 56, 48, 97, 117] => lookup_858_2(acc),
            [120, 110, 45, 45, 111, 49, 97, 99] => lookup_858_3(acc),
            [120, 110, 45, 45, 99, 49, 97, 118, 103] => lookup_858_4(acc),
            [120, 110, 45, 45, 100, 49, 97, 116] => lookup_858_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_859_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_859_0(acc),
            [103, 111, 118] => lookup_859_1(acc),
            [103, 111, 98] => lookup_859_2(acc),
            [103, 111, 107] => lookup_859_3(acc),
            [119, 101, 98] => lookup_859_4(acc),
            [103, 111, 110] => lookup_859_5(acc),
            [103, 111, 115] => lookup_859_6(acc),
            [111, 114, 103] => lookup_859_7(acc),
            [105, 110, 102, 111] => lookup_859_8(acc),
            [103, 111, 112] => lookup_859_9(acc),
            [110, 101, 116] => lookup_859_10(acc),
            [101, 100, 117] => lookup_859_11(acc),
            [99, 111, 109] => lookup_859_12(acc),
            [102, 97, 109] => lookup_859_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_860_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_860_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_860_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_860_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_860_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_860_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_860_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_860_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_860_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_860_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_860<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_860_0(acc),
            [110, 111, 109] => lookup_860_1(acc),
            [111, 114, 103] => lookup_860_2(acc),
            [109, 105, 108] => lookup_860_3(acc),
            [97, 115, 110] => lookup_860_4(acc),
            [99, 111, 110, 102] => lookup_860_5(acc),
            [110, 101, 116] => lookup_860_6(acc),
            [105, 100] => lookup_860_7(acc),
            [101, 100, 117] => lookup_860_8(acc),
            [99, 111, 109] => lookup_860_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_861_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_861_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_861_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_861_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_861_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_861_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_861_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_861_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_861_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_861_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_861<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_861_0(acc),
            [112, 111, 108] => lookup_861_1(acc),
            [115, 111, 99] => lookup_861_2(acc),
            [116, 109] => lookup_861_3(acc),
            [111, 114, 103] => lookup_861_4(acc),
            [97, 115, 115, 111] => lookup_861_5(acc),
            [110, 101, 116] => lookup_861_6(acc),
            [97, 114, 116] => lookup_861_7(acc),
            [101, 100, 117] => lookup_861_8(acc),
            [99, 111, 109] => lookup_861_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_862() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_864() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_865() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_866() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_867() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_868() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_869() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_870() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_871() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_873() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_874() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_875() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_876() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_877() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_879() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_880() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_881_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [115, 116, 97, 103, 101] => lookup_881_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_881_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_881_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_881_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_10_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_10<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_881_10_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_881_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_12_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_12<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116, 111, 109, 101, 114] => lookup_881_12_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_881_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_18_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_18_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116] => lookup_881_18_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_881_18_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_18_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116] => lookup_881_18_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_881_18_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_18_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116] => lookup_881_18_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_881_18_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_18_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116] => lookup_881_18_3_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_881_18<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [100, 101, 118] => lookup_881_18_0(info, labels, acc),
            [112, 114, 111, 100] => lookup_881_18_1(info, labels, acc),
            [100, 105, 115, 114, 101, 99] => lookup_881_18_2(info, labels, acc),
            [116, 101, 115, 116, 105, 110, 103] => lookup_881_18_3(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_881_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_21_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_21<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 15usize;
    match labels.next() {
        Some(label) => match label {
            [111, 99, 115] => lookup_881_21_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_881_22_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_22<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_881_22_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_881_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_28_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_28<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_881_28_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_881_29_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_29<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [100, 101, 118, 105, 99, 101, 115] => lookup_881_29_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_881_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_33_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_33_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_33_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_33<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 45, 102, 114, 49] => lookup_881_33_0(acc),
            [99, 108, 111, 117, 100] => lookup_881_33_1(acc),
            [99, 108, 111, 117, 100, 45, 100, 101] => lookup_881_33_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_881_34_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_34_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_34_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_881_34_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_881_34<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112] => lookup_881_34_0(acc),
            [98, 97, 99, 107, 121, 97, 114, 100, 115] => lookup_881_34_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_881_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_36_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_36<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [103] => lookup_881_36_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_881_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_881_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_41_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_41_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_881_41_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_881_41<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 121, 115] => lookup_881_41_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_881_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_44_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_44<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_881_44_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_881_45_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_45<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [100, 121, 110, 100, 110, 115] => lookup_881_45_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_881_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_51_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_51<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [117, 107, 48] => lookup_881_51_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_881_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_54_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_54<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_881_54_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_881_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_60_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881_60<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112, 115] => lookup_881_60_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_881<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 105, 116, 104, 117, 98] => lookup_881_0(acc),
            [110, 111, 100, 101, 97, 114, 116] => lookup_881_1(info, labels, acc),
            [119, 101, 98, 116, 104, 105, 110, 103, 115] => lookup_881_2(acc),
            [115, 53, 121] => lookup_881_3(info, labels, acc),
            [102, 104, 45, 109, 117, 101, 110, 115, 116, 101, 114] => lookup_881_4(acc),
            [98, 45, 100, 97, 116, 97] => lookup_881_5(acc),
            [100, 101, 102, 105, 110, 105, 109, 97] => lookup_881_6(acc),
            [116, 101, 108, 101, 98, 105, 116] => lookup_881_7(acc),
            [98, 97, 114, 115, 121] => lookup_881_8(acc),
            [99, 108, 101, 118, 101, 114, 97, 112, 112, 115] => lookup_881_9(acc),
            [115, 116, 111, 108, 111, 115] => lookup_881_10(info, labels, acc),
            [100, 114, 117, 100] => lookup_881_11(acc),
            [101, 110, 111, 110, 105, 99] => lookup_881_12(labels, acc),
            [50, 48, 51, 56] => lookup_881_13(acc),
            [104, 122, 99] => lookup_881_14(acc),
            [108, 111, 108, 105, 112, 111, 112] => lookup_881_15(acc),
            [103, 105, 116, 108, 97, 98] => lookup_881_16(acc),
            [112, 114, 111, 116, 111, 110, 101, 116] => lookup_881_17(acc),
            [116, 104, 105, 110, 103, 100, 117, 115, 116] => lookup_881_18(info, labels, acc),
            [100, 101, 100, 121, 110] => lookup_881_19(acc),
            [106, 101, 108, 101] => lookup_881_20(acc),
            [111, 112, 117, 115, 105, 110, 116, 101, 114, 97, 99, 116, 105, 118, 101] => {
                lookup_881_21(info, labels, acc)
            }
            [111, 110, 45, 107, 51, 115] => lookup_881_22(info, labels, acc),
            [112, 97, 110, 116, 104, 101, 111, 110, 115, 105, 116, 101] => lookup_881_23(acc),
            [115, 112, 97, 99, 101, 107, 105, 116] => lookup_881_24(acc),
            [110, 111, 100, 117, 109] => lookup_881_25(acc),
            [114, 101, 115, 105, 110, 100, 101, 118, 105, 99, 101] => lookup_881_26(acc),
            [103, 104, 111, 115, 116] => lookup_881_27(acc),
            [111, 110, 45, 114, 105, 111] => lookup_881_28(info, labels, acc),
            [114, 101, 115, 105, 110, 115, 116, 97, 103, 105, 110, 103] => {
                lookup_881_29(info, labels, acc)
            }
            [104, 111, 115, 116, 121, 104, 111, 115, 116, 105, 110, 103] => lookup_881_30(acc),
            [110, 103, 114, 111, 107] => lookup_881_31(acc),
            [114, 101, 97, 100, 116, 104, 101, 100, 111, 99, 115] => lookup_881_32(acc),
            [117, 110, 105, 115, 112, 97, 99, 101] => lookup_881_33(info, labels, acc),
            [98, 97, 110, 122, 97, 105, 99, 108, 111, 117, 100] => lookup_881_34(info, labels, acc),
            [113, 111, 116, 111] => lookup_881_35(acc),
            [118, 98, 114, 112, 108, 115, 98, 120] => lookup_881_36(info, labels, acc),
            [99, 111, 109] => lookup_881_37(acc),
            [98, 97, 115, 105, 99, 115, 101, 114, 118, 101, 114] => lookup_881_38(acc),
            [118, 105, 114, 116, 117, 97, 108, 115, 101, 114, 118, 101, 114] => lookup_881_39(acc),
            [108, 111, 103, 105, 110, 108, 105, 110, 101] => lookup_881_40(acc),
            [113, 99, 120] => lookup_881_41(labels, acc),
            [117, 116, 119, 101, 110, 116, 101] => lookup_881_42(acc),
            [97, 112, 105, 103, 101, 101] => lookup_881_43(acc),
            [97, 122, 117, 114, 101, 99, 111, 110, 116, 97, 105, 110, 101, 114] => {
                lookup_881_44(info, labels, acc)
            }
            [100, 97, 112, 112, 110, 111, 100, 101] => lookup_881_45(info, labels, acc),
            [118, 97, 112, 111, 114, 99, 108, 111, 117, 100] => lookup_881_46(acc),
            [98, 114, 111, 119, 115, 101, 114, 115, 97, 102, 101, 116, 121, 109, 97, 114, 107] => {
                lookup_881_47(acc)
            }
            [119, 101, 100, 101, 112, 108, 111, 121] => lookup_881_48(acc),
            [115, 104, 105, 102, 116, 101, 100, 105, 116] => lookup_881_49(acc),
            [109, 111, 45, 115, 105, 101, 109, 101, 110, 115] => lookup_881_50(acc),
            [98, 105, 103, 118] => lookup_881_51(info, labels, acc),
            [104, 97, 115, 117, 114, 97, 45, 97, 112, 112] => lookup_881_52(acc),
            [98, 97, 99, 107, 112, 108, 97, 110, 101, 97, 112, 112] => lookup_881_53(acc),
            [109, 111, 111, 110, 115, 99, 97, 108, 101] => lookup_881_54(info, labels, acc),
            [115, 97, 110, 100, 99, 97, 116, 115] => lookup_881_55(acc),
            [110, 105, 100] => lookup_881_56(acc),
            [100, 121, 110, 53, 51] => lookup_881_57(acc),
            [98, 111, 120, 102, 117, 115, 101] => lookup_881_58(acc),
            [115, 104, 119] => lookup_881_59(acc),
            [108, 97, 105, 114] => lookup_881_60(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_882() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_883_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_883<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 101] => lookup_883_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_884() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_885_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_885_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_885_4<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 104] => lookup_885_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_885_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_885_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_9<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [119, 105, 101, 110] => lookup_885_9_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_885_10_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_10_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_885_10_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_885_10_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_10_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_885_10_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_885_10<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [107, 117, 110, 100, 101, 110] => lookup_885_10_0(info, labels, acc),
            [101, 120] => lookup_885_10_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_885_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_12_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_12_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_12_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_885_12_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_885_12_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_12_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_885_12_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_885_12<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [105, 110] => lookup_885_12_1(info, labels, acc),
            [101, 120] => lookup_885_12_2(info, labels, acc),
            wild => lookup_885_12_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_885_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_14_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_14<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_885_14_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_885_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 118] => lookup_885_0(acc),
            [108, 105, 109, 97, 45, 99, 105, 116, 121] => lookup_885_1(acc),
            [50, 105, 120] => lookup_885_2(acc),
            [105, 110, 102, 111] => lookup_885_3(acc),
            [97, 99] => lookup_885_4(labels, acc),
            [98, 105, 122] => lookup_885_5(acc),
            [111, 114] => lookup_885_6(acc),
            [49, 50, 104, 112] => lookup_885_7(acc),
            [102, 117, 116, 117, 114, 101, 109, 97, 105, 108, 105, 110, 103] => lookup_885_8(acc),
            [102, 117, 110, 107, 102, 101, 117, 101, 114] => lookup_885_9(info, labels, acc),
            [111, 114, 116, 115, 105, 110, 102, 111] => lookup_885_10(info, labels, acc),
            [112, 114, 105, 118] => lookup_885_11(acc),
            [102, 117, 116, 117, 114, 101, 99, 109, 115] => lookup_885_12(info, labels, acc),
            [102, 117, 116, 117, 114, 101, 104, 111, 115, 116, 105, 110, 103] => lookup_885_13(acc),
            [99, 111] => lookup_885_14(labels, acc),
            [52, 108, 105, 109, 97] => lookup_885_15(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_886() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_887_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_887_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_887_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_887_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_887_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_887<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_887_0(acc),
            [110, 101, 116] => lookup_887_1(acc),
            [101, 100, 117] => lookup_887_2(acc),
            [99, 111, 109] => lookup_887_3(acc),
            [103, 111, 118] => lookup_887_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_888() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_889() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_890() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_891_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_891_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_891_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_891_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_891_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_891_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_891_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_891_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_891_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_891_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_891_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_891<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 110, 100] => lookup_891_0(acc),
            [110, 111, 109] => lookup_891_1(acc),
            [98, 108, 111, 103] => lookup_891_2(acc),
            [116, 111] => lookup_891_3(acc),
            [109, 105, 108] => lookup_891_4(acc),
            [111, 114, 103] => lookup_891_5(acc),
            [100, 101] => lookup_891_6(acc),
            [110, 101, 116] => lookup_891_7(acc),
            [101, 100, 117] => lookup_891_8(acc),
            [99, 111, 109] => lookup_891_9(acc),
            [103, 111, 98] => lookup_891_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_892() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_893_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [117, 105] => lookup_893_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_893<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 97, 98, 117] => lookup_893_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_894() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_895() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_896() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_897() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_898() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_899() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_900() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_901() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_903() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_0_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_0_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_0_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_0_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_0_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_0_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_0_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_0_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_0_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_0_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_0_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_0_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_0_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_0_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_0_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_0_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_0_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_0_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_0_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_0_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_0_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_0_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_0_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_0_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 121, 97, 122, 97, 107, 105] => lookup_904_0_0(acc),
            [115, 104, 105, 110, 116, 111, 109, 105] => lookup_904_0_1(acc),
            [97, 121, 97] => lookup_904_0_2(acc),
            [110, 111, 98, 101, 111, 107, 97] => lookup_904_0_3(acc),
            [101, 98, 105, 110, 111] => lookup_904_0_4(acc),
            [109, 105, 109, 97, 116, 97] => lookup_904_0_5(acc),
            [107, 111, 98, 97, 121, 97, 115, 104, 105] => lookup_904_0_6(acc),
            [107, 105, 106, 111] => lookup_904_0_7(acc),
            [116, 97, 107, 97, 110, 97, 98, 101] => lookup_904_0_8(acc),
            [103, 111, 107, 97, 115, 101] => lookup_904_0_9(acc),
            [116, 97, 107, 97, 122, 97, 107, 105] => lookup_904_0_10(acc),
            [107, 97, 100, 111, 103, 97, 119, 97] => lookup_904_0_11(acc),
            [104, 121, 117, 103, 97] => lookup_904_0_12(acc),
            [109, 105, 121, 97, 107, 111, 110, 111, 106, 111] => lookup_904_0_13(acc),
            [116, 97, 107, 97, 104, 97, 114, 117] => lookup_904_0_14(acc),
            [107, 97, 119, 97, 109, 105, 110, 97, 109, 105] => lookup_904_0_15(acc),
            [107, 105, 116, 97, 107, 97, 116, 97] => lookup_904_0_16(acc),
            [107, 117, 115, 104, 105, 109, 97] => lookup_904_0_17(acc),
            [107, 117, 110, 105, 116, 111, 109, 105] => lookup_904_0_18(acc),
            [115, 97, 105, 116, 111] => lookup_904_0_19(acc),
            [115, 104, 105, 105, 98, 97] => lookup_904_0_20(acc),
            [110, 105, 99, 104, 105, 110, 97, 110] => lookup_904_0_21(acc),
            [116, 115, 117, 110, 111] => lookup_904_0_22(acc),
            [107, 105, 116, 97, 103, 97, 119, 97] => lookup_904_0_23(acc),
            [107, 105, 116, 97, 117, 114, 97] => lookup_904_0_24(acc),
            [109, 111, 114, 111, 116, 115, 117, 107, 97] => lookup_904_0_25(acc),
            [110, 105, 115, 104, 105, 109, 101, 114, 97] => lookup_904_0_26(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_3_1(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_904_3_1(acc),
            wild => lookup_904_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_904_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_4_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_4_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_4_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_4_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_4_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_4_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_4_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_4_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_4_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_4_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_4_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_4_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_4_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_4_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_4_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_4_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_4_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_4_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_4_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_4_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_4_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_4_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_4_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_4_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_4_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_4<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 97, 116, 111, 115, 104, 111] => lookup_904_4_0(acc),
            [110, 105, 105, 109, 105] => lookup_904_4_1(acc),
            [119, 97, 107, 101] => lookup_904_4_2(acc),
            [97, 107, 97, 105, 119, 97] => lookup_904_4_3(acc),
            [111, 107, 97, 121, 97, 109, 97] => lookup_904_4_4(acc),
            [107, 117, 109, 101, 110, 97, 110] => lookup_904_4_5(acc),
            [97, 115, 97, 107, 117, 99, 104, 105] => lookup_904_4_6(acc),
            [116, 97, 107, 97, 104, 97, 115, 104, 105] => lookup_904_4_7(acc),
            [104, 97, 121, 97, 115, 104, 105, 109, 97] => lookup_904_4_8(acc),
            [115, 104, 105, 110, 106, 111] => lookup_904_4_9(acc),
            [121, 97, 107, 97, 103, 101] => lookup_904_4_10(acc),
            [107, 97, 115, 97, 111, 107, 97] => lookup_904_4_11(acc),
            [109, 97, 110, 105, 119, 97] => lookup_904_4_12(acc),
            [107, 97, 103, 97, 109, 105, 110, 111] => lookup_904_4_13(acc),
            [107, 117, 114, 97, 115, 104, 105, 107, 105] => lookup_904_4_14(acc),
            [109, 105, 115, 97, 107, 105] => lookup_904_4_15(acc),
            [116, 115, 117, 121, 97, 109, 97] => lookup_904_4_16(acc),
            [98, 105, 122, 101, 110] => lookup_904_4_17(acc),
            [107, 105, 98, 105, 99, 104, 117, 111] => lookup_904_4_18(acc),
            [110, 97, 103, 105] => lookup_904_4_19(acc),
            [115, 111, 106, 97] => lookup_904_4_20(acc),
            [116, 97, 109, 97, 110, 111] => lookup_904_4_21(acc),
            [115, 104, 111, 111] => lookup_904_4_22(acc),
            [115, 101, 116, 111, 117, 99, 104, 105] => lookup_904_4_23(acc),
            [105, 98, 97, 114, 97] => lookup_904_4_24(acc),
            [110, 105, 115, 104, 105, 97, 119, 97, 107, 117, 114, 97] => lookup_904_4_25(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_7_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_7_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_7_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_7_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_7_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_7_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_7_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_7_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_7_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_7_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_7_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_7_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_7_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_7_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_7_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_7_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_7_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_7_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_7_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_7_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_7_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_7_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_7_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_7_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_7<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 97, 109, 105, 110, 97, 109, 105] => lookup_904_7_0(acc),
            [104, 105, 103, 97, 115, 104, 105, 104, 105, 114, 111, 115, 104, 105, 109, 97] => {
                lookup_904_7_1(acc)
            }
            [102, 117, 99, 104, 117] => lookup_904_7_2(acc),
            [104, 111, 110, 103, 111] => lookup_904_7_3(acc),
            [115, 97, 107, 97] => lookup_904_7_4(acc),
            [116, 97, 107, 101, 104, 97, 114, 97] => lookup_904_7_5(acc),
            [107, 117, 114, 101] => lookup_904_7_6(acc),
            [102, 117, 107, 117, 121, 97, 109, 97] => lookup_904_7_7(acc),
            [111, 110, 111, 109, 105, 99, 104, 105] => lookup_904_7_8(acc),
            [109, 105, 104, 97, 114, 97] => lookup_904_7_9(acc),
            [107, 97, 105, 116, 97] => lookup_904_7_10(acc),
            [111, 116, 97, 107, 101] => lookup_904_7_11(acc),
            [115, 101, 114, 97, 110, 105, 115, 104, 105] => lookup_904_7_12(acc),
            [104, 97, 116, 115, 117, 107, 97, 105, 99, 104, 105] => lookup_904_7_13(acc),
            [107, 117, 105] => lookup_904_7_14(acc),
            [107, 117, 109, 97, 110, 111] => lookup_904_7_15(acc),
            [109, 105, 121, 111, 115, 104, 105] => lookup_904_7_16(acc),
            [115, 101, 114, 97] => lookup_904_7_17(acc),
            [111, 115, 97, 107, 105, 107, 97, 109, 105, 106, 105, 109, 97] => lookup_904_7_18(acc),
            [115, 104, 105, 110, 105, 99, 104, 105] => lookup_904_7_19(acc),
            [115, 104, 111, 98, 97, 114, 97] => lookup_904_7_20(acc),
            [101, 116, 97, 106, 105, 109, 97] => lookup_904_7_21(acc),
            [100, 97, 105, 119, 97] => lookup_904_7_22(acc),
            [110, 97, 107, 97] => lookup_904_7_23(acc),
            [106, 105, 110, 115, 101, 107, 105, 107, 111, 103, 101, 110] => lookup_904_7_24(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 97, 119, 97, 114, 97] => lookup_904_8_0(acc),
            [115, 104, 105, 110, 103, 117] => lookup_904_8_1(acc),
            [104, 105, 115, 97, 121, 97, 109, 97] => lookup_904_8_2(acc),
            [99, 104, 105, 107, 117, 106, 111] => lookup_904_8_3(acc),
            [107, 117, 114, 111, 103, 105] => lookup_904_8_4(acc),
            [97, 115, 104, 105, 121, 97] => lookup_904_8_5(acc),
            [115, 97, 115, 97, 103, 117, 114, 105] => lookup_904_8_6(acc),
            [99, 104, 105, 107, 117, 115, 104, 105, 110, 111] => lookup_904_8_7(acc),
            [109, 105, 121, 97, 109, 97] => lookup_904_8_8(acc),
            [110, 111, 103, 97, 116, 97] => lookup_904_8_9(acc),
            [115, 97, 105, 103, 97, 119, 97] => lookup_904_8_10(acc),
            [102, 117, 107, 117, 99, 104, 105] => lookup_904_8_11(acc),
            [107, 117, 114, 97, 116, 101] => lookup_904_8_12(acc),
            [111, 103, 111, 114, 105] => lookup_904_8_13(acc),
            [98, 117, 122, 101, 110] => lookup_904_8_14(acc),
            [104, 105, 114, 111, 107, 97, 119, 97] => lookup_904_8_15(acc),
            [116, 111, 121, 111, 116, 115, 117] => lookup_904_8_16(acc),
            [111, 110, 103, 97] => lookup_904_8_17(acc),
            [116, 97, 103, 97, 119, 97] => lookup_904_8_18(acc),
            [121, 97, 109, 101] => lookup_904_8_19(acc),
            [116, 111, 104, 111] => lookup_904_8_20(acc),
            [99, 104, 117, 111] => lookup_904_8_21(acc),
            [116, 115, 117, 105, 107, 105] => lookup_904_8_22(acc),
            [121, 97, 110, 97, 103, 97, 119, 97] => lookup_904_8_23(acc),
            [115, 104, 105, 110, 121, 111, 115, 104, 105, 116, 111, 109, 105] => {
                lookup_904_8_24(acc)
            }
            [115, 117, 101] => lookup_904_8_25(acc),
            [99, 104, 105, 107, 117, 104, 111] => lookup_904_8_26(acc),
            [111, 109, 117, 116, 97] => lookup_904_8_27(acc),
            [117, 109, 105] => lookup_904_8_28(acc),
            [107, 111, 103, 97] => lookup_904_8_29(acc),
            [107, 97, 104, 111] => lookup_904_8_30(acc),
            [99, 104, 105, 107, 117, 103, 111] => lookup_904_8_31(acc),
            [116, 97, 107, 97, 116, 97] => lookup_904_8_32(acc),
            [111, 107, 105] => lookup_904_8_33(acc),
            [109, 105, 121, 97, 119, 97, 107, 97] => lookup_904_8_34(acc),
            [111, 107, 97, 119, 97] => lookup_904_8_35(acc),
            [111, 110, 111, 106, 111] => lookup_904_8_36(acc),
            [117, 107, 105, 104, 97] => lookup_904_8_37(acc),
            [104, 97, 107, 97, 116, 97] => lookup_904_8_38(acc),
            [110, 97, 107, 97, 103, 97, 119, 97] => lookup_904_8_39(acc),
            [110, 97, 107, 97, 109, 97] => lookup_904_8_40(acc),
            [110, 105, 115, 104, 105] => lookup_904_8_41(acc),
            [116, 97, 99, 104, 105, 97, 114, 97, 105] => lookup_904_8_42(acc),
            [115, 104, 111, 110, 97, 105] => lookup_904_8_43(acc),
            [107, 97, 115, 117, 121, 97] => lookup_904_8_44(acc),
            [121, 117, 107, 117, 104, 97, 115, 104, 105] => lookup_904_8_45(acc),
            [99, 104, 105, 107, 117, 122, 101, 110] => lookup_904_8_46(acc),
            [105, 105, 122, 117, 107, 97] => lookup_904_8_47(acc),
            [109, 105, 122, 117, 109, 97, 107, 105] => lookup_904_8_48(acc),
            [105, 110, 97, 116, 115, 117, 107, 105] => lookup_904_8_49(acc),
            [111, 107, 97, 103, 97, 107, 105] => lookup_904_8_50(acc),
            [109, 117, 110, 97, 107, 97, 116, 97] => lookup_904_8_51(acc),
            [117, 115, 117, 105] => lookup_904_8_52(acc),
            [100, 97, 122, 97, 105, 102, 117] => lookup_904_8_53(acc),
            [109, 105, 121, 97, 107, 111] => lookup_904_8_54(acc),
            [107, 117, 114, 117, 109, 101] => lookup_904_8_55(acc),
            [111, 116, 111] => lookup_904_8_56(acc),
            [107, 97, 115, 117, 103, 97] => lookup_904_8_57(acc),
            [121, 97, 109, 97, 100, 97] => lookup_904_8_58(acc),
            [109, 105, 110, 97, 109, 105] => lookup_904_8_59(acc),
            [107, 101, 105, 115, 101, 110] => lookup_904_8_60(acc),
            [115, 111, 101, 100, 97] => lookup_904_8_61(acc),
            [104, 105, 103, 97, 115, 104, 105] => lookup_904_8_62(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_14_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_14_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_14_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_14_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_14_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_14_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_14_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_14_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_14_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_14_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_14_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_14_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_14_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_14_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_14_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_14_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_14_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_14_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_14_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_14_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_14_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_14_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_14_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_14_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_14_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_14_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_14<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 111, 117, 104, 111, 107, 117] => lookup_904_14_0(acc),
            [104, 105, 122, 101, 110] => lookup_904_14_1(acc),
            [107, 97, 115, 104, 105, 109, 97] => lookup_904_14_2(acc),
            [104, 97, 109, 97, 116, 97, 109, 97] => lookup_904_14_3(acc),
            [97, 114, 105, 116, 97] => lookup_904_14_4(acc),
            [107, 97, 109, 105, 109, 105, 110, 101] => lookup_904_14_5(acc),
            [110, 105, 115, 104, 105, 97, 114, 105, 116, 97] => lookup_904_14_6(acc),
            [115, 104, 105, 114, 111, 105, 115, 104, 105] => lookup_904_14_7(acc),
            [107, 97, 114, 97, 116, 115, 117] => lookup_904_14_8(acc),
            [107, 105, 116, 97, 104, 97, 116, 97] => lookup_904_14_9(acc),
            [116, 97, 107, 117] => lookup_904_14_10(acc),
            [97, 114, 105, 97, 107, 101] => lookup_904_14_11(acc),
            [103, 101, 110, 107, 97, 105] => lookup_904_14_12(acc),
            [111, 103, 105] => lookup_904_14_13(acc),
            [111, 109, 97, 99, 104, 105] => lookup_904_14_14(acc),
            [116, 97, 114, 97] => lookup_904_14_15(acc),
            [102, 117, 107, 117, 100, 111, 109, 105] => lookup_904_14_16(acc),
            [107, 105, 116, 97, 103, 97, 116, 97] => lookup_904_14_17(acc),
            [107, 97, 110, 122, 97, 107, 105] => lookup_904_14_18(acc),
            [107, 105, 121, 97, 109, 97] => lookup_904_14_19(acc),
            [116, 111, 115, 117] => lookup_904_14_20(acc),
            [111, 117, 99, 104, 105] => lookup_904_14_21(acc),
            [105, 109, 97, 114, 105] => lookup_904_14_22(acc),
            [115, 97, 103, 97] => lookup_904_14_23(acc),
            [121, 111, 115, 104, 105, 110, 111, 103, 97, 114, 105] => lookup_904_14_24(acc),
            [107, 121, 117, 114, 97, 103, 105] => lookup_904_14_25(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_15_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_15_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_15_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_15_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_15_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_15_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_15_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_15_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_15_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_15_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_15_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_15_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_15_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_15_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_15_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_15_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_15_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_15_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_15_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_15_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_15_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_15_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_15_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_15_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_15_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_15_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_15_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_15_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_15_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_15_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_15_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_15_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_15<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 101, 109, 105, 110, 101] => lookup_904_15_0(acc),
            [109, 105, 110, 97, 109, 105, 115, 97, 110, 114, 105, 107, 117] => lookup_904_15_1(acc),
            [111, 104, 105, 114, 97] => lookup_904_15_2(acc),
            [116, 111, 109, 101] => lookup_904_15_3(acc),
            [105, 115, 104, 105, 110, 111, 109, 97, 107, 105] => lookup_904_15_4(acc),
            [115, 104, 105, 99, 104, 105, 107, 97, 115, 104, 117, 107, 117] => lookup_904_15_5(acc),
            [115, 104, 105, 114, 111, 105, 115, 104, 105] => lookup_904_15_6(acc),
            [121, 97, 109, 97, 109, 111, 116, 111] => lookup_904_15_7(acc),
            [105, 119, 97, 110, 117, 109, 97] => lookup_904_15_8(acc),
            [109, 117, 114, 97, 116, 97] => lookup_904_15_9(acc),
            [109, 105, 115, 97, 116, 111] => lookup_904_15_10(acc),
            [115, 104, 105, 107, 97, 109, 97] => lookup_904_15_11(acc),
            [116, 97, 105, 119, 97] => lookup_904_15_12(acc),
            [122, 97, 111] => lookup_904_15_13(acc),
            [111, 103, 97, 119, 97, 114, 97] => lookup_904_15_14(acc),
            [102, 117, 114, 117, 107, 97, 119, 97] => lookup_904_15_15(acc),
            [111, 110, 97, 103, 97, 119, 97] => lookup_904_15_16(acc),
            [109, 97, 114, 117, 109, 111, 114, 105] => lookup_904_15_17(acc),
            [107, 97, 107, 117, 100, 97] => lookup_904_15_18(acc),
            [110, 97, 116, 111, 114, 105] => lookup_904_15_19(acc),
            [107, 97, 109, 105] => lookup_904_15_20(acc),
            [104, 105, 103, 97, 115, 104, 105, 109, 97, 116, 115, 117, 115, 104, 105, 109, 97] => {
                lookup_904_15_21(acc)
            }
            [114, 105, 102, 117] => lookup_904_15_22(acc),
            [115, 104, 105, 98, 97, 116, 97] => lookup_904_15_23(acc),
            [111, 115, 97, 107, 105] => lookup_904_15_24(acc),
            [119, 97, 107, 117, 121, 97] => lookup_904_15_25(acc),
            [119, 97, 116, 97, 114, 105] => lookup_904_15_26(acc),
            [109, 97, 116, 115, 117, 115, 104, 105, 109, 97] => lookup_904_15_27(acc),
            [116, 97, 103, 97, 106, 111] => lookup_904_15_28(acc),
            [107, 97, 119, 97, 115, 97, 107, 105] => lookup_904_15_29(acc),
            [116, 111, 109, 105, 121, 97] => lookup_904_15_30(acc),
            [115, 104, 105, 111, 103, 97, 109, 97] => lookup_904_15_31(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_16_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_16_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_16_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_16_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_16_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_16_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_16_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_16_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_16_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_16_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_16_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_16_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_16_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_16_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_16_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_16_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_16_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_16_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_16_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_16_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_16_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_16_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_16_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_16_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_16_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_16_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_16_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_16_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_16_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_16_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_16_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_16<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 97, 110, 117, 109, 97] => lookup_904_16_0(acc),
            [109, 105, 98, 117] => lookup_904_16_1(acc),
            [111, 104, 105, 114, 97] => lookup_904_16_2(acc),
            [115, 97, 107, 117, 114, 97] => lookup_904_16_3(acc),
            [111, 104, 116, 97, 119, 97, 114, 97] => lookup_904_16_4(acc),
            [107, 97, 109, 105, 110, 111, 107, 97, 119, 97] => lookup_904_16_5(acc),
            [117, 116, 115, 117, 110, 111, 109, 105, 121, 97] => lookup_904_16_6(acc),
            [110, 105, 115, 104, 105, 107, 97, 116, 97] => lookup_904_16_7(acc),
            [107, 117, 114, 111, 105, 115, 111] => lookup_904_16_8(acc),
            [97, 115, 104, 105, 107, 97, 103, 97] => lookup_904_16_9(acc),
            [116, 115, 117, 103, 97] => lookup_904_16_10(acc),
            [117, 106, 105, 105, 101] => lookup_904_16_11(acc),
            [111, 121, 97, 109, 97] => lookup_904_16_12(acc),
            [115, 97, 110, 111] => lookup_904_16_13(acc),
            [109, 97, 115, 104, 105, 107, 111] => lookup_904_16_14(acc),
            [115, 104, 105, 109, 111, 116, 115, 117, 107, 101] => lookup_904_16_15(acc),
            [110, 97, 115, 117, 115, 104, 105, 111, 98, 97, 114, 97] => lookup_904_16_16(acc),
            [116, 111, 99, 104, 105, 103, 105] => lookup_904_16_17(acc),
            [115, 104, 105, 111, 121, 97] => lookup_904_16_18(acc),
            [110, 111, 103, 105] => lookup_904_16_19(acc),
            [109, 111, 116, 101, 103, 105] => lookup_904_16_20(acc),
            [121, 97, 105, 116, 97] => lookup_904_16_21(acc),
            [110, 97, 115, 117] => lookup_904_16_22(acc),
            [105, 99, 104, 105, 107, 97, 105] => lookup_904_16_23(acc),
            [107, 97, 114, 97, 115, 117, 121, 97, 109, 97] => lookup_904_16_24(acc),
            [110, 105, 107, 107, 111] => lookup_904_16_25(acc),
            [105, 119, 97, 102, 117, 110, 101] => lookup_904_16_26(acc),
            [109, 111, 107, 97] => lookup_904_16_27(acc),
            [116, 97, 107, 97, 110, 101, 122, 97, 119, 97] => lookup_904_16_28(acc),
            [104, 97, 103, 97] => lookup_904_16_29(acc),
            [98, 97, 116, 111] => lookup_904_16_30(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_17_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_17_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_17_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_17_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_17_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_17_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_17_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_17_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_17_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_17_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_17_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_17_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_17_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_17_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_17_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_17_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_17_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_17_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_17_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_17_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_17_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_17_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_17_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_17_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_17_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_17_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_17_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_17_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_17<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 111, 107, 117, 116, 111] => lookup_904_17_0(acc),
            [111, 115, 104, 105, 110, 111] => lookup_904_17_1(acc),
            [111, 116, 115, 117, 107, 105] => lookup_904_17_2(acc),
            [102, 117, 106, 105, 107, 97, 119, 97, 103, 117, 99, 104, 105, 107, 111] => {
                lookup_904_17_3(acc)
            }
            [105, 99, 104, 105, 107, 97, 119, 97, 109, 105, 115, 97, 116, 111] => {
                lookup_904_17_4(acc)
            }
            [107, 111, 102, 117] => lookup_904_17_5(acc),
            [115, 104, 111, 119, 97] => lookup_904_17_6(acc),
            [102, 117, 106, 105, 121, 111, 115, 104, 105, 100, 97] => lookup_904_17_7(acc),
            [107, 97, 105] => lookup_904_17_8(acc),
            [116, 97, 98, 97, 121, 97, 109, 97] => lookup_904_17_9(acc),
            [99, 104, 117, 111] => lookup_904_17_10(acc),
            [117, 101, 110, 111, 104, 97, 114, 97] => lookup_904_17_11(acc),
            [109, 105, 110, 97, 109, 105, 45, 97, 108, 112, 115] => lookup_904_17_12(acc),
            [107, 111, 115, 117, 103, 101] => lookup_904_17_13(acc),
            [102, 117, 101, 102, 117, 107, 105] => lookup_904_17_14(acc),
            [110, 97, 107, 97, 109, 105, 99, 104, 105] => lookup_904_17_15(acc),
            [110, 105, 115, 104, 105, 107, 97, 116, 115, 117, 114, 97] => lookup_904_17_16(acc),
            [116, 115, 117, 114, 117] => lookup_904_17_17(acc),
            [121, 97, 109, 97, 110, 97, 115, 104, 105] => lookup_904_17_18(acc),
            [110, 105, 114, 97, 115, 97, 107, 105] => lookup_904_17_19(acc),
            [121, 97, 109, 97, 110, 97, 107, 97, 107, 111] => lookup_904_17_20(acc),
            [104, 97, 121, 97, 107, 97, 119, 97] => lookup_904_17_21(acc),
            [109, 105, 110, 111, 98, 117] => lookup_904_17_22(acc),
            [110, 97, 110, 98, 117] => lookup_904_17_23(acc),
            [107, 111, 115, 104, 117] => lookup_904_17_24(acc),
            [110, 97, 114, 117, 115, 97, 119, 97] => lookup_904_17_25(acc),
            [100, 111, 115, 104, 105] => lookup_904_17_26(acc),
            [102, 117, 106, 105, 107, 97, 119, 97] => lookup_904_17_27(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_19_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_19_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_19_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_19_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_19_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_19_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_19_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_19_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_19_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_19_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_19_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_19_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_19_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_19_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_19_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_19_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_19_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_19_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_19_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_19_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_19_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_19_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_19<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 97, 103, 97, 115, 97, 107, 105] => lookup_904_19_0(acc),
            [111, 98, 97, 109, 97] => lookup_904_19_1(acc),
            [116, 115, 117, 115, 104, 105, 109, 97] => lookup_904_19_2(acc),
            [111, 109, 117, 114, 97] => lookup_904_19_3(acc),
            [115, 97, 105, 107, 97, 105] => lookup_904_19_4(acc),
            [99, 104, 105, 106, 105, 119, 97] => lookup_904_19_5(acc),
            [105, 107, 105] => lookup_904_19_6(acc),
            [115, 97, 115, 101, 98, 111] => lookup_904_19_7(acc),
            [102, 117, 116, 115, 117] => lookup_904_19_8(acc),
            [105, 115, 97, 104, 97, 121, 97] => lookup_904_19_9(acc),
            [104, 105, 114, 97, 100, 111] => lookup_904_19_10(acc),
            [107, 97, 119, 97, 116, 97, 110, 97] => lookup_904_19_11(acc),
            [117, 110, 122, 101, 110] => lookup_904_19_12(acc),
            [104, 97, 115, 97, 109, 105] => lookup_904_19_13(acc),
            [109, 97, 116, 115, 117, 117, 114, 97] => lookup_904_19_14(acc),
            [116, 111, 103, 105, 116, 115, 117] => lookup_904_19_15(acc),
            [107, 117, 99, 104, 105, 110, 111, 116, 115, 117] => lookup_904_19_16(acc),
            [115, 101, 105, 104, 105] => lookup_904_19_17(acc),
            [103, 111, 116, 111] => lookup_904_19_18(acc),
            [111, 115, 101, 116, 111] => lookup_904_19_19(acc),
            [115, 104, 105, 109, 97, 98, 97, 114, 97] => lookup_904_19_20(acc),
            [115, 104, 105, 110, 107, 97, 109, 105, 103, 111, 116, 111] => lookup_904_19_21(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 104, 105, 109, 97, 109, 111, 116, 111] => lookup_904_21_0(acc),
            [107, 97, 110, 97, 110] => lookup_904_21_1(acc),
            [111, 115, 97, 107, 97, 115, 97, 121, 97, 109, 97] => lookup_904_21_2(acc),
            [107, 97, 105, 122, 117, 107, 97] => lookup_904_21_3(acc),
            [105, 122, 117, 109, 105] => lookup_904_21_4(acc),
            [116, 97, 107, 97, 116, 115, 117, 107, 105] => lookup_904_21_5(acc),
            [107, 117, 109, 97, 116, 111, 114, 105] => lookup_904_21_6(acc),
            [110, 105, 115, 104, 105] => lookup_904_21_7(acc),
            [104, 105, 103, 97, 115, 104, 105, 115, 117, 109, 105, 121, 111, 115, 104, 105] => {
                lookup_904_21_8(acc)
            }
            [104, 105, 103, 97, 115, 104, 105, 111, 115, 97, 107, 97] => lookup_904_21_9(acc),
            [97, 98, 101, 110, 111] => lookup_904_21_10(acc),
            [104, 97, 110, 110, 97, 110] => lookup_904_21_11(acc),
            [105, 122, 117, 109, 105, 115, 97, 110, 111] => lookup_904_21_12(acc),
            [99, 104, 105, 104, 97, 121, 97, 97, 107, 97, 115, 97, 107, 97] => {
                lookup_904_21_13(acc)
            }
            [104, 105, 114, 97, 107, 97, 116, 97] => lookup_904_21_14(acc),
            [105, 98, 97, 114, 97, 107, 105] => lookup_904_21_15(acc),
            [107, 97, 115, 104, 105, 119, 97, 114, 97] => lookup_904_21_16(acc),
            [109, 97, 116, 115, 117, 98, 97, 114, 97] => lookup_904_21_17(acc),
            [109, 111, 114, 105, 103, 117, 99, 104, 105] => lookup_904_21_18(acc),
            [115, 97, 121, 97, 109, 97] => lookup_904_21_19(acc),
            [116, 97, 100, 97, 111, 107, 97] => lookup_904_21_20(acc),
            [105, 122, 117, 109, 105, 111, 116, 115, 117] => lookup_904_21_21(acc),
            [115, 97, 107, 97, 105] => lookup_904_21_22(acc),
            [116, 97, 106, 105, 114, 105] => lookup_904_21_23(acc),
            [116, 97, 107, 97, 105, 115, 104, 105] => lookup_904_21_24(acc),
            [115, 101, 116, 116, 115, 117] => lookup_904_21_25(acc),
            [107, 105, 115, 104, 105, 119, 97, 100, 97] => lookup_904_21_26(acc),
            [115, 117, 105, 116, 97] => lookup_904_21_27(acc),
            [116, 111, 121, 111, 110, 111] => lookup_904_21_28(acc),
            [104, 97, 98, 105, 107, 105, 110, 111] => lookup_904_21_29(acc),
            [116, 111, 110, 100, 97, 98, 97, 121, 97, 115, 104, 105] => lookup_904_21_30(acc),
            [110, 111, 115, 101] => lookup_904_21_31(acc),
            [102, 117, 106, 105, 105, 100, 101, 114, 97] => lookup_904_21_32(acc),
            [99, 104, 117, 111] => lookup_904_21_33(acc),
            [110, 101, 121, 97, 103, 97, 119, 97] => lookup_904_21_34(acc),
            [115, 101, 110, 110, 97, 110] => lookup_904_21_35(acc),
            [109, 105, 110, 97, 116, 111] => lookup_904_21_36(acc),
            [109, 105, 110, 111, 104] => lookup_904_21_37(acc),
            [105, 107, 101, 100, 97] => lookup_904_21_38(acc),
            [107, 97, 100, 111, 109, 97] => lookup_904_21_39(acc),
            [116, 97, 105, 115, 104, 105] => lookup_904_21_40(acc),
            [104, 105, 103, 97, 115, 104, 105, 121, 111, 100, 111, 103, 97, 119, 97] => {
                lookup_904_21_41(acc)
            }
            [100, 97, 105, 116, 111] => lookup_904_21_42(acc),
            [109, 105, 115, 97, 107, 105] => lookup_904_21_43(acc),
            [107, 97, 119, 97, 99, 104, 105, 110, 97, 103, 97, 110, 111] => lookup_904_21_44(acc),
            [115, 104, 105, 106, 111, 110, 97, 119, 97, 116, 101] => lookup_904_21_45(acc),
            [107, 97, 116, 97, 110, 111] => lookup_904_21_46(acc),
            [121, 97, 111] => lookup_904_21_47(acc),
            [116, 111, 121, 111, 110, 97, 107, 97] => lookup_904_21_48(acc),
            [107, 105, 116, 97] => lookup_904_21_49(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 105, 100, 97, 107, 97] => lookup_904_23_0(acc),
            [116, 111, 121, 97] => lookup_904_23_1(acc),
            [107, 97, 109, 111, 101, 110, 97, 105] => lookup_904_23_2(acc),
            [121, 97, 107, 117, 109, 111] => lookup_904_23_3(acc),
            [98, 105, 114, 97, 116, 111, 114, 105] => lookup_904_23_4(acc),
            [104, 105, 103, 97, 115, 104, 105, 107, 97, 103, 117, 114, 97] => lookup_904_23_5(acc),
            [109, 111, 109, 98, 101, 116, 115, 117] => lookup_904_23_6(acc),
            [114, 105, 107, 117, 98, 101, 116, 115, 117] => lookup_904_23_7(acc),
            [115, 104, 105, 107, 97, 111, 105] => lookup_904_23_8(acc),
            [98, 105, 104, 111, 114, 111] => lookup_904_23_9(acc),
            [116, 97, 107, 105, 110, 111, 117, 101] => lookup_904_23_10(acc),
            [111, 107, 101, 116, 111] => lookup_904_23_11(acc),
            [97, 98, 97, 115, 104, 105, 114, 105] => lookup_904_23_12(acc),
            [117, 114, 97, 117, 115, 117] => lookup_904_23_13(acc),
            [97, 115, 104, 105, 98, 101, 116, 115, 117] => lookup_904_23_14(acc),
            [116, 111, 98, 101, 116, 115, 117] => lookup_904_23_15(acc),
            [111, 122, 111, 114, 97] => lookup_904_23_16(acc),
            [116, 111, 104, 109, 97] => lookup_904_23_17(acc),
            [115, 111, 98, 101, 116, 115, 117] => lookup_904_23_18(acc),
            [111, 116, 111, 102, 117, 107, 101] => lookup_904_23_19(acc),
            [97, 107, 97, 98, 105, 114, 97] => lookup_904_23_20(acc),
            [115, 104, 97, 107, 111, 116, 97, 110] => lookup_904_23_21(acc),
            [110, 97, 110, 97, 101] => lookup_904_23_22(acc),
            [105, 119, 97, 109, 105, 122, 97, 119, 97] => lookup_904_23_23(acc),
            [107, 97, 109, 105, 115, 117, 110, 97, 103, 97, 119, 97] => lookup_904_23_24(acc),
            [102, 117, 114, 117, 98, 105, 114, 97] => lookup_904_23_25(acc),
            [114, 105, 115, 104, 105, 114, 105] => lookup_904_23_26(acc),
            [104, 111, 114, 111, 107, 97, 110, 97, 105] => lookup_904_23_27(acc),
            [116, 111, 109, 97, 107, 111, 109, 97, 105] => lookup_904_23_28(acc),
            [116, 115, 117, 98, 101, 116, 115, 117] => lookup_904_23_29(acc),
            [104, 97, 107, 111, 100, 97, 116, 101] => lookup_904_23_30(acc),
            [101, 115, 97, 110] => lookup_904_23_31(acc),
            [101, 114, 105, 109, 111] => lookup_904_23_32(acc),
            [104, 111, 114, 111, 110, 111, 98, 101] => lookup_904_23_33(acc),
            [109, 105, 107, 97, 115, 97] => lookup_904_23_34(acc),
            [110, 97, 107, 97, 103, 97, 119, 97] => lookup_904_23_35(acc),
            [115, 117, 110, 97, 103, 97, 119, 97] => lookup_904_23_36(acc),
            [110, 105, 105, 107, 97, 112, 112, 117] => lookup_904_23_37(acc),
            [98, 105, 101, 105] => lookup_904_23_38(acc),
            [107, 111, 115, 104, 105, 109, 105, 122, 117] => lookup_904_23_39(acc),
            [107, 121, 111, 119, 97] => lookup_904_23_40(acc),
            [109, 117, 107, 97, 119, 97] => lookup_904_23_41(acc),
            [117, 114, 97, 107, 97, 119, 97] => lookup_904_23_42(acc),
            [116, 97, 107, 97, 115, 117] => lookup_904_23_43(acc),
            [105, 115, 104, 105, 107, 97, 114, 105] => lookup_904_23_44(acc),
            [110, 117, 109, 97, 116, 97] => lookup_904_23_45(acc),
            [110, 105, 115, 104, 105, 111, 107, 111, 112, 112, 101] => lookup_904_23_46(acc),
            [107, 117, 116, 99, 104, 97, 110] => lookup_904_23_47(acc),
            [115, 97, 114, 111, 109, 97] => lookup_904_23_48(acc),
            [115, 104, 105, 114, 97, 111, 105] => lookup_904_23_49(acc),
            [107, 105, 109, 111, 98, 101, 116, 115, 117] => lookup_904_23_50(acc),
            [101, 109, 98, 101, 116, 115, 117] => lookup_904_23_51(acc),
            [107, 97, 121, 97, 98, 101] => lookup_904_23_52(acc),
            [115, 104, 105, 107, 97, 98, 101] => lookup_904_23_53(acc),
            [97, 107, 107, 101, 115, 104, 105] => lookup_904_23_54(acc),
            [115, 104, 105, 98, 101, 116, 115, 117] => lookup_904_23_55(acc),
            [110, 111, 98, 111, 114, 105, 98, 101, 116, 115, 117] => lookup_904_23_56(acc),
            [116, 111, 121, 111, 116, 111, 109, 105] => lookup_904_23_57(acc),
            [97, 116, 115, 117, 109, 97] => lookup_904_23_58(acc),
            [97, 98, 105, 114, 97] => lookup_904_23_59(acc),
            [111, 107, 111, 112, 112, 101] => lookup_904_23_60(acc),
            [115, 104, 105, 110, 115, 104, 105, 110, 111, 116, 115, 117] => lookup_904_23_61(acc),
            [111, 116, 111, 98, 101] => lookup_904_23_62(acc),
            [107, 97, 109, 105, 107, 97, 119, 97] => lookup_904_23_63(acc),
            [104, 97, 98, 111, 114, 111] => lookup_904_23_64(acc),
            [102, 117, 107, 97, 103, 97, 119, 97] => lookup_904_23_65(acc),
            [101, 98, 101, 116, 115, 117] => lookup_904_23_66(acc),
            [111, 98, 105, 114, 97] => lookup_904_23_67(acc),
            [101, 115, 97, 115, 104, 105] => lookup_904_23_68(acc),
            [107, 101, 109, 98, 117, 99, 104, 105] => lookup_904_23_69(acc),
            [110, 97, 105, 101] => lookup_904_23_70(acc),
            [115, 104, 105, 98, 101, 99, 104, 97] => lookup_904_23_71(acc),
            [116, 111, 121, 97, 107, 111] => lookup_904_23_72(acc),
            [116, 111, 121, 111, 117, 114, 97] => lookup_904_23_73(acc),
            [104, 111, 110, 98, 101, 116, 115, 117] => lookup_904_23_74(acc),
            [111, 116, 111, 105, 110, 101, 112, 112, 117] => lookup_904_23_75(acc),
            [107, 105, 116, 97, 104, 105, 114, 111, 115, 104, 105, 109, 97] => {
                lookup_904_23_76(acc)
            }
            [115, 97, 114, 117, 102, 117, 116, 115, 117] => lookup_904_23_77(acc),
            [116, 97, 105, 107, 105] => lookup_904_23_78(acc),
            [116, 101, 115, 104, 105, 107, 97, 103, 97] => lookup_904_23_79(acc),
            [97, 105, 98, 101, 116, 115, 117] => lookup_904_23_80(acc),
            [109, 117, 114, 111, 114, 97, 110] => lookup_904_23_81(acc),
            [102, 117, 114, 97, 110, 111] => lookup_904_23_82(acc),
            [112, 105, 112, 112, 117] => lookup_904_23_83(acc),
            [111, 98, 105, 104, 105, 114, 111] => lookup_904_23_84(acc),
            [107, 105, 107, 111, 110, 97, 105] => lookup_904_23_85(acc),
            [110, 97, 121, 111, 114, 111] => lookup_904_23_86(acc),
            [97, 115, 104, 111, 114, 111] => lookup_904_23_87(acc),
            [98, 105, 102, 117, 107, 97] => lookup_904_23_88(acc),
            [110, 101, 109, 117, 114, 111] => lookup_904_23_89(acc),
            [114, 105, 115, 104, 105, 114, 105, 102, 117, 106, 105] => lookup_904_23_90(acc),
            [105, 107, 101, 100, 97] => lookup_904_23_91(acc),
            [101, 110, 105, 119, 97] => lookup_904_23_92(acc),
            [116, 97, 107, 105, 107, 97, 119, 97] => lookup_904_23_93(acc),
            [99, 104, 105, 116, 111, 115, 101] => lookup_904_23_94(acc),
            [115, 104, 105, 109, 105, 122, 117] => lookup_904_23_95(acc),
            [110, 97, 107, 97, 116, 111, 109, 98, 101, 116, 115, 117] => lookup_904_23_96(acc),
            [107, 117, 115, 104, 105, 114, 111] => lookup_904_23_97(acc),
            [98, 105, 98, 97, 105] => lookup_904_23_98(acc),
            [109, 111, 115, 101, 117, 115, 104, 105] => lookup_904_23_99(acc),
            [99, 104, 105, 112, 112, 117, 98, 101, 116, 115, 117] => lookup_904_23_100(acc),
            [111, 117, 109, 117] => lookup_904_23_101(acc),
            [116, 115, 117, 107, 105, 103, 97, 116, 97] => lookup_904_23_102(acc),
            [104, 111, 107, 117, 116, 111] => lookup_904_23_103(acc),
            [115, 104, 105, 110, 116, 111, 107, 117] => lookup_904_23_104(acc),
            [105, 109, 97, 107, 97, 110, 101] => lookup_904_23_105(acc),
            [119, 97, 107, 107, 97, 110, 97, 105] => lookup_904_23_106(acc),
            [107, 105, 121, 111, 115, 97, 116, 111] => lookup_904_23_107(acc),
            [115, 104, 105, 114, 97, 110, 117, 107, 97] => lookup_904_23_108(acc),
            [117, 116, 97, 115, 104, 105, 110, 97, 105] => lookup_904_23_109(acc),
            [107, 97, 109, 105, 102, 117, 114, 97, 110, 111] => lookup_904_23_110(acc),
            [104, 105, 103, 97, 115, 104, 105, 107, 97, 119, 97] => lookup_904_23_111(acc),
            [109, 105, 110, 97, 109, 105, 102, 117, 114, 97, 110, 111] => lookup_904_23_112(acc),
            [110, 97, 110, 112, 111, 114, 111] => lookup_904_23_113(acc),
            [97, 115, 97, 104, 105, 107, 97, 119, 97] => lookup_904_23_114(acc),
            [105, 119, 97, 110, 97, 105] => lookup_904_23_115(acc),
            [110, 97, 107, 97, 115, 97, 116, 115, 117, 110, 97, 105] => lookup_904_23_116(acc),
            [102, 117, 107, 117, 115, 104, 105, 109, 97] => lookup_904_23_117(acc),
            [115, 104, 105, 114, 105, 117, 99, 104, 105] => lookup_904_23_118(acc),
            [116, 111, 109, 97, 114, 105] => lookup_904_23_119(acc),
            [104, 97, 109, 97, 116, 111, 110, 98, 101, 116, 115, 117] => lookup_904_23_120(acc),
            [107, 117, 114, 111, 109, 97, 116, 115, 117, 110, 97, 105] => lookup_904_23_121(acc),
            [107, 97, 109, 105, 115, 104, 105, 104, 111, 114, 111] => lookup_904_23_122(acc),
            [119, 97, 115, 115, 97, 109, 117] => lookup_904_23_123(acc),
            [107, 117, 110, 110, 101, 112, 112, 117] => lookup_904_23_124(acc),
            [97, 115, 115, 97, 98, 117] => lookup_904_23_125(acc),
            [114, 97, 110, 107, 111, 115, 104, 105] => lookup_904_23_126(acc),
            [115, 104, 105, 109, 97, 109, 97, 107, 105] => lookup_904_23_127(acc),
            [115, 104, 105, 109, 111, 107, 97, 119, 97] => lookup_904_23_128(acc),
            [117, 114, 121, 117] => lookup_904_23_129(acc),
            [109, 97, 116, 115, 117, 109, 97, 101] => lookup_904_23_130(acc),
            [121, 111, 105, 99, 104, 105] => lookup_904_23_131(acc),
            [104, 105, 114, 111, 111] => lookup_904_23_132(acc),
            [114, 101, 98, 117, 110] => lookup_904_23_133(acc),
            [107, 105, 116, 97, 109, 105] => lookup_904_23_134(acc),
            [111, 116, 97, 114, 117] => lookup_904_23_135(acc),
            [110, 105, 107, 105] => lookup_904_23_136(acc),
            [107, 117, 114, 105, 121, 97, 109, 97] => lookup_904_23_137(acc),
            [115, 104, 97, 114, 105] => lookup_904_23_138(acc),
            [100, 97, 116, 101] => lookup_904_23_139(acc),
            [109, 97, 115, 104, 105, 107, 101] => lookup_904_23_140(acc),
            [104, 111, 107, 117, 114, 121, 117] => lookup_904_23_141(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 105, 110, 111, 100, 101] => lookup_904_28_0(acc),
            [115, 101, 116, 97, 103, 97, 121, 97] => lookup_904_28_1(acc),
            [107, 111, 117, 122, 117, 115, 104, 105, 109, 97] => lookup_904_28_2(acc),
            [110, 97, 107, 97, 110, 111] => lookup_904_28_3(acc),
            [107, 105, 121, 111, 115, 101] => lookup_904_28_4(acc),
            [107, 111, 107, 117, 98, 117, 110, 106, 105] => lookup_904_28_5(acc),
            [97, 111, 103, 97, 115, 104, 105, 109, 97] => lookup_904_28_6(acc),
            [115, 104, 105, 110, 97, 103, 97, 119, 97] => lookup_904_28_7(acc),
            [111, 116, 97] => lookup_904_28_8(acc),
            [115, 104, 105, 110, 106, 117, 107, 117] => lookup_904_28_9(acc),
            [97, 107, 105, 114, 117, 110, 111] => lookup_904_28_10(acc),
            [116, 111, 115, 104, 105, 109, 97] => lookup_904_28_11(acc),
            [99, 104, 111, 102, 117] => lookup_904_28_12(acc),
            [109, 105, 122, 117, 104, 111] => lookup_904_28_13(acc),
            [104, 105, 103, 97, 115, 104, 105, 121, 97, 109, 97, 116, 111] => lookup_904_28_14(acc),
            [104, 105, 110, 111, 104, 97, 114, 97] => lookup_904_28_15(acc),
            [97, 100, 97, 99, 104, 105] => lookup_904_28_16(acc),
            [102, 117, 99, 104, 117] => lookup_904_28_17(acc),
            [104, 97, 99, 104, 105, 111, 106, 105] => lookup_904_28_18(acc),
            [104, 105, 110, 111] => lookup_904_28_19(acc),
            [109, 97, 99, 104, 105, 100, 97] => lookup_904_28_20(acc),
            [109, 117, 115, 97, 115, 104, 105, 110, 111] => lookup_904_28_21(acc),
            [104, 97, 99, 104, 105, 106, 111] => lookup_904_28_22(acc),
            [99, 104, 117, 111] => lookup_904_28_23(acc),
            [107, 117, 110, 105, 116, 97, 99, 104, 105] => lookup_904_28_24(acc),
            [116, 97, 105, 116, 111] => lookup_904_28_25(acc),
            [109, 105, 116, 97, 107, 97] => lookup_904_28_26(acc),
            [98, 117, 110, 107, 121, 111] => lookup_904_28_27(acc),
            [111, 109, 101] => lookup_904_28_28(acc),
            [99, 104, 105, 121, 111, 100, 97] => lookup_904_28_29(acc),
            [107, 111, 109, 97, 101] => lookup_904_28_30(acc),
            [115, 117, 109, 105, 100, 97] => lookup_904_28_31(acc),
            [111, 107, 117, 116, 97, 109, 97] => lookup_904_28_32(acc),
            [97, 107, 105, 115, 104, 105, 109, 97] => lookup_904_28_33(acc),
            [115, 117, 103, 105, 110, 97, 109, 105] => lookup_904_28_34(acc),
            [116, 97, 109, 97] => lookup_904_28_35(acc),
            [102, 117, 115, 115, 97] => lookup_904_28_36(acc),
            [107, 97, 116, 115, 117, 115, 104, 105, 107, 97] => lookup_904_28_37(acc),
            [105, 116, 97, 98, 97, 115, 104, 105] => lookup_904_28_38(acc),
            [97, 114, 97, 107, 97, 119, 97] => lookup_904_28_39(acc),
            [111, 103, 97, 115, 97, 119, 97, 114, 97] => lookup_904_28_40(acc),
            [115, 104, 105, 98, 117, 121, 97] => lookup_904_28_41(acc),
            [107, 111, 103, 97, 110, 101, 105] => lookup_904_28_42(acc),
            [104, 97, 109, 117, 114, 97] => lookup_904_28_43(acc),
            [109, 117, 115, 97, 115, 104, 105, 109, 117, 114, 97, 121, 97, 109, 97] => {
                lookup_904_28_44(acc)
            }
            [107, 111, 116, 111] => lookup_904_28_45(acc),
            [116, 97, 99, 104, 105, 107, 97, 119, 97] => lookup_904_28_46(acc),
            [101, 100, 111, 103, 97, 119, 97] => lookup_904_28_47(acc),
            [109, 105, 110, 97, 116, 111] => lookup_904_28_48(acc),
            [105, 110, 97, 103, 105] => lookup_904_28_49(acc),
            [110, 101, 114, 105, 109, 97] => lookup_904_28_50(acc),
            [109, 101, 103, 117, 114, 111] => lookup_904_28_51(acc),
            [107, 111, 100, 97, 105, 114, 97] => lookup_904_28_52(acc),
            [111, 115, 104, 105, 109, 97] => lookup_904_28_53(acc),
            [104, 105, 103, 97, 115, 104, 105, 109, 117, 114, 97, 121, 97, 109, 97] => {
                lookup_904_28_54(acc)
            }
            [107, 105, 116, 97] => lookup_904_28_55(acc),
            [104, 105, 103, 97, 115, 104, 105, 107, 117, 114, 117, 109, 101] => {
                lookup_904_28_56(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_35_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_35_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_35_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_35_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_35_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_35_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_35_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_35_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_35_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_35_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_35_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_35_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_35_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_35_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_35_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_35_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_35_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_35_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_35_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_35_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_35_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_35_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_35_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_35_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_35_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_35_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_35_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_35_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_35_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_35_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_35_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_35_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_35_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_35_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_35<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 117, 109, 105, 116, 97] => lookup_904_35_0(acc),
            [116, 111, 110, 111] => lookup_904_35_1(acc),
            [104, 105, 114, 111, 110, 111] => lookup_904_35_2(acc),
            [121, 97, 104, 97, 98, 97] => lookup_904_35_3(acc),
            [107, 117, 110, 111, 104, 101] => lookup_904_35_4(acc),
            [116, 97, 110, 111, 104, 97, 116, 97] => lookup_904_35_5(acc),
            [111, 115, 104, 117] => lookup_904_35_6(acc),
            [115, 104, 105, 122, 117, 107, 117, 105, 115, 104, 105] => lookup_904_35_7(acc),
            [109, 111, 114, 105, 111, 107, 97] => lookup_904_35_8(acc),
            [105, 99, 104, 105, 110, 111, 104, 101] => lookup_904_35_9(acc),
            [105, 119, 97, 105, 122, 117, 109, 105] => lookup_904_35_10(acc),
            [107, 117, 122, 117, 109, 97, 107, 105] => lookup_904_35_11(acc),
            [111, 116, 115, 117, 99, 104, 105] => lookup_904_35_12(acc),
            [102, 117, 106, 105, 115, 97, 119, 97] => lookup_904_35_13(acc),
            [109, 105, 122, 117, 115, 97, 119, 97] => lookup_904_35_14(acc),
            [104, 97, 110, 97, 109, 97, 107, 105] => lookup_904_35_15(acc),
            [107, 117, 106, 105] => lookup_904_35_16(acc),
            [109, 105, 121, 97, 107, 111] => lookup_904_35_17(acc),
            [115, 104, 105, 119, 97] => lookup_904_35_18(acc),
            [107, 105, 116, 97, 107, 97, 109, 105] => lookup_904_35_19(acc),
            [102, 117, 100, 97, 105] => lookup_904_35_20(acc),
            [110, 105, 110, 111, 104, 101] => lookup_904_35_21(acc),
            [107, 97, 109, 97, 105, 115, 104, 105] => lookup_904_35_22(acc),
            [110, 111, 100, 97] => lookup_904_35_23(acc),
            [121, 97, 109, 97, 100, 97] => lookup_904_35_24(acc),
            [104, 105, 114, 97, 105, 122, 117, 109, 105] => lookup_904_35_25(acc),
            [105, 99, 104, 105, 110, 111, 115, 101, 107, 105] => lookup_904_35_26(acc),
            [105, 119, 97, 116, 101] => lookup_904_35_27(acc),
            [111, 102, 117, 110, 97, 116, 111] => lookup_904_35_28(acc),
            [114, 105, 107, 117, 122, 101, 110, 116, 97, 107, 97, 116, 97] => lookup_904_35_29(acc),
            [107, 97, 119, 97, 105] => lookup_904_35_30(acc),
            [106, 111, 98, 111, 106, 105] => lookup_904_35_31(acc),
            [107, 97, 114, 117, 109, 97, 105] => lookup_904_35_32(acc),
            [107, 97, 110, 101, 103, 97, 115, 97, 107, 105] => lookup_904_35_33(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_38_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_38_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_38_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_38_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_38_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_38_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_38_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_38_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_38_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_38_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_38_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_38_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_38_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_38_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_38_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_38_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_38_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_38_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_38_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_38_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_38_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_38_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_38_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_38_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_38_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_38_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_38_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_38_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_38_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_38_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_38_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_38_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_38_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_38_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_38_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_38_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_38<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 110, 110, 97, 107, 97] => lookup_904_38_0(acc),
            [107, 105, 114, 121, 117] => lookup_904_38_1(acc),
            [115, 104, 111, 119, 97] => lookup_904_38_2(acc),
            [111, 114, 97] => lookup_904_38_3(acc),
            [115, 104, 105, 109, 111, 110, 105, 116, 97] => lookup_904_38_4(acc),
            [116, 97, 116, 101, 98, 97, 121, 97, 115, 104, 105] => lookup_904_38_5(acc),
            [109, 97, 101, 98, 97, 115, 104, 105] => lookup_904_38_6(acc),
            [107, 97, 110, 114, 97] => lookup_904_38_7(acc),
            [105, 115, 101, 115, 97, 107, 105] => lookup_904_38_8(acc),
            [110, 97, 107, 97, 110, 111, 106, 111] => lookup_904_38_9(acc),
            [116, 97, 109, 97, 109, 117, 114, 97] => lookup_904_38_10(acc),
            [117, 101, 110, 111] => lookup_904_38_11(acc),
            [111, 116, 97] => lookup_904_38_12(acc),
            [107, 117, 115, 97, 116, 115, 117] => lookup_904_38_13(acc),
            [121, 111, 115, 104, 105, 111, 107, 97] => lookup_904_38_14(acc),
            [109, 105, 110, 97, 107, 97, 109, 105] => lookup_904_38_15(acc),
            [105, 116, 97, 107, 117, 114, 97] => lookup_904_38_16(acc),
            [116, 97, 107, 97, 115, 97, 107, 105] => lookup_904_38_17(acc),
            [104, 105, 103, 97, 115, 104, 105, 97, 103, 97, 116, 115, 117, 109, 97] => {
                lookup_904_38_18(acc)
            }
            [110, 97, 110, 109, 111, 107, 117] => lookup_904_38_19(acc),
            [116, 115, 117, 107, 105, 121, 111, 110, 111] => lookup_904_38_20(acc),
            [109, 105, 100, 111, 114, 105] => lookup_904_38_21(acc),
            [110, 117, 109, 97, 116, 97] => lookup_904_38_22(acc),
            [107, 97, 110, 110, 97] => lookup_904_38_23(acc),
            [109, 101, 105, 119, 97] => lookup_904_38_24(acc),
            [107, 97, 119, 97, 98, 97] => lookup_904_38_25(acc),
            [116, 111, 109, 105, 111, 107, 97] => lookup_904_38_26(acc),
            [116, 115, 117, 109, 97, 103, 111, 105] => lookup_904_38_27(acc),
            [102, 117, 106, 105, 111, 107, 97] => lookup_904_38_28(acc),
            [115, 104, 105, 98, 117, 107, 97, 119, 97] => lookup_904_38_29(acc),
            [110, 97, 103, 97, 110, 111, 104, 97, 114, 97] => lookup_904_38_30(acc),
            [116, 97, 107, 97, 121, 97, 109, 97] => lookup_904_38_31(acc),
            [99, 104, 105, 121, 111, 100, 97] => lookup_904_38_32(acc),
            [115, 104, 105, 110, 116, 111] => lookup_904_38_33(acc),
            [111, 105, 122, 117, 109, 105] => lookup_904_38_34(acc),
            [107, 97, 116, 97, 115, 104, 105, 110, 97] => lookup_904_38_35(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_41_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_41_1(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_41<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_904_41_1(acc),
            wild => lookup_904_41_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_904_42_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_42_1(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_42<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_904_42_1(acc),
            wild => lookup_904_42_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_904_43_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_43_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_43_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_43_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_43_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_43_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_43_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_43_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_43_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_43_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_43_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_43_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_43_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_43_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_43_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_43_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_43_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_43_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_43_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_43_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_43_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_43_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_43_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_43_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_43_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_43_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_43_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_43_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_43_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_43_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_43_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_43<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [117, 106, 105] => lookup_904_43_0(acc),
            [105, 110, 101] => lookup_904_43_1(acc),
            [97, 121, 97, 98, 101] => lookup_904_43_2(acc),
            [107, 105, 122, 117] => lookup_904_43_3(acc),
            [107, 121, 111, 116, 97, 110, 103, 111] => lookup_904_43_4(acc),
            [110, 97, 103, 97, 111, 107, 97, 107, 121, 111] => lookup_904_43_5(acc),
            [107, 121, 111, 116, 97, 109, 98, 97] => lookup_904_43_6(acc),
            [107, 97, 109, 111] => lookup_904_43_7(acc),
            [109, 105, 121, 97, 122, 117] => lookup_904_43_8(acc),
            [117, 106, 105, 116, 97, 119, 97, 114, 97] => lookup_904_43_9(acc),
            [121, 97, 119, 97, 116, 97] => lookup_904_43_10(acc),
            [105, 100, 101] => lookup_904_43_11(acc),
            [109, 97, 105, 122, 117, 114, 117] => lookup_904_43_12(acc),
            [104, 105, 103, 97, 115, 104, 105, 121, 97, 109, 97] => lookup_904_43_13(acc),
            [107, 97, 109, 101, 111, 107, 97] => lookup_904_43_14(acc),
            [110, 97, 107, 97, 103, 121, 111] => lookup_904_43_15(acc),
            [110, 97, 110, 116, 97, 110] => lookup_904_43_16(acc),
            [121, 97, 109, 97, 115, 104, 105, 110, 97] => lookup_904_43_17(acc),
            [107, 117, 109, 105, 121, 97, 109, 97] => lookup_904_43_18(acc),
            [109, 105, 110, 97, 109, 105, 121, 97, 109, 97, 115, 104, 105, 114, 111] => {
                lookup_904_43_19(acc)
            }
            [116, 97, 110, 97, 98, 101] => lookup_904_43_20(acc),
            [106, 111, 121, 111] => lookup_904_43_21(acc),
            [109, 117, 107, 111] => lookup_904_43_22(acc),
            [102, 117, 107, 117, 99, 104, 105, 121, 97, 109, 97] => lookup_904_43_23(acc),
            [107, 121, 111, 116, 97, 110, 97, 98, 101] => lookup_904_43_24(acc),
            [109, 105, 110, 97, 109, 105] => lookup_904_43_25(acc),
            [115, 101, 105, 107, 97] => lookup_904_43_26(acc),
            [119, 97, 122, 117, 107, 97] => lookup_904_43_27(acc),
            [111, 121, 97, 109, 97, 122, 97, 107, 105] => lookup_904_43_28(acc),
            [107, 105, 116, 97] => lookup_904_43_29(acc),
            [115, 97, 107, 121, 111] => lookup_904_43_30(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_46_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_46_1(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_46<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_904_46_1(acc),
            wild => lookup_904_46_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_904_47_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_47_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_47_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_47_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_47_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_47_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_47_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_47_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_47_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_47_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_47_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_47_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_47_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_47_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_47_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_47<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 104, 97, 109, 97] => lookup_904_47_0(acc),
            [111, 104, 105] => lookup_904_47_1(acc),
            [111, 98, 97, 109, 97] => lookup_904_47_2(acc),
            [111, 110, 111] => lookup_904_47_3(acc),
            [102, 117, 107, 117, 105] => lookup_904_47_4(acc),
            [105, 107, 101, 100, 97] => lookup_904_47_5(acc),
            [116, 97, 107, 97, 104, 97, 109, 97] => lookup_904_47_6(acc),
            [107, 97, 116, 115, 117, 121, 97, 109, 97] => lookup_904_47_7(acc),
            [101, 99, 104, 105, 122, 101, 110] => lookup_904_47_8(acc),
            [119, 97, 107, 97, 115, 97] => lookup_904_47_9(acc),
            [101, 105, 104, 101, 105, 106, 105] => lookup_904_47_10(acc),
            [109, 105, 110, 97, 109, 105, 101, 99, 104, 105, 122, 101, 110] => {
                lookup_904_47_11(acc)
            }
            [116, 115, 117, 114, 117, 103, 97] => lookup_904_47_12(acc),
            [115, 97, 107, 97, 105] => lookup_904_47_13(acc),
            [115, 97, 98, 97, 101] => lookup_904_47_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_50_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_50_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_50_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_50_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_50_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_50_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_50_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_50_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_50_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_50_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_50_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_50_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_50_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_50_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_50_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_50_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_50_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_50<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 97, 116, 115, 117, 115, 104, 105, 103, 101] => lookup_904_50_0(acc),
            [115, 97, 110, 97, 103, 111, 99, 104, 105] => lookup_904_50_1(acc),
            [119, 97, 106, 105, 107, 105] => lookup_904_50_2(acc),
            [107, 97, 105, 110, 97, 110] => lookup_904_50_3(acc),
            [116, 111, 107, 117, 115, 104, 105, 109, 97] => lookup_904_50_4(acc),
            [110, 97, 107, 97, 103, 97, 119, 97] => lookup_904_50_5(acc),
            [105, 116, 97, 110, 111] => lookup_904_50_6(acc),
            [109, 105, 121, 111, 115, 104, 105] => lookup_904_50_7(acc),
            [110, 97, 114, 117, 116, 111] => lookup_904_50_8(acc),
            [105, 99, 104, 105, 98, 97] => lookup_904_50_9(acc),
            [109, 105, 110, 97, 109, 105] => lookup_904_50_10(acc),
            [97, 105, 122, 117, 109, 105] => lookup_904_50_11(acc),
            [109, 117, 103, 105] => lookup_904_50_12(acc),
            [109, 105, 109, 97] => lookup_904_50_13(acc),
            [107, 111, 109, 97, 116, 115, 117, 115, 104, 105, 109, 97] => lookup_904_50_14(acc),
            [97, 110, 97, 110] => lookup_904_50_15(acc),
            [115, 104, 105, 115, 104, 105, 107, 117, 105] => lookup_904_50_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_52_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_52_1(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_52<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_904_52_1(acc),
            wild => lookup_904_52_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_904_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_54_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_54_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_54_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_54_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_54_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_54_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_54_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_54_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_54_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_54_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_54_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_54_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_54_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_54_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_54_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_54_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_54_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_54_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_54_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_54_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_54_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_54_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_54_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_54_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_54_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_54_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_54_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_54_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_54_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_54_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_54_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_54<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 105, 100, 97, 107, 97] => lookup_904_54_0(acc),
            [110, 97, 107, 97, 109, 117, 114, 97] => lookup_904_54_1(acc),
            [111, 99, 104, 105] => lookup_904_54_2(acc),
            [104, 105, 103, 97, 115, 104, 105, 116, 115, 117, 110, 111] => lookup_904_54_3(acc),
            [110, 97, 110, 107, 111, 107, 117] => lookup_904_54_4(acc),
            [115, 97, 107, 97, 119, 97] => lookup_904_54_5(acc),
            [97, 107, 105] => lookup_904_54_6(acc),
            [109, 111, 116, 111, 121, 97, 109, 97] => lookup_904_54_7(acc),
            [111, 107, 97, 119, 97] => lookup_904_54_8(acc),
            [121, 117, 115, 117, 104, 97, 114, 97] => lookup_904_54_9(acc),
            [117, 109, 97, 106, 105] => lookup_904_54_10(acc),
            [109, 117, 114, 111, 116, 111] => lookup_904_54_11(acc),
            [107, 111, 99, 104, 105] => lookup_904_54_12(acc),
            [110, 97, 104, 97, 114, 105] => lookup_904_54_13(acc),
            [116, 111, 115, 97, 115, 104, 105, 109, 105, 122, 117] => lookup_904_54_14(acc),
            [107, 97, 103, 97, 109, 105] => lookup_904_54_15(acc),
            [111, 116, 115, 117, 107, 105] => lookup_904_54_16(acc),
            [116, 111, 115, 97] => lookup_904_54_17(acc),
            [115, 117, 115, 97, 107, 105] => lookup_904_54_18(acc),
            [116, 111, 121, 111] => lookup_904_54_19(acc),
            [109, 105, 104, 97, 114, 97] => lookup_904_54_20(acc),
            [116, 115, 117, 110, 111] => lookup_904_54_21(acc),
            [110, 105, 121, 111, 100, 111, 103, 97, 119, 97] => lookup_904_54_22(acc),
            [107, 97, 109, 105] => lookup_904_54_23(acc),
            [105, 110, 111] => lookup_904_54_24(acc),
            [110, 105, 115, 104, 105, 116, 111, 115, 97] => lookup_904_54_25(acc),
            [115, 117, 107, 117, 109, 111] => lookup_904_54_26(acc),
            [121, 97, 115, 117, 100, 97] => lookup_904_54_27(acc),
            [103, 101, 105, 115, 101, 105] => lookup_904_54_28(acc),
            [111, 116, 111, 121, 111] => lookup_904_54_29(acc),
            [107, 105, 116, 97, 103, 97, 119, 97] => lookup_904_54_30(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 97, 109, 97, 116, 115, 117, 107, 117, 114, 105] => lookup_904_57_0(acc),
            [109, 111, 114, 105, 121, 97] => lookup_904_57_1(acc),
            [106, 111, 115, 111] => lookup_904_57_2(acc),
            [107, 97, 115, 104, 105, 109, 97] => lookup_904_57_3(acc),
            [105, 110, 97] => lookup_904_57_4(acc),
            [109, 105, 116, 111] => lookup_904_57_5(acc),
            [115, 104, 105, 109, 111, 116, 115, 117, 109, 97] => lookup_904_57_6(acc),
            [107, 97, 115, 117, 109, 105, 103, 97, 117, 114, 97] => lookup_904_57_7(acc),
            [115, 104, 105, 114, 111, 115, 97, 116, 111] => lookup_904_57_8(acc),
            [105, 116, 97, 107, 111] => lookup_904_57_9(acc),
            [99, 104, 105, 107, 117, 115, 101, 105] => lookup_904_57_10(acc),
            [115, 117, 105, 102, 117] => lookup_904_57_11(acc),
            [107, 97, 109, 105, 115, 117] => lookup_904_57_12(acc),
            [115, 111, 119, 97] => lookup_904_57_13(acc),
            [107, 97, 115, 97, 109, 97] => lookup_904_57_14(acc),
            [116, 115, 117, 99, 104, 105, 117, 114, 97] => lookup_904_57_15(acc),
            [102, 117, 106, 105, 115, 104, 105, 114, 111] => lookup_904_57_16(acc),
            [116, 111, 107, 97, 105] => lookup_904_57_17(acc),
            [104, 105, 116, 97, 99, 104, 105] => lookup_904_57_18(acc),
            [105, 98, 97, 114, 97, 107, 105] => lookup_904_57_19(acc),
            [117, 99, 104, 105, 104, 97, 114, 97] => lookup_904_57_20(acc),
            [117, 115, 104, 105, 107, 117] => lookup_904_57_21(acc),
            [121, 97, 119, 97, 114, 97] => lookup_904_57_22(acc),
            [111, 109, 105, 116, 97, 109, 97] => lookup_904_57_23(acc),
            [105, 110, 97, 115, 104, 105, 107, 105] => lookup_904_57_24(acc),
            [111, 103, 97, 119, 97] => lookup_904_57_25(acc),
            [115, 97, 107, 97, 105] => lookup_904_57_26(acc),
            [115, 97, 107, 117, 114, 97, 103, 97, 119, 97] => lookup_904_57_27(acc),
            [110, 97, 107, 97] => lookup_904_57_28(acc),
            [116, 111, 114, 105, 100, 101] => lookup_904_57_29(acc),
            [97, 109, 105] => lookup_904_57_30(acc),
            [104, 105, 116, 97, 99, 104, 105, 110, 97, 107, 97] => lookup_904_57_31(acc),
            [104, 105, 116, 97, 99, 104, 105, 111, 109, 105, 121, 97] => lookup_904_57_32(acc),
            [116, 111, 110, 101] => lookup_904_57_33(acc),
            [98, 97, 110, 100, 111] => lookup_904_57_34(acc),
            [104, 105, 116, 97, 99, 104, 105, 111, 116, 97] => lookup_904_57_35(acc),
            [109, 105, 104, 111] => lookup_904_57_36(acc),
            [111, 97, 114, 97, 105] => lookup_904_57_37(acc),
            [116, 111, 109, 111, 98, 101] => lookup_904_57_38(acc),
            [121, 117, 107, 105] => lookup_904_57_39(acc),
            [115, 104, 105, 109, 111, 100, 97, 116, 101] => lookup_904_57_40(acc),
            [116, 115, 117, 107, 117, 98, 97] => lookup_904_57_41(acc),
            [114, 121, 117, 103, 97, 115, 97, 107, 105] => lookup_904_57_42(acc),
            [116, 97, 107, 97, 104, 97, 103, 105] => lookup_904_57_43(acc),
            [110, 97, 109, 101, 103, 97, 116, 97] => lookup_904_57_44(acc),
            [121, 97, 99, 104, 105, 121, 111] => lookup_904_57_45(acc),
            [97, 115, 97, 104, 105] => lookup_904_57_46(acc),
            [121, 97, 109, 97, 103, 97, 116, 97] => lookup_904_57_47(acc),
            [105, 119, 97, 109, 97] => lookup_904_57_48(acc),
            [107, 111, 103, 97] => lookup_904_57_49(acc),
            [100, 97, 105, 103, 111] => lookup_904_57_50(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_58_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_58_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_58_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_58_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_58_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_58_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_58_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_58_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_58_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_58_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_58_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_58_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_58_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_58_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_58_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_58<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 97, 110, 110, 111] => lookup_904_58_0(acc),
            [122, 101, 110, 116, 115, 117, 106, 105] => lookup_904_58_1(acc),
            [107, 111, 116, 111, 104, 105, 114, 97] => lookup_904_58_2(acc),
            [109, 105, 116, 111, 121, 111] => lookup_904_58_3(acc),
            [116, 97, 107, 97, 109, 97, 116, 115, 117] => lookup_904_58_4(acc),
            [115, 97, 110, 117, 107, 105] => lookup_904_58_5(acc),
            [97, 121, 97, 103, 97, 119, 97] => lookup_904_58_6(acc),
            [104, 105, 103, 97, 115, 104, 105, 107, 97, 103, 97, 119, 97] => lookup_904_58_7(acc),
            [117, 116, 97, 122, 117] => lookup_904_58_8(acc),
            [107, 97, 110, 111, 110, 106, 105] => lookup_904_58_9(acc),
            [109, 97, 114, 117, 103, 97, 109, 101] => lookup_904_58_10(acc),
            [110, 97, 111, 115, 104, 105, 109, 97] => lookup_904_58_11(acc),
            [116, 111, 110, 111, 115, 104, 111] => lookup_904_58_12(acc),
            [117, 99, 104, 105, 110, 111, 109, 105] => lookup_904_58_13(acc),
            [116, 97, 100, 111, 116, 115, 117] => lookup_904_58_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_63_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_63_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_63_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_63_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_63_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_63_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_63_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_63_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_63_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_63_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_63_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_63_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_63_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_63_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_63_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_63_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_63_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_63_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_63_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_63_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_63_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_63_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_63_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_63_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_63_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_63_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_63_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_63_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_63<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 116, 97, 110, 101] => lookup_904_63_0(acc),
            [105, 107, 97, 119, 97] => lookup_904_63_1(acc),
            [109, 111, 114, 105, 121, 111, 115, 104, 105] => lookup_904_63_2(acc),
            [121, 111, 107, 111, 116, 101] => lookup_904_63_3(acc),
            [104, 111, 110, 106, 111] => lookup_904_63_4(acc),
            [102, 117, 106, 105, 115, 97, 116, 111] => lookup_904_63_5(acc),
            [103, 111, 106, 111, 109, 101] => lookup_904_63_6(acc),
            [107, 105, 116, 97, 97, 107, 105, 116, 97] => lookup_904_63_7(acc),
            [121, 117, 114, 105, 104, 111, 110, 106, 111] => lookup_904_63_8(acc),
            [107, 97, 109, 105, 107, 111, 97, 110, 105] => lookup_904_63_9(acc),
            [110, 105, 107, 97, 104, 111] => lookup_904_63_10(acc),
            [104, 97, 112, 112, 111, 117] => lookup_904_63_11(acc),
            [104, 111, 110, 106, 121, 111] => lookup_904_63_12(acc),
            [107, 97, 109, 105, 111, 107, 97] => lookup_904_63_13(acc),
            [111, 100, 97, 116, 101] => lookup_904_63_14(acc),
            [111, 103, 97, 116, 97] => lookup_904_63_15(acc),
            [107, 97, 116, 97, 103, 97, 109, 105] => lookup_904_63_16(acc),
            [110, 111, 115, 104, 105, 114, 111] => lookup_904_63_17(acc),
            [104, 105, 103, 97, 115, 104, 105, 110, 97, 114, 117, 115, 101] => {
                lookup_904_63_18(acc)
            }
            [109, 105, 115, 97, 116, 111] => lookup_904_63_19(acc),
            [115, 101, 109, 98, 111, 107, 117] => lookup_904_63_20(acc),
            [107, 121, 111, 119, 97] => lookup_904_63_21(acc),
            [100, 97, 105, 115, 101, 110] => lookup_904_63_22(acc),
            [97, 107, 105, 116, 97] => lookup_904_63_23(acc),
            [111, 103, 97] => lookup_904_63_24(acc),
            [107, 111, 115, 97, 107, 97] => lookup_904_63_25(acc),
            [104, 97, 99, 104, 105, 114, 111, 103, 97, 116, 97] => lookup_904_63_26(acc),
            [107, 97, 122, 117, 110, 111] => lookup_904_63_27(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_64_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_64_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_64_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_64_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_64_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_64_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_64_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_64_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_64_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_64_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_64_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_64_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_64_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_64_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_64_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_64_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_64_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_64_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_64_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_64_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_64_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_64_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_64_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_64<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 97, 115, 104, 105, 107, 105] => lookup_904_64_0(acc),
            [121, 97, 116, 115, 117, 115, 104, 105, 114, 111] => lookup_904_64_1(acc),
            [111, 103, 117, 110, 105] => lookup_904_64_2(acc),
            [117, 107, 105] => lookup_904_64_3(acc),
            [97, 115, 111] => lookup_904_64_4(acc),
            [117, 116, 111] => lookup_904_64_5(acc),
            [110, 97, 103, 97, 115, 117] => lookup_904_64_6(acc),
            [109, 105, 102, 117, 110, 101] => lookup_904_64_7(acc),
            [107, 105, 107, 117, 99, 104, 105] => lookup_904_64_8(acc),
            [121, 97, 109, 97, 103, 97] => lookup_904_64_9(acc),
            [103, 121, 111, 107, 117, 116, 111] => lookup_904_64_10(acc),
            [115, 117, 109, 111, 116, 111] => lookup_904_64_11(acc),
            [107, 97, 109, 105, 97, 109, 97, 107, 117, 115, 97] => lookup_904_64_12(acc),
            [109, 105, 110, 97, 109, 97, 116, 97] => lookup_904_64_13(acc),
            [116, 97, 107, 97, 109, 111, 114, 105] => lookup_904_64_14(acc),
            [97, 109, 97, 107, 117, 115, 97] => lookup_904_64_15(acc),
            [97, 114, 97, 111] => lookup_904_64_16(acc),
            [111, 122, 117] => lookup_904_64_17(acc),
            [121, 97, 109, 97, 116, 111] => lookup_904_64_18(acc),
            [110, 105, 115, 104, 105, 104, 97, 114, 97] => lookup_904_64_19(acc),
            [99, 104, 111, 121, 111] => lookup_904_64_20(acc),
            [107, 117, 109, 97, 109, 111, 116, 111] => lookup_904_64_21(acc),
            [109, 105, 110, 97, 109, 105, 111, 103, 117, 110, 105] => lookup_904_64_22(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_67_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_67_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_67_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_67_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_67_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_67_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_67_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_67_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_67_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_67_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_67_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_67_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_67_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_67_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_67_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_67_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_67_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_67_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_67_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_67_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_67_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_67_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_67_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_67_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_67_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_67_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_67_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_67_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_67_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_67<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 105, 100, 97, 107, 97] => lookup_904_67_0(acc),
            [115, 104, 105, 110, 103, 117] => lookup_904_67_1(acc),
            [103, 111, 98, 111] => lookup_904_67_2(acc),
            [104, 97, 115, 104, 105, 109, 111, 116, 111] => lookup_904_67_3(acc),
            [107, 97, 109, 105, 116, 111, 110, 100, 97] => lookup_904_67_4(acc),
            [107, 111, 122, 97, 103, 97, 119, 97] => lookup_904_67_5(acc),
            [97, 114, 105, 100, 97] => lookup_904_67_6(acc),
            [97, 114, 105, 100, 97, 103, 97, 119, 97] => lookup_904_67_7(acc),
            [107, 111, 122, 97] => lookup_904_67_8(acc),
            [104, 105, 114, 111, 103, 97, 119, 97] => lookup_904_67_9(acc),
            [109, 105, 115, 97, 116, 111] => lookup_904_67_10(acc),
            [107, 105, 109, 105, 110, 111] => lookup_904_67_11(acc),
            [105, 119, 97, 100, 101] => lookup_904_67_12(acc),
            [116, 97, 105, 106, 105] => lookup_904_67_13(acc),
            [107, 111, 121, 97] => lookup_904_67_14(acc),
            [107, 117, 100, 111, 121, 97, 109, 97] => lookup_904_67_15(acc),
            [105, 110, 97, 109, 105] => lookup_904_67_16(acc),
            [109, 105, 104, 97, 109, 97] => lookup_904_67_17(acc),
            [115, 104, 105, 114, 97, 104, 97, 109, 97] => lookup_904_67_18(acc),
            [119, 97, 107, 97, 121, 97, 109, 97] => lookup_904_67_19(acc),
            [107, 105, 110, 111, 107, 97, 119, 97] => lookup_904_67_20(acc),
            [107, 97, 105, 110, 97, 110] => lookup_904_67_21(acc),
            [107, 97, 116, 115, 117, 114, 97, 103, 105] => lookup_904_67_22(acc),
            [121, 117, 97, 115, 97] => lookup_904_67_23(acc),
            [121, 117, 114, 97] => lookup_904_67_24(acc),
            [110, 97, 99, 104, 105, 107, 97, 116, 115, 117, 117, 114, 97] => lookup_904_67_25(acc),
            [116, 97, 110, 97, 98, 101] => lookup_904_67_26(acc),
            [107, 117, 115, 104, 105, 109, 111, 116, 111] => lookup_904_67_27(acc),
            [107, 105, 116, 97, 121, 97, 109, 97] => lookup_904_67_28(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_68_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_68_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_68_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_68_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_68_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_68_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_68_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_68_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_68_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_68_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_68_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_68_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_68_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_68_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_68_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_68_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_68_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_68_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_68_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_68_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_68_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_68_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_68_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_68_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_68<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 110, 97, 109, 105] => lookup_904_68_0(acc),
            [116, 111, 103, 97] => lookup_904_68_1(acc),
            [116, 111, 121, 97, 109, 97] => lookup_904_68_2(acc),
            [102, 117, 110, 97, 104, 97, 115, 104, 105] => lookup_904_68_3(acc),
            [105, 109, 105, 122, 117] => lookup_904_68_4(acc),
            [102, 117, 107, 117, 109, 105, 116, 115, 117] => lookup_904_68_5(acc),
            [106, 111, 104, 97, 110, 97] => lookup_904_68_6(acc),
            [110, 121, 117, 122, 101, 110] => lookup_904_68_7(acc),
            [107, 117, 114, 111, 98, 101] => lookup_904_68_8(acc),
            [116, 97, 107, 97, 111, 107, 97] => lookup_904_68_9(acc),
            [111, 121, 97, 98, 101] => lookup_904_68_10(acc),
            [116, 97, 116, 101, 121, 97, 109, 97] => lookup_904_68_11(acc),
            [116, 111, 110, 97, 109, 105] => lookup_904_68_12(acc),
            [110, 97, 110, 116, 111] => lookup_904_68_13(acc),
            [117, 110, 97, 122, 117, 107, 105] => lookup_904_68_14(acc),
            [121, 97, 109, 97, 100, 97] => lookup_904_68_15(acc),
            [104, 105, 109, 105] => lookup_904_68_16(acc),
            [97, 115, 97, 104, 105] => lookup_904_68_17(acc),
            [117, 111, 122, 117] => lookup_904_68_18(acc),
            [116, 97, 105, 114, 97] => lookup_904_68_19(acc),
            [110, 97, 109, 101, 114, 105, 107, 97, 119, 97] => lookup_904_68_20(acc),
            [110, 97, 107, 97, 110, 105, 105, 107, 97, 119, 97] => lookup_904_68_21(acc),
            [107, 97, 109, 105, 105, 99, 104, 105] => lookup_904_68_22(acc),
            [102, 117, 99, 104, 117] => lookup_904_68_23(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_69_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_69_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_69_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_69_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_69_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_69_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_69_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_69_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_69_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_69_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_69_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_69_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_69_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_69_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_69_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_69_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_69<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 105, 107, 97, 114, 105] => lookup_904_69_0(acc),
            [105, 119, 97, 107, 117, 110, 105] => lookup_904_69_1(acc),
            [109, 105, 116, 111, 117] => lookup_904_69_2(acc),
            [116, 111, 121, 111, 116, 97] => lookup_904_69_3(acc),
            [117, 98, 101] => lookup_904_69_4(acc),
            [121, 117, 117] => lookup_904_69_5(acc),
            [104, 97, 103, 105] => lookup_904_69_6(acc),
            [115, 104, 117, 110, 97, 110] => lookup_904_69_7(acc),
            [115, 104, 105, 109, 111, 110, 111, 115, 101, 107, 105] => lookup_904_69_8(acc),
            [104, 111, 102, 117] => lookup_904_69_9(acc),
            [107, 117, 100, 97, 109, 97, 116, 115, 117] => lookup_904_69_10(acc),
            [110, 97, 103, 97, 116, 111] => lookup_904_69_11(acc),
            [97, 98, 117] => lookup_904_69_12(acc),
            [111, 115, 104, 105, 109, 97] => lookup_904_69_13(acc),
            [116, 97, 98, 117, 115, 101] => lookup_904_69_14(acc),
            [116, 111, 107, 117, 121, 97, 109, 97] => lookup_904_69_15(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_78_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_78_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_78_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_78_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_78_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_78_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_78_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_78_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_78_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_78_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_78_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_78_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_78_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_78_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_78_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_78_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_78_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_78_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_78_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_78_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_78_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_78_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_78<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 97, 109, 105, 107, 97, 116, 97] => lookup_904_78_0(acc),
            [107, 97, 109, 105, 106, 105, 109, 97] => lookup_904_78_1(acc),
            [107, 105, 104, 111, 107, 117] => lookup_904_78_2(acc),
            [107, 117, 109, 97, 107, 111, 103, 101, 110] => lookup_904_78_3(acc),
            [97, 105, 110, 97, 110] => lookup_904_78_4(acc),
            [105, 107, 97, 116, 97] => lookup_904_78_5(acc),
            [105, 121, 111] => lookup_904_78_6(acc),
            [105, 109, 97, 98, 97, 114, 105] => lookup_904_78_7(acc),
            [109, 97, 116, 115, 117, 121, 97, 109, 97] => lookup_904_78_8(acc),
            [115, 101, 105, 121, 111] => lookup_904_78_9(acc),
            [115, 104, 105, 107, 111, 107, 117, 99, 104, 117, 111] => lookup_904_78_10(acc),
            [116, 111, 98, 101] => lookup_904_78_11(acc),
            [117, 119, 97, 106, 105, 109, 97] => lookup_904_78_12(acc),
            [109, 97, 115, 97, 107, 105] => lookup_904_78_13(acc),
            [117, 99, 104, 105, 107, 111] => lookup_904_78_14(acc),
            [121, 97, 119, 97, 116, 97, 104, 97, 109, 97] => lookup_904_78_15(acc),
            [111, 122, 117] => lookup_904_78_16(acc),
            [115, 97, 105, 106, 111] => lookup_904_78_17(acc),
            [110, 105, 105, 104, 97, 109, 97] => lookup_904_78_18(acc),
            [116, 111, 111, 110] => lookup_904_78_19(acc),
            [104, 111, 110, 97, 105] => lookup_904_78_20(acc),
            [109, 97, 116, 115, 117, 110, 111] => lookup_904_78_21(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 119, 97, 107, 117, 114, 97] => lookup_904_81_0(acc),
            [97, 109, 97] => lookup_904_81_1(acc),
            [104, 97, 110, 100, 97] => lookup_904_81_2(acc),
            [104, 97, 122, 117] => lookup_904_81_3(acc),
            [107, 111, 110, 97, 110] => lookup_904_81_4(acc),
            [110, 105, 115, 115, 104, 105, 110] => lookup_904_81_5(acc),
            [116, 111, 103, 111] => lookup_904_81_6(acc),
            [107, 97, 110, 105, 101] => lookup_904_81_7(acc),
            [116, 111, 121, 111, 110, 101] => lookup_904_81_8(acc),
            [104, 105, 103, 97, 115, 104, 105, 117, 114, 97] => lookup_904_81_9(acc),
            [105, 115, 115, 104, 105, 107, 105] => lookup_904_81_10(acc),
            [111, 104, 97, 114, 117] => lookup_904_81_11(acc),
            [102, 117, 115, 111] => lookup_904_81_12(acc),
            [109, 105, 121, 111, 115, 104, 105] => lookup_904_81_13(acc),
            [97, 110, 106, 111] => lookup_904_81_14(acc),
            [111, 119, 97, 114, 105, 97, 115, 97, 104, 105] => lookup_904_81_15(acc),
            [116, 111, 107, 97, 105] => lookup_904_81_16(acc),
            [97, 115, 117, 107, 101] => lookup_904_81_17(acc),
            [97, 105, 115, 97, 105] => lookup_904_81_18(acc),
            [111, 98, 117] => lookup_904_81_19(acc),
            [115, 104, 105, 116, 97, 114, 97] => lookup_904_81_20(acc),
            [107, 105, 121, 111, 115, 117] => lookup_904_81_21(acc),
            [115, 104, 105, 107, 97, 116, 115, 117] => lookup_904_81_22(acc),
            [109, 105, 104, 97, 109, 97] => lookup_904_81_23(acc),
            [99, 104, 105, 116, 97] => lookup_904_81_24(acc),
            [116, 111, 98, 105, 115, 104, 105, 109, 97] => lookup_904_81_25(acc),
            [107, 105, 114, 97] => lookup_904_81_26(acc),
            [116, 111, 121, 111, 116, 97] => lookup_904_81_27(acc),
            [116, 111, 121, 111, 104, 97, 115, 104, 105] => lookup_904_81_28(acc),
            [99, 104, 105, 114, 121, 117] => lookup_904_81_29(acc),
            [107, 111, 109, 97, 107, 105] => lookup_904_81_30(acc),
            [116, 111, 101, 105] => lookup_904_81_31(acc),
            [116, 111, 107, 111, 110, 97, 109, 101] => lookup_904_81_32(acc),
            [116, 111, 121, 111, 107, 97, 119, 97] => lookup_904_81_33(acc),
            [116, 115, 117, 115, 104, 105, 109, 97] => lookup_904_81_34(acc),
            [107, 97, 114, 105, 121, 97] => lookup_904_81_35(acc),
            [105, 110, 97, 122, 97, 119, 97] => lookup_904_81_36(acc),
            [111, 103, 117, 99, 104, 105] => lookup_904_81_37(acc),
            [116, 97, 107, 97, 104, 97, 109, 97] => lookup_904_81_38(acc),
            [107, 97, 115, 117, 103, 97, 105] => lookup_904_81_39(acc),
            [115, 104, 105, 110, 115, 104, 105, 114, 111] => lookup_904_81_40(acc),
            [116, 97, 104, 97, 114, 97] => lookup_904_81_41(acc),
            [111, 107, 97, 122, 97, 107, 105] => lookup_904_81_42(acc),
            [105, 110, 117, 121, 97, 109, 97] => lookup_904_81_43(acc),
            [104, 101, 107, 105, 110, 97, 110] => lookup_904_81_44(acc),
            [105, 99, 104, 105, 110, 111, 109, 105, 121, 97] => lookup_904_81_45(acc),
            [107, 111, 116, 97] => lookup_904_81_46(acc),
            [103, 97, 109, 97, 103, 111, 114, 105] => lookup_904_81_47(acc),
            [110, 105, 115, 104, 105, 111] => lookup_904_81_48(acc),
            [115, 101, 116, 111] => lookup_904_81_49(acc),
            [116, 111, 121, 111, 97, 107, 101] => lookup_904_81_50(acc),
            [121, 97, 116, 111, 109, 105] => lookup_904_81_51(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_83_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_83_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_83_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_83_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_83_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_83_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_83_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_83_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_83_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_83_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_83_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_83_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_83_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_83_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_83_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_83_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_83_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_83_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_83_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_83_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_83_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_83_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_83_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_83_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_83_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_83_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_83_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_83_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_83_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_83_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_83_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_83_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_83_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_83_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_83<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [121, 111, 110, 101, 122, 97, 119, 97] => lookup_904_83_0(acc),
            [111, 105, 115, 104, 105, 100, 97] => lookup_904_83_1(acc),
            [109, 105, 107, 97, 119, 97] => lookup_904_83_2(acc),
            [116, 101, 110, 100, 111] => lookup_904_83_3(acc),
            [105, 105, 100, 101] => lookup_904_83_4(acc),
            [115, 97, 107, 101, 103, 97, 119, 97] => lookup_904_83_5(acc),
            [111, 104, 107, 117, 114, 97] => lookup_904_83_6(acc),
            [107, 97, 104, 111, 107, 117] => lookup_904_83_7(acc),
            [107, 97, 119, 97, 110, 105, 115, 104, 105] => lookup_904_83_8(acc),
            [115, 104, 105, 110, 106, 111] => lookup_904_83_9(acc),
            [115, 97, 103, 97, 101] => lookup_904_83_10(acc),
            [107, 97, 110, 101, 121, 97, 109, 97] => lookup_904_83_11(acc),
            [115, 104, 111, 110, 97, 105] => lookup_904_83_12(acc),
            [104, 105, 103, 97, 115, 104, 105, 110, 101] => lookup_904_83_13(acc),
            [110, 97, 110, 121, 111] => lookup_904_83_14(acc),
            [111, 98, 97, 110, 97, 122, 97, 119, 97] => lookup_904_83_15(acc),
            [121, 97, 109, 97, 110, 111, 98, 101] => lookup_904_83_16(acc),
            [109, 117, 114, 97, 121, 97, 109, 97] => lookup_904_83_17(acc),
            [109, 97, 109, 117, 114, 111, 103, 97, 119, 97] => lookup_904_83_18(acc),
            [115, 97, 107, 97, 116, 97] => lookup_904_83_19(acc),
            [107, 97, 109, 105, 110, 111, 121, 97, 109, 97] => lookup_904_83_20(acc),
            [111, 103, 117, 110, 105] => lookup_904_83_21(acc),
            [116, 115, 117, 114, 117, 111, 107, 97] => lookup_904_83_22(acc),
            [121, 117, 122, 97] => lookup_904_83_23(acc),
            [110, 97, 103, 97, 105] => lookup_904_83_24(acc),
            [115, 104, 105, 114, 97, 116, 97, 107, 97] => lookup_904_83_25(acc),
            [110, 105, 115, 104, 105, 107, 97, 119, 97] => lookup_904_83_26(acc),
            [97, 115, 97, 104, 105] => lookup_904_83_27(acc),
            [111, 101] => lookup_904_83_28(acc),
            [116, 111, 122, 97, 119, 97] => lookup_904_83_29(acc),
            [121, 97, 109, 97, 103, 97, 116, 97] => lookup_904_83_30(acc),
            [102, 117, 110, 97, 103, 97, 116, 97] => lookup_904_83_31(acc),
            [110, 97, 107, 97, 121, 97, 109, 97] => lookup_904_83_32(acc),
            [116, 97, 107, 97, 104, 97, 116, 97] => lookup_904_83_33(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_87_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_87_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_87_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_87_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_87_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_87_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_87_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_87_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_87_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_87_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_87_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_87_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_87_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_87_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_87_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_87_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_87_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_87_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_87_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_87_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_87_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_87_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_87_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_87_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_87_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_87_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_87_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_87_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_87_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_87_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_87<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [117, 100, 111, 110, 111] => lookup_904_87_0(acc),
            [121, 111, 107, 107, 97, 105, 99, 104, 105] => lookup_904_87_1(acc),
            [107, 105, 115, 111, 115, 97, 107, 105] => lookup_904_87_2(acc),
            [107, 105, 119, 97] => lookup_904_87_3(acc),
            [117, 114, 101, 115, 104, 105, 110, 111] => lookup_904_87_4(acc),
            [109, 105, 121, 97, 109, 97] => lookup_904_87_5(acc),
            [116, 111, 98, 97] => lookup_904_87_6(acc),
            [107, 97, 109, 101, 121, 97, 109, 97] => lookup_904_87_7(acc),
            [116, 97, 105, 107, 105] => lookup_904_87_8(acc),
            [109, 105, 115, 117, 103, 105] => lookup_904_87_9(acc),
            [115, 117, 122, 117, 107, 97] => lookup_904_87_10(acc),
            [109, 105, 104, 97, 109, 97] => lookup_904_87_11(acc),
            [116, 97, 109, 97, 107, 105] => lookup_904_87_12(acc),
            [109, 105, 110, 97, 109, 105, 105, 115, 101] => lookup_904_87_13(acc),
            [107, 111, 109, 111, 110, 111] => lookup_904_87_14(acc),
            [109, 101, 105, 119, 97] => lookup_904_87_15(acc),
            [115, 104, 105, 109, 97] => lookup_904_87_16(acc),
            [119, 97, 116, 97, 114, 97, 105] => lookup_904_87_17(acc),
            [116, 115, 117] => lookup_904_87_18(acc),
            [116, 97, 107, 105] => lookup_904_87_19(acc),
            [105, 115, 101] => lookup_904_87_20(acc),
            [107, 97, 119, 97, 103, 111, 101] => lookup_904_87_21(acc),
            [105, 110, 97, 98, 101] => lookup_904_87_22(acc),
            [107, 117, 109, 97, 110, 111] => lookup_904_87_23(acc),
            [116, 97, 100, 111] => lookup_904_87_24(acc),
            [107, 105, 104, 111] => lookup_904_87_25(acc),
            [110, 97, 98, 97, 114, 105] => lookup_904_87_26(acc),
            [97, 115, 97, 104, 105] => lookup_904_87_27(acc),
            [109, 97, 116, 115, 117, 115, 97, 107, 97] => lookup_904_87_28(acc),
            [107, 117, 119, 97, 110, 97] => lookup_904_87_29(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_88_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_88_1(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_88<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_904_88_1(acc),
            wild => lookup_904_88_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_904_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_91_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_91_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_91_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_91_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_91_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_91_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_91_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_91_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_91_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_91_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_91_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_91_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_91_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_91_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_91_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_91_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_91_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_91_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_91_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_91<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 97, 109, 105, 116, 115, 117, 101] => lookup_904_91_0(acc),
            [107, 111, 107, 111, 110, 111, 101] => lookup_904_91_1(acc),
            [104, 105, 106, 105] => lookup_904_91_2(acc),
            [107, 117, 110, 105, 115, 97, 107, 105] => lookup_904_91_3(acc),
            [104, 105, 116, 97] => lookup_904_91_4(acc),
            [116, 115, 117, 107, 117, 109, 105] => lookup_904_91_5(acc),
            [121, 117, 102, 117] => lookup_904_91_6(acc),
            [98, 117, 110, 103, 111, 111, 110, 111] => lookup_904_91_7(acc),
            [111, 105, 116, 97] => lookup_904_91_8(acc),
            [107, 117, 115, 117] => lookup_904_91_9(acc),
            [107, 117, 106, 117] => lookup_904_91_10(acc),
            [117, 115, 117, 107, 105] => lookup_904_91_11(acc),
            [98, 101, 112, 112, 117] => lookup_904_91_12(acc),
            [116, 97, 107, 101, 116, 97] => lookup_904_91_13(acc),
            [117, 115, 97] => lookup_904_91_14(acc),
            [98, 117, 110, 103, 111, 116, 97, 107, 97, 100, 97] => lookup_904_91_15(acc),
            [104, 97, 115, 97, 109, 97] => lookup_904_91_16(acc),
            [104, 105, 109, 101, 115, 104, 105, 109, 97] => lookup_904_91_17(acc),
            [115, 97, 105, 107, 105] => lookup_904_91_18(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_95_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_95_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_95_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_95_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_95_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_95_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_95_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_95_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_95_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_95_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_95_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_95_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_95_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_95_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_95_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_95_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_95_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_95_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_95_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_95_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_95_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_95_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_95_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_95_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_95_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_95_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_95_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_95_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_95_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_95_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_95_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_95_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_95_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_95_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_95_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_95_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_95_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_95_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_95<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 107, 97, 114, 117, 103, 97] => lookup_904_95_0(acc),
            [107, 97, 115, 104, 105, 98, 97] => lookup_904_95_1(acc),
            [109, 105, 121, 97, 107, 101] => lookup_904_95_2(acc),
            [111, 106, 105] => lookup_904_95_3(acc),
            [121, 111, 115, 104, 105, 110, 111] => lookup_904_95_4(acc),
            [107, 97, 119, 97, 110, 105, 115, 104, 105] => lookup_904_95_5(acc),
            [111, 117, 100, 97] => lookup_904_95_6(acc),
            [115, 104, 105, 110, 106, 111] => lookup_904_95_7(acc),
            [111, 121, 111, 100, 111] => lookup_904_95_8(acc),
            [107, 111, 114, 121, 111] => lookup_904_95_9(acc),
            [110, 97, 114, 97] => lookup_904_95_10(acc),
            [117, 100, 97] => lookup_904_95_11(acc),
            [121, 97, 109, 97, 116, 111, 107, 111, 114, 105, 121, 97, 109, 97] => {
                lookup_904_95_12(acc)
            }
            [115, 104, 105, 109, 111, 105, 99, 104, 105] => lookup_904_95_13(acc),
            [116, 97, 119, 97, 114, 97, 109, 111, 116, 111] => lookup_904_95_14(acc),
            [121, 97, 109, 97, 116, 111, 116, 97, 107, 97, 100, 97] => lookup_904_95_15(acc),
            [107, 97, 110, 109, 97, 107, 105] => lookup_904_95_16(acc),
            [107, 97, 115, 104, 105, 104, 97, 114, 97] => lookup_904_95_17(acc),
            [115, 104, 105, 109, 111, 107, 105, 116, 97, 121, 97, 109, 97] => lookup_904_95_18(acc),
            [115, 111, 110, 105] => lookup_904_95_19(acc),
            [116, 101, 110, 114, 105] => lookup_904_95_20(acc),
            [97, 110, 100, 111] => lookup_904_95_21(acc),
            [115, 97, 110, 103, 111] => lookup_904_95_22(acc),
            [105, 107, 111, 109, 97] => lookup_904_95_23(acc),
            [116, 101, 110, 107, 97, 119, 97] => lookup_904_95_24(acc),
            [107, 97, 116, 115, 117, 114, 97, 103, 105] => lookup_904_95_25(acc),
            [109, 105, 116, 115, 117, 101] => lookup_904_95_26(acc),
            [121, 97, 109, 97, 122, 111, 101] => lookup_904_95_27(acc),
            [107, 97, 109, 105, 107, 105, 116, 97, 121, 97, 109, 97] => lookup_904_95_28(acc),
            [104, 105, 103, 97, 115, 104, 105, 121, 111, 115, 104, 105, 110, 111] => {
                lookup_904_95_29(acc)
            }
            [116, 97, 107, 97, 116, 111, 114, 105] => lookup_904_95_30(acc),
            [107, 97, 119, 97, 107, 97, 109, 105] => lookup_904_95_31(acc),
            [115, 97, 107, 117, 114, 97, 105] => lookup_904_95_32(acc),
            [104, 101, 103, 117, 114, 105] => lookup_904_95_33(acc),
            [103, 111, 115, 101] => lookup_904_95_34(acc),
            [110, 111, 115, 101, 103, 97, 119, 97] => lookup_904_95_35(acc),
            [107, 97, 119, 97, 105] => lookup_904_95_36(acc),
            [107, 117, 114, 111, 116, 97, 107, 105] => lookup_904_95_37(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_100_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_100_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_100_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_100_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_100_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_100_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_100_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_100_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_100_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_100_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_100_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_100_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_100_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_100_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_100_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_100_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_100_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_100_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_100_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_100_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_100_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_100_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_100_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_100_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_100_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_100_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_100_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_100_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_100_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_100_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_100_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_100_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_100_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_100_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_100_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_100_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_100<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 97, 110, 110, 97, 109, 105] => lookup_904_100_0(acc),
            [97, 114, 97, 105] => lookup_904_100_1(acc),
            [110, 117, 109, 97, 122, 117] => lookup_904_100_2(acc),
            [105, 116, 111] => lookup_904_100_3(acc),
            [102, 117, 106, 105, 110, 111, 109, 105, 121, 97] => lookup_904_100_4(acc),
            [121, 111, 115, 104, 105, 100, 97] => lookup_904_100_5(acc),
            [102, 117, 107, 117, 114, 111, 105] => lookup_904_100_6(acc),
            [107, 97, 119, 97, 122, 117] => lookup_904_100_7(acc),
            [107, 111, 115, 97, 105] => lookup_904_100_8(acc),
            [110, 105, 115, 104, 105, 105, 122, 117] => lookup_904_100_9(acc),
            [109, 97, 107, 105, 110, 111, 104, 97, 114, 97] => lookup_904_100_10(acc),
            [115, 104, 105, 122, 117, 111, 107, 97] => lookup_904_100_11(acc),
            [105, 122, 117] => lookup_904_100_12(acc),
            [102, 117, 106, 105, 107, 97, 119, 97] => lookup_904_100_13(acc),
            [103, 111, 116, 101, 109, 98, 97] => lookup_904_100_14(acc),
            [105, 122, 117, 110, 111, 107, 117, 110, 105] => lookup_904_100_15(acc),
            [109, 105, 115, 104, 105, 109, 97] => lookup_904_100_16(acc),
            [104, 105, 103, 97, 115, 104, 105, 105, 122, 117] => lookup_904_100_17(acc),
            [105, 119, 97, 116, 97] => lookup_904_100_18(acc),
            [107, 97, 119, 97, 110, 101, 104, 111, 110] => lookup_904_100_19(acc),
            [111, 109, 97, 101, 122, 97, 107, 105] => lookup_904_100_20(acc),
            [115, 104, 105, 109, 111, 100, 97] => lookup_904_100_21(acc),
            [107, 105, 107, 117, 103, 97, 119, 97] => lookup_904_100_22(acc),
            [109, 111, 114, 105, 109, 97, 99, 104, 105] => lookup_904_100_23(acc),
            [109, 105, 110, 97, 109, 105, 105, 122, 117] => lookup_904_100_24(acc),
            [115, 104, 105, 109, 105, 122, 117] => lookup_904_100_25(acc),
            [121, 97, 105, 122, 117] => lookup_904_100_26(acc),
            [115, 104, 105, 109, 97, 100, 97] => lookup_904_100_27(acc),
            [115, 117, 115, 111, 110, 111] => lookup_904_100_28(acc),
            [102, 117, 106, 105] => lookup_904_100_29(acc),
            [104, 97, 109, 97, 109, 97, 116, 115, 117] => lookup_904_100_30(acc),
            [97, 116, 97, 109, 105] => lookup_904_100_31(acc),
            [104, 97, 105, 98, 97, 114, 97] => lookup_904_100_32(acc),
            [107, 97, 107, 101, 103, 97, 119, 97] => lookup_904_100_33(acc),
            [109, 97, 116, 115, 117, 122, 97, 107, 105] => lookup_904_100_34(acc),
            [102, 117, 106, 105, 101, 100, 97] => lookup_904_100_35(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 117, 122, 97, 107, 97] => lookup_904_103_0(acc),
            [110, 97, 107, 97, 110, 111] => lookup_904_103_1(acc),
            [111, 107, 97, 121, 97] => lookup_904_103_2(acc),
            [115, 104, 105, 109, 111, 115, 117, 119, 97] => lookup_904_103_3(acc),
            [121, 97, 115, 117, 111, 107, 97] => lookup_904_103_4(acc),
            [111, 109, 97, 99, 104, 105] => lookup_904_103_5(acc),
            [107, 111, 109, 111, 114, 111] => lookup_904_103_6(acc),
            [102, 117, 106, 105, 109, 105] => lookup_904_103_7(acc),
            [110, 97, 103, 97, 110, 111] => lookup_904_103_8(acc),
            [111, 103, 97, 119, 97] => lookup_904_103_9(acc),
            [117, 101, 100, 97] => lookup_904_103_10(acc),
            [111, 109, 105] => lookup_904_103_11(acc),
            [115, 104, 105, 111, 106, 105, 114, 105] => lookup_904_103_12(acc),
            [115, 97, 107, 117] => lookup_904_103_13(acc),
            [111, 116, 97, 107, 105] => lookup_904_103_14(acc),
            [99, 104, 105, 107, 117, 104, 111, 107, 117] => lookup_904_103_15(acc),
            [109, 97, 116, 115, 117, 107, 97, 119, 97] => lookup_904_103_16(acc),
            [109, 97, 116, 115, 117, 109, 111, 116, 111] => lookup_904_103_17(acc),
            [109, 105, 97, 115, 97] => lookup_904_103_18(acc),
            [104, 105, 114, 97, 121, 97] => lookup_904_103_19(acc),
            [105, 107, 101, 100, 97] => lookup_904_103_20(acc),
            [109, 105, 110, 97, 109, 105, 97, 105, 107, 105] => lookup_904_103_21(acc),
            [115, 97, 107, 117, 104, 111] => lookup_904_103_22(acc),
            [107, 97, 119, 97, 107, 97, 109, 105] => lookup_904_103_23(acc),
            [107, 111, 109, 97, 103, 97, 110, 101] => lookup_904_103_24(acc),
            [97, 115, 97, 104, 105] => lookup_904_103_25(acc),
            [99, 104, 105, 110, 111] => lookup_904_103_26(acc),
            [109, 105, 121, 111, 116, 97] => lookup_904_103_27(acc),
            [109, 111, 99, 104, 105, 122, 117, 107, 105] => lookup_904_103_28(acc),
            [110, 97, 103, 97, 119, 97] => lookup_904_103_29(acc),
            [116, 97, 107, 97, 103, 105] => lookup_904_103_30(acc),
            [97, 110, 97, 110] => lookup_904_103_31(acc),
            [116, 97, 107, 97, 121, 97, 109, 97] => lookup_904_103_32(acc),
            [97, 103, 101, 109, 97, 116, 115, 117] => lookup_904_103_33(acc),
            [111, 111, 115, 104, 105, 107, 97] => lookup_904_103_34(acc),
            [116, 111, 103, 97, 107, 117, 115, 104, 105] => lookup_904_103_35(acc),
            [109, 105, 121, 97, 100, 97] => lookup_904_103_36(acc),
            [115, 97, 107, 97, 101] => lookup_904_103_37(acc),
            [105, 105, 100, 97] => lookup_904_103_38(acc),
            [105, 110, 97] => lookup_904_103_39(acc),
            [115, 117, 119, 97] => lookup_904_103_40(acc),
            [97, 99, 104, 105] => lookup_904_103_41(acc),
            [115, 104, 105, 110, 97, 110, 111, 109, 97, 99, 104, 105] => lookup_904_103_42(acc),
            [116, 97, 116, 101, 115, 104, 105, 110, 97] => lookup_904_103_43(acc),
            [110, 97, 107, 97, 103, 97, 119, 97] => lookup_904_103_44(acc),
            [109, 105, 110, 111, 119, 97] => lookup_904_103_45(acc),
            [109, 105, 110, 97, 109, 105, 109, 97, 107, 105] => lookup_904_103_46(acc),
            [110, 111, 122, 97, 119, 97, 111, 110, 115, 101, 110] => lookup_904_103_47(acc),
            [107, 105, 115, 111] => lookup_904_103_48(acc),
            [111, 111, 107, 117, 119, 97] => lookup_904_103_49(acc),
            [107, 97, 114, 117, 105, 122, 97, 119, 97] => lookup_904_103_50(acc),
            [116, 97, 107, 97, 109, 111, 114, 105] => lookup_904_103_51(acc),
            [121, 97, 115, 97, 107, 97] => lookup_904_103_52(acc),
            [111, 98, 117, 115, 101] => lookup_904_103_53(acc),
            [116, 111, 103, 117, 114, 97] => lookup_904_103_54(acc),
            [105, 105, 122, 117, 110, 97] => lookup_904_103_55(acc),
            [110, 97, 103, 105, 115, 111] => lookup_904_103_56(acc),
            [116, 97, 116, 115, 117, 110, 111] => lookup_904_103_57(acc),
            [97, 122, 117, 109, 105, 110, 111] => lookup_904_103_58(acc),
            [115, 97, 107, 97, 107, 105] => lookup_904_103_59(acc),
            [105, 105, 121, 97, 109, 97] => lookup_904_103_60(acc),
            [105, 107, 117, 115, 97, 107, 97] => lookup_904_103_61(acc),
            [104, 97, 107, 117, 98, 97] => lookup_904_103_62(acc),
            [107, 105, 115, 111, 102, 117, 107, 117, 115, 104, 105, 109, 97] => {
                lookup_904_103_63(acc)
            }
            [105, 105, 106, 105, 109, 97] => lookup_904_103_64(acc),
            [97, 111, 107, 105] => lookup_904_103_65(acc),
            [119, 97, 100, 97] => lookup_904_103_66(acc),
            [121, 97, 109, 97, 110, 111, 117, 99, 104, 105] => lookup_904_103_67(acc),
            [109, 105, 110, 97, 109, 105, 109, 105, 110, 111, 119, 97] => lookup_904_103_68(acc),
            [111, 116, 97, 114, 105] => lookup_904_103_69(acc),
            [107, 105, 116, 97, 97, 105, 107, 105] => lookup_904_103_70(acc),
            [121, 97, 109, 97, 103, 97, 116, 97] => lookup_904_103_71(acc),
            [104, 97, 114, 97] => lookup_904_103_72(acc),
            [99, 104, 105, 107, 117, 109, 97] => lookup_904_103_73(acc),
            [116, 111, 109, 105] => lookup_904_103_74(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_104_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_104_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_104_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_104_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_104_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_104_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_104_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_104_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_104_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_104_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_104_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_104_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_104_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_104_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_104_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_104_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_104_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_104_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_104_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_104_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_104_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_104_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_104_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_104_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_104_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_104_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_104_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_104_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_104_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_104_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_104_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_104_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_104_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_104_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_104_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_104_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_104_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_104_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_104<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 105, 110, 97, 110] => lookup_904_104_0(acc),
            [105, 98, 105, 103, 97, 119, 97] => lookup_904_104_1(acc),
            [107, 97, 107, 97, 109, 105, 103, 97, 104, 97, 114, 97] => lookup_904_104_2(acc),
            [107, 97, 115, 97, 109, 97, 116, 115, 117] => lookup_904_104_3(acc),
            [109, 105, 116, 97, 107, 101] => lookup_904_104_4(acc),
            [109, 111, 116, 111, 115, 117] => lookup_904_104_5(acc),
            [107, 97, 119, 97, 117, 101] => lookup_904_104_6(acc),
            [121, 111, 114, 111] => lookup_904_104_7(acc),
            [97, 110, 112, 97, 99, 104, 105] => lookup_904_104_8(acc),
            [107, 97, 110, 105] => lookup_904_104_9(acc),
            [116, 111, 107, 105] => lookup_904_104_10(acc),
            [116, 111, 109, 105, 107, 97] => lookup_904_104_11(acc),
            [115, 101, 107, 105] => lookup_904_104_12(acc),
            [121, 97, 111, 116, 115, 117] => lookup_904_104_13(acc),
            [109, 105, 110, 111, 107, 97, 109, 111] => lookup_904_104_14(acc),
            [107, 105, 116, 97, 103, 97, 116, 97] => lookup_904_104_15(acc),
            [110, 97, 107, 97, 116, 115, 117, 103, 97, 119, 97] => lookup_904_104_16(acc),
            [104, 97, 115, 104, 105, 109, 97] => lookup_904_104_17(acc),
            [103, 105, 102, 117] => lookup_904_104_18(acc),
            [116, 97, 106, 105, 109, 105] => lookup_904_104_19(acc),
            [119, 97, 110, 111, 117, 99, 104, 105] => lookup_904_104_20(acc),
            [104, 105, 103, 97, 115, 104, 105, 115, 104, 105, 114, 97, 107, 97, 119, 97] => {
                lookup_904_104_21(acc)
            }
            [109, 105, 122, 117, 110, 97, 109, 105] => lookup_904_104_22(acc),
            [109, 105, 110, 111] => lookup_904_104_23(acc),
            [103, 117, 106, 111] => lookup_904_104_24(acc),
            [104, 105, 99, 104, 105, 115, 111] => lookup_904_104_25(acc),
            [107, 97, 115, 97, 104, 97, 114, 97] => lookup_904_104_26(acc),
            [115, 104, 105, 114, 97, 107, 97, 119, 97] => lookup_904_104_27(acc),
            [105, 107, 101, 100, 97] => lookup_904_104_28(acc),
            [104, 105, 100, 97] => lookup_904_104_29(acc),
            [116, 97, 107, 97, 121, 97, 109, 97] => lookup_904_104_30(acc),
            [101, 110, 97] => lookup_904_104_31(acc),
            [115, 97, 107, 97, 104, 111, 103, 105] => lookup_904_104_32(acc),
            [121, 97, 109, 97, 103, 97, 116, 97] => lookup_904_104_33(acc),
            [111, 103, 97, 107, 105] => lookup_904_104_34(acc),
            [103, 111, 100, 111] => lookup_904_104_35(acc),
            [115, 101, 107, 105, 103, 97, 104, 97, 114, 97] => lookup_904_104_36(acc),
            [116, 97, 114, 117, 105] => lookup_904_104_37(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_105_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 97, 114, 97, 115, 104, 105, 110, 111] => lookup_904_105_0(acc),
            [117, 114, 97, 121, 97, 115, 117] => lookup_904_105_1(acc),
            [116, 97, 107, 111] => lookup_904_105_2(acc),
            [102, 117, 110, 97, 98, 97, 115, 104, 105] => lookup_904_105_3(acc),
            [121, 111, 107, 111, 115, 104, 105, 98, 97, 104, 105, 107, 97, 114, 105] => {
                lookup_904_105_4(acc)
            }
            [115, 111, 100, 101, 103, 97, 117, 114, 97] => lookup_904_105_5(acc),
            [105, 99, 104, 105, 104, 97, 114, 97] => lookup_904_105_6(acc),
            [107, 121, 111, 110, 97, 110] => lookup_904_105_7(acc),
            [109, 105, 100, 111, 114, 105] => lookup_904_105_8(acc),
            [107, 97, 115, 104, 105, 119, 97] => lookup_904_105_9(acc),
            [115, 104, 105, 114, 97, 107, 111] => lookup_904_105_10(acc),
            [121, 97, 99, 104, 105, 109, 97, 116, 97] => lookup_904_105_11(acc),
            [105, 115, 117, 109, 105] => lookup_904_105_12(acc),
            [110, 97, 114, 105, 116, 97] => lookup_904_105_13(acc),
            [115, 111, 115, 97] => lookup_904_105_14(acc),
            [99, 104, 117, 111] => lookup_904_105_15(acc),
            [111, 116, 97, 107, 105] => lookup_904_105_16(acc),
            [121, 111, 116, 115, 117, 107, 97, 105, 100, 111] => lookup_904_105_17(acc),
            [116, 97, 116, 101, 121, 97, 109, 97] => lookup_904_105_18(acc),
            [121, 97, 99, 104, 105, 121, 111] => lookup_904_105_19(acc),
            [105, 99, 104, 105, 107, 97, 119, 97] => lookup_904_105_20(acc),
            [115, 104, 105, 109, 111, 102, 117, 115, 97] => lookup_904_105_21(acc),
            [97, 115, 97, 104, 105] => lookup_904_105_22(acc),
            [109, 117, 116, 115, 117, 122, 97, 119, 97] => lookup_904_105_23(acc),
            [105, 99, 104, 105, 110, 111, 109, 105, 121, 97] => lookup_904_105_24(acc),
            [111, 97, 109, 105, 115, 104, 105, 114, 97, 115, 97, 116, 111] => {
                lookup_904_105_25(acc)
            }
            [107, 105, 115, 97, 114, 97, 122, 117] => lookup_904_105_26(acc),
            [107, 97, 116, 111, 114, 105] => lookup_904_105_27(acc),
            [109, 111, 98, 97, 114, 97] => lookup_904_105_28(acc),
            [111, 110, 106, 117, 107, 117] => lookup_904_105_29(acc),
            [115, 97, 107, 97, 101] => lookup_904_105_30(acc),
            [115, 97, 107, 117, 114, 97] => lookup_904_105_31(acc),
            [115, 104, 105, 114, 111, 105] => lookup_904_105_32(acc),
            [109, 97, 116, 115, 117, 100, 111] => lookup_904_105_33(acc),
            [105, 110, 122, 97, 105] => lookup_904_105_34(acc),
            [116, 111, 109, 105, 115, 97, 116, 111] => lookup_904_105_35(acc),
            [121, 111, 107, 97, 105, 99, 104, 105, 98, 97] => lookup_904_105_36(acc),
            [102, 117, 116, 116, 115, 117] => lookup_904_105_37(acc),
            [107, 117, 106, 117, 107, 117, 114, 105] => lookup_904_105_38(acc),
            [107, 97, 116, 115, 117, 117, 114, 97] => lookup_904_105_39(acc),
            [110, 97, 103, 97, 114, 97] => lookup_904_105_40(acc),
            [107, 97, 109, 97, 103, 97, 121, 97] => lookup_904_105_41(acc),
            [116, 111, 103, 97, 110, 101] => lookup_904_105_42(acc),
            [97, 98, 105, 107, 111] => lookup_904_105_43(acc),
            [99, 104, 111, 115, 104, 105] => lookup_904_105_44(acc),
            [109, 105, 104, 97, 109, 97] => lookup_904_105_45(acc),
            [116, 111, 104, 110, 111, 115, 104, 111] => lookup_904_105_46(acc),
            [99, 104, 111, 110, 97, 110] => lookup_904_105_47(acc),
            [111, 109, 105, 103, 97, 119, 97] => lookup_904_105_48(acc),
            [115, 104, 105, 115, 117, 105] => lookup_904_105_49(acc),
            [107, 97, 109, 111, 103, 97, 119, 97] => lookup_904_105_50(acc),
            [109, 105, 110, 97, 109, 105, 98, 111, 115, 111] => lookup_904_105_51(acc),
            [107, 105, 109, 105, 116, 115, 117] => lookup_904_105_52(acc),
            [104, 97, 110, 97, 109, 105, 103, 97, 119, 97] => lookup_904_105_53(acc),
            [110, 111, 100, 97] => lookup_904_105_54(acc),
            [107, 111, 122, 97, 107, 105] => lookup_904_105_55(acc),
            [110, 97, 103, 97, 114, 101, 121, 97, 109, 97] => lookup_904_105_56(acc),
            [99, 104, 111, 115, 101, 105] => lookup_904_105_57(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_904_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_109<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 104, 101, 121, 97] => lookup_904_109_0(acc),
            [116, 97, 107, 101, 116, 111, 109, 105] => lookup_904_109_1(acc),
            [117, 114, 97, 115, 111, 101] => lookup_904_109_2(acc),
            [110, 97, 104, 97] => lookup_904_109_3(acc),
            [109, 111, 116, 111, 98, 117] => lookup_904_109_4(acc),
            [107, 105, 116, 97, 100, 97, 105, 116, 111] => lookup_904_109_5(acc),
            [107, 117, 110, 105, 103, 97, 109, 105] => lookup_904_109_6(acc),
            [116, 111, 110, 97, 107, 105] => lookup_904_109_7(acc),
            [107, 97, 100, 101, 110, 97] => lookup_904_109_8(acc),
            [105, 115, 104, 105, 107, 97, 119, 97] => lookup_904_109_9(acc),
            [105, 116, 111, 109, 97, 110] => lookup_904_109_10(acc),
            [103, 105, 110, 111, 122, 97] => lookup_904_109_11(acc),
            [103, 117, 115, 104, 105, 107, 97, 109, 105] => lookup_904_109_12(acc),
            [110, 97, 110, 106, 111] => lookup_904_109_13(acc),
            [109, 105, 110, 97, 109, 105, 100, 97, 105, 116, 111] => lookup_904_109_14(acc),
            [116, 97, 114, 97, 109, 97] => lookup_904_109_15(acc),
            [104, 105, 114, 97, 114, 97] => lookup_904_109_16(acc),
            [116, 111, 109, 105, 103, 117, 115, 117, 107, 117] => lookup_904_109_17(acc),
            [111, 110, 110, 97] => lookup_904_109_18(acc),
            [121, 111, 110, 97, 98, 97, 114, 117] => lookup_904_109_19(acc),
            [122, 97, 109, 97, 109, 105] => lookup_904_109_20(acc),
            [105, 115, 104, 105, 103, 97, 107, 105] => lookup_904_109_21(acc),
            [104, 97, 101, 98, 97, 114, 117] => lookup_904_109_22(acc),
            [117, 114, 117, 109, 97] => lookup_904_109_23(acc),
            [110, 97, 103, 111] => lookup_904_109_24(acc),
            [97, 103, 117, 110, 105] => lookup_904_109_25(acc),
            [107, 117, 109, 101, 106, 105, 109, 97] => lookup_904_109_26(acc),
            [111, 107, 105, 110, 97, 119, 97] => lookup_904_109_27(acc),
            [121, 111, 110, 97, 103, 117, 110, 105] => lookup_904_109_28(acc),
            [121, 111, 109, 105, 116, 97, 110] => lookup_904_109_29(acc),
            [121, 97, 101, 115, 101] => lookup_904_109_30(acc),
            [115, 104, 105, 109, 111, 106, 105] => lookup_904_109_31(acc),
            [111, 103, 105, 109, 105] => lookup_904_109_32(acc),
            [116, 111, 107, 97, 115, 104, 105, 107, 105] => lookup_904_109_33(acc),
            [110, 97, 107, 105, 106, 105, 110] => lookup_904_109_34(acc),
            [105, 122, 101, 110, 97] => lookup_904_109_35(acc),
            [107, 105, 116, 97, 110, 97, 107, 97, 103, 117, 115, 117, 107, 117] => {
                lookup_904_109_36(acc)
            }
            [110, 97, 107, 97, 103, 117, 115, 117, 107, 117] => lookup_904_109_37(acc),
            [110, 105, 115, 104, 105, 104, 97, 114, 97] => lookup_904_109_38(acc),
            [103, 105, 110, 111, 119, 97, 110] => lookup_904_109_39(acc),
            [107, 105, 110] => lookup_904_109_40(acc),
            [104, 105, 103, 97, 115, 104, 105] => lookup_904_109_41(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_113<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 97, 107, 97, 114, 97, 122, 117, 107, 97] => lookup_904_113_0(acc),
            [115, 104, 105, 110, 103, 117] => lookup_904_113_1(acc),
            [116, 97, 107, 105, 110, 111] => lookup_904_113_2(acc),
            [111, 110, 111] => lookup_904_113_3(acc),
            [121, 97, 98, 117] => lookup_904_113_4(acc),
            [97, 107, 111] => lookup_904_113_5(acc),
            [104, 105, 109, 101, 106, 105] => lookup_904_113_6(acc),
            [107, 97, 109, 105, 107, 97, 119, 97] => lookup_904_113_7(acc),
            [115, 97, 110, 100, 97] => lookup_904_113_8(acc),
            [103, 111, 115, 104, 105, 107, 105] => lookup_904_113_9(acc),
            [107, 97, 119, 97, 110, 105, 115, 104, 105] => lookup_904_113_10(acc),
            [102, 117, 107, 117, 115, 97, 107, 105] => lookup_904_113_11(acc),
            [97, 115, 104, 105, 121, 97] => lookup_904_113_12(acc),
            [107, 97, 107, 111, 103, 97, 119, 97] => lookup_904_113_13(acc),
            [105, 116, 97, 109, 105] => lookup_904_113_14(acc),
            [121, 97, 115, 104, 105, 114, 111] => lookup_904_113_15(acc),
            [116, 97, 109, 98, 97] => lookup_904_113_16(acc),
            [97, 111, 103, 97, 107, 105] => lookup_904_113_17(acc),
            [116, 97, 116, 115, 117, 110, 111] => lookup_904_113_18(acc),
            [121, 111, 107, 97] => lookup_904_113_19(acc),
            [97, 107, 97, 115, 104, 105] => lookup_904_113_20(acc),
            [110, 105, 115, 104, 105, 110, 111, 109, 105, 121, 97] => lookup_904_113_21(acc),
            [110, 105, 115, 104, 105, 119, 97, 107, 105] => lookup_904_113_22(acc),
            [115, 97, 110, 110, 97, 110] => lookup_904_113_23(acc),
            [109, 105, 110, 97, 109, 105, 97, 119, 97, 106, 105] => lookup_904_113_24(acc),
            [107, 97, 115, 97, 105] => lookup_904_113_25(acc),
            [115, 97, 115, 97, 121, 97, 109, 97] => lookup_904_113_26(acc),
            [115, 104, 105, 110, 111, 110, 115, 101, 110] => lookup_904_113_27(acc),
            [121, 111, 107, 97, 119, 97] => lookup_904_113_28(acc),
            [104, 97, 114, 105, 109, 97] => lookup_904_113_29(acc),
            [97, 119, 97, 106, 105] => lookup_904_113_30(acc),
            [116, 111, 121, 111, 111, 107, 97] => lookup_904_113_31(acc),
            [97, 115, 97, 103, 111] => lookup_904_113_32(acc),
            [115, 104, 105, 115, 111] => lookup_904_113_33(acc),
            [115, 117, 109, 111, 116, 111] => lookup_904_113_34(acc),
            [105, 99, 104, 105, 107, 97, 119, 97] => lookup_904_113_35(acc),
            [107, 97, 109, 105, 103, 111, 114, 105] => lookup_904_113_36(acc),
            [107, 97, 115, 117, 103, 97] => lookup_904_113_37(acc),
            [109, 105, 107, 105] => lookup_904_113_38(acc),
            [97, 105, 111, 105] => lookup_904_113_39(acc),
            [116, 97, 105, 115, 104, 105] => lookup_904_113_40(acc),
            [115, 97, 121, 111] => lookup_904_113_41(acc),
            [97, 109, 97, 103, 97, 115, 97, 107, 105] => lookup_904_113_42(acc),
            [116, 97, 107, 97] => lookup_904_113_43(acc),
            [116, 97, 107, 97, 115, 97, 103, 111] => lookup_904_113_44(acc),
            [105, 110, 97, 103, 97, 119, 97] => lookup_904_113_45(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_116_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_116_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_116_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_116_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_116_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_116_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_116_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_116_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_116_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_116_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_116_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_116_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_116_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_116_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_116_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_116_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_116_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_116_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_116_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_116_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_116_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_116_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_116_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_116_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_116_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_116_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_116_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_116_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_116_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_116_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_116<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 97, 107, 97, 105] => lookup_904_116_0(acc),
            [109, 97, 116, 115, 117, 100, 97] => lookup_904_116_1(acc),
            [101, 98, 105, 110, 97] => lookup_904_116_2(acc),
            [116, 115, 117, 107, 117, 105] => lookup_904_116_3(acc),
            [104, 105, 114, 97, 116, 115, 117, 107, 97] => lookup_904_116_4(acc),
            [115, 97, 103, 97, 109, 105, 104, 97, 114, 97] => lookup_904_116_5(acc),
            [121, 97, 109, 97, 107, 105, 116, 97] => lookup_904_116_6(acc),
            [121, 117, 103, 97, 119, 97, 114, 97] => lookup_904_116_7(acc),
            [105, 115, 101, 104, 97, 114, 97] => lookup_904_116_8(acc),
            [97, 105, 107, 97, 119, 97] => lookup_904_116_9(acc),
            [97, 121, 97, 115, 101] => lookup_904_116_10(acc),
            [121, 97, 109, 97, 116, 111] => lookup_904_116_11(acc),
            [107, 97, 109, 97, 107, 117, 114, 97] => lookup_904_116_12(acc),
            [104, 97, 107, 111, 110, 101] => lookup_904_116_13(acc),
            [104, 97, 100, 97, 110, 111] => lookup_904_116_14(acc),
            [111, 100, 97, 119, 97, 114, 97] => lookup_904_116_15(acc),
            [109, 105, 110, 97, 109, 105, 97, 115, 104, 105, 103, 97, 114, 97] => {
                lookup_904_116_16(acc)
            }
            [102, 117, 106, 105, 115, 97, 119, 97] => lookup_904_116_17(acc),
            [99, 104, 105, 103, 97, 115, 97, 107, 105] => lookup_904_116_18(acc),
            [110, 105, 110, 111, 109, 105, 121, 97] => lookup_904_116_19(acc),
            [121, 111, 107, 111, 115, 117, 107, 97] => lookup_904_116_20(acc),
            [122, 117, 115, 104, 105] => lookup_904_116_21(acc),
            [111, 105, 115, 111] => lookup_904_116_22(acc),
            [107, 105, 121, 111, 107, 97, 119, 97] => lookup_904_116_23(acc),
            [97, 116, 115, 117, 103, 105] => lookup_904_116_24(acc),
            [109, 105, 117, 114, 97] => lookup_904_116_25(acc),
            [111, 105] => lookup_904_116_26(acc),
            [115, 97, 109, 117, 107, 97, 119, 97] => lookup_904_116_27(acc),
            [107, 97, 105, 115, 101, 105] => lookup_904_116_28(acc),
            [122, 97, 109, 97] => lookup_904_116_29(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_117_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_117_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_117_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_117_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_117_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_117_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_117_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_117_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_117_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_117_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_117_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_117_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_117_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_117<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 105, 110, 111] => lookup_904_117_0(acc),
            [109, 105, 115, 97, 115, 97] => lookup_904_117_1(acc),
            [121, 111, 110, 97, 103, 111] => lookup_904_117_2(acc),
            [119, 97, 107, 97, 115, 97] => lookup_904_117_3(acc),
            [107, 97, 119, 97, 104, 97, 114, 97] => lookup_904_117_4(acc),
            [110, 105, 99, 104, 105, 110, 97, 110] => lookup_904_117_5(acc),
            [121, 97, 122, 117] => lookup_904_117_6(acc),
            [99, 104, 105, 122, 117] => lookup_904_117_7(acc),
            [107, 111, 103, 101] => lookup_904_117_8(acc),
            [107, 111, 116, 111, 117, 114, 97] => lookup_904_117_9(acc),
            [110, 97, 110, 98, 117] => lookup_904_117_10(acc),
            [115, 97, 107, 97, 105, 109, 105, 110, 97, 116, 111] => lookup_904_117_11(acc),
            [116, 111, 116, 116, 111, 114, 105] => lookup_904_117_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 105, 100, 97, 107, 97] => lookup_904_123_0(acc),
            [107, 97, 119, 97, 106, 105, 109, 97] => lookup_904_123_1(acc),
            [107, 117, 107, 105] => lookup_904_123_2(acc),
            [104, 97, 110, 121, 117] => lookup_904_123_3(acc),
            [107, 97, 109, 105, 107, 97, 119, 97] => lookup_904_123_4(acc),
            [109, 111, 114, 111, 121, 97, 109, 97] => lookup_904_123_5(acc),
            [114, 121, 111, 107, 97, 109, 105] => lookup_904_123_6(acc),
            [102, 117, 107, 97, 121, 97] => lookup_904_123_7(acc),
            [105, 114, 117, 109, 97] => lookup_904_123_8(acc),
            [104, 97, 110, 110, 111] => lookup_904_123_9(acc),
            [109, 105, 121, 111, 115, 104, 105] => lookup_904_123_10(acc),
            [115, 117, 103, 105, 116, 111] => lookup_904_123_11(acc),
            [116, 111, 100, 97] => lookup_904_123_12(acc),
            [121, 111, 115, 104, 105, 100, 97] => lookup_904_123_13(acc),
            [121, 111, 115, 104, 105, 109, 105] => lookup_904_123_14(acc),
            [111, 103, 97, 110, 111] => lookup_904_123_15(acc),
            [115, 104, 105, 107, 105] => lookup_904_123_16(acc),
            [102, 117, 106, 105, 109, 105] => lookup_904_123_17(acc),
            [107, 97, 109, 105, 105, 122, 117, 109, 105] => lookup_904_123_18(acc),
            [111, 103, 97, 119, 97] => lookup_904_123_19(acc),
            [111, 107, 101, 103, 97, 119, 97] => lookup_904_123_20(acc),
            [121, 111, 114, 105, 105] => lookup_904_123_21(acc),
            [99, 104, 105, 99, 104, 105, 98, 117] => lookup_904_123_22(acc),
            [117, 114, 97, 119, 97] => lookup_904_123_23(acc),
            [111, 116, 97, 107, 105] => lookup_904_123_24(acc),
            [121, 111, 107, 111, 122, 101] => lookup_904_123_25(acc),
            [104, 105, 103, 97, 115, 104, 105, 99, 104, 105, 99, 104, 105, 98, 117] => {
                lookup_904_123_26(acc)
            }
            [107, 97, 115, 117, 107, 97, 98, 101] => lookup_904_123_27(acc),
            [116, 111, 107, 111, 114, 111, 122, 97, 119, 97] => lookup_904_123_28(acc),
            [115, 97, 105, 116, 97, 109, 97] => lookup_904_123_29(acc),
            [111, 109, 105, 121, 97] => lookup_904_123_30(acc),
            [116, 115, 117, 114, 117, 103, 97, 115, 104, 105, 109, 97] => lookup_904_123_31(acc),
            [107, 97, 119, 97, 103, 117, 99, 104, 105] => lookup_904_123_32(acc),
            [109, 97, 116, 115, 117, 98, 117, 115, 104, 105] => lookup_904_123_33(acc),
            [121, 111, 115, 104, 105, 107, 97, 119, 97] => lookup_904_123_34(acc),
            [111, 103, 111, 115, 101] => lookup_904_123_35(acc),
            [115, 104, 105, 114, 97, 111, 107, 97] => lookup_904_123_36(acc),
            [107, 111, 115, 104, 105, 103, 97, 121, 97] => lookup_904_123_37(acc),
            [105, 110, 97] => lookup_904_123_38(acc),
            [107, 117, 109, 97, 103, 97, 121, 97] => lookup_904_123_39(acc),
            [109, 105, 110, 97, 110, 111] => lookup_904_123_40(acc),
            [115, 111, 107, 97] => lookup_904_123_41(acc),
            [104, 97, 115, 117, 100, 97] => lookup_904_123_42(acc),
            [104, 97, 116, 111, 121, 97, 109, 97] => lookup_904_123_43(acc),
            [110, 97, 109, 101, 103, 97, 119, 97] => lookup_904_123_44(acc),
            [109, 105, 121, 97, 115, 104, 105, 114, 111] => lookup_904_123_45(acc),
            [97, 114, 97, 107, 97, 119, 97] => lookup_904_123_46(acc),
            [121, 111, 110, 111] => lookup_904_123_47(acc),
            [116, 111, 107, 105, 103, 97, 119, 97] => lookup_904_123_48(acc),
            [102, 117, 106, 105, 109, 105, 110, 111] => lookup_904_123_49(acc),
            [109, 105, 115, 97, 116, 111] => lookup_904_123_50(acc),
            [115, 97, 121, 97, 109, 97] => lookup_904_123_51(acc),
            [110, 97, 103, 97, 116, 111, 114, 111] => lookup_904_123_52(acc),
            [115, 97, 116, 116, 101] => lookup_904_123_53(acc),
            [107, 111, 117, 110, 111, 115, 117] => lookup_904_123_54(acc),
            [104, 105, 103, 97, 115, 104, 105, 109, 97, 116, 115, 117, 121, 97, 109, 97] => {
                lookup_904_123_55(acc)
            }
            [104, 111, 110, 106, 111] => lookup_904_123_56(acc),
            [107, 97, 122, 111] => lookup_904_123_57(acc),
            [121, 97, 115, 104, 105, 111] => lookup_904_123_58(acc),
            [105, 119, 97, 116, 115, 117, 107, 105] => lookup_904_123_59(acc),
            [107, 97, 119, 97, 103, 111, 101] => lookup_904_123_60(acc),
            [104, 97, 116, 111, 103, 97, 121, 97] => lookup_904_123_61(acc),
            [107, 97, 109, 105, 115, 97, 116, 111] => lookup_904_123_62(acc),
            [107, 105, 116, 97, 109, 111, 116, 111] => lookup_904_123_63(acc),
            [115, 97, 107, 97, 100, 111] => lookup_904_123_64(acc),
            [119, 97, 114, 97, 98, 105] => lookup_904_123_65(acc),
            [97, 115, 97, 107, 97] => lookup_904_123_66(acc),
            [110, 105, 105, 122, 97] => lookup_904_123_67(acc),
            [114, 97, 110, 122, 97, 110] => lookup_904_123_68(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_127_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_127_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_127_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_127_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_127_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_127_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_127_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_127_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_127_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_127_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_127_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_127_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_127_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_127_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_127_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_127_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_127_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_127_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_127_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_127_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_127_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_127_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_127_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_127_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_127_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_127_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_127_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_127_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_127_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_127_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_127_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_127_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_127_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_127_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_127<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 115, 101, 110] => lookup_904_127_0(acc),
            [106, 111, 101, 116, 115, 117] => lookup_904_127_1(acc),
            [115, 97, 100, 111] => lookup_904_127_2(acc),
            [116, 97, 105, 110, 97, 105] => lookup_904_127_3(acc),
            [115, 101, 105, 114, 111, 117] => lookup_904_127_4(acc),
            [97, 103, 97, 110, 111] => lookup_904_127_5(acc),
            [116, 111, 99, 104, 105, 111] => lookup_904_127_6(acc),
            [117, 111, 110, 117, 109, 97] => lookup_904_127_7(acc),
            [97, 103, 97] => lookup_904_127_8(acc),
            [105, 116, 111, 105, 103, 97, 119, 97] => lookup_904_127_9(acc),
            [109, 121, 111, 107, 111] => lookup_904_127_10(acc),
            [121, 97, 104, 105, 107, 111] => lookup_904_127_11(acc),
            [107, 97, 109, 111] => lookup_904_127_12(acc),
            [116, 111, 107, 97, 109, 97, 99, 104, 105] => lookup_904_127_13(acc),
            [105, 122, 117, 109, 111, 122, 97, 107, 105] => lookup_904_127_14(acc),
            [109, 117, 105, 107, 97] => lookup_904_127_15(acc),
            [111, 106, 105, 121, 97] => lookup_904_127_16(acc),
            [111, 109, 105] => lookup_904_127_17(acc),
            [107, 97, 115, 104, 105, 119, 97, 122, 97, 107, 105] => lookup_904_127_18(acc),
            [115, 101, 105, 114, 111] => lookup_904_127_19(acc),
            [116, 97, 103, 97, 109, 105] => lookup_904_127_20(acc),
            [121, 117, 122, 97, 119, 97] => lookup_904_127_21(acc),
            [115, 101, 107, 105, 107, 97, 119, 97] => lookup_904_127_22(acc),
            [116, 115, 117, 110, 97, 110] => lookup_904_127_23(acc),
            [110, 97, 103, 97, 111, 107, 97] => lookup_904_127_24(acc),
            [116, 115, 117, 98, 97, 109, 101] => lookup_904_127_25(acc),
            [109, 105, 116, 115, 117, 107, 101] => lookup_904_127_26(acc),
            [109, 105, 110, 97, 109, 105, 117, 111, 110, 117, 109, 97] => lookup_904_127_27(acc),
            [115, 104, 105, 98, 97, 116, 97] => lookup_904_127_28(acc),
            [107, 97, 114, 105, 119, 97] => lookup_904_127_29(acc),
            [109, 117, 114, 97, 107, 97, 109, 105] => lookup_904_127_30(acc),
            [115, 97, 110, 106, 111] => lookup_904_127_31(acc),
            [110, 105, 105, 103, 97, 116, 97] => lookup_904_127_32(acc),
            [121, 111, 105, 116, 97] => lookup_904_127_33(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_128_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_128_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_128_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_128_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_128_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_128_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_128_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_128_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_128_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_128_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_128_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_128_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_128_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_128_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_128_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_128_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_128_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_128_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_128_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_128_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_128<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 107, 117, 110, 101] => lookup_904_128_0(acc),
            [107, 97, 119, 97, 110, 97, 98, 101] => lookup_904_128_1(acc),
            [107, 105, 110, 107, 111] => lookup_904_128_2(acc),
            [109, 105, 110, 97, 109, 105, 116, 97, 110, 101] => lookup_904_128_3(acc),
            [110, 97, 107, 97, 116, 97, 110, 101] => lookup_904_128_4(acc),
            [105, 115, 97] => lookup_904_128_5(acc),
            [104, 105, 111, 107, 105] => lookup_904_128_6(acc),
            [115, 97, 116, 115, 117, 109, 97, 115, 101, 110, 100, 97, 105] => lookup_904_128_7(acc),
            [105, 122, 117, 109, 105] => lookup_904_128_8(acc),
            [116, 97, 114, 117, 109, 105, 122, 117] => lookup_904_128_9(acc),
            [105, 115, 101, 110] => lookup_904_128_10(acc),
            [107, 97, 110, 111, 121, 97] => lookup_904_128_11(acc),
            [109, 97, 116, 115, 117, 109, 111, 116, 111] => lookup_904_128_12(acc),
            [110, 105, 115, 104, 105, 110, 111, 111, 109, 111, 116, 101] => lookup_904_128_13(acc),
            [107, 111, 117, 121, 97, 109, 97] => lookup_904_128_14(acc),
            [121, 117, 115, 117, 105] => lookup_904_128_15(acc),
            [97, 109, 97, 109, 105] => lookup_904_128_16(acc),
            [109, 97, 107, 117, 114, 97, 122, 97, 107, 105] => lookup_904_128_17(acc),
            [115, 111, 111] => lookup_904_128_18(acc),
            [107, 97, 103, 111, 115, 104, 105, 109, 97] => lookup_904_128_19(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_130_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_130_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_130_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_130_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_130_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_130_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_130_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_130_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_130_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_130_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_130_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_130_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_130_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_130_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_130_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_130_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_130_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_130_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_130_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_130<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 97, 110, 97, 111] => lookup_904_130_0(acc),
            [116, 115, 117, 98, 97, 116, 97] => lookup_904_130_1(acc),
            [119, 97, 106, 105, 109, 97] => lookup_904_130_2(acc),
            [97, 110, 97, 109, 105, 122, 117] => lookup_904_130_3(acc),
            [116, 115, 117, 114, 117, 103, 105] => lookup_904_130_4(acc),
            [115, 117, 122, 117] => lookup_904_130_5(acc),
            [107, 97, 104, 111, 107, 117] => lookup_904_130_6(acc),
            [110, 111, 109, 105] => lookup_904_130_7(acc),
            [104, 97, 107, 117, 115, 97, 110] => lookup_904_130_8(acc),
            [107, 111, 109, 97, 116, 115, 117] => lookup_904_130_9(acc),
            [107, 97, 119, 97, 107, 105, 116, 97] => lookup_904_130_10(acc),
            [110, 97, 107, 97, 110, 111, 116, 111] => lookup_904_130_11(acc),
            [107, 97, 110, 97, 122, 97, 119, 97] => lookup_904_130_12(acc),
            [110, 111, 116, 111] => lookup_904_130_13(acc),
            [117, 99, 104, 105, 110, 97, 100, 97] => lookup_904_130_14(acc),
            [110, 111, 110, 111, 105, 99, 104, 105] => lookup_904_130_15(acc),
            [115, 104, 105, 107, 97] => lookup_904_130_16(acc),
            [107, 97, 103, 97] => lookup_904_130_17(acc),
            [104, 97, 107, 117, 105] => lookup_904_130_18(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_132_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_904_132_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [117, 115, 101, 114] => lookup_904_132_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_132_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_904_132<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 101, 105, 110, 101, 116] => lookup_904_132_0(info, labels, acc),
            [103, 101, 104, 105, 114, 110] => lookup_904_132_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_133_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_133_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_133_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_133_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_133_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_133_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_133_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_133_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_133_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_133_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_133_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_133_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_133_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_133_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_133_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_133_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_133_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_133_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_133_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_133_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_133_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_133_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_133_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_133<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [117, 110, 110, 97, 110] => lookup_904_133_0(acc),
            [97, 109, 97] => lookup_904_133_1(acc),
            [104, 105, 107, 97, 119, 97] => lookup_904_133_2(acc),
            [110, 105, 115, 104, 105, 110, 111, 115, 104, 105, 109, 97] => lookup_904_133_3(acc),
            [109, 97, 116, 115, 117, 101] => lookup_904_133_4(acc),
            [104, 105, 107, 105, 109, 105] => lookup_904_133_5(acc),
            [116, 115, 117, 119, 97, 110, 111] => lookup_904_133_6(acc),
            [121, 97, 107, 117, 109, 111] => lookup_904_133_7(acc),
            [97, 107, 97, 103, 105] => lookup_904_133_8(acc),
            [104, 105, 103, 97, 115, 104, 105, 105, 122, 117, 109, 111] => lookup_904_133_9(acc),
            [109, 97, 115, 117, 100, 97] => lookup_904_133_10(acc),
            [111, 107, 105, 110, 111, 115, 104, 105, 109, 97] => lookup_904_133_11(acc),
            [105, 122, 117, 109, 111] => lookup_904_133_12(acc),
            [115, 104, 105, 109, 97, 110, 101] => lookup_904_133_13(acc),
            [107, 97, 107, 105, 110, 111, 107, 105] => lookup_904_133_14(acc),
            [116, 97, 109, 97, 121, 117] => lookup_904_133_15(acc),
            [121, 97, 116, 115, 117, 107, 97] => lookup_904_133_16(acc),
            [121, 97, 115, 117, 103, 105] => lookup_904_133_17(acc),
            [109, 105, 115, 97, 116, 111] => lookup_904_133_18(acc),
            [103, 111, 116, 115, 117] => lookup_904_133_19(acc),
            [111, 107, 117, 105, 122, 117, 109, 111] => lookup_904_133_20(acc),
            [111, 104, 100, 97] => lookup_904_133_21(acc),
            [104, 97, 109, 97, 100, 97] => lookup_904_133_22(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_904_144_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 97, 119, 97, 109, 97, 116, 97] => lookup_904_144_0(acc),
            [110, 105, 115, 104, 105, 97, 105, 122, 117] => lookup_904_144_1(acc),
            [107, 105, 116, 97, 115, 104, 105, 111, 98, 97, 114, 97] => lookup_904_144_2(acc),
            [104, 105, 114, 111, 110, 111] => lookup_904_144_3(acc),
            [111, 110, 111] => lookup_904_144_4(acc),
            [105, 122, 117, 109, 105, 122, 97, 107, 105] => lookup_904_144_5(acc),
            [105, 115, 104, 105, 107, 97, 119, 97] => lookup_904_144_6(acc),
            [111, 109, 111, 116, 101, 103, 111] => lookup_904_144_7(acc),
            [115, 104, 111, 119, 97] => lookup_904_144_8(acc),
            [111, 107, 117, 109, 97] => lookup_904_144_9(acc),
            [110, 97, 109, 105, 101] => lookup_904_144_10(acc),
            [104, 105, 114, 97, 116, 97] => lookup_904_144_11(acc),
            [115, 117, 107, 97, 103, 97, 119, 97] => lookup_904_144_12(acc),
            [98, 97, 110, 100, 97, 105] => lookup_904_144_13(acc),
            [109, 105, 104, 97, 114, 117] => lookup_904_144_14(acc),
            [115, 97, 109, 101, 103, 97, 119, 97] => lookup_904_144_15(acc),
            [97, 115, 97, 107, 97, 119, 97] => lookup_904_144_16(acc),
            [97, 105, 122, 117, 109, 105, 115, 97, 116, 111] => lookup_904_144_17(acc),
            [107, 97, 110, 101, 121, 97, 109, 97] => lookup_904_144_18(acc),
            [107, 111, 111, 114, 105] => lookup_904_144_19(acc),
            [121, 97, 109, 97, 116, 111] => lookup_904_144_20(acc),
            [105, 110, 97, 119, 97, 115, 104, 105, 114, 111] => lookup_904_144_21(acc),
            [102, 117, 107, 117, 115, 104, 105, 109, 97] => lookup_904_144_22(acc),
            [105, 105, 116, 97, 116, 101] => lookup_904_144_23(acc),
            [107, 117, 110, 105, 109, 105] => lookup_904_144_24(acc),
            [109, 105, 115, 104, 105, 109, 97] => lookup_904_144_25(acc),
            [107, 111, 114, 105, 121, 97, 109, 97] => lookup_904_144_26(acc),
            [115, 104, 105, 109, 111, 103, 111] => lookup_904_144_27(acc),
            [116, 97, 109, 97, 107, 97, 119, 97] => lookup_904_144_28(acc),
            [121, 117, 103, 97, 119, 97] => lookup_904_144_29(acc),
            [116, 97, 105, 115, 104, 105, 110] => lookup_904_144_30(acc),
            [121, 97, 109, 97, 116, 115, 117, 114, 105] => lookup_904_144_31(acc),
            [116, 97, 110, 97, 103, 117, 114, 97] => lookup_904_144_32(acc),
            [102, 117, 116, 97, 98, 97] => lookup_904_144_33(acc),
            [97, 105, 122, 117, 119, 97, 107, 97, 109, 97, 116, 115, 117] => lookup_904_144_34(acc),
            [115, 104, 105, 114, 97, 107, 97, 119, 97] => lookup_904_144_35(acc),
            [115, 111, 109, 97] => lookup_904_144_36(acc),
            [102, 117, 114, 117, 100, 111, 110, 111] => lookup_904_144_37(acc),
            [105, 119, 97, 107, 105] => lookup_904_144_38(acc),
            [107, 105, 116, 97, 107, 97, 116, 97] => lookup_904_144_39(acc),
            [111, 116, 97, 109, 97] => lookup_904_144_40(acc),
            [116, 101, 110, 101, 105] => lookup_904_144_41(acc),
            [121, 97, 98, 117, 107, 105] => lookup_904_144_42(acc),
            [97, 105, 122, 117, 98, 97, 110, 103, 101] => lookup_904_144_43(acc),
            [110, 97, 110, 103, 111] => lookup_904_144_44(acc),
            [110, 105, 115, 104, 105, 103, 111] => lookup_904_144_45(acc),
            [121, 97, 110, 97, 105, 122, 117] => lookup_904_144_46(acc),
            [104, 97, 110, 97, 119, 97] => lookup_904_144_47(acc),
            [100, 97, 116, 101] => lookup_904_144_48(acc),
            [107, 97, 103, 97, 109, 105, 105, 115, 104, 105] => lookup_904_144_49(acc),
            [104, 105, 103, 97, 115, 104, 105] => lookup_904_144_50(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_145_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_145_1(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_145<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_904_145_1(acc),
            wild => lookup_904_145_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_904_146_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_146_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_146_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_146_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_146_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_146_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_146_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_146_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_146_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_146_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_146_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_146_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_146_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_146_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_146_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_146_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_146_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_146_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_146_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_146_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_146_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_146_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_146_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_146<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 111, 114, 97, 104, 105, 109, 101] => lookup_904_146_0(acc),
            [107, 111, 107, 97] => lookup_904_146_1(acc),
            [107, 111, 110, 97, 110] => lookup_904_146_2(acc),
            [109, 111, 114, 105, 121, 97, 109, 97] => lookup_904_146_3(acc),
            [111, 116, 115, 117] => lookup_904_146_4(acc),
            [121, 97, 115, 117] => lookup_904_146_5(acc),
            [104, 105, 107, 111, 110, 101] => lookup_904_146_6(acc),
            [104, 105, 103, 97, 115, 104, 105, 111, 109, 105] => lookup_904_146_7(acc),
            [107, 111, 116, 111] => lookup_904_146_8(acc),
            [110, 105, 115, 104, 105, 97, 122, 97, 105] => lookup_904_146_9(acc),
            [111, 109, 105, 104, 97, 99, 104, 105, 109, 97, 110] => lookup_904_146_10(acc),
            [116, 97, 107, 97, 116, 115, 117, 107, 105] => lookup_904_146_11(acc),
            [114, 121, 117, 111, 104] => lookup_904_146_12(acc),
            [110, 111, 116, 111, 103, 97, 119, 97] => lookup_904_146_13(acc),
            [97, 105, 115, 104, 111] => lookup_904_146_14(acc),
            [109, 97, 105, 98, 97, 114, 97] => lookup_904_146_15(acc),
            [110, 97, 103, 97, 104, 97, 109, 97] => lookup_904_146_16(acc),
            [107, 117, 115, 97, 116, 115, 117] => lookup_904_146_17(acc),
            [114, 105, 116, 116, 111] => lookup_904_146_18(acc),
            [116, 111, 121, 111, 115, 97, 116, 111] => lookup_904_146_19(acc),
            [103, 97, 109, 111] => lookup_904_146_20(acc),
            [107, 111, 115, 101, 105] => lookup_904_146_21(acc),
            [116, 97, 107, 97, 115, 104, 105, 109, 97] => lookup_904_146_22(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_157_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_157_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_157_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_157_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_157_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_157_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_157_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_157_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_157_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_157_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_157_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_157_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_157_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_157_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_157_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_157_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_157_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_157_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_157_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_157_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_157_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_157_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_157<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 116, 97, 121, 97, 110, 97, 103, 105] => lookup_904_157_0(acc),
            [104, 97, 115, 104, 105, 107, 97, 109, 105] => lookup_904_157_1(acc),
            [109, 117, 116, 115, 117] => lookup_904_157_2(acc),
            [110, 111, 104, 101, 106, 105] => lookup_904_157_3(acc),
            [114, 111, 107, 117, 110, 111, 104, 101] => lookup_904_157_4(acc),
            [115, 104, 105, 110, 103, 111] => lookup_904_157_5(acc),
            [116, 97, 107, 107, 111] => lookup_904_157_6(acc),
            [116, 115, 117, 103, 97, 114, 117] => lookup_904_157_7(acc),
            [115, 97, 110, 110, 111, 104, 101] => lookup_904_157_8(acc),
            [109, 105, 115, 97, 119, 97] => lookup_904_157_9(acc),
            [104, 105, 114, 97, 110, 97, 105] => lookup_904_157_10(acc),
            [111, 119, 97, 110, 105] => lookup_904_157_11(acc),
            [103, 111, 110, 111, 104, 101] => lookup_904_157_12(acc),
            [107, 117, 114, 111, 105, 115, 104, 105] => lookup_904_157_13(acc),
            [115, 104, 105, 99, 104, 105, 110, 111, 104, 101] => lookup_904_157_14(acc),
            [116, 111, 119, 97, 100, 97] => lookup_904_157_15(acc),
            [104, 105, 114, 111, 115, 97, 107, 105] => lookup_904_157_16(acc),
            [110, 97, 107, 97, 100, 111, 109, 97, 114, 105] => lookup_904_157_17(acc),
            [111, 105, 114, 97, 115, 101] => lookup_904_157_18(acc),
            [97, 111, 109, 111, 114, 105] => lookup_904_157_19(acc),
            [116, 115, 117, 114, 117, 116, 97] => lookup_904_157_20(acc),
            [104, 97, 99, 104, 105, 110, 111, 104, 101] => lookup_904_157_21(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_158(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 121, 97, 122, 97, 107, 105] => lookup_904_0(labels, acc),
            [120, 110, 45, 45, 52, 112, 118, 120, 115] => lookup_904_1(acc),
            [229, 164, 167, 233, 152, 170] => lookup_904_2(acc),
            [107, 105, 116, 97, 107, 121, 117, 115, 104, 117] => lookup_904_3(info, labels, acc),
            [111, 107, 97, 121, 97, 109, 97] => lookup_904_4(labels, acc),
            [228, 189, 144, 232, 179, 128] => lookup_904_5(acc),
            [231, 165, 158, 229, 165, 136, 229, 183, 157] => lookup_904_6(acc),
            [104, 105, 114, 111, 115, 104, 105, 109, 97] => lookup_904_7(labels, acc),
            [102, 117, 107, 117, 111, 107, 97] => lookup_904_8(labels, acc),
            [229, 165, 136, 232, 137, 175] => lookup_904_9(acc),
            [120, 110, 45, 45, 49, 99, 116, 119, 111] => lookup_904_10(acc),
            [120, 110, 45, 45, 107, 108, 116, 120, 57, 97] => lookup_904_11(acc),
            [120, 110, 45, 45, 49, 108, 113, 115, 48, 51, 110] => lookup_904_12(acc),
            [108, 103] => lookup_904_13(acc),
            [115, 97, 103, 97] => lookup_904_14(labels, acc),
            [109, 105, 121, 97, 103, 105] => lookup_904_15(labels, acc),
            [116, 111, 99, 104, 105, 103, 105] => lookup_904_16(labels, acc),
            [121, 97, 109, 97, 110, 97, 115, 104, 105] => lookup_904_17(labels, acc),
            [230, 132, 155, 229, 170, 155] => lookup_904_18(acc),
            [110, 97, 103, 97, 115, 97, 107, 105] => lookup_904_19(labels, acc),
            [232, 140, 168, 229, 159, 142] => lookup_904_20(acc),
            [111, 115, 97, 107, 97] => lookup_904_21(labels, acc),
            [120, 110, 45, 45, 101, 102, 118, 110, 57, 115] => lookup_904_22(acc),
            [104, 111, 107, 107, 97, 105, 100, 111] => lookup_904_23(labels, acc),
            [229, 146, 140, 230, 173, 140, 229, 177, 177] => lookup_904_24(acc),
            [97, 100] => lookup_904_25(acc),
            [120, 110, 45, 45, 114, 104, 116, 51, 100] => lookup_904_26(acc),
            [120, 110, 45, 45, 54, 111, 114, 120, 50, 114] => lookup_904_27(acc),
            [116, 111, 107, 121, 111] => lookup_904_28(labels, acc),
            [229, 177, 177, 229, 189, 162] => lookup_904_29(acc),
            [233, 166, 153, 229, 183, 157] => lookup_904_30(acc),
            [120, 110, 45, 45, 117, 105, 115, 122, 51, 103] => lookup_904_31(acc),
            [233, 179, 165, 229, 143, 150] => lookup_904_32(acc),
            [233, 185, 191, 229, 133, 144, 229, 179, 182] => lookup_904_33(acc),
            [230, 150, 176, 230, 189, 159] => lookup_904_34(acc),
            [105, 119, 97, 116, 101] => lookup_904_35(labels, acc),
            [120, 110, 45, 45, 107, 98, 114, 113, 55, 111] => lookup_904_36(acc),
            [228, 186, 172, 233, 131, 189] => lookup_904_37(acc),
            [103, 117, 110, 109, 97] => lookup_904_38(labels, acc),
            [229, 159, 188, 231, 142, 137] => lookup_904_39(acc),
            [120, 110, 45, 45, 100, 106, 116, 121, 52, 107] => lookup_904_40(acc),
            [107, 97, 119, 97, 115, 97, 107, 105] => lookup_904_41(info, labels, acc),
            [115, 101, 110, 100, 97, 105] => lookup_904_42(info, labels, acc),
            [107, 121, 111, 116, 111] => lookup_904_43(labels, acc),
            [229, 179, 182, 230, 160, 185] => lookup_904_44(acc),
            [231, 166, 143, 228, 186, 149] => lookup_904_45(acc),
            [121, 111, 107, 111, 104, 97, 109, 97] => lookup_904_46(info, labels, acc),
            [102, 117, 107, 117, 105] => lookup_904_47(labels, acc),
            [229, 178, 161, 229, 177, 177] => lookup_904_48(acc),
            [120, 110, 45, 45, 51, 50, 118, 112, 51, 48, 104] => lookup_904_49(acc),
            [116, 111, 107, 117, 115, 104, 105, 109, 97] => lookup_904_50(labels, acc),
            [229, 141, 131, 232, 145, 137] => lookup_904_51(acc),
            [115, 97, 112, 112, 111, 114, 111] => lookup_904_52(info, labels, acc),
            [229, 190, 179, 229, 179, 182] => lookup_904_53(acc),
            [107, 111, 99, 104, 105] => lookup_904_54(labels, acc),
            [120, 110, 45, 45, 99, 51, 115, 49, 52, 109] => lookup_904_55(acc),
            [229, 174, 174, 229, 180, 142] => lookup_904_56(acc),
            [105, 98, 97, 114, 97, 107, 105] => lookup_904_57(labels, acc),
            [107, 97, 103, 97, 119, 97] => lookup_904_58(labels, acc),
            [230, 160, 131, 230, 156, 168] => lookup_904_59(acc),
            [229, 177, 177, 230, 162, 168] => lookup_904_60(acc),
            [233, 171, 152, 231, 159, 165] => lookup_904_61(acc),
            [120, 110, 45, 45, 101, 104, 113, 122, 53, 54, 110] => lookup_904_62(acc),
            [97, 107, 105, 116, 97] => lookup_904_63(labels, acc),
            [107, 117, 109, 97, 109, 111, 116, 111] => lookup_904_64(labels, acc),
            [120, 110, 45, 45, 112, 115, 115, 117, 51, 51, 108] => lookup_904_65(acc),
            [120, 110, 45, 45, 110, 105, 116, 50, 50, 53, 107] => lookup_904_66(acc),
            [119, 97, 107, 97, 121, 97, 109, 97] => lookup_904_67(labels, acc),
            [116, 111, 121, 97, 109, 97] => lookup_904_68(labels, acc),
            [121, 97, 109, 97, 103, 117, 99, 104, 105] => lookup_904_69(labels, acc),
            [230, 132, 155, 231, 159, 165] => lookup_904_70(acc),
            [230, 187, 139, 232, 179, 128] => lookup_904_71(acc),
            [120, 110, 45, 45, 50, 109, 52, 97, 49, 53, 101] => lookup_904_72(acc),
            [120, 110, 45, 45, 118, 103, 117, 52, 48, 50, 99] => lookup_904_73(acc),
            [229, 175, 140, 229, 177, 177] => lookup_904_74(acc),
            [120, 110, 45, 45, 107, 108, 116, 121, 53, 120] => lookup_904_75(acc),
            [229, 186, 131, 229, 179, 182] => lookup_904_76(acc),
            [233, 149, 183, 229, 180, 142] => lookup_904_77(acc),
            [101, 104, 105, 109, 101] => lookup_904_78(labels, acc),
            [233, 149, 183, 233, 135, 142] => lookup_904_79(acc),
            [229, 177, 177, 229, 143, 163] => lookup_904_80(acc),
            [97, 105, 99, 104, 105] => lookup_904_81(labels, acc),
            [103, 111] => lookup_904_82(acc),
            [121, 97, 109, 97, 103, 97, 116, 97] => lookup_904_83(labels, acc),
            [120, 110, 45, 45, 53, 114, 116, 113, 51, 52, 107] => lookup_904_84(acc),
            [233, 157, 146, 230, 163, 174] => lookup_904_85(acc),
            [231, 159, 179, 229, 183, 157] => lookup_904_86(acc),
            [109, 105, 101] => lookup_904_87(labels, acc),
            [110, 97, 103, 111, 121, 97] => lookup_904_88(info, labels, acc),
            [120, 110, 45, 45, 122, 98, 120, 48, 50, 53, 100] => lookup_904_89(acc),
            [120, 110, 45, 45, 54, 98, 116, 119, 53, 97] => lookup_904_90(acc),
            [111, 105, 116, 97] => lookup_904_91(labels, acc),
            [233, 157, 153, 229, 178, 161] => lookup_904_92(acc),
            [97, 99] => lookup_904_93(acc),
            [229, 164, 167, 229, 136, 134] => lookup_904_94(acc),
            [110, 97, 114, 97] => lookup_904_95(labels, acc),
            [230, 157, 177, 228, 186, 172] => lookup_904_96(acc),
            [120, 110, 45, 45, 53, 114, 116, 112, 52, 57, 99] => lookup_904_97(acc),
            [230, 178, 150, 231, 184, 132] => lookup_904_98(acc),
            [120, 110, 45, 45, 100, 53, 113, 118, 55, 122, 56, 55, 54, 99] => lookup_904_99(acc),
            [115, 104, 105, 122, 117, 111, 107, 97] => lookup_904_100(labels, acc),
            [120, 110, 45, 45, 56, 112, 118, 114, 52, 117] => lookup_904_101(acc),
            [120, 110, 45, 45, 109, 107, 114, 117, 52, 53, 105] => lookup_904_102(acc),
            [110, 97, 103, 97, 110, 111] => lookup_904_103(labels, acc),
            [103, 105, 102, 117] => lookup_904_104(labels, acc),
            [99, 104, 105, 98, 97] => lookup_904_105(labels, acc),
            [120, 110, 45, 45, 116, 111, 114, 49, 51, 49, 111] => lookup_904_106(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_904_107(acc),
            [120, 110, 45, 45, 52, 105, 116, 55, 57, 55, 107] => lookup_904_108(acc),
            [111, 107, 105, 110, 97, 119, 97] => lookup_904_109(labels, acc),
            [120, 110, 45, 45, 114, 104, 116, 50, 55, 122] => lookup_904_110(acc),
            [229, 140, 151, 230, 181, 183, 233, 129, 147] => lookup_904_111(acc),
            [120, 110, 45, 45, 110, 116, 115, 113, 49, 55, 103] => lookup_904_112(acc),
            [104, 121, 111, 103, 111] => lookup_904_113(labels, acc),
            [101, 100] => lookup_904_114(acc),
            [120, 110, 45, 45, 107, 108, 116, 112, 55, 100] => lookup_904_115(acc),
            [107, 97, 110, 97, 103, 97, 119, 97] => lookup_904_116(labels, acc),
            [116, 111, 116, 116, 111, 114, 105] => lookup_904_117(labels, acc),
            [120, 110, 45, 45, 56, 108, 116, 114, 54, 50, 107] => lookup_904_118(acc),
            [120, 110, 45, 45, 49, 108, 113, 115, 55, 49, 100] => lookup_904_119(acc),
            [120, 110, 45, 45, 48, 116, 114, 113, 55, 112, 55, 110, 110] => lookup_904_120(acc),
            [229, 174, 174, 229, 159, 142] => lookup_904_121(acc),
            [231, 166, 143, 229, 178, 161] => lookup_904_122(acc),
            [115, 97, 105, 116, 97, 109, 97] => lookup_904_123(labels, acc),
            [228, 184, 137, 233, 135, 141] => lookup_904_124(acc),
            [120, 110, 45, 45, 113, 113, 113, 116, 49, 49, 109] => lookup_904_125(acc),
            [120, 110, 45, 45, 101, 108, 113, 113, 49, 54, 104] => lookup_904_126(acc),
            [110, 105, 105, 103, 97, 116, 97] => lookup_904_127(labels, acc),
            [107, 97, 103, 111, 115, 104, 105, 109, 97] => lookup_904_128(labels, acc),
            [231, 134, 138, 230, 156, 172] => lookup_904_129(acc),
            [105, 115, 104, 105, 107, 97, 119, 97] => lookup_904_130(labels, acc),
            [229, 133, 181, 229, 186, 171] => lookup_904_131(acc),
            [110, 101] => lookup_904_132(labels, acc),
            [115, 104, 105, 109, 97, 110, 101] => lookup_904_133(labels, acc),
            [120, 110, 45, 45, 107, 108, 116, 55, 56, 55, 100] => lookup_904_134(acc),
            [231, 167, 139, 231, 148, 176] => lookup_904_135(acc),
            [111, 114] => lookup_904_136(acc),
            [120, 110, 45, 45, 114, 110, 121, 51, 49, 104] => lookup_904_137(acc),
            [120, 110, 45, 45, 110, 116, 115, 111, 48, 105, 113, 120, 51, 97] => {
                lookup_904_138(acc)
            }
            [229, 178, 144, 233, 152, 156] => lookup_904_139(acc),
            [120, 110, 45, 45, 55, 116, 48, 97, 50, 54, 52, 99] => lookup_904_140(acc),
            [103, 114] => lookup_904_141(acc),
            [231, 166, 143, 229, 179, 182] => lookup_904_142(acc),
            [117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => lookup_904_143(acc),
            [102, 117, 107, 117, 115, 104, 105, 109, 97] => lookup_904_144(labels, acc),
            [107, 111, 98, 101] => lookup_904_145(info, labels, acc),
            [115, 104, 105, 103, 97] => lookup_904_146(labels, acc),
            [120, 110, 45, 45, 117, 117, 119, 117, 53, 56, 97] => lookup_904_147(acc),
            [120, 110, 45, 45, 52, 105, 116, 49, 54, 56, 100] => lookup_904_148(acc),
            [229, 178, 169, 230, 137, 139] => lookup_904_149(acc),
            [120, 110, 45, 45, 114, 104, 116, 54, 49, 101] => lookup_904_150(acc),
            [120, 110, 45, 45, 102, 54, 113, 120, 53, 51, 97] => lookup_904_151(acc),
            [231, 190, 164, 233, 166, 172] => lookup_904_152(acc),
            [120, 110, 45, 45, 107, 55, 121, 110, 57, 53, 101] => lookup_904_153(acc),
            [120, 110, 45, 45, 117, 105, 115, 116, 50, 50, 104] => lookup_904_154(acc),
            [120, 110, 45, 45, 100, 106, 114, 115, 55, 50, 100, 54, 117, 121] => {
                lookup_904_155(acc)
            }
            [120, 110, 45, 45, 53, 106, 115, 48, 52, 53, 100] => lookup_904_156(acc),
            [97, 111, 109, 111, 114, 105] => lookup_904_157(labels, acc),
            [99, 111] => lookup_904_158(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_905_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_905<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 97, 110] => lookup_905_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_906_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_906<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_906_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_907() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_909() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_910() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_911() -> Info {
    Info {
        len: 24usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_912() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_913() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_914() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_915() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_916_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_916_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_916_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_916_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_916_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_916_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_916_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_916_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_916_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_916_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_916_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_916_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_916_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_916_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_916_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_916_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_916<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [114, 101, 115] => lookup_916_0(acc),
            [109, 105, 108] => lookup_916_1(acc),
            [110, 105, 99] => lookup_916_2(acc),
            [97, 99] => lookup_916_3(acc),
            [103, 111, 118] => lookup_916_4(acc),
            [105, 110, 100] => lookup_916_5(acc),
            [119, 101, 98] => lookup_916_6(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_916_7(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_916_8(acc),
            [98, 97, 114, 115, 121] => lookup_916_9(acc),
            [111, 114, 103] => lookup_916_10(acc),
            [103, 101, 110] => lookup_916_11(acc),
            [110, 101, 116] => lookup_916_12(acc),
            [101, 100, 117] => lookup_916_13(acc),
            [99, 111] => lookup_916_14(acc),
            [102, 105, 114, 109] => lookup_916_15(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_917() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_918() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 105, 114, 45, 116, 114, 97, 102, 102, 105, 99, 45, 99, 111, 110, 116, 114, 111, 108] => {
                lookup_919_0(acc)
            }
            [99, 104, 97, 109, 112, 105, 111, 110, 115, 104, 105, 112] => lookup_919_1(acc),
            [109, 105, 99, 114, 111, 108, 105, 103, 104, 116] => lookup_919_2(acc),
            [112, 97, 115, 115, 101, 110, 103, 101, 114, 45, 97, 115, 115, 111, 99, 105, 97, 116, 105, 111, 110] => {
                lookup_919_3(acc)
            }
            [97, 105, 114, 116, 114, 97, 102, 102, 105, 99] => lookup_919_4(acc),
            [101, 120, 99, 104, 97, 110, 103, 101] => lookup_919_5(acc),
            [115, 97, 102, 101, 116, 121] => lookup_919_6(acc),
            [115, 107, 121, 100, 105, 118, 105, 110, 103] => lookup_919_7(acc),
            [105, 110, 115, 117, 114, 97, 110, 99, 101] => lookup_919_8(acc),
            [97, 101, 114, 111, 98, 97, 116, 105, 99] => lookup_919_9(acc),
            [101, 110, 116, 101, 114, 116, 97, 105, 110, 109, 101, 110, 116] => lookup_919_10(acc),
            [99, 97, 97] => lookup_919_11(acc),
            [112, 105, 108, 111, 116] => lookup_919_12(acc),
            [103, 114, 111, 117, 110, 100, 104, 97, 110, 100, 108, 105, 110, 103] => {
                lookup_919_13(acc)
            }
            [97, 105, 114, 99, 114, 97, 102, 116] => lookup_919_14(acc),
            [99, 114, 101, 119] => lookup_919_15(acc),
            [108, 111, 103, 105, 115, 116, 105, 99, 115] => lookup_919_16(acc),
            [119, 111, 114, 107, 105, 110, 103, 103, 114, 111, 117, 112] => lookup_919_17(acc),
            [101, 110, 103, 105, 110, 101, 101, 114] => lookup_919_18(acc),
            [110, 97, 118, 105, 103, 97, 116, 105, 111, 110] => lookup_919_19(acc),
            [97, 105, 114, 112, 111, 114, 116] => lookup_919_20(acc),
            [109, 111, 100, 101, 108, 108, 105, 110, 103] => lookup_919_21(acc),
            [102, 101, 100, 101, 114, 97, 116, 105, 111, 110] => lookup_919_22(acc),
            [104, 111, 109, 101, 98, 117, 105, 108, 116] => lookup_919_23(acc),
            [99, 111, 110, 102, 101, 114, 101, 110, 99, 101] => lookup_919_24(acc),
            [99, 101, 114, 116, 105, 102, 105, 99, 97, 116, 105, 111, 110] => lookup_919_25(acc),
            [97, 117, 116, 104, 111, 114] => lookup_919_26(acc),
            [99, 108, 117, 98] => lookup_919_27(acc),
            [103, 114, 111, 117, 112] => lookup_919_28(acc),
            [109, 97, 103, 97, 122, 105, 110, 101] => lookup_919_29(acc),
            [99, 97, 114, 103, 111] => lookup_919_30(acc),
            [112, 114, 101, 115, 115] => lookup_919_31(acc),
            [114, 101, 99, 114, 101, 97, 116, 105, 111, 110] => lookup_919_32(acc),
            [116, 114, 97, 100, 101, 114] => lookup_919_33(acc),
            [119, 111, 114, 107, 115] => lookup_919_34(acc),
            [97, 101, 114, 111, 100, 114, 111, 109, 101] => lookup_919_35(acc),
            [99, 111, 110, 116, 114, 111, 108] => lookup_919_36(acc),
            [97, 109, 117, 115, 101, 109, 101, 110, 116] => lookup_919_37(acc),
            [101, 100, 117, 99, 97, 116, 111, 114] => lookup_919_38(acc),
            [112, 114, 111, 100, 117, 99, 116, 105, 111, 110] => lookup_919_39(acc),
            [98, 97, 108, 108, 111, 111, 110, 105, 110, 103] => lookup_919_40(acc),
            [115, 111, 102, 116, 119, 97, 114, 101] => lookup_919_41(acc),
            [99, 111, 110, 115, 117, 108, 116, 97, 110, 116] => lookup_919_42(acc),
            [99, 105, 118, 105, 108, 97, 118, 105, 97, 116, 105, 111, 110] => lookup_919_43(acc),
            [97, 99, 99, 105, 100, 101, 110, 116, 45, 112, 114, 101, 118, 101, 110, 116, 105, 111, 110] => {
                lookup_919_44(acc)
            }
            [108, 101, 97, 115, 105, 110, 103] => lookup_919_45(acc),
            [112, 97, 114, 97, 103, 108, 105, 100, 105, 110, 103] => lookup_919_46(acc),
            [114, 111, 116, 111, 114, 99, 114, 97, 102, 116] => lookup_919_47(acc),
            [116, 114, 97, 100, 105, 110, 103] => lookup_919_48(acc),
            [97, 105, 114, 108, 105, 110, 101] => lookup_919_49(acc),
            [99, 104, 97, 114, 116, 101, 114] => lookup_919_50(acc),
            [99, 97, 116, 101, 114, 105, 110, 103] => lookup_919_51(acc),
            [103, 111, 118, 101, 114, 110, 109, 101, 110, 116] => lookup_919_52(acc),
            [106, 111, 117, 114, 110, 97, 108, 105, 115, 116] => lookup_919_53(acc),
            [114, 101, 115, 101, 97, 114, 99, 104] => lookup_919_54(acc),
            [115, 101, 114, 118, 105, 99, 101, 115] => lookup_919_55(acc),
            [115, 104, 111, 119] => lookup_919_56(acc),
            [100, 101, 115, 105, 103, 110] => lookup_919_57(acc),
            [103, 108, 105, 100, 105, 110, 103] => lookup_919_58(acc),
            [97, 99, 99, 105, 100, 101, 110, 116, 45, 105, 110, 118, 101, 115, 116, 105, 103, 97, 116, 105, 111, 110] => {
                lookup_919_59(acc)
            }
            [106, 111, 117, 114, 110, 97, 108] => lookup_919_60(acc),
            [101, 110, 103, 105, 110, 101] => lookup_919_61(acc),
            [109, 97, 105, 110, 116, 101, 110, 97, 110, 99, 101] => lookup_919_62(acc),
            [114, 101, 112, 98, 111, 100, 121] => lookup_919_63(acc),
            [114, 101, 115] => lookup_919_64(acc),
            [115, 116, 117, 100, 101, 110, 116] => lookup_919_65(acc),
            [98, 114, 111, 107, 101, 114] => lookup_919_66(acc),
            [99, 111, 117, 110, 99, 105, 108] => lookup_919_67(acc),
            [101, 120, 112, 114, 101, 115, 115] => lookup_919_68(acc),
            [99, 111, 110, 115, 117, 108, 116, 105, 110, 103] => lookup_919_69(acc),
            [100, 103, 99, 97] => lookup_919_70(acc),
            [102, 117, 101, 108] => lookup_919_71(acc),
            [97, 103, 101, 110, 116, 115] => lookup_919_72(acc),
            [104, 97, 110, 103, 103, 108, 105, 100, 105, 110, 103] => lookup_919_73(acc),
            [97, 101, 114, 111, 99, 108, 117, 98] => lookup_919_74(acc),
            [102, 108, 105, 103, 104, 116] => lookup_919_75(acc),
            [112, 97, 114, 97, 99, 104, 117, 116, 105, 110, 103] => lookup_919_76(acc),
            [117, 110, 105, 111, 110] => lookup_919_77(acc),
            [101, 113, 117, 105, 112, 109, 101, 110, 116] => lookup_919_78(acc),
            [115, 99, 105, 101, 110, 116, 105, 115, 116] => lookup_919_79(acc),
            [109, 101, 100, 105, 97] => lookup_919_80(acc),
            [97, 105, 114, 45, 115, 117, 114, 118, 101, 105, 108, 108, 97, 110, 99, 101] => {
                lookup_919_81(acc)
            }
            [116, 114, 97, 105, 110, 101, 114] => lookup_919_82(acc),
            [101, 109, 101, 114, 103, 101, 110, 99, 121] => lookup_919_83(acc),
            [97, 115, 115, 111, 99, 105, 97, 116, 105, 111, 110] => lookup_919_84(acc),
            [97, 109, 98, 117, 108, 97, 110, 99, 101] => lookup_919_85(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_920() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_921() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_922() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_923_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_923<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_923_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_924() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_926() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_928() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_929_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_929_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_929_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_929_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_929_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_929_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_929_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_929_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_929_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_929_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_929_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_929_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_929_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_929_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_929<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_929_0(acc),
            [105, 110] => lookup_929_1(acc),
            [99, 111, 109] => lookup_929_2(acc),
            [97, 99] => lookup_929_3(acc),
            [105, 110, 116] => lookup_929_4(acc),
            [110, 111, 109] => lookup_929_5(acc),
            [119, 101, 98] => lookup_929_6(acc),
            [109, 105, 108] => lookup_929_7(acc),
            [105, 110, 102, 111] => lookup_929_8(acc),
            [111, 114, 103] => lookup_929_9(acc),
            [110, 101, 116] => lookup_929_10(acc),
            [101, 100, 117] => lookup_929_11(acc),
            [103, 111, 98] => lookup_929_12(acc),
            [99, 111] => lookup_929_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_930() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_931() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_932() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_933_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_933_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_933_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_933_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_933_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_933_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_933_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_933_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_933_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_933_8<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_933_8_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_933<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_933_0(acc),
            [115, 99, 105] => lookup_933_1(acc),
            [109, 105, 108] => lookup_933_2(acc),
            [101, 117, 110] => lookup_933_3(acc),
            [111, 114, 103] => lookup_933_4(acc),
            [110, 101, 116] => lookup_933_5(acc),
            [110, 97, 109, 101] => lookup_933_6(acc),
            [101, 100, 117] => lookup_933_7(acc),
            [99, 111, 109] => lookup_933_8(labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_934() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_936() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_937() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_938() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_939() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_940() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_941() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_942() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_943() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_944() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_945() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_946() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_947_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_947_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_947_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_947_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_947_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_947<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_947_0(acc),
            [110, 101, 116] => lookup_947_1(acc),
            [99, 111] => lookup_947_2(acc),
            [99, 111, 109] => lookup_947_3(acc),
            [110, 111, 109] => lookup_947_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_948() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_949() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_950() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_951() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_952() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_953_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_953_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [102, 111, 114, 103, 111, 116] => lookup_953_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_953_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_953_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [102, 111, 114, 103, 111, 116] => lookup_953_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_953<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 105, 115] => lookup_953_0(info, labels, acc),
            [104, 101, 114] => lookup_953_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_954_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_954_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_954_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_954_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_954_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_954_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_954_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_954_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_954_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_954_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_954_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_954_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_954_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_954_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_954_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_954_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_954_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_954<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 104, 97, 114, 109, 97, 99, 105, 101, 110, 115] => lookup_954_0(acc),
            [110, 111, 116, 97, 105, 114, 101, 115] => lookup_954_1(acc),
            [109, 105, 108] => lookup_954_2(acc),
            [97, 115, 115] => lookup_954_3(acc),
            [118, 101, 116, 101, 114, 105, 110, 97, 105, 114, 101] => lookup_954_4(acc),
            [103, 111, 117, 118] => lookup_954_5(acc),
            [99, 111, 109] => lookup_954_6(acc),
            [103, 111, 118] => lookup_954_7(acc),
            [116, 109] => lookup_954_8(acc),
            [110, 111, 109] => lookup_954_9(acc),
            [111, 114, 103] => lookup_954_10(acc),
            [99, 111, 111, 112] => lookup_954_11(acc),
            [97, 115, 115, 111] => lookup_954_12(acc),
            [112, 114, 101, 115, 115, 101] => lookup_954_13(acc),
            [109, 101, 100, 101, 99, 105, 110] => lookup_954_14(acc),
            [112, 114, 100] => lookup_954_15(acc),
            [101, 100, 117] => lookup_954_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_955() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_956() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_957_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_957_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_957_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_957_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_957_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_957_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_957_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_957_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_957_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_957<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 121, 109] => lookup_957_0(acc),
            [110, 111, 109] => lookup_957_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_957_2(acc),
            [109, 105, 108] => lookup_957_3(acc),
            [111, 114, 103] => lookup_957_4(acc),
            [110, 101, 116] => lookup_957_5(acc),
            [101, 100, 117] => lookup_957_6(acc),
            [103, 111, 98] => lookup_957_7(acc),
            [99, 111, 109] => lookup_957_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_958() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_959() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_960() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_961() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_962() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_963() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_964() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_965_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_965_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_965_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_965_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_965_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_965_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_965_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_965<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_965_0(acc),
            [97, 99] => lookup_965_1(acc),
            [111, 114] => lookup_965_2(acc),
            [110, 101, 116] => lookup_965_3(acc),
            [99, 111] => lookup_965_4(acc),
            [99, 111, 109] => lookup_965_5(acc),
            [103, 111, 118] => lookup_965_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_966() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_967() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_968() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_969() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_970() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_971() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_972_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_972_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_972_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_972_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_972_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_972_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_972_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_972_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_972_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_972_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_972<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 99, 108, 111, 117, 100] => lookup_972_0(acc),
            [104, 97, 108, 102] => lookup_972_1(acc),
            [119, 112, 109, 117, 100, 101, 118] => lookup_972_2(acc),
            [109, 105, 114, 99, 108, 111, 117, 100] => lookup_972_3(acc),
            [102, 114, 101, 101, 115, 105, 116, 101] => lookup_972_4(acc),
            [102, 97, 115, 116, 118, 112, 115] => lookup_972_5(acc),
            [109, 121, 102, 97, 115, 116] => lookup_972_6(acc),
            [99, 108, 111, 117, 100, 97, 99, 99, 101, 115, 115] => lookup_972_7(acc),
            [116, 101, 109, 112, 117, 114, 108] => lookup_972_8(acc),
            [106, 101, 108, 101] => lookup_972_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_973() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_974() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_976() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_977() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_978() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_979_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_13_0_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_979_13_0_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_979_13_0_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_979_13_0_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_979_13_0_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_979_13_0_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_979_13_0_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_979_13_0_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_979_13_0_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_979_13_0_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_979_13_0_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_979_13_0_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            [99, 110, 45, 110, 111, 114, 116, 104, 119, 101, 115, 116, 45, 49] => {
                lookup_979_13_0_3_0(acc)
            }
            [99, 110, 45, 110, 111, 114, 116, 104, 45, 49] => lookup_979_13_0_3_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_979_13_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [99, 110, 45, 110, 111, 114, 116, 104, 45, 49] => lookup_979_13_0_0(info, labels, acc),
            [99, 111, 109, 112, 117, 116, 101] => lookup_979_13_0_1(info, labels, acc),
            [101, 108, 98] => lookup_979_13_0_2(info, labels, acc),
            [101, 98] => lookup_979_13_0_3(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_979_13<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 109, 97, 122, 111, 110, 97, 119, 115] => lookup_979_13_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_979_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 106] => lookup_979_0(acc),
            [103, 115] => lookup_979_1(acc),
            [104, 105] => lookup_979_2(acc),
            [120, 110, 45, 45, 53, 53, 113, 120, 53, 100] => lookup_979_3(acc),
            [103, 122] => lookup_979_4(acc),
            [106, 115] => lookup_979_5(acc),
            [110, 120] => lookup_979_6(acc),
            [115, 110] => lookup_979_7(acc),
            [120, 110, 45, 45, 111, 100, 48, 97, 108, 103] => lookup_979_8(acc),
            [109, 105, 108] => lookup_979_9(acc),
            [120, 106] => lookup_979_10(acc),
            [105, 110, 115, 116, 97, 110, 116, 99, 108, 111, 117, 100] => lookup_979_11(acc),
            [115, 104] => lookup_979_12(acc),
            [99, 111, 109] => lookup_979_13(labels, acc),
            [97, 99] => lookup_979_14(acc),
            [104, 98] => lookup_979_15(acc),
            [104, 101] => lookup_979_16(acc),
            [106, 120] => lookup_979_17(acc),
            [106, 108] => lookup_979_18(acc),
            [109, 111] => lookup_979_19(acc),
            [98, 106] => lookup_979_20(acc),
            [115, 99] => lookup_979_21(acc),
            [111, 114, 103] => lookup_979_22(acc),
            [102, 106] => lookup_979_23(acc),
            [99, 113] => lookup_979_24(acc),
            [104, 97] => lookup_979_25(acc),
            [110, 101, 116] => lookup_979_26(acc),
            [110, 109] => lookup_979_27(acc),
            [103, 120] => lookup_979_28(acc),
            [122, 106] => lookup_979_29(acc),
            [115, 120] => lookup_979_30(acc),
            [120, 110, 45, 45, 105, 111, 48, 97, 55, 105] => lookup_979_31(acc),
            [113, 104] => lookup_979_32(acc),
            [104, 108] => lookup_979_33(acc),
            [103, 111, 118] => lookup_979_34(acc),
            [231, 182, 178, 231, 181, 161] => lookup_979_35(acc),
            [108, 110] => lookup_979_36(acc),
            [116, 119] => lookup_979_37(acc),
            [97, 104] => lookup_979_38(acc),
            [104, 110] => lookup_979_39(acc),
            [229, 133, 172, 229, 143, 184] => lookup_979_40(acc),
            [231, 189, 145, 231, 187, 156] => lookup_979_41(acc),
            [115, 100] => lookup_979_42(acc),
            [120, 122] => lookup_979_43(acc),
            [104, 107] => lookup_979_44(acc),
            [101, 100, 117] => lookup_979_45(acc),
            [103, 100] => lookup_979_46(acc),
            [121, 110] => lookup_979_47(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_980() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_981() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_982() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_983() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_984() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_985() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_986() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_987_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_987_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_987_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_987_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_987_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_987_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_987_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_987_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_987_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_987_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_987_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_987_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_987<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 111, 98, 105] => lookup_987_0(acc),
            [111, 114] => lookup_987_1(acc),
            [104, 111, 116, 101, 108] => lookup_987_2(acc),
            [115, 99] => lookup_987_3(acc),
            [109, 101] => lookup_987_4(acc),
            [103, 111] => lookup_987_5(acc),
            [105, 110, 102, 111] => lookup_987_6(acc),
            [109, 105, 108] => lookup_987_7(acc),
            [116, 118] => lookup_987_8(acc),
            [99, 111] => lookup_987_9(acc),
            [110, 101] => lookup_987_10(acc),
            [97, 99] => lookup_987_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_988() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_989() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_990() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_991() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_992() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_993() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_994() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_995() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_996_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_996<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 117] => lookup_996_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_997() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_998() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_999() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1000() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1001() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1002() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1003() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1004() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1005() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1006() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1007() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1008() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1009() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1010() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1011_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1011<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 109, 103] => lookup_1011_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1012_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1012_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1012_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1012_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1012_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1012_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1012_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1012_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1012_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1012_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1012_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1012_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1012<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1012_0(labels, acc),
            [103, 111, 98] => lookup_1012_1(acc),
            [109, 105, 108] => lookup_1012_2(acc),
            [109, 117, 115, 105, 99, 97] => lookup_1012_3(acc),
            [111, 114, 103] => lookup_1012_4(acc),
            [116, 117, 114] => lookup_1012_5(acc),
            [110, 101, 116] => lookup_1012_6(acc),
            [101, 100, 117] => lookup_1012_7(acc),
            [105, 110, 116] => lookup_1012_8(acc),
            [103, 111, 118] => lookup_1012_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1013() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1015_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1015_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1015<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 116, 100, 108, 108] => lookup_1015_0(acc),
            [110, 111, 119, 45, 100, 110, 115] => lookup_1015_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1016() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1017() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1018() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1019() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1020() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1021() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1023() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1024() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [115, 97, 110, 100, 101] => lookup_1025_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1025_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_10_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_10<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_1025_10_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1025_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_30_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_30<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_1025_30_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1025_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_42_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_42<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_1025_42_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1025_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_45_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_45<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_1025_45_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1025_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_78_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_78<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 118, 108, 101, 114, 45, 113, 111, 97] => lookup_1025_78_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1025_79_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_79<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_1025_79_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1025_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_123_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_123<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_1025_123_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1025_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_128_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_128<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_1025_128_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1025_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_130_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_130_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_130<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 16usize;
    match labels.next() {
        Some(label) => match label {
            [104, 101, 114, 195, 184, 121] => lookup_1025_130_0(acc),
            [115, 97, 110, 100, 101] => lookup_1025_130_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1025_131_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_131_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_131_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_131_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_131_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_131_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_131<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [98, 111] => lookup_1025_131_0(acc),
            [104, 101, 114, 111, 121] => lookup_1025_131_1(acc),
            [120, 110, 45, 45, 104, 101, 114, 121, 45, 105, 114, 97] => lookup_1025_131_2(acc),
            [98, 195, 184] => lookup_1025_131_3(acc),
            [104, 101, 114, 195, 184, 121] => lookup_1025_131_4(acc),
            [120, 110, 45, 45, 98, 45, 53, 103, 97] => lookup_1025_131_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1025_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_158(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_162(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_163(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_164(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_165(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_166(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_167(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_168(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_169(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_170(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_171(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_172(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_173(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_174(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_175(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_176(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_177(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_178(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_179(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_180(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_181(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_182(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_183(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_184(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_185(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_186(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_187(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_188(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_189(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_190(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_191(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_192(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_193(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_194(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_195(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_196(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_197(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_198(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_199(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_200(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_201(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_202(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_203(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_204(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_205(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_206(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_207(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_208(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_209(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_210(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_211(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_212(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_213(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_214(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_215(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_216(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_217(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_218(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_219(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_220(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_221(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_222(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_223(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_224(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_225(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_226(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_227(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_228(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_229(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_230(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_231(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_232(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_233(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_234(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_235(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_236(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_237(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_238(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_239(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_240(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_241(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_242(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_243(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_244(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_245(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_246(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_247_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_247<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_1025_247_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1025_248(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_249(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_250(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_251(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_252(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_253(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_254(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_255(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_256(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_257(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_258(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_259(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_260(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_261(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_262(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_263(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_264(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_265(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_266(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_267(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_268(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_269(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_270(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_271(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_272_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_272<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [111, 115] => lookup_1025_272_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1025_273(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_274(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_275(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_276(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_277(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_278(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_279(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_280(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_281(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_282(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_283(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_284(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_285(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_286(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_287(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_288(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_289(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_290(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_291(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_292(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_293(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_294(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_295(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_296(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_297(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_298(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_299(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_300(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_301(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_302(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_303(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_304(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_305(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_306(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_307(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_308(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_309(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_310(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_311(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_312(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_313(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_314(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_315(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_316(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_317(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_318(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_319(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_320(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_321(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_322(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_323(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_324(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_325(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_326(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_327(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_328(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_329(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_330(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_331(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_332(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_333(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_334(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_335(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_336(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_337(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_338(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_339(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_340(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_341(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_342(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_343(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_344(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_345(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_346(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_347(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_348(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_349(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_350(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1025_351(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_352(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_353(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_354(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_355(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_356(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_357(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_358(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_359(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_360(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_361(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_362(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_363(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_364(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_365(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_366_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_366<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_1025_366_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1025_367(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_368_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_368_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_368_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_368_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_368<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [118, 195, 165, 108, 101, 114] => lookup_1025_368_0(acc),
            [111, 115] => lookup_1025_368_1(acc),
            [118, 97, 108, 101, 114] => lookup_1025_368_2(acc),
            [120, 110, 45, 45, 118, 108, 101, 114, 45, 113, 111, 97] => lookup_1025_368_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1025_369(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_370(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_371(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_372(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_373(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_374(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_375(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_376(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_377_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_377<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_1025_377_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1025_378(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_379(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_380(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_381(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_382(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_383(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_384(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_385(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_386(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_387(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_388(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_389(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_390(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_391(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_392(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_393(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_394(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_395(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_396(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_397(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_398(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_399(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_400(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_401(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_402(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_403(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_404(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_405(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_406(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_407(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_408_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_408_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_408<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 22usize;
    match labels.next() {
        Some(label) => match label {
            [115, 97, 110, 100, 101] => lookup_1025_408_0(acc),
            [120, 110, 45, 45, 104, 101, 114, 121, 45, 105, 114, 97] => lookup_1025_408_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1025_409(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_410(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_411(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_412(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_413(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_414(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_415(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_416(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_417_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_417<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [118, 97, 108, 101, 114] => lookup_1025_417_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1025_418_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_418<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_1025_418_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1025_419(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_420(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_421(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_422(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_423(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_424(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_425(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_426(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_427(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_428(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_429(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_430(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_431(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_432(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_433(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_434(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_435(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_436(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_437(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_438(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_439(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_440(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_441(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_442(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_443(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_444(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_445(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_446(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_447(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_448(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_449(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_450(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_451(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_452(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_453(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_454(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_455(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_456(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_457(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_458(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_459(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_460(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_461(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_462(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_463(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_464(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_465(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_466(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_467(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_468(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_469(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_470(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_471(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_472(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_473(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_474(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_475(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_476(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_477(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_478(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_479(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_480(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_481(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_482(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_483(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_484(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_485(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_486(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_487(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_488(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_489(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_490(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_491(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_492(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_493(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_494(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_495(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_496(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_497(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_498(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_499(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_500(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_501(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_502(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_503(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_504(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_505(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_506(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_507(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_508(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_509(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_510(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_511(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_512(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_513(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_514(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_515(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_516(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_517(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_518(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_519(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_520(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_521(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_522(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_523(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_524(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_525(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_526_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_526<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_1025_526_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1025_527(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_528(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_529(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_530(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_531(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_532(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_533(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_534(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_535(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_536(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_537(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_538(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_539_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_539<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_1025_539_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1025_540(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_541(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_542(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_543(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_544(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_545(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_546(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_547(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_548(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_549(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_550(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_551(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_552(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_553(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_554(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_555(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_556(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_557(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_558(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_559(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_560(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_561(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_562(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_563(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_564(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_565(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_566(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_567(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_568(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_569(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_570(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_571(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_572(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_573_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_573<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [110, 101, 115] => lookup_1025_573_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1025_574(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_575(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_576(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_577(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_578(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_579(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_580(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_581(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_582(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_583(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_584(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_585(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_586(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_587(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_588(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_589(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_590(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_591(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_592(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_593(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_594(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_595(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_596(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_597(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_598(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_599(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_600(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_601(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_602(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_603(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_604(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_605(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_606(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_607(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_608(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_609(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_610(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_611(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_612(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_613(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_614(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_615(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_616(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_617(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_618(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_619(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_620(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_621(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_622(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_623(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_624(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_625(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_626(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_627(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_628(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_629(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_630(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_631(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_632(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_633(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_634(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_635(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_636(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_637(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_638(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_639(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_640(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_641(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_642(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_643(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_644(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_645(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_646(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_647(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_648(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_649(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_650(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_651(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_652_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_652<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_1025_652_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1025_653(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_654(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_655(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_656(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_657(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_658(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_659(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_660(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_661(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_662(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_663(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_664(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_665(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_666(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_667(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_668(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1025_669(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_670_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_670<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_1025_670_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1025_671(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_672(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_673(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_674(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_675(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_676(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_677(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_678(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_679(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_680_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_680_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_680<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 15usize;
    match labels.next() {
        Some(label) => match label {
            [104, 101, 114, 111, 121] => lookup_1025_680_0(acc),
            [115, 97, 110, 100, 101] => lookup_1025_680_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1025_681(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_682(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_683(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_684(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_685(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_686(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_687(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_688(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_689(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_690(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_691_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_691<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [110, 101, 115] => lookup_1025_691_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1025_692(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_693(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_694(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_695_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_695<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_1025_695_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1025_696(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_697(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_698_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_698<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [118, 195, 165, 108, 101, 114] => lookup_1025_698_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1025_699(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_700(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_701(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_702(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_703(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_704(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_705(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_706(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_707(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_708(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_709(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_710(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_711(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_712(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_713(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_714_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_714<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_1025_714_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1025_715(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_716(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_717(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_718(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_719(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_720(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_721(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_722(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_723(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_724_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_724<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_1025_724_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1025_725(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_726(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_727(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_728(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_729(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_730(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_731(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_732(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_733(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_734(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_735(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_736(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_737(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_738(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_739(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_740(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_741(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_742(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_743(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_744(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_745(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_746(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_747(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_748(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_749(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_750_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_750_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_750_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_750<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [98, 111] => lookup_1025_750_0(acc),
            [120, 110, 45, 45, 98, 45, 53, 103, 97] => lookup_1025_750_1(acc),
            [98, 195, 184] => lookup_1025_750_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1025_751(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_752(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_753(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_754(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_755(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_756(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_757(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_758(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_759(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_760(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_761(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_762(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_763(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_764(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_765(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_766(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_767(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_768(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_769(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_770(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_771(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_772(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_773(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_774(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_775(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_776(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_777(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_778(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_779(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_780(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_781(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_782(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_783(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_784_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_784<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_1025_784_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1025_785(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_786(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_787(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_788(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_789(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_790(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_791(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_792(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_793(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_794(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_795(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_796(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_797(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_798(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_799(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_800(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_801(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_802(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_803(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_804(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_805(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_806(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_807(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_808(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_809(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_810(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_811(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_812(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_813(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_814(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_815(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_816(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_817(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_818_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_818<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_1025_818_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1025_819(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_820(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_821(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_822(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_823(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_824(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_825(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_826(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_827(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_828(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_829(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_830(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_831(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_832(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_833(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_834(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_835(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_836(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_837(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_838(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_839(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_840(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_841(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_842(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_843(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_844(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_845(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_846(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_847(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_848(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_849(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_850(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_851(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_852(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_853(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_854(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_855(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_856(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_857(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_858(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_859(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_860(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_861(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_862(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_863(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_864(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_865(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_866(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_867(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_868(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_869(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_870(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_871(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_872(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_873(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_874(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_875(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_876(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_877_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_877<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_1025_877_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1025_878(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_879(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_880(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_881(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_882(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_883(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_884(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_885(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_886(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_887(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_888(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_889(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_890(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_891(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_892(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_893(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 114, 100, 114, 101, 45, 108, 97, 110, 100] => lookup_1025_0(acc),
            [114, 97, 108, 105, 110, 103, 101, 110] => lookup_1025_1(acc),
            [118, 101, 115, 116, 102, 111, 108, 100] => lookup_1025_2(info, labels, acc),
            [115, 107, 106, 97, 107] => lookup_1025_3(acc),
            [115, 111, 114, 45, 111, 100, 97, 108] => lookup_1025_4(acc),
            [114, 195, 166, 108, 105, 110, 103, 101, 110] => lookup_1025_5(acc),
            [109, 105, 108] => lookup_1025_6(acc),
            [195, 165, 102, 106, 111, 114, 100] => lookup_1025_7(acc),
            [98, 114, 117, 109, 117, 110, 100, 100, 97, 108] => lookup_1025_8(acc),
            [102, 117, 111, 115, 115, 107, 111] => lookup_1025_9(acc),
            [115, 118, 97, 108, 98, 97, 114, 100] => lookup_1025_10(labels, acc),
            [102, 101, 116] => lookup_1025_11(acc),
            [102, 111, 114, 100, 101] => lookup_1025_12(acc),
            [120, 110, 45, 45, 98, 104, 99, 97, 118, 117, 111, 116, 110, 97, 45, 115, 52, 97] => {
                lookup_1025_13(acc)
            }
            [103, 97, 117, 115, 100, 97, 108] => lookup_1025_14(acc),
            [98, 195, 161, 108, 195, 161, 116] => lookup_1025_15(acc),
            [103, 105, 108, 100, 101, 115, 107, 195, 165, 108] => lookup_1025_16(acc),
            [109, 97, 114, 110, 97, 114, 100, 97, 108] => lookup_1025_17(acc),
            [120, 110, 45, 45, 109, 108, 115, 101, 108, 118, 45, 105, 117, 97] => {
                lookup_1025_18(acc)
            }
            [97, 117, 114, 108, 97, 110, 100] => lookup_1025_19(acc),
            [110, 101, 115, 111, 100, 100, 101, 110] => lookup_1025_20(acc),
            [114, 105, 110, 103, 115, 97, 107, 101, 114] => lookup_1025_21(acc),
            [115, 97, 114, 112, 115, 98, 111, 114, 103] => lookup_1025_22(acc),
            [104, 195, 161, 109, 109, 195, 161, 114, 102, 101, 97, 115, 116, 97] => {
                lookup_1025_23(acc)
            }
            [108, 195, 184, 116, 101, 110] => lookup_1025_24(acc),
            [110, 111, 114, 100, 107, 97, 112, 112] => lookup_1025_25(acc),
            [108, 195, 166, 114, 100, 97, 108] => lookup_1025_26(acc),
            [104, 111, 102] => lookup_1025_27(acc),
            [101, 105, 100, 115, 107, 111, 103] => lookup_1025_28(acc),
            [120, 110, 45, 45, 118, 103, 115, 121, 45, 113, 111, 97, 48, 106] => {
                lookup_1025_29(acc)
            }
            [111, 102] => lookup_1025_30(labels, acc),
            [120, 110, 45, 45, 98, 114, 110, 110, 121, 115, 117, 110, 100, 45, 109, 56, 97, 99] => {
                lookup_1025_31(acc)
            }
            [103, 117, 108, 101, 110] => lookup_1025_32(acc),
            [120, 110, 45, 45, 111, 115, 116, 101, 114, 121, 45, 102, 121, 97] => {
                lookup_1025_33(acc)
            }
            [98, 105, 110, 100, 97, 108] => lookup_1025_34(acc),
            [97, 109, 111, 116] => lookup_1025_35(acc),
            [101, 103, 101, 114, 115, 117, 110, 100] => lookup_1025_36(acc),
            [115, 110, 111, 97, 115, 97] => lookup_1025_37(acc),
            [98, 97, 109, 98, 108, 101] => lookup_1025_38(acc),
            [120, 110, 45, 45, 109, 111, 114, 101, 107, 101, 45, 106, 117, 97] => {
                lookup_1025_39(acc)
            }
            [115, 116, 97, 116, 104, 101, 108, 108, 101] => lookup_1025_40(acc),
            [120, 110, 45, 45, 98, 101, 97, 114, 97, 108, 118, 104, 107, 105, 45, 121, 52, 97] => {
                lookup_1025_41(acc)
            }
            [116, 109] => lookup_1025_42(labels, acc),
            [120, 110, 45, 45, 100, 121, 114, 121, 45, 105, 114, 97] => lookup_1025_43(acc),
            [115, 101, 108, 106, 101] => lookup_1025_44(acc),
            [97, 104] => lookup_1025_45(labels, acc),
            [120, 110, 45, 45, 121, 101, 114, 45, 122, 110, 97] => lookup_1025_46(acc),
            [100, 101, 97, 116, 110, 117] => lookup_1025_47(acc),
            [116, 114, 195, 166, 110, 97] => lookup_1025_48(acc),
            [105, 100, 114, 101, 116, 116] => lookup_1025_49(acc),
            [114, 101, 110, 100, 97, 108, 101, 110] => lookup_1025_50(acc),
            [104, 97, 103, 101, 98, 111, 115, 116, 97, 100] => lookup_1025_51(acc),
            [120, 110, 45, 45, 118, 114, 121, 45, 121, 108, 97, 53, 103] => lookup_1025_52(acc),
            [104, 118, 97, 108, 101, 114] => lookup_1025_53(acc),
            [102, 114, 195, 184, 121, 97] => lookup_1025_54(acc),
            [195, 184, 121, 101, 114] => lookup_1025_55(acc),
            [114, 111, 115, 116] => lookup_1025_56(acc),
            [115, 116, 111, 114, 102, 106, 111, 114, 100] => lookup_1025_57(acc),
            [120, 110, 45, 45, 108, 105, 110, 100, 115, 45, 112, 114, 97] => lookup_1025_58(acc),
            [114, 105, 110, 103, 101, 114, 105, 107, 101] => lookup_1025_59(acc),
            [120, 110, 45, 45, 104, 121, 108, 97, 110, 100, 101, 116, 45, 53, 52, 97] => {
                lookup_1025_60(acc)
            }
            [98, 114, 111, 110, 110, 111, 121, 115, 117, 110, 100] => lookup_1025_61(acc),
            [195, 184, 114, 115, 107, 111, 103] => lookup_1025_62(acc),
            [111, 109, 97, 115, 118, 117, 111, 116, 110, 97] => lookup_1025_63(acc),
            [195, 165, 109, 108, 105] => lookup_1025_64(acc),
            [102, 195, 184, 114, 100, 101] => lookup_1025_65(acc),
            [109, 97, 108, 118, 105, 107] => lookup_1025_66(acc),
            [111, 115, 101, 110] => lookup_1025_67(acc),
            [120, 110, 45, 45, 116, 114, 97, 110, 121, 45, 121, 117, 97] => lookup_1025_68(acc),
            [116, 106, 195, 184, 109, 101] => lookup_1025_69(acc),
            [120, 110, 45, 45, 104, 110, 101, 102, 111, 115, 115, 45, 113, 49, 97] => {
                lookup_1025_70(acc)
            }
            [103, 106, 101, 109, 110, 101, 115] => lookup_1025_71(acc),
            [120, 110, 45, 45, 103, 105, 108, 100, 101, 115, 107, 108, 45, 103, 48, 97] => {
                lookup_1025_72(acc)
            }
            [120, 110, 45, 45, 107, 114, 97, 103, 101, 114, 45, 103, 121, 97] => {
                lookup_1025_73(acc)
            }
            [114, 101, 110, 110, 101, 98, 117] => lookup_1025_74(acc),
            [118, 97, 107, 115, 100, 97, 108] => lookup_1025_75(acc),
            [109, 105, 100, 116, 114, 101, 45, 103, 97, 117, 108, 100, 97, 108] => {
                lookup_1025_76(acc)
            }
            [118, 97, 97, 112, 115, 116, 101] => lookup_1025_77(acc),
            [120, 110, 45, 45, 115, 116, 102, 111, 108, 100, 45, 57, 120, 97] => {
                lookup_1025_78(info, labels, acc)
            }
            [110, 116] => lookup_1025_79(labels, acc),
            [98, 97, 100, 97, 100, 100, 106, 97] => lookup_1025_80(acc),
            [120, 110, 45, 45, 107, 111, 108, 117, 111, 107, 116, 97, 45, 55, 121, 97, 53, 55, 104] => {
                lookup_1025_81(acc)
            }
            [107, 114, 105, 115, 116, 105, 97, 110, 115, 97, 110, 100] => lookup_1025_82(acc),
            [120, 110, 45, 45, 114, 97, 100, 121, 45, 105, 114, 97] => lookup_1025_83(acc),
            [115, 97, 110, 100, 101, 102, 106, 111, 114, 100] => lookup_1025_84(acc),
            [101, 105, 100, 115, 118, 111, 108, 108] => lookup_1025_85(acc),
            [115, 107, 101, 100, 115, 109, 111] => lookup_1025_86(acc),
            [120, 110, 45, 45, 109, 115, 121, 45, 117, 108, 97, 48, 104] => lookup_1025_87(acc),
            [120, 110, 45, 45, 115, 109, 108, 97, 45, 104, 114, 97] => lookup_1025_88(acc),
            [118, 97, 110, 103] => lookup_1025_89(acc),
            [101, 105, 103, 101, 114, 115, 117, 110, 100] => lookup_1025_90(acc),
            [115, 111, 110, 103, 100, 97, 108, 101, 110] => lookup_1025_91(acc),
            [98, 106, 101, 114, 107, 114, 101, 105, 109] => lookup_1025_92(acc),
            [114, 117, 111, 118, 97, 116] => lookup_1025_93(acc),
            [118, 111, 108, 100, 97] => lookup_1025_94(acc),
            [98, 114, 111, 110, 110, 111, 121] => lookup_1025_95(acc),
            [100, 97, 118, 118, 101, 115, 105, 105, 100, 97] => lookup_1025_96(acc),
            [111, 114, 107, 97, 110, 103, 101, 114] => lookup_1025_97(acc),
            [102, 97, 114, 115, 117, 110, 100] => lookup_1025_98(acc),
            [120, 110, 45, 45, 107, 102, 106, 111, 114, 100, 45, 105, 117, 97] => {
                lookup_1025_99(acc)
            }
            [120, 110, 45, 45, 104, 103, 101, 98, 111, 115, 116, 97, 100, 45, 103, 51, 97] => {
                lookup_1025_100(acc)
            }
            [120, 110, 45, 45, 109, 101, 114, 107, 101, 114, 45, 107, 117, 97] => {
                lookup_1025_101(acc)
            }
            [109, 195, 165, 108, 115, 101, 108, 118] => lookup_1025_102(acc),
            [97, 115, 107, 101, 114] => lookup_1025_103(acc),
            [110, 97, 117, 115, 116, 100, 97, 108] => lookup_1025_104(acc),
            [107, 118, 105, 110, 101, 115, 100, 97, 108] => lookup_1025_105(acc),
            [120, 110, 45, 45, 114, 108, 105, 110, 103, 101, 110, 45, 109, 120, 97] => {
                lookup_1025_106(acc)
            }
            [115, 107, 106, 101, 114, 118, 195, 184, 121] => lookup_1025_107(acc),
            [114, 97, 110, 100, 97, 98, 101, 114, 103] => lookup_1025_108(acc),
            [110, 101, 100, 114, 101, 45, 101, 105, 107, 101, 114] => lookup_1025_109(acc),
            [115, 105, 108, 106, 97, 110] => lookup_1025_110(acc),
            [105, 98, 101, 115, 116, 97, 100] => lookup_1025_111(acc),
            [103, 195, 161, 105, 118, 117, 111, 116, 110, 97] => lookup_1025_112(acc),
            [109, 101, 108, 111, 121] => lookup_1025_113(acc),
            [111, 112, 112, 101, 103, 195, 165, 114, 100] => lookup_1025_114(acc),
            [120, 110, 45, 45, 121, 103, 97, 114, 100, 101, 110, 45, 112, 49, 97] => {
                lookup_1025_115(acc)
            }
            [115, 117, 108, 100, 97, 108] => lookup_1025_116(acc),
            [116, 121, 115, 110, 101, 115] => lookup_1025_117(acc),
            [104, 111, 108, 116, 195, 165, 108, 101, 110] => lookup_1025_118(acc),
            [107, 118, 105, 116, 101, 115, 101, 105, 100] => lookup_1025_119(acc),
            [118, 101, 115, 116, 110, 101, 115] => lookup_1025_120(acc),
            [97, 114, 101, 110, 100, 97, 108] => lookup_1025_121(acc),
            [102, 101, 100, 106, 101] => lookup_1025_122(acc),
            [114, 108] => lookup_1025_123(labels, acc),
            [102, 108, 111, 114, 111] => lookup_1025_124(acc),
            [108, 117, 110, 100] => lookup_1025_125(acc),
            [109, 97, 108, 97, 116, 118, 117, 111, 112, 109, 105] => lookup_1025_126(acc),
            [100, 114, 97, 110, 103, 101, 100, 97, 108] => lookup_1025_127(acc),
            [115, 102] => lookup_1025_128(labels, acc),
            [120, 110, 45, 45, 105, 110, 100, 101, 114, 121, 45, 102, 121, 97] => {
                lookup_1025_129(acc)
            }
            [109, 195, 184, 114, 101, 45, 111, 103, 45, 114, 111, 109, 115, 100, 97, 108] => {
                lookup_1025_130(info, labels, acc)
            }
            [110, 111, 114, 100, 108, 97, 110, 100] => lookup_1025_131(info, labels, acc),
            [104, 111, 108, 109, 101, 115, 116, 114, 97, 110, 100] => lookup_1025_132(acc),
            [107, 111, 110, 103, 115, 118, 105, 110, 103, 101, 114] => lookup_1025_133(acc),
            [111, 112, 112, 100, 97, 108] => lookup_1025_134(acc),
            [120, 110, 45, 45, 114, 115, 107, 111, 103, 45, 117, 117, 97] => lookup_1025_135(acc),
            [103, 195, 161, 108, 115, 195, 161] => lookup_1025_136(acc),
            [104, 195, 184, 121, 108, 97, 110, 100, 101, 116] => lookup_1025_137(acc),
            [104, 111, 107, 107, 115, 117, 110, 100] => lookup_1025_138(acc),
            [102, 121, 114, 101, 115, 100, 97, 108] => lookup_1025_139(acc),
            [120, 110, 45, 45, 115, 45, 49, 102, 97] => lookup_1025_140(acc),
            [98, 111, 100, 111] => lookup_1025_141(acc),
            [108, 117, 115, 116, 101, 114] => lookup_1025_142(acc),
            [110, 101, 115, 115, 101, 98, 121] => lookup_1025_143(acc),
            [114, 97, 100, 195, 184, 121] => lookup_1025_144(acc),
            [120, 110, 45, 45, 115, 108, 97, 116, 45, 53, 110, 97] => lookup_1025_145(acc),
            [115, 109, 111, 108, 97] => lookup_1025_146(acc),
            [115, 111, 114, 45, 97, 117, 114, 100, 97, 108] => lookup_1025_147(acc),
            [120, 110, 45, 45, 115, 114, 45, 102, 114, 111, 110, 45, 113, 49, 97] => {
                lookup_1025_148(acc)
            }
            [115, 97, 117, 104, 101, 114, 97, 100] => lookup_1025_149(acc),
            [112, 111, 114, 115, 97, 110, 103, 117] => lookup_1025_150(acc),
            [116, 114, 97, 110, 111, 121] => lookup_1025_151(acc),
            [115, 118, 101, 105, 111] => lookup_1025_152(acc),
            [108, 195, 184, 100, 105, 110, 103, 101, 110] => lookup_1025_153(acc),
            [120, 110, 45, 45, 116, 114, 110, 97, 45, 119, 111, 97] => lookup_1025_154(acc),
            [108, 101, 105, 114, 118, 105, 107] => lookup_1025_155(acc),
            [102, 121, 108, 107, 101, 115, 98, 105, 98, 108] => lookup_1025_156(acc),
            [98, 105, 101, 118, 195, 161, 116] => lookup_1025_157(acc),
            [102, 114, 111, 103, 110] => lookup_1025_158(acc),
            [115, 107, 195, 165, 110, 108, 97, 110, 100] => lookup_1025_159(acc),
            [118, 101, 103, 97, 114, 115, 104, 101, 105] => lookup_1025_160(acc),
            [101, 118, 101, 110, 195, 161, 197, 161, 197, 161, 105] => lookup_1025_161(acc),
            [108, 101, 115, 106, 97] => lookup_1025_162(acc),
            [120, 110, 45, 45, 116, 114, 103, 115, 116, 97, 100, 45, 114, 49, 97] => {
                lookup_1025_163(acc)
            }
            [118, 111, 97, 103, 97, 116] => lookup_1025_164(acc),
            [120, 110, 45, 45, 97, 118, 101, 114, 121, 45, 121, 117, 97] => lookup_1025_165(acc),
            [116, 114, 97, 110, 98, 121] => lookup_1025_166(acc),
            [108, 97, 104, 112, 112, 105] => lookup_1025_167(acc),
            [114, 111, 109, 115, 107, 111, 103] => lookup_1025_168(acc),
            [97, 108, 103, 97, 114, 100] => lookup_1025_169(acc),
            [196, 141, 195, 161, 104, 99, 101, 115, 117, 111, 108, 111] => lookup_1025_170(acc),
            [118, 101, 115, 116, 118, 195, 165, 103, 195, 184, 121] => lookup_1025_171(acc),
            [115, 110, 195, 165, 115, 97] => lookup_1025_172(acc),
            [120, 110, 45, 45, 115, 110, 100, 114, 101, 45, 108, 97, 110, 100, 45, 48, 99, 98] => {
                lookup_1025_173(acc)
            }
            [97, 117, 100, 110, 101, 100, 97, 108, 110] => lookup_1025_174(acc),
            [118, 97, 103, 97, 110] => lookup_1025_175(acc),
            [118, 97, 114, 100, 195, 184] => lookup_1025_176(acc),
            [110, 101, 115, 111, 100, 100, 116, 97, 110, 103, 101, 110] => lookup_1025_177(acc),
            [107, 111, 109, 109, 117, 110, 101] => lookup_1025_178(acc),
            [110, 97, 114, 118, 105, 107] => lookup_1025_179(acc),
            [120, 110, 45, 45, 107, 114, 106, 111, 104, 107, 97, 45, 104, 119, 97, 98, 52, 57, 106] => {
                lookup_1025_180(acc)
            }
            [109, 117, 111, 115, 195, 161, 116] => lookup_1025_181(acc),
            [108, 105, 110, 100, 195, 165, 115] => lookup_1025_182(acc),
            [100, 105, 101, 108, 100, 100, 97, 110, 117, 111, 114, 114, 105] => {
                lookup_1025_183(acc)
            }
            [104, 111, 110, 101, 102, 111, 115, 115] => lookup_1025_184(acc),
            [111, 115, 111, 121, 114, 111] => lookup_1025_185(acc),
            [120, 110, 45, 45, 121, 115, 116, 114, 101, 45, 115, 108, 105, 100, 114, 101, 45, 117, 106, 98] => {
                lookup_1025_186(acc)
            }
            [111, 121, 115, 116, 114, 101, 45, 115, 108, 105, 100, 114, 101] => {
                lookup_1025_187(acc)
            }
            [120, 110, 45, 45, 98, 105, 100, 114, 45, 53, 110, 97, 99] => lookup_1025_188(acc),
            [102, 105, 110, 110, 111, 121] => lookup_1025_189(acc),
            [120, 110, 45, 45, 98, 116, 115, 102, 106, 111, 114, 100, 45, 57, 122, 97] => {
                lookup_1025_190(acc)
            }
            [120, 110, 45, 45, 108, 114, 101, 110, 115, 107, 111, 103, 45, 53, 52, 97] => {
                lookup_1025_191(acc)
            }
            [120, 110, 45, 45, 108, 100, 105, 110, 103, 101, 110, 45, 113, 49, 97] => {
                lookup_1025_192(acc)
            }
            [98, 105, 114, 107, 101, 110, 101, 115] => lookup_1025_193(acc),
            [98, 195, 165, 116, 115, 102, 106, 111, 114, 100] => lookup_1025_194(acc),
            [104, 195, 166, 103, 101, 98, 111, 115, 116, 97, 100] => lookup_1025_195(acc),
            [118, 97, 114, 100, 111] => lookup_1025_196(acc),
            [115, 195, 184, 103, 110, 101] => lookup_1025_197(acc),
            [102, 117, 115, 97] => lookup_1025_198(acc),
            [108, 117, 114, 195, 184, 121] => lookup_1025_199(acc),
            [195, 165, 109, 111, 116] => lookup_1025_200(acc),
            [120, 110, 45, 45, 116, 114, 111, 109, 115, 45, 122, 117, 97] => lookup_1025_201(acc),
            [117, 116, 115, 105, 114, 97] => lookup_1025_202(acc),
            [120, 110, 45, 45, 103, 108, 115, 45, 101, 108, 97, 99] => lookup_1025_203(acc),
            [118, 97, 100, 115, 195, 184] => lookup_1025_204(acc),
            [108, 101, 105, 107, 97, 110, 103, 101, 114] => lookup_1025_205(acc),
            [120, 110, 45, 45, 98, 105, 101, 118, 116, 45, 48, 113, 97] => lookup_1025_206(acc),
            [114, 97, 105, 115, 97] => lookup_1025_207(acc),
            [105, 110, 100, 101, 114, 195, 184, 121] => lookup_1025_208(acc),
            [107, 97, 114, 108, 115, 111, 121] => lookup_1025_209(acc),
            [109, 97, 108, 115, 101, 108, 118] => lookup_1025_210(acc),
            [104, 97, 100, 115, 101, 108] => lookup_1025_211(acc),
            [107, 97, 114, 97, 115, 106, 111, 104, 107, 97] => lookup_1025_212(acc),
            [108, 101, 97, 197, 139, 103, 97, 118, 105, 105, 107, 97] => lookup_1025_213(acc),
            [107, 114, 97, 97, 110, 103, 104, 107, 101] => lookup_1025_214(acc),
            [108, 105, 110, 100, 97, 115] => lookup_1025_215(acc),
            [120, 110, 45, 45, 114, 105, 115, 97, 45, 53, 110, 97] => lookup_1025_216(acc),
            [97, 110, 100, 97, 115, 117, 111, 108, 111] => lookup_1025_217(acc),
            [115, 116, 97, 118, 97, 110, 103, 101, 114] => lookup_1025_218(acc),
            [107, 97, 117, 116, 111, 107, 101, 105, 110, 111] => lookup_1025_219(acc),
            [104, 97, 98, 109, 101, 114] => lookup_1025_220(acc),
            [110, 111, 116, 111, 100, 100, 101, 110] => lookup_1025_221(acc),
            [195, 165, 107, 114, 101, 104, 97, 109, 110] => lookup_1025_222(acc),
            [103, 114, 117, 101] => lookup_1025_223(acc),
            [112, 111, 114, 115, 97, 110, 103, 101, 114] => lookup_1025_224(acc),
            [102, 108, 101, 115, 98, 101, 114, 103] => lookup_1025_225(acc),
            [109, 111, 115, 118, 105, 107] => lookup_1025_226(acc),
            [111, 115, 116, 101, 114, 111, 121] => lookup_1025_227(acc),
            [115, 117, 108, 97] => lookup_1025_228(acc),
            [115, 117, 110, 100] => lookup_1025_229(acc),
            [195, 184, 107, 115, 110, 101, 115] => lookup_1025_230(acc),
            [102, 111, 108, 108, 100, 97, 108] => lookup_1025_231(acc),
            [104, 97, 109, 109, 97, 114, 102, 101, 97, 115, 116, 97] => lookup_1025_232(acc),
            [115, 195, 184, 114, 45, 118, 97, 114, 97, 110, 103, 101, 114] => lookup_1025_233(acc),
            [97, 115, 107, 111, 121] => lookup_1025_234(acc),
            [120, 110, 45, 45, 114, 100, 121, 45, 48, 110, 97, 98] => lookup_1025_235(acc),
            [120, 110, 45, 45, 104, 111, 98, 108, 45, 105, 114, 97] => lookup_1025_236(acc),
            [120, 110, 45, 45, 108, 104, 112, 112, 105, 45, 120, 113, 97] => lookup_1025_237(acc),
            [115, 105, 101, 108, 108, 97, 107] => lookup_1025_238(acc),
            [115, 111, 114, 114, 101, 105, 115, 97] => lookup_1025_239(acc),
            [114, 111, 108, 108, 97, 103] => lookup_1025_240(acc),
            [120, 110, 45, 45, 115, 107, 106, 107, 45, 115, 111, 97] => lookup_1025_241(acc),
            [108, 195, 161, 104, 112, 112, 105] => lookup_1025_242(acc),
            [97, 118, 101, 114, 111, 121] => lookup_1025_243(acc),
            [108, 101, 107, 97] => lookup_1025_244(acc),
            [120, 110, 45, 45, 117, 110, 106, 114, 103, 97, 45, 114, 116, 97] => {
                lookup_1025_245(acc)
            }
            [100, 97, 118, 118, 101, 110, 106, 97, 114, 103, 97] => lookup_1025_246(acc),
            [109, 114] => lookup_1025_247(labels, acc),
            [115, 97, 110, 100, 110, 101, 115, 115, 106, 111, 101, 110] => lookup_1025_248(acc),
            [97, 115, 107, 118, 111, 108, 108] => lookup_1025_249(acc),
            [103, 106, 111, 118, 105, 107] => lookup_1025_250(acc),
            [115, 97, 108, 116, 100, 97, 108] => lookup_1025_251(acc),
            [115, 116, 97, 110, 103, 101] => lookup_1025_252(acc),
            [195, 184, 115, 116, 114, 101, 45, 116, 111, 116, 101, 110] => lookup_1025_253(acc),
            [115, 121, 107, 107, 121, 108, 118, 101, 110] => lookup_1025_254(acc),
            [120, 110, 45, 45, 109, 117, 111, 115, 116, 45, 48, 113, 97] => lookup_1025_255(acc),
            [107, 195, 161, 114, 195, 161, 197, 161, 106, 111, 104, 107, 97] => {
                lookup_1025_256(acc)
            }
            [104, 97, 108, 100, 101, 110] => lookup_1025_257(acc),
            [116, 114, 111, 109, 115, 111] => lookup_1025_258(acc),
            [108, 97, 114, 100, 97, 108] => lookup_1025_259(acc),
            [101, 118, 101, 110, 101, 115] => lookup_1025_260(acc),
            [104, 117, 114, 117, 109] => lookup_1025_261(acc),
            [116, 121, 110, 115, 101, 116] => lookup_1025_262(acc),
            [120, 110, 45, 45, 118, 103, 97, 110, 45, 113, 111, 97] => lookup_1025_263(acc),
            [103, 105, 115, 107, 101] => lookup_1025_264(acc),
            [118, 101, 115, 116, 114, 101, 45, 116, 111, 116, 101, 110] => lookup_1025_265(acc),
            [112, 111, 114, 115, 195, 161, 197, 139, 103, 117] => lookup_1025_266(acc),
            [120, 110, 45, 45, 118, 101, 103, 114, 115, 104, 101, 105, 45, 99, 48, 97] => {
                lookup_1025_267(acc)
            }
            [120, 110, 45, 45, 118, 103, 45, 121, 105, 97, 98] => lookup_1025_268(acc),
            [100, 111, 118, 114, 101] => lookup_1025_269(acc),
            [112, 114, 105, 118] => lookup_1025_270(acc),
            [120, 110, 45, 45, 115, 110, 101, 115, 45, 112, 111, 97] => lookup_1025_271(acc),
            [104, 111, 114, 100, 97, 108, 97, 110, 100] => lookup_1025_272(info, labels, acc),
            [118, 101, 115, 116, 118, 97, 103, 111, 121] => lookup_1025_273(acc),
            [120, 110, 45, 45, 107, 118, 110, 97, 110, 103, 101, 110, 45, 107, 48, 97] => {
                lookup_1025_274(acc)
            }
            [195, 165, 115, 110, 101, 115] => lookup_1025_275(acc),
            [103, 97, 109, 118, 105, 107] => lookup_1025_276(acc),
            [104, 195, 184, 121, 97, 110, 103, 101, 114] => lookup_1025_277(acc),
            [108, 101, 114, 100, 97, 108] => lookup_1025_278(acc),
            [120, 110, 45, 45, 115, 97, 110, 100, 121, 45, 121, 117, 97] => lookup_1025_279(acc),
            [117, 108, 108, 101, 110, 115, 118, 97, 110, 103] => lookup_1025_280(acc),
            [118, 97, 103, 97] => lookup_1025_281(acc),
            [97, 108, 116, 97] => lookup_1025_282(acc),
            [107, 97, 102, 106, 111, 114, 100] => lookup_1025_283(acc),
            [102, 108, 195, 165] => lookup_1025_284(acc),
            [109, 101, 114, 97, 107, 101, 114] => lookup_1025_285(acc),
            [110, 111, 116, 116, 101, 114, 111, 121] => lookup_1025_286(acc),
            [114, 111, 114, 111, 115] => lookup_1025_287(acc),
            [101, 108, 118, 101, 114, 117, 109] => lookup_1025_288(acc),
            [120, 110, 45, 45, 107, 118, 105, 116, 115, 121, 45, 102, 121, 97] => {
                lookup_1025_289(acc)
            }
            [110, 97, 114, 118, 105, 105, 107, 97] => lookup_1025_290(acc),
            [107, 114, 111, 100, 115, 104, 101, 114, 97, 100] => lookup_1025_291(acc),
            [115, 101, 108, 98, 117] => lookup_1025_292(acc),
            [98, 111, 100, 195, 184] => lookup_1025_293(acc),
            [110, 97, 118, 117, 111, 116, 110, 97] => lookup_1025_294(acc),
            [109, 101, 108, 104, 117, 115] => lookup_1025_295(acc),
            [114, 195, 184, 121, 107, 101, 110] => lookup_1025_296(acc),
            [115, 116, 97, 116] => lookup_1025_297(acc),
            [97, 108, 101, 115, 117, 110, 100] => lookup_1025_298(acc),
            [108, 101, 98, 101, 115, 98, 121] => lookup_1025_299(acc),
            [98, 97, 108, 115, 102, 106, 111, 114, 100] => lookup_1025_300(acc),
            [98, 97, 104, 99, 97, 118, 117, 111, 116, 110, 97] => lookup_1025_301(acc),
            [107, 114, 97, 103, 101, 114, 195, 184] => lookup_1025_302(acc),
            [103, 195, 161, 197, 139, 103, 97, 118, 105, 105, 107, 97] => lookup_1025_303(acc),
            [104, 106, 101, 108, 109, 101, 108, 97, 110, 100] => lookup_1025_304(acc),
            [108, 117, 114, 111, 121] => lookup_1025_305(acc),
            [108, 121, 110, 103, 100, 97, 108] => lookup_1025_306(acc),
            [120, 110, 45, 45, 98, 114, 110, 110, 121, 45, 119, 117, 97, 99] => {
                lookup_1025_307(acc)
            }
            [120, 110, 45, 45, 115, 107, 110, 108, 97, 110, 100, 45, 102, 120, 97] => {
                lookup_1025_308(acc)
            }
            [115, 195, 184, 114, 45, 111, 100, 97, 108] => lookup_1025_309(acc),
            [99, 97, 104, 99, 101, 115, 117, 111, 108, 111] => lookup_1025_310(acc),
            [118, 97, 114, 111, 121] => lookup_1025_311(acc),
            [107, 114, 195, 184, 100, 115, 104, 101, 114, 97, 100] => lookup_1025_312(acc),
            [98, 97, 106, 100, 100, 97, 114] => lookup_1025_313(acc),
            [120, 110, 45, 45, 107, 114, 101, 104, 97, 109, 110, 45, 100, 120, 97] => {
                lookup_1025_314(acc)
            }
            [120, 110, 45, 45, 115, 107, 110, 105, 116, 45, 121, 113, 97] => lookup_1025_315(acc),
            [120, 110, 45, 45, 111, 112, 112, 101, 103, 114, 100, 45, 105, 120, 97] => {
                lookup_1025_316(acc)
            }
            [120, 110, 45, 45, 115, 103, 110, 101, 45, 103, 114, 97] => lookup_1025_317(acc),
            [195, 161, 108, 116, 195, 161] => lookup_1025_318(acc),
            [110, 97, 109, 100, 97, 108, 115, 101, 105, 100] => lookup_1025_319(acc),
            [115, 116, 111, 107, 107, 101] => lookup_1025_320(acc),
            [115, 116, 106, 111, 114, 100, 97, 108] => lookup_1025_321(acc),
            [101, 118, 106, 101, 45, 111, 103, 45, 104, 111, 114, 110, 110, 101, 115] => {
                lookup_1025_322(acc)
            }
            [97, 110, 100, 101, 98, 117] => lookup_1025_323(acc),
            [104, 101, 109, 110, 101, 115] => lookup_1025_324(acc),
            [102, 108, 97] => lookup_1025_325(acc),
            [108, 101, 110, 118, 105, 107] => lookup_1025_326(acc),
            [103, 114, 97, 110, 101] => lookup_1025_327(acc),
            [107, 97, 114, 109, 111, 121] => lookup_1025_328(acc),
            [97, 117, 114, 115, 107, 111, 103, 45, 104, 111, 108, 97, 110, 100] => {
                lookup_1025_329(acc)
            }
            [108, 111, 97, 98, 195, 161, 116] => lookup_1025_330(acc),
            [120, 110, 45, 45, 115, 116, 114, 101, 45, 116, 111, 116, 101, 110, 45, 122, 99, 98] => {
                lookup_1025_331(acc)
            }
            [114, 195, 184, 115, 116] => lookup_1025_332(acc),
            [103, 114, 97, 110] => lookup_1025_333(acc),
            [102, 111, 108, 107, 101, 98, 105, 98, 108] => lookup_1025_334(acc),
            [114, 195, 184, 109, 115, 107, 111, 103] => lookup_1025_335(acc),
            [115, 105, 114, 100, 97, 108] => lookup_1025_336(acc),
            [103, 114, 111, 110, 103] => lookup_1025_337(acc),
            [115, 107, 105, 101, 114, 118, 97] => lookup_1025_338(acc),
            [118, 101, 103, 195, 165, 114, 115, 104, 101, 105] => lookup_1025_339(acc),
            [115, 117, 114, 110, 97, 100, 97, 108] => lookup_1025_340(acc),
            [98, 111, 107, 110] => lookup_1025_341(acc),
            [120, 110, 45, 45, 100, 97, 118, 118, 101, 110, 106, 114, 103, 97, 45, 121, 52, 97] => {
                lookup_1025_342(acc)
            }
            [111, 118, 101, 114, 104, 97, 108, 108, 97] => lookup_1025_343(acc),
            [115, 195, 161, 108, 195, 161, 116] => lookup_1025_344(acc),
            [114, 111, 100, 111, 121] => lookup_1025_345(acc),
            [98, 97, 116, 115, 102, 106, 111, 114, 100] => lookup_1025_346(acc),
            [103, 97, 108, 115, 97] => lookup_1025_347(acc),
            [118, 105, 107, 110, 97] => lookup_1025_348(acc),
            [118, 195, 165, 103, 195, 165] => lookup_1025_349(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1025_350(acc),
            [120, 110, 45, 45, 110, 109, 101, 115, 106, 101, 118, 117, 101, 109, 105, 101, 45, 116, 99, 98, 97] => {
                lookup_1025_351(acc)
            }
            [104, 111, 114, 116, 101, 110] => lookup_1025_352(acc),
            [120, 110, 45, 45, 115, 108, 116, 45, 101, 108, 97, 98] => lookup_1025_353(acc),
            [102, 106, 101, 108, 108] => lookup_1025_354(acc),
            [102, 114, 111, 121, 97] => lookup_1025_355(acc),
            [106, 195, 184, 114, 112, 101, 108, 97, 110, 100] => lookup_1025_356(acc),
            [104, 97, 109, 109, 101, 114, 102, 101, 115, 116] => lookup_1025_357(acc),
            [100, 121, 114, 195, 184, 121] => lookup_1025_358(acc),
            [97, 107, 110, 111, 108, 117, 111, 107, 116, 97] => lookup_1025_359(acc),
            [104, 97, 109, 97, 114, 111, 121] => lookup_1025_360(acc),
            [115, 111, 114, 102, 111, 108, 100] => lookup_1025_361(acc),
            [109, 111, 45, 105, 45, 114, 97, 110, 97] => lookup_1025_362(acc),
            [98, 97, 108, 108, 97, 110, 103, 101, 110] => lookup_1025_363(acc),
            [115, 107, 105, 101, 114, 118, 195, 161] => lookup_1025_364(acc),
            [115, 116, 111, 114, 100, 97, 108] => lookup_1025_365(acc),
            [97, 97] => lookup_1025_366(labels, acc),
            [120, 110, 45, 45, 109, 108, 105, 45, 116, 108, 97] => lookup_1025_367(acc),
            [104, 101, 100, 109, 97, 114, 107] => lookup_1025_368(info, labels, acc),
            [109, 111, 108, 100, 101] => lookup_1025_369(acc),
            [120, 110, 45, 45, 98, 106, 97, 114, 107, 121, 45, 102, 121, 97] => {
                lookup_1025_370(acc)
            }
            [120, 110, 45, 45, 115, 101, 114, 97, 108, 45, 108, 114, 97] => lookup_1025_371(acc),
            [104, 97, 114, 101, 105, 100] => lookup_1025_372(acc),
            [115, 111, 108, 97] => lookup_1025_373(acc),
            [103, 108, 111, 112, 112, 101, 110] => lookup_1025_374(acc),
            [108, 105, 101, 114] => lookup_1025_375(acc),
            [107, 118, 195, 166, 102, 106, 111, 114, 100] => lookup_1025_376(acc),
            [118, 97] => lookup_1025_377(labels, acc),
            [115, 97, 110, 100, 110, 101, 115, 115, 106, 195, 184, 101, 110] => {
                lookup_1025_378(acc)
            }
            [102, 114, 97, 110, 97] => lookup_1025_379(acc),
            [104, 97, 114, 115, 116, 97, 100] => lookup_1025_380(acc),
            [107, 118, 105, 116, 115, 195, 184, 121] => lookup_1025_381(acc),
            [108, 101, 97, 110, 103, 97, 118, 105, 105, 107, 97] => lookup_1025_382(acc),
            [120, 110, 45, 45, 108, 101, 97, 103, 97, 118, 105, 105, 107, 97, 45, 53, 50, 98] => {
                lookup_1025_383(acc)
            }
            [108, 111, 112, 112, 97] => lookup_1025_384(acc),
            [104, 111, 121, 97, 110, 103, 101, 114] => lookup_1025_385(acc),
            [108, 111, 100, 105, 110, 103, 101, 110] => lookup_1025_386(acc),
            [108, 195, 184, 114, 101, 110, 115, 107, 111, 103] => lookup_1025_387(acc),
            [109, 101, 108, 97, 110, 100] => lookup_1025_388(acc),
            [115, 107, 101, 100, 115, 109, 111, 107, 111, 114, 115, 101, 116] => {
                lookup_1025_389(acc)
            }
            [103, 97, 117, 108, 97, 114] => lookup_1025_390(acc),
            [110, 195, 165, 195, 165, 109, 101, 115, 106, 101, 118, 117, 101, 109, 105, 101] => {
                lookup_1025_391(acc)
            }
            [120, 110, 45, 45, 114, 101, 110, 110, 101, 115, 121, 45, 118, 49, 97] => {
                lookup_1025_392(acc)
            }
            [98, 97, 108, 97, 116] => lookup_1025_393(acc),
            [115, 97, 108, 97, 116] => lookup_1025_394(acc),
            [120, 110, 45, 45, 98, 108, 116, 45, 101, 108, 97, 98] => lookup_1025_395(acc),
            [107, 118, 195, 166, 110, 97, 110, 103, 101, 110] => lookup_1025_396(acc),
            [115, 107, 105, 112, 116, 118, 101, 116] => lookup_1025_397(acc),
            [115, 111, 107, 110, 100, 97, 108] => lookup_1025_398(acc),
            [115, 116, 114, 97, 110, 100, 97] => lookup_1025_399(acc),
            [115, 111, 109, 110, 97] => lookup_1025_400(acc),
            [118, 101, 110, 110, 101, 115, 108, 97] => lookup_1025_401(acc),
            [118, 101, 118, 101, 108, 115, 116, 97, 100] => lookup_1025_402(acc),
            [118, 111, 115, 115, 101, 118, 97, 110, 103, 101, 110] => lookup_1025_403(acc),
            [118, 105, 107] => lookup_1025_404(acc),
            [115, 108, 97, 116, 116, 117, 109] => lookup_1025_405(acc),
            [109, 195, 161, 116, 116, 97, 45, 118, 195, 161, 114, 106, 106, 97, 116] => {
                lookup_1025_406(acc)
            }
            [104, 97, 117, 103, 101, 115, 117, 110, 100] => lookup_1025_407(acc),
            [120, 110, 45, 45, 109, 114, 101, 45, 111, 103, 45, 114, 111, 109, 115, 100, 97, 108, 45, 113, 113, 98] => {
                lookup_1025_408(info, labels, acc)
            }
            [109, 111, 115, 115] => lookup_1025_409(acc),
            [98, 106, 97, 114, 107, 111, 121] => lookup_1025_410(acc),
            [120, 110, 45, 45, 110, 116, 116, 101, 114, 121, 45, 98, 121, 97, 101] => {
                lookup_1025_411(acc)
            }
            [115, 195, 184, 109, 110, 97] => lookup_1025_412(acc),
            [116, 106, 101, 108, 100, 115, 117, 110, 100] => lookup_1025_413(acc),
            [115, 97, 108, 97, 110, 103, 101, 110] => lookup_1025_414(acc),
            [115, 195, 184, 114, 102, 111, 108, 100] => lookup_1025_415(acc),
            [117, 108, 108, 101, 110, 115, 97, 107, 101, 114] => lookup_1025_416(acc),
            [111, 115, 116, 102, 111, 108, 100] => lookup_1025_417(info, labels, acc),
            [104, 109] => lookup_1025_418(labels, acc),
            [120, 110, 45, 45, 118, 114, 101, 45, 101, 105, 107, 101, 114, 45, 107, 56, 97] => {
                lookup_1025_419(acc)
            }
            [118, 97, 100, 115, 111] => lookup_1025_420(acc),
            [97, 102, 106, 111, 114, 100] => lookup_1025_421(acc),
            [109, 111, 115, 106, 195, 184, 101, 110] => lookup_1025_422(acc),
            [109, 105, 100, 115, 117, 110, 100] => lookup_1025_423(acc),
            [120, 110, 45, 45, 111, 115, 121, 114, 111, 45, 119, 117, 97] => lookup_1025_424(acc),
            [107, 118, 105, 110, 110, 104, 101, 114, 97, 100] => lookup_1025_425(acc),
            [98, 106, 97, 114, 107, 195, 184, 121] => lookup_1025_426(acc),
            [107, 114, 111, 107, 115, 116, 97, 100, 101, 108, 118, 97] => lookup_1025_427(acc),
            [109, 111, 100, 117, 109] => lookup_1025_428(acc),
            [195, 184, 121, 115, 116, 114, 101, 45, 115, 108, 105, 100, 114, 101] => {
                lookup_1025_429(acc)
            }
            [114, 101, 110, 110, 101, 115, 111, 121] => lookup_1025_430(acc),
            [117, 108, 118, 105, 107] => lookup_1025_431(acc),
            [108, 101, 107, 115, 118, 105, 107] => lookup_1025_432(acc),
            [120, 110, 45, 45, 107, 97, 114, 109, 121, 45, 121, 117, 97] => lookup_1025_433(acc),
            [115, 111, 114, 45, 118, 97, 114, 97, 110, 103, 101, 114] => lookup_1025_434(acc),
            [116, 114, 111, 109, 115, 195, 184] => lookup_1025_435(acc),
            [103, 106, 101, 114, 100, 114, 117, 109] => lookup_1025_436(acc),
            [114, 105, 115, 195, 184, 114] => lookup_1025_437(acc),
            [115, 97, 117, 100, 97] => lookup_1025_438(acc),
            [115, 101, 108, 106, 111, 114, 100] => lookup_1025_439(acc),
            [120, 110, 45, 45, 104, 109, 109, 114, 102, 101, 97, 115, 116, 97, 45, 115, 52, 97, 99] => {
                lookup_1025_440(acc)
            }
            [115, 116, 114, 121, 110] => lookup_1025_441(acc),
            [120, 110, 45, 45, 104, 112, 109, 105, 114, 45, 120, 113, 97] => lookup_1025_442(acc),
            [115, 111, 114, 117, 109] => lookup_1025_443(acc),
            [116, 118, 101, 100, 101, 115, 116, 114, 97, 110, 100] => lookup_1025_444(acc),
            [109, 117, 115, 101, 117, 109] => lookup_1025_445(acc),
            [115, 112, 106, 101, 108, 107, 97, 118, 105, 107] => lookup_1025_446(acc),
            [107, 108, 101, 112, 112] => lookup_1025_447(acc),
            [120, 110, 45, 45, 115, 109, 110, 97, 45, 103, 114, 97] => lookup_1025_448(acc),
            [109, 195, 165, 115, 195, 184, 121] => lookup_1025_449(acc),
            [109, 97, 115, 102, 106, 111, 114, 100, 101, 110] => lookup_1025_450(acc),
            [120, 110, 45, 45, 108, 114, 100, 97, 108, 45, 115, 114, 97] => lookup_1025_451(acc),
            [102, 101, 116, 115, 117, 110, 100] => lookup_1025_452(acc),
            [114, 105, 115, 111, 114] => lookup_1025_453(acc),
            [116, 97, 110, 97, 110, 103, 101, 114] => lookup_1025_454(acc),
            [102, 114, 101, 100, 114, 105, 107, 115, 116, 97, 100] => lookup_1025_455(acc),
            [120, 110, 45, 45, 114, 100, 101, 45, 117, 108, 97] => lookup_1025_456(acc),
            [120, 110, 45, 45, 108, 101, 115, 117, 110, 100, 45, 104, 117, 97] => {
                lookup_1025_457(acc)
            }
            [107, 111, 112, 101, 114, 118, 105, 107] => lookup_1025_458(acc),
            [115, 105, 103, 100, 97, 108] => lookup_1025_459(acc),
            [120, 110, 45, 45, 115, 110, 115, 97, 45, 114, 111, 97] => lookup_1025_460(acc),
            [120, 110, 45, 45, 118, 97, 114, 100, 45, 106, 114, 97] => lookup_1025_461(acc),
            [108, 121, 110, 103, 101, 110] => lookup_1025_462(acc),
            [104, 195, 161, 98, 109, 101, 114] => lookup_1025_463(acc),
            [115, 110, 97, 97, 115, 101] => lookup_1025_464(acc),
            [116, 114, 195, 184, 103, 115, 116, 97, 100] => lookup_1025_465(acc),
            [118, 101, 102, 115, 110] => lookup_1025_466(acc),
            [118, 101, 115, 116, 98, 121] => lookup_1025_467(acc),
            [103, 114, 97, 110, 118, 105, 110] => lookup_1025_468(acc),
            [104, 121, 108, 108, 101, 115, 116, 97, 100] => lookup_1025_469(acc),
            [114, 111, 121, 107, 101, 110] => lookup_1025_470(acc),
            [109, 195, 161, 108, 97, 116, 118, 117, 111, 112, 109, 105] => lookup_1025_471(acc),
            [97, 117, 114, 115, 107, 111, 103, 45, 104, 195, 184, 108, 97, 110, 100] => {
                lookup_1025_472(acc)
            }
            [104, 97, 114, 97, 109] => lookup_1025_473(acc),
            [115, 110, 105, 108, 108, 102, 106, 111, 114, 100] => lookup_1025_474(acc),
            [116, 111, 110, 115, 98, 101, 114, 103] => lookup_1025_475(acc),
            [98, 195, 184, 109, 108, 111] => lookup_1025_476(acc),
            [120, 110, 45, 45, 118, 101, 115, 116, 118, 103, 121, 45, 105, 120, 97, 54, 111] => {
                lookup_1025_477(acc)
            }
            [116, 121, 115, 118, 195, 166, 114] => lookup_1025_478(acc),
            [120, 110, 45, 45, 104, 45, 50, 102, 97] => lookup_1025_479(acc),
            [98, 97, 108, 101, 115, 116, 114, 97, 110, 100] => lookup_1025_480(acc),
            [107, 108, 97, 98, 117] => lookup_1025_481(acc),
            [120, 110, 45, 45, 108, 116, 101, 110, 45, 103, 114, 97] => lookup_1025_482(acc),
            [110, 111, 114, 100, 45, 97, 117, 114, 100, 97, 108] => lookup_1025_483(acc),
            [98, 121, 107, 108, 101] => lookup_1025_484(acc),
            [195, 184, 121, 103, 97, 114, 100, 101, 110] => lookup_1025_485(acc),
            [120, 110, 45, 45, 114, 114, 111, 115, 45, 103, 114, 97] => lookup_1025_486(acc),
            [115, 107, 106, 101, 114, 118, 111, 121] => lookup_1025_487(acc),
            [100, 105, 118, 116, 97, 115, 118, 117, 111, 100, 110, 97] => lookup_1025_488(acc),
            [118, 111, 115, 115] => lookup_1025_489(acc),
            [108, 101, 105, 114, 102, 106, 111, 114, 100] => lookup_1025_490(acc),
            [98, 114, 195, 184, 110, 110, 195, 184, 121, 115, 117, 110, 100] => {
                lookup_1025_491(acc)
            }
            [120, 110, 45, 45, 100, 110, 110, 97, 45, 103, 114, 97] => lookup_1025_492(acc),
            [118, 97, 103, 115, 111, 121] => lookup_1025_493(acc),
            [108, 101, 118, 97, 110, 103, 101, 114] => lookup_1025_494(acc),
            [120, 110, 45, 45, 102, 114, 100, 101, 45, 103, 114, 97] => lookup_1025_495(acc),
            [115, 116, 106, 111, 114, 100, 97, 108, 115, 104, 97, 108, 115, 101, 110] => {
                lookup_1025_496(acc)
            }
            [103, 106, 195, 184, 118, 105, 107] => lookup_1025_497(acc),
            [115, 97, 110, 100, 110, 101, 115] => lookup_1025_498(acc),
            [115, 116, 106, 195, 184, 114, 100, 97, 108] => lookup_1025_499(acc),
            [120, 110, 45, 45, 115, 110, 97, 115, 101, 45, 110, 114, 97] => lookup_1025_500(acc),
            [107, 114, 105, 115, 116, 105, 97, 110, 115, 117, 110, 100] => lookup_1025_501(acc),
            [116, 114, 97, 110, 97] => lookup_1025_502(acc),
            [120, 110, 45, 45, 118, 114, 103, 103, 116, 45, 120, 113, 97, 100] => {
                lookup_1025_503(acc)
            }
            [115, 111, 103, 110, 100, 97, 108] => lookup_1025_504(acc),
            [103, 106, 101, 114, 115, 116, 97, 100] => lookup_1025_505(acc),
            [107, 118, 97, 102, 106, 111, 114, 100] => lookup_1025_506(acc),
            [120, 110, 45, 45, 114, 115, 116, 45, 48, 110, 97] => lookup_1025_507(acc),
            [120, 110, 45, 45, 115, 107, 105, 101, 114, 118, 45, 117, 116, 97] => {
                lookup_1025_508(acc)
            }
            [116, 114, 111, 109, 115, 97] => lookup_1025_509(acc),
            [120, 110, 45, 45, 104, 121, 97, 110, 103, 101, 114, 45, 113, 49, 97] => {
                lookup_1025_510(acc)
            }
            [118, 195, 165, 103, 115, 195, 184, 121] => lookup_1025_511(acc),
            [97, 115, 107, 195, 184, 121] => lookup_1025_512(acc),
            [116, 105, 109, 101] => lookup_1025_513(acc),
            [115, 112, 121, 100, 101, 98, 101, 114, 103] => lookup_1025_514(acc),
            [120, 110, 45, 45, 97, 110, 100, 121, 45, 105, 114, 97] => lookup_1025_515(acc),
            [102, 111, 114, 115, 97, 110, 100] => lookup_1025_516(acc),
            [98, 114, 195, 184, 110, 110, 195, 184, 121] => lookup_1025_517(acc),
            [107, 108, 195, 166, 98, 117] => lookup_1025_518(acc),
            [108, 105, 108, 108, 101, 115, 97, 110, 100] => lookup_1025_519(acc),
            [109, 117, 111, 115, 97, 116] => lookup_1025_520(acc),
            [114, 105, 110, 100, 97, 108] => lookup_1025_521(acc),
            [115, 117, 110, 110, 100, 97, 108] => lookup_1025_522(acc),
            [116, 97, 110, 97] => lookup_1025_523(acc),
            [114, 105, 110, 103, 101, 98, 117] => lookup_1025_524(acc),
            [101, 110, 101, 98, 97, 107, 107] => lookup_1025_525(acc),
            [104, 108] => lookup_1025_526(labels, acc),
            [115, 97, 109, 110, 97, 110, 103, 101, 114] => lookup_1025_527(acc),
            [101, 110, 103, 101, 114, 100, 97, 108] => lookup_1025_528(acc),
            [98, 97, 114, 100, 117] => lookup_1025_529(acc),
            [108, 97, 118, 97, 103, 105, 115] => lookup_1025_530(acc),
            [97, 97, 114, 98, 111, 114, 116, 101] => lookup_1025_531(acc),
            [120, 110, 45, 45, 115, 97, 110, 100, 110, 101, 115, 115, 106, 101, 110, 45, 111, 103, 98] => {
                lookup_1025_532(acc)
            }
            [104, 111, 108, 116, 97, 108, 101, 110] => lookup_1025_533(acc),
            [108, 117, 110, 110, 101, 114] => lookup_1025_534(acc),
            [120, 110, 45, 45, 106, 114, 112, 101, 108, 97, 110, 100, 45, 53, 52, 97] => {
                lookup_1025_535(acc)
            }
            [110, 105, 115, 115, 101, 100, 97, 108] => lookup_1025_536(acc),
            [103, 97, 105, 118, 117, 111, 116, 110, 97] => lookup_1025_537(acc),
            [98, 97, 105, 100, 97, 114] => lookup_1025_538(acc),
            [102, 109] => lookup_1025_539(labels, acc),
            [98, 195, 166, 114, 117, 109] => lookup_1025_540(acc),
            [114, 97, 107, 107, 101, 115, 116, 97, 100] => lookup_1025_541(acc),
            [114, 97, 100, 101] => lookup_1025_542(acc),
            [102, 114, 195, 166, 110, 97] => lookup_1025_543(acc),
            [109, 111, 100, 97, 108, 101, 110] => lookup_1025_544(acc),
            [115, 195, 161, 108, 97, 116] => lookup_1025_545(acc),
            [115, 110, 97, 115, 97] => lookup_1025_546(acc),
            [120, 110, 45, 45, 108, 116, 45, 108, 105, 97, 99] => lookup_1025_547(acc),
            [115, 111, 108, 117, 110, 100] => lookup_1025_548(acc),
            [108, 111, 116, 101, 110] => lookup_1025_549(acc),
            [110, 101, 115, 110, 97] => lookup_1025_550(acc),
            [114, 105, 115, 115, 97] => lookup_1025_551(acc),
            [102, 108, 97, 107, 115, 116, 97, 100] => lookup_1025_552(acc),
            [115, 118, 101, 108, 118, 105, 107] => lookup_1025_553(acc),
            [115, 195, 184, 114, 45, 102, 114, 111, 110] => lookup_1025_554(acc),
            [98, 121, 103, 108, 97, 110, 100] => lookup_1025_555(acc),
            [120, 110, 45, 45, 116, 110, 115, 98, 101, 114, 103, 45, 113, 49, 97] => {
                lookup_1025_556(acc)
            }
            [118, 97, 110, 121, 108, 118, 101, 110] => lookup_1025_557(acc),
            [108, 97, 110, 103, 101, 118, 97, 103] => lookup_1025_558(acc),
            [118, 105, 110, 100, 97, 102, 106, 111, 114, 100] => lookup_1025_559(acc),
            [102, 104, 115] => lookup_1025_560(acc),
            [97, 107, 114, 101, 104, 97, 109, 110] => lookup_1025_561(acc),
            [120, 110, 45, 45, 115, 114, 102, 111, 108, 100, 45, 98, 121, 97] => {
                lookup_1025_562(acc)
            }
            [120, 110, 45, 45, 104, 98, 109, 101, 114, 45, 120, 113, 97] => lookup_1025_563(acc),
            [110, 105, 116, 116, 101, 100, 97, 108] => lookup_1025_564(acc),
            [115, 97, 110, 100, 111, 121] => lookup_1025_565(acc),
            [110, 97, 97, 109, 101, 115, 106, 101, 118, 117, 101, 109, 105, 101] => {
                lookup_1025_566(acc)
            }
            [109, 111, 195, 165, 114, 101, 107, 101] => lookup_1025_567(acc),
            [120, 110, 45, 45, 108, 117, 114, 121, 45, 105, 114, 97] => lookup_1025_568(acc),
            [102, 114, 111, 115, 116, 97] => lookup_1025_569(acc),
            [97, 101, 106, 114, 105, 101] => lookup_1025_570(acc),
            [97, 117, 107, 114, 97] => lookup_1025_571(acc),
            [108, 111, 97, 98, 97, 116] => lookup_1025_572(acc),
            [98, 117, 115, 107, 101, 114, 117, 100] => lookup_1025_573(info, labels, acc),
            [115, 107, 97, 110, 108, 97, 110, 100] => lookup_1025_574(acc),
            [101, 118, 101, 110, 97, 115, 115, 105] => lookup_1025_575(acc),
            [102, 108, 111, 114, 97] => lookup_1025_576(acc),
            [104, 101, 109, 110, 101] => lookup_1025_577(acc),
            [97, 109, 108, 105] => lookup_1025_578(acc),
            [97, 117, 115, 116, 101, 118, 111, 108, 108] => lookup_1025_579(acc),
            [101, 105, 100, 102, 106, 111, 114, 100] => lookup_1025_580(acc),
            [109, 111, 115, 106, 111, 101, 110] => lookup_1025_581(acc),
            [101, 105, 100] => lookup_1025_582(acc),
            [111, 115, 195, 184, 121, 114, 111] => lookup_1025_583(acc),
            [97, 117, 115, 116, 114, 104, 101, 105, 109] => lookup_1025_584(acc),
            [98, 195, 161, 105, 100, 195, 161, 114] => lookup_1025_585(acc),
            [100, 195, 184, 110, 110, 97] => lookup_1025_586(acc),
            [120, 110, 45, 45, 102, 114, 110, 97, 45, 119, 111, 97] => lookup_1025_587(acc),
            [104, 101, 109, 115, 101, 100, 97, 108] => lookup_1025_588(acc),
            [100, 111, 110, 110, 97] => lookup_1025_589(acc),
            [120, 110, 45, 45, 108, 45, 49, 102, 97] => lookup_1025_590(acc),
            [104, 97, 115, 118, 105, 107] => lookup_1025_591(acc),
            [104, 111, 121, 108, 97, 110, 100, 101, 116] => lookup_1025_592(acc),
            [108, 97, 114, 118, 105, 107] => lookup_1025_593(acc),
            [120, 110, 45, 45, 109, 108, 97, 116, 118, 117, 111, 112, 109, 105, 45, 115, 52, 97] => {
                lookup_1025_594(acc)
            }
            [117, 110, 106, 97, 114, 103, 97] => lookup_1025_595(acc),
            [104, 195, 165] => lookup_1025_596(acc),
            [120, 110, 45, 45, 114, 108, 97, 110, 100, 45, 117, 117, 97] => lookup_1025_597(acc),
            [120, 110, 45, 45, 101, 118, 101, 110, 105, 45, 48, 113, 97, 48, 49, 103, 97] => {
                lookup_1025_598(acc)
            }
            [109, 97, 115, 111, 121] => lookup_1025_599(acc),
            [107, 97, 114, 109, 195, 184, 121] => lookup_1025_600(acc),
            [120, 110, 45, 45, 103, 105, 118, 117, 111, 116, 110, 97, 45, 56, 121, 97] => {
                lookup_1025_601(acc)
            }
            [98, 101, 114, 103] => lookup_1025_602(acc),
            [108, 111, 109] => lookup_1025_603(acc),
            [120, 110, 45, 45, 107, 108, 98, 117, 45, 119, 111, 97] => lookup_1025_604(acc),
            [109, 111, 97, 114, 101, 107, 101] => lookup_1025_605(acc),
            [120, 110, 45, 45, 114, 115, 116, 97, 45, 102, 114, 97] => lookup_1025_606(acc),
            [112, 111, 114, 115, 103, 114, 117, 110, 110] => lookup_1025_607(acc),
            [195, 165, 114, 100, 97, 108] => lookup_1025_608(acc),
            [117, 110, 106, 195, 161, 114, 103, 97] => lookup_1025_609(acc),
            [114, 97, 110, 97] => lookup_1025_610(acc),
            [115, 107, 97, 117, 110] => lookup_1025_611(acc),
            [98, 195, 161, 106, 100, 100, 97, 114] => lookup_1025_612(acc),
            [107, 195, 165, 102, 106, 111, 114, 100] => lookup_1025_613(acc),
            [110, 111, 114, 100, 45, 111, 100, 97, 108] => lookup_1025_614(acc),
            [115, 101, 108] => lookup_1025_615(acc),
            [115, 116, 101, 105, 110, 107, 106, 101, 114] => lookup_1025_616(acc),
            [195, 165, 108, 103, 195, 165, 114, 100] => lookup_1025_617(acc),
            [114, 111, 121, 114, 118, 105, 107] => lookup_1025_618(acc),
            [115, 195, 184, 114, 45, 97, 117, 114, 100, 97, 108] => lookup_1025_619(acc),
            [115, 116, 97, 118, 101, 114, 110] => lookup_1025_620(acc),
            [120, 110, 45, 45, 102, 106, 111, 114, 100, 45, 108, 114, 97] => lookup_1025_621(acc),
            [98, 195, 161, 104, 99, 97, 118, 117, 111, 116, 110, 97] => lookup_1025_622(acc),
            [104, 111, 98, 111, 108] => lookup_1025_623(acc),
            [114, 195, 184, 100, 195, 184, 121] => lookup_1025_624(acc),
            [118, 103, 115] => lookup_1025_625(acc),
            [115, 116, 101, 105, 103, 101, 110] => lookup_1025_626(acc),
            [115, 195, 184, 114, 114, 101, 105, 115, 97] => lookup_1025_627(acc),
            [116, 105, 110, 103, 118, 111, 108, 108] => lookup_1025_628(acc),
            [116, 106, 111, 109, 101] => lookup_1025_629(acc),
            [120, 110, 45, 45, 107, 115, 110, 101, 115, 45, 117, 117, 97] => lookup_1025_630(acc),
            [116, 114, 111, 97, 110, 100, 105, 110] => lookup_1025_631(acc),
            [120, 110, 45, 45, 116, 121, 115, 118, 114, 45, 118, 114, 97] => lookup_1025_632(acc),
            [118, 97, 114, 103, 103, 97, 116] => lookup_1025_633(acc),
            [120, 110, 45, 45, 102, 114, 121, 97, 45, 104, 114, 97] => lookup_1025_634(acc),
            [110, 111, 114, 100, 100, 97, 108] => lookup_1025_635(acc),
            [105, 118, 101, 108, 97, 110, 100] => lookup_1025_636(acc),
            [114, 97, 104, 107, 107, 101, 114, 97, 118, 106, 117] => lookup_1025_637(acc),
            [103, 114, 97, 116, 97, 110, 103, 101, 110] => lookup_1025_638(acc),
            [115, 110, 195, 165, 97, 115, 101] => lookup_1025_639(acc),
            [107, 114, 195, 165, 97, 110, 103, 104, 107, 101] => lookup_1025_640(acc),
            [97, 118, 101, 114, 195, 184, 121] => lookup_1025_641(acc),
            [195, 184, 114, 108, 97, 110, 100] => lookup_1025_642(acc),
            [110, 195, 161, 118, 117, 111, 116, 110, 97] => lookup_1025_643(acc),
            [120, 110, 45, 45, 115, 114, 117, 109, 45, 103, 114, 97] => lookup_1025_644(acc),
            [108, 97, 118, 97, 110, 103, 101, 110] => lookup_1025_645(acc),
            [118, 101, 114, 100, 97, 108] => lookup_1025_646(acc),
            [120, 110, 45, 45, 108, 111, 97, 98, 116, 45, 48, 113, 97] => lookup_1025_647(acc),
            [118, 101, 115, 116, 114, 101, 45, 115, 108, 105, 100, 114, 101] => {
                lookup_1025_648(acc)
            }
            [111, 100, 100, 97] => lookup_1025_649(acc),
            [102, 108, 111, 114, 195, 184] => lookup_1025_650(acc),
            [120, 110, 45, 45, 114, 109, 115, 107, 111, 103, 45, 98, 121, 97] => {
                lookup_1025_651(acc)
            }
            [115, 116] => lookup_1025_652(labels, acc),
            [120, 110, 45, 45, 114, 104, 107, 107, 101, 114, 118, 106, 117, 45, 48, 49, 97, 102] => {
                lookup_1025_653(acc)
            }
            [116, 111, 108, 103, 97] => lookup_1025_654(acc),
            [120, 110, 45, 45, 102, 108, 111, 114, 45, 106, 114, 97] => lookup_1025_655(acc),
            [195, 165, 108, 101, 115, 117, 110, 100] => lookup_1025_656(acc),
            [195, 165, 108] => lookup_1025_657(acc),
            [107, 105, 114, 107, 101, 110, 101, 115] => lookup_1025_658(acc),
            [120, 110, 45, 45, 108, 97, 110, 103, 101, 118, 103, 45, 106, 120, 97] => {
                lookup_1025_659(acc)
            }
            [102, 117, 111, 105, 115, 107, 117] => lookup_1025_660(acc),
            [104, 97, 108, 115, 97] => lookup_1025_661(acc),
            [101, 116, 110, 101] => lookup_1025_662(acc),
            [105, 110, 100, 101, 114, 111, 121] => lookup_1025_663(acc),
            [120, 110, 45, 45, 108, 97, 104, 101, 97, 100, 106, 117, 45, 55, 121, 97] => {
                lookup_1025_664(acc)
            }
            [114, 195, 184, 114, 111, 115] => lookup_1025_665(acc),
            [115, 107, 105] => lookup_1025_666(acc),
            [116, 111, 114, 115, 107, 101, 110] => lookup_1025_667(acc),
            [99, 111] => lookup_1025_668(acc),
            [108, 111, 114, 101, 110, 115, 107, 111, 103] => lookup_1025_669(acc),
            [98, 117] => lookup_1025_670(labels, acc),
            [110, 97, 109, 115, 115, 107, 111, 103, 97, 110] => lookup_1025_671(acc),
            [100, 114, 111, 98, 97, 107] => lookup_1025_672(acc),
            [120, 110, 45, 45, 109, 111, 115, 106, 101, 110, 45, 101, 121, 97] => {
                lookup_1025_673(acc)
            }
            [104, 117, 114, 100, 97, 108] => lookup_1025_674(acc),
            [103, 105, 101, 104, 116, 97, 118, 117, 111, 97, 116, 110, 97] => lookup_1025_675(acc),
            [195, 165, 115] => lookup_1025_676(acc),
            [98, 101, 114, 108, 101, 118, 195, 165, 103] => lookup_1025_677(acc),
            [98, 97, 104, 99, 99, 97, 118, 117, 111, 116, 110, 97] => lookup_1025_678(acc),
            [97, 110, 100, 195, 184, 121] => lookup_1025_679(acc),
            [109, 111, 114, 101, 45, 111, 103, 45, 114, 111, 109, 115, 100, 97, 108] => {
                lookup_1025_680(info, labels, acc)
            }
            [114, 195, 161, 104, 107, 107, 101, 114, 195, 161, 118, 106, 117] => {
                lookup_1025_681(acc)
            }
            [97, 103, 100, 101, 110, 101, 115] => lookup_1025_682(acc),
            [111, 112, 112, 101, 103, 97, 114, 100] => lookup_1025_683(acc),
            [114, 195, 161, 105, 115, 97] => lookup_1025_684(acc),
            [195, 184, 118, 114, 101, 45, 101, 105, 107, 101, 114] => lookup_1025_685(acc),
            [120, 110, 45, 45, 115, 116, 106, 114, 100, 97, 108, 45, 115, 49, 97] => {
                lookup_1025_686(acc)
            }
            [109, 101, 114, 195, 165, 107, 101, 114] => lookup_1025_687(acc),
            [116, 105, 110, 110] => lookup_1025_688(acc),
            [120, 110, 45, 45, 98, 114, 117, 109, 45, 118, 111, 97] => lookup_1025_689(acc),
            [100, 114, 97, 109, 109, 101, 110] => lookup_1025_690(acc),
            [97, 107, 101, 114, 115, 104, 117, 115] => lookup_1025_691(info, labels, acc),
            [110, 97, 114, 111, 121] => lookup_1025_692(acc),
            [116, 114, 111, 110, 100, 104, 101, 105, 109] => lookup_1025_693(acc),
            [97, 114, 101, 109, 97, 114, 107] => lookup_1025_694(acc),
            [110, 108] => lookup_1025_695(labels, acc),
            [108, 105, 101, 114, 110, 101] => lookup_1025_696(acc),
            [116, 121, 115, 102, 106, 111, 114, 100] => lookup_1025_697(acc),
            [195, 184, 115, 116, 102, 111, 108, 100] => lookup_1025_698(info, labels, acc),
            [115, 111, 110, 100, 114, 101, 45, 108, 97, 110, 100] => lookup_1025_699(acc),
            [102, 108, 101, 107, 107, 101, 102, 106, 111, 114, 100] => lookup_1025_700(acc),
            [120, 110, 45, 45, 116, 106, 109, 101, 45, 104, 114, 97] => lookup_1025_701(acc),
            [98, 195, 165, 100, 195, 165, 100, 100, 106, 195, 165] => lookup_1025_702(acc),
            [120, 110, 45, 45, 115, 107, 106, 101, 114, 118, 121, 45, 118, 49, 97] => {
                lookup_1025_703(acc)
            }
            [111, 114, 108, 97, 110, 100] => lookup_1025_704(acc),
            [97, 108] => lookup_1025_705(acc),
            [104, 101, 114, 97, 100] => lookup_1025_706(acc),
            [106, 111, 108, 115, 116, 101, 114] => lookup_1025_707(acc),
            [116, 114, 97, 110, 195, 184, 121] => lookup_1025_708(acc),
            [114, 111, 109, 115, 97] => lookup_1025_709(acc),
            [120, 110, 45, 45, 98, 101, 114, 108, 101, 118, 103, 45, 106, 120, 97] => {
                lookup_1025_710(acc)
            }
            [195, 165, 115, 101, 114, 97, 108] => lookup_1025_711(acc),
            [116, 114, 111, 103, 115, 116, 97, 100] => lookup_1025_712(acc),
            [116, 121, 100, 97, 108] => lookup_1025_713(acc),
            [111, 115, 108, 111] => lookup_1025_714(labels, acc),
            [114, 195, 165, 100, 101] => lookup_1025_715(acc),
            [105, 118, 103, 117] => lookup_1025_716(acc),
            [97, 108, 118, 100, 97, 108] => lookup_1025_717(acc),
            [111, 115, 116, 101, 114, 195, 184, 121] => lookup_1025_718(acc),
            [109, 101, 108, 100, 97, 108] => lookup_1025_719(acc),
            [104, 97, 112, 109, 105, 114] => lookup_1025_720(acc),
            [97, 108, 97, 104, 101, 97, 100, 106, 117] => lookup_1025_721(acc),
            [97, 117, 114, 101] => lookup_1025_722(acc),
            [103, 97, 110, 103, 97, 118, 105, 105, 107, 97] => lookup_1025_723(acc),
            [111, 108] => lookup_1025_724(labels, acc),
            [120, 110, 45, 45, 98, 104, 99, 99, 97, 118, 117, 111, 116, 110, 97, 45, 107, 55, 97] => {
                lookup_1025_725(acc)
            }
            [98, 195, 161, 104, 99, 99, 97, 118, 117, 111, 116, 110, 97] => lookup_1025_726(acc),
            [120, 110, 45, 45, 103, 106, 118, 105, 107, 45, 119, 117, 97] => lookup_1025_727(acc),
            [107, 97, 114, 97, 115, 106, 111, 107] => lookup_1025_728(acc),
            [115, 107, 106, 195, 165, 107] => lookup_1025_729(acc),
            [104, 105, 116, 114, 97] => lookup_1025_730(acc),
            [115, 111, 103, 110, 101] => lookup_1025_731(acc),
            [98, 101, 97, 114, 100, 117] => lookup_1025_732(acc),
            [109, 97, 116, 116, 97, 45, 118, 97, 114, 106, 106, 97, 116] => lookup_1025_733(acc),
            [118, 97, 108, 108, 101] => lookup_1025_734(acc),
            [118, 195, 166, 114, 195, 184, 121] => lookup_1025_735(acc),
            [120, 110, 45, 45, 102, 105, 110, 110, 121, 45, 121, 117, 97] => lookup_1025_736(acc),
            [98, 101, 97, 114, 97, 108, 118, 97, 104, 107, 105] => lookup_1025_737(acc),
            [195, 161, 107, 197, 139, 111, 108, 117, 111, 107, 116, 97] => lookup_1025_738(acc),
            [120, 110, 45, 45, 114, 104, 111, 108, 116, 45, 109, 114, 97] => lookup_1025_739(acc),
            [120, 110, 45, 45, 104, 111, 108, 116, 108, 101, 110, 45, 104, 120, 97] => {
                lookup_1025_740(acc)
            }
            [110, 97, 109, 115, 111, 115] => lookup_1025_741(acc),
            [100, 121, 114, 111, 121] => lookup_1025_742(acc),
            [111, 114, 115, 107, 111, 103] => lookup_1025_743(acc),
            [110, 111, 114, 101, 45, 111, 103, 45, 117, 118, 100, 97, 108] => lookup_1025_744(acc),
            [103, 114, 105, 109, 115, 116, 97, 100] => lookup_1025_745(acc),
            [120, 110, 45, 45, 98, 111, 100, 45, 50, 110, 97] => lookup_1025_746(acc),
            [98, 101, 105, 97, 114, 110] => lookup_1025_747(acc),
            [98, 101, 114, 108, 101, 118, 97, 103] => lookup_1025_748(acc),
            [98, 106, 117, 103, 110] => lookup_1025_749(acc),
            [116, 101, 108, 101, 109, 97, 114, 107] => lookup_1025_750(info, labels, acc),
            [97, 115, 110, 101, 115] => lookup_1025_751(acc),
            [103, 105, 108, 100, 101, 115, 107, 97, 108] => lookup_1025_752(acc),
            [104, 97, 116, 116, 102, 106, 101, 108, 108, 100, 97, 108] => lookup_1025_753(acc),
            [120, 110, 45, 45, 106, 108, 115, 116, 101, 114, 45, 98, 121, 97] => {
                lookup_1025_754(acc)
            }
            [107, 111, 110, 103, 115, 98, 101, 114, 103] => lookup_1025_755(acc),
            [120, 110, 45, 45, 110, 118, 117, 111, 116, 110, 97, 45, 104, 119, 97] => {
                lookup_1025_756(acc)
            }
            [106, 101, 115, 115, 104, 101, 105, 109] => lookup_1025_757(acc),
            [108, 97, 110, 103, 101, 118, 195, 165, 103] => lookup_1025_758(acc),
            [109, 106, 111, 110, 100, 97, 108, 101, 110] => lookup_1025_759(acc),
            [115, 116, 106, 195, 184, 114, 100, 97, 108, 115, 104, 97, 108, 115, 101, 110] => {
                lookup_1025_760(acc)
            }
            [106, 195, 184, 108, 115, 116, 101, 114] => lookup_1025_761(acc),
            [104, 111, 108] => lookup_1025_762(acc),
            [108, 97, 97, 107, 101, 115, 118, 117, 101, 109, 105, 101] => lookup_1025_763(acc),
            [111, 121, 103, 97, 114, 100, 101, 110] => lookup_1025_764(acc),
            [110, 97, 110, 110, 101, 115, 116, 97, 100] => lookup_1025_765(acc),
            [111, 114, 107, 100, 97, 108] => lookup_1025_766(acc),
            [114, 97, 100, 111, 121] => lookup_1025_767(acc),
            [100, 101, 112] => lookup_1025_768(acc),
            [120, 110, 45, 45, 97, 115, 107, 121, 45, 105, 114, 97] => lookup_1025_769(acc),
            [111, 114, 115, 116, 97] => lookup_1025_770(acc),
            [98, 105, 101, 118, 97, 116] => lookup_1025_771(acc),
            [114, 97, 117, 109, 97] => lookup_1025_772(acc),
            [120, 110, 45, 45, 114, 105, 115, 114, 45, 105, 114, 97] => lookup_1025_773(acc),
            [120, 110, 45, 45, 115, 114, 45, 118, 97, 114, 97, 110, 103, 101, 114, 45, 103, 103, 98] => {
                lookup_1025_774(acc)
            }
            [120, 110, 45, 45, 115, 114, 114, 101, 105, 115, 97, 45, 113, 49, 97] => {
                lookup_1025_775(acc)
            }
            [100, 105, 118, 116, 116, 97, 115, 118, 117, 111, 116, 110, 97] => lookup_1025_776(acc),
            [116, 121, 115, 118, 97, 114] => lookup_1025_777(acc),
            [110, 111, 114, 100, 45, 102, 114, 111, 110] => lookup_1025_778(acc),
            [118, 195, 161, 114, 103, 103, 195, 161, 116] => lookup_1025_779(acc),
            [98, 114, 121, 110, 101] => lookup_1025_780(acc),
            [102, 114, 111, 108, 97, 110, 100] => lookup_1025_781(acc),
            [103, 117, 111, 118, 100, 97, 103, 101, 97, 105, 100, 110, 117] => lookup_1025_782(acc),
            [120, 110, 45, 45, 115, 116, 106, 114, 100, 97, 108, 115, 104, 97, 108, 115, 101, 110, 45, 115, 113, 98] => {
                lookup_1025_783(acc)
            }
            [118, 102] => lookup_1025_784(labels, acc),
            [98, 97, 114, 117, 109] => lookup_1025_785(acc),
            [106, 111, 114, 112, 101, 108, 97, 110, 100] => lookup_1025_786(acc),
            [120, 110, 45, 45, 107, 114, 97, 110, 103, 104, 107, 101, 45, 98, 48, 97] => {
                lookup_1025_787(acc)
            }
            [107, 118, 97, 109] => lookup_1025_788(acc),
            [98, 101, 114, 103, 101, 110] => lookup_1025_789(acc),
            [102, 114, 101, 105] => lookup_1025_790(acc),
            [107, 118, 105, 116, 115, 111, 121] => lookup_1025_791(acc),
            [109, 97, 114, 107, 101, 114] => lookup_1025_792(acc),
            [120, 110, 45, 45, 109, 101, 108, 121, 45, 105, 114, 97] => lookup_1025_793(acc),
            [115, 107, 111, 100, 106, 101] => lookup_1025_794(acc),
            [115, 107, 97, 110, 105, 116] => lookup_1025_795(acc),
            [115, 116, 111, 114, 100] => lookup_1025_796(acc),
            [115, 195, 184, 110, 100, 114, 101, 45, 108, 97, 110, 100] => lookup_1025_797(acc),
            [120, 110, 45, 45, 109, 116, 116, 97, 45, 118, 114, 106, 106, 97, 116, 45, 107, 55, 97, 102] => {
                lookup_1025_798(acc)
            }
            [120, 110, 45, 45, 100, 114, 98, 97, 107, 45, 119, 117, 97] => lookup_1025_799(acc),
            [118, 101, 114, 114, 97, 110] => lookup_1025_800(acc),
            [118, 195, 165, 103, 97, 110] => lookup_1025_801(acc),
            [120, 110, 45, 45, 98, 106, 100, 100, 97, 114, 45, 112, 116, 97] => {
                lookup_1025_802(acc)
            }
            [104, 106, 97, 114, 116, 100, 97, 108] => lookup_1025_803(acc),
            [108, 105, 110, 100, 101, 115, 110, 101, 115] => lookup_1025_804(acc),
            [111, 115, 116, 114, 101, 45, 116, 111, 116, 101, 110] => lookup_1025_805(acc),
            [101, 105, 100, 115, 98, 101, 114, 103] => lookup_1025_806(acc),
            [120, 110, 45, 45, 98, 100, 100, 100, 106, 45, 109, 114, 97, 98, 100] => {
                lookup_1025_807(acc)
            }
            [97, 108, 115, 116, 97, 104, 97, 117, 103] => lookup_1025_808(acc),
            [100, 114, 195, 184, 98, 97, 107] => lookup_1025_809(acc),
            [101, 116, 110, 101, 100, 97, 108] => lookup_1025_810(acc),
            [120, 110, 45, 45, 114, 100, 97, 108, 45, 112, 111, 97] => lookup_1025_811(acc),
            [103, 111, 108] => lookup_1025_812(acc),
            [109, 111, 115, 107, 101, 110, 101, 115] => lookup_1025_813(acc),
            [120, 110, 45, 45, 115, 114, 45, 111, 100, 97, 108, 45, 113, 49, 97] => {
                lookup_1025_814(acc)
            }
            [120, 110, 45, 45, 107, 118, 102, 106, 111, 114, 100, 45, 110, 120, 97] => {
                lookup_1025_815(acc)
            }
            [115, 107, 105, 101, 110] => lookup_1025_816(acc),
            [104, 195, 184, 110, 101, 102, 111, 115, 115] => lookup_1025_817(acc),
            [106, 97, 110, 45, 109, 97, 121, 101, 110] => lookup_1025_818(labels, acc),
            [97, 110, 100, 111, 121] => lookup_1025_819(acc),
            [120, 110, 45, 45, 109, 111, 116, 45, 116, 108, 97] => lookup_1025_820(acc),
            [98, 101, 97, 114, 97, 108, 118, 195, 161, 104, 107, 105] => lookup_1025_821(acc),
            [120, 110, 45, 45, 103, 103, 97, 118, 105, 105, 107, 97, 45, 56, 121, 97, 52, 55, 104] => {
                lookup_1025_822(acc)
            }
            [104, 111, 98, 195, 184, 108] => lookup_1025_823(acc),
            [107, 114, 97, 103, 101, 114, 111] => lookup_1025_824(acc),
            [98, 117, 100, 101, 106, 106, 117] => lookup_1025_825(acc),
            [107, 118, 97, 108, 115, 117, 110, 100] => lookup_1025_826(acc),
            [114, 101, 110, 110, 101, 115, 195, 184, 121] => lookup_1025_827(acc),
            [102, 105, 110, 110, 195, 184, 121] => lookup_1025_828(acc),
            [114, 195, 184, 121, 114, 118, 105, 107] => lookup_1025_829(acc),
            [115, 97, 110, 100, 195, 184, 121] => lookup_1025_830(acc),
            [120, 110, 45, 45, 114, 121, 107, 101, 110, 45, 118, 117, 97] => lookup_1025_831(acc),
            [120, 110, 45, 45, 97, 117, 114, 115, 107, 111, 103, 45, 104, 108, 97, 110, 100, 45, 106, 110, 98] => {
                lookup_1025_832(acc)
            }
            [115, 109, 195, 184, 108, 97] => lookup_1025_833(acc),
            [115, 111, 114, 116, 108, 97, 110, 100] => lookup_1025_834(acc),
            [115, 116, 114, 97, 110, 100] => lookup_1025_835(acc),
            [114, 111, 97, 110] => lookup_1025_836(acc),
            [114, 195, 165, 104, 111, 108, 116] => lookup_1025_837(acc),
            [102, 108, 97, 116, 97, 110, 103, 101, 114] => lookup_1025_838(acc),
            [102, 111, 115, 110, 101, 115] => lookup_1025_839(acc),
            [104, 195, 161, 112, 109, 105, 114] => lookup_1025_840(acc),
            [120, 110, 45, 45, 109, 106, 110, 100, 97, 108, 101, 110, 45, 54, 52, 97] => {
                lookup_1025_841(acc)
            }
            [195, 184, 114, 115, 116, 97] => lookup_1025_842(acc),
            [120, 110, 45, 45, 118, 97, 100, 115, 45, 106, 114, 97] => lookup_1025_843(acc),
            [115, 116, 111, 114, 45, 101, 108, 118, 100, 97, 108] => lookup_1025_844(acc),
            [106, 111, 110, 100, 97, 108] => lookup_1025_845(acc),
            [107, 118, 97, 110, 97, 110, 103, 101, 110] => lookup_1025_846(acc),
            [109, 97, 110, 100, 97, 108] => lookup_1025_847(acc),
            [116, 114, 121, 115, 105, 108] => lookup_1025_848(acc),
            [120, 110, 45, 45, 104, 99, 101, 115, 117, 111, 108, 111, 45, 55, 121, 97, 51, 53, 98] => {
                lookup_1025_849(acc)
            }
            [98, 111, 109, 108, 111] => lookup_1025_850(acc),
            [109, 101, 108, 195, 184, 121] => lookup_1025_851(acc),
            [110, 195, 184, 116, 116, 101, 114, 195, 184, 121] => lookup_1025_852(acc),
            [120, 110, 45, 45, 108, 103, 114, 100, 45, 112, 111, 97, 99] => lookup_1025_853(acc),
            [120, 110, 45, 45, 98, 109, 108, 111, 45, 103, 114, 97] => lookup_1025_854(acc),
            [104, 97, 109, 97, 114] => lookup_1025_855(acc),
            [114, 121, 103, 103, 101] => lookup_1025_856(acc),
            [120, 110, 45, 45, 114, 121, 114, 118, 105, 107, 45, 98, 121, 97] => {
                lookup_1025_857(acc)
            }
            [100, 97, 118, 118, 101, 110, 106, 195, 161, 114, 103, 97] => lookup_1025_858(acc),
            [115, 195, 184, 114, 117, 109] => lookup_1025_859(acc),
            [120, 110, 45, 45, 115, 114, 45, 97, 117, 114, 100, 97, 108, 45, 108, 56, 97] => {
                lookup_1025_860(acc)
            }
            [116, 195, 184, 110, 115, 98, 101, 114, 103] => lookup_1025_861(acc),
            [98, 114, 101, 109, 97, 110, 103, 101, 114] => lookup_1025_862(acc),
            [102, 105, 116, 106, 97, 114] => lookup_1025_863(acc),
            [109, 106, 195, 184, 110, 100, 97, 108, 101, 110] => lookup_1025_864(acc),
            [110, 101, 115, 115, 101, 116] => lookup_1025_865(acc),
            [104, 97] => lookup_1025_866(acc),
            [116, 111, 107, 107, 101] => lookup_1025_867(acc),
            [102, 106, 97, 108, 101, 114] => lookup_1025_868(acc),
            [120, 110, 45, 45, 102, 108, 45, 122, 105, 97] => lookup_1025_869(acc),
            [104, 111, 108, 101] => lookup_1025_870(acc),
            [115, 111, 114, 45, 102, 114, 111, 110] => lookup_1025_871(acc),
            [111, 121, 101, 114] => lookup_1025_872(acc),
            [115, 107, 195, 161, 110, 105, 116] => lookup_1025_873(acc),
            [104, 111, 114, 110, 105, 110, 100, 97, 108] => lookup_1025_874(acc),
            [114, 97, 104, 111, 108, 116] => lookup_1025_875(acc),
            [118, 101, 103, 97] => lookup_1025_876(acc),
            [116, 114] => lookup_1025_877(labels, acc),
            [103, 106, 101, 115, 100, 97, 108] => lookup_1025_878(acc),
            [110, 111, 114, 100, 114, 101, 105, 115, 97] => lookup_1025_879(acc),
            [120, 110, 45, 45, 110, 114, 121, 45, 121, 108, 97, 53, 103] => lookup_1025_880(acc),
            [102, 97, 117, 115, 107, 101] => lookup_1025_881(acc),
            [120, 110, 45, 45, 107, 114, 100, 115, 104, 101, 114, 97, 100, 45, 109, 56, 97] => {
                lookup_1025_882(acc)
            }
            [110, 195, 166, 114, 195, 184, 121] => lookup_1025_883(acc),
            [97, 114, 110, 97] => lookup_1025_884(acc),
            [195, 161, 108, 97, 104, 101, 97, 100, 106, 117] => lookup_1025_885(acc),
            [97, 114, 100, 97, 108] => lookup_1025_886(acc),
            [106, 101, 118, 110, 97, 107, 101, 114] => lookup_1025_887(acc),
            [111, 107, 115, 110, 101, 115] => lookup_1025_888(acc),
            [120, 110, 45, 45, 112, 111, 114, 115, 103, 117, 45, 115, 116, 97, 50, 54, 102] => {
                lookup_1025_889(acc)
            }
            [108, 105, 108, 108, 101, 104, 97, 109, 109, 101, 114] => lookup_1025_890(acc),
            [111, 118, 114, 101, 45, 101, 105, 107, 101, 114] => lookup_1025_891(acc),
            [97, 115, 101, 114, 97, 108] => lookup_1025_892(acc),
            [97, 115, 107, 105, 109] => lookup_1025_893(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1026() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1027() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1028() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1029() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1030() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1031() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1032() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1033() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1034_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1034_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1034_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1034_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1034_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1034_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1034_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1034_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1034<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 99, 104] => lookup_1034_0(acc),
            [110, 97, 109, 101] => lookup_1034_1(acc),
            [111, 114, 103] => lookup_1034_2(acc),
            [109, 105, 108] => lookup_1034_3(acc),
            [110, 101, 116] => lookup_1034_4(acc),
            [101, 100, 117] => lookup_1034_5(acc),
            [99, 111, 109] => lookup_1034_6(acc),
            [103, 111, 118] => lookup_1034_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1035() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1036() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1037() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1038() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1039() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1040() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1041() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1042() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1043() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1044() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1045_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1045_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1045<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 109] => lookup_1045_0(acc),
            [97, 115, 115, 111] => lookup_1045_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1046() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1048() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1049() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1050() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1051() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1052_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1052_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1052<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1052_0(acc),
            [103, 111, 118] => lookup_1052_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1053_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1053<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1053_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1054() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1056() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1057() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1058() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1059() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1060() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1061() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1062() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1063() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1064() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1065() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1066() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1067() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1068() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1069() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1070() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1071() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1072_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1072<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 114, 100, 112, 111, 108] => lookup_1072_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1073() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1074() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1075_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1075<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 110, 105, 103, 104, 116, 112, 111, 105, 110, 116] => lookup_1075_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1076() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1077() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1078() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1079() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1080() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1081() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1082() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1083() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1084_5_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1084_5_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [109, 101, 108] => lookup_1084_5_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1084_5<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1084_5_0(acc),
            [99, 108, 111, 117, 100, 108, 101, 116, 115] => lookup_1084_5_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1084_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084_6_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084_6_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084_6_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084_6_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084_6<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [119, 97] => lookup_1084_6_0(acc),
            [116, 97, 115] => lookup_1084_6_1(acc),
            [113, 108, 100] => lookup_1084_6_2(acc),
            [115, 97] => lookup_1084_6_3(acc),
            [118, 105, 99] => lookup_1084_6_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1084_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084_17_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084_17_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084_17_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084_17_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084_17_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084_17_4<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 99, 104, 111, 111, 108, 115] => lookup_1084_17_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1084_17_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084_17_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084_17_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084_17_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084_17<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [118, 105, 99] => lookup_1084_17_0(acc),
            [119, 97] => lookup_1084_17_1(acc),
            [97, 99, 116] => lookup_1084_17_2(acc),
            [113, 108, 100] => lookup_1084_17_3(acc),
            [110, 115, 119] => lookup_1084_17_4(labels, acc),
            [99, 97, 116, 104, 111, 108, 105, 99] => lookup_1084_17_5(acc),
            [116, 97, 115] => lookup_1084_17_6(acc),
            [110, 116] => lookup_1084_17_7(acc),
            [115, 97] => lookup_1084_17_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1084<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99, 116] => lookup_1084_0(acc),
            [113, 108, 100] => lookup_1084_1(acc),
            [105, 110, 102, 111] => lookup_1084_2(acc),
            [116, 97, 115] => lookup_1084_3(acc),
            [99, 111, 110, 102] => lookup_1084_4(acc),
            [99, 111, 109] => lookup_1084_5(labels, acc),
            [103, 111, 118] => lookup_1084_6(labels, acc),
            [115, 97] => lookup_1084_7(acc),
            [118, 105, 99] => lookup_1084_8(acc),
            [119, 97] => lookup_1084_9(acc),
            [110, 115, 119] => lookup_1084_10(acc),
            [111, 114, 103] => lookup_1084_11(acc),
            [97, 115, 110] => lookup_1084_12(acc),
            [111, 122] => lookup_1084_13(acc),
            [110, 101, 116] => lookup_1084_14(acc),
            [105, 100] => lookup_1084_15(acc),
            [110, 116] => lookup_1084_16(acc),
            [101, 100, 117] => lookup_1084_17(labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1085_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1085_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1085_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1085_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1085_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1085_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1085_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1085_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1085_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1085_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1085_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1085_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1085<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [106, 112] => lookup_1085_0(acc),
            [98, 108, 111, 103] => lookup_1085_1(acc),
            [117, 107] => lookup_1085_2(acc),
            [117, 115] => lookup_1085_3(acc),
            [111, 114, 103] => lookup_1085_4(acc),
            [109, 105, 108] => lookup_1085_5(acc),
            [105, 111] => lookup_1085_6(acc),
            [116, 118] => lookup_1085_7(acc),
            [110, 101, 116] => lookup_1085_8(acc),
            [101, 100, 117] => lookup_1085_9(acc),
            [99, 111, 109] => lookup_1085_10(acc),
            [103, 111, 118] => lookup_1085_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1086() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1087() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1088() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1089() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1090() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_4_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1091_4_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_6_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_6_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1091_6_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_6<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [109, 101, 109, 98, 101, 114, 115] => lookup_1091_6_0(acc),
            [110, 111, 100, 101, 98, 97, 108, 97, 110, 99, 101, 114] => {
                lookup_1091_6_1(info, labels, acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_16_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_16<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112] => lookup_1091_16_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_28_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_28<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1091_28_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_40_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_40_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1091_40_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_40<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [99, 110, 115] => lookup_1091_40_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_45_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_45<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 97, 115] => lookup_1091_45_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_56_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_56<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112, 115] => lookup_1091_56_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_71_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_71_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_71<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [106, 99, 108, 111, 117, 100, 45, 118, 101, 114, 45, 106, 112, 99] => {
                lookup_1091_71_0(acc)
            }
            [106, 99, 108, 111, 117, 100] => lookup_1091_71_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_90_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_90<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 21usize;
    match labels.next() {
        Some(label) => match label {
            [115, 116, 97, 116, 105, 99] => lookup_1091_90_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_98_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_98_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_98_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_98_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_98_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_98_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_98_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_98_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_98<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [101, 117, 45, 51] => lookup_1091_98_0(acc),
            [117, 115, 45, 51] => lookup_1091_98_1(acc),
            [117, 115, 45, 50] => lookup_1091_98_2(acc),
            [101, 117, 45, 50] => lookup_1091_98_3(acc),
            [101, 117, 45, 49] => lookup_1091_98_4(acc),
            [117, 115, 45, 52] => lookup_1091_98_5(acc),
            [117, 115, 45, 49] => lookup_1091_98_6(acc),
            [101, 117, 45, 52] => lookup_1091_98_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_0_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_0_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1091_105_0_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_105_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1091_105_0_0(acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_1091_105_0_1(info, labels, acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_1091_105_0_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_105_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_2_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_2_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1091_105_2_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_105_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_1091_105_2_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_105_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 25usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_8_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_8_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1091_105_8_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_105_8_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1091_105_8_0(acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_1091_105_8_1(info, labels, acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_1091_105_8_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_105_9_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_9<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1091_105_9_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_105_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_11_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_11_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1091_105_11_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_105_11<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_1091_105_11_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_105_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_13_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_13_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1091_105_13_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_105_13<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_1091_105_13_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_105_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_15_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_15_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_15_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1091_105_15_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_105_15_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_15<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1091_105_15_0(acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_1091_105_15_1(info, labels, acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_1091_105_15_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_105_16_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_16<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1091_105_16_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_105_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_19_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_19_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_19_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1091_105_19_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_105_19_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_19<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1091_105_19_0(acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_1091_105_19_1(info, labels, acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_1091_105_19_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_105_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_22_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_22<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1091_105_22_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_105_23_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_23_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_23_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1091_105_23_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_105_23_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_23<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1091_105_23_0(acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_1091_105_23_1(info, labels, acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_1091_105_23_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_105_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_27_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_27_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_27_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1091_105_27_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_105_27_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_27<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1091_105_27_0(acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_1091_105_27_1(info, labels, acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_1091_105_27_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_105_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_29_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_29_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_29_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1091_105_29_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_105_29_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_29<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1091_105_29_0(acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_1091_105_29_1(info, labels, acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_1091_105_29_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_105_30_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_30_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1091_105_30_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_105_30<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_1091_105_30_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_105_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 25usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_32_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_32_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1091_105_32_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_105_32<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_1091_105_32_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_105_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_35_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_35_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_1091_105_35_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_105_35<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_1091_105_35_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_105_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 25usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_105<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [117, 115, 45, 101, 97, 115, 116, 45, 50] => lookup_1091_105_0(info, labels, acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 117, 115, 45, 119, 101, 115, 116, 45, 49] => {
                lookup_1091_105_1(acc)
            }
            [117, 115, 45, 101, 97, 115, 116, 45, 49] => lookup_1091_105_2(labels, acc),
            [115, 51, 45, 117, 115, 45, 119, 101, 115, 116, 45, 49] => lookup_1091_105_3(acc),
            [115, 51, 45, 117, 115, 45, 119, 101, 115, 116, 45, 50] => lookup_1091_105_4(acc),
            [115, 51] => lookup_1091_105_5(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 117, 115, 45, 119, 101, 115, 116, 45, 50] => {
                lookup_1091_105_6(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_1091_105_7(acc)
            }
            [101, 117, 45, 119, 101, 115, 116, 45, 51] => lookup_1091_105_8(info, labels, acc),
            [99, 111, 109, 112, 117, 116, 101] => lookup_1091_105_9(info, labels, acc),
            [115, 51, 45, 97, 112, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_1091_105_10(acc),
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_1091_105_11(info, labels, acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 101, 117, 45, 119, 101, 115, 116, 45, 49] => {
                lookup_1091_105_12(acc)
            }
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_1091_105_13(info, labels, acc)
            }
            [115, 51, 45, 102, 105, 112, 115, 45, 117, 115, 45, 103, 111, 118, 45, 119, 101, 115, 116, 45, 49] => {
                lookup_1091_105_14(acc)
            }
            [101, 117, 45, 119, 101, 115, 116, 45, 50] => lookup_1091_105_15(info, labels, acc),
            [101, 108, 98] => lookup_1091_105_16(info, labels, acc),
            [115, 51, 45, 101, 120, 116, 101, 114, 110, 97, 108, 45, 49] => lookup_1091_105_17(acc),
            [115, 51, 45, 101, 117, 45, 119, 101, 115, 116, 45, 50] => lookup_1091_105_18(acc),
            [99, 97, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_1091_105_19(info, labels, acc)
            }
            [115, 51, 45, 115, 97, 45, 101, 97, 115, 116, 45, 49] => lookup_1091_105_20(acc),
            [115, 51, 45, 117, 115, 45, 103, 111, 118, 45, 119, 101, 115, 116, 45, 49] => {
                lookup_1091_105_21(acc)
            }
            [99, 111, 109, 112, 117, 116, 101, 45, 49] => lookup_1091_105_22(info, labels, acc),
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_1091_105_23(info, labels, acc)
            }
            [115, 51, 45, 97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_1091_105_24(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 117, 115, 45, 101, 97, 115, 116, 45, 49] => {
                lookup_1091_105_25(acc)
            }
            [115, 51, 45, 117, 115, 45, 101, 97, 115, 116, 45, 50] => lookup_1091_105_26(acc),
            [97, 112, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_1091_105_27(info, labels, acc),
            [115, 51, 45, 101, 117, 45, 119, 101, 115, 116, 45, 51] => lookup_1091_105_28(acc),
            [101, 117, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_1091_105_29(info, labels, acc)
            }
            [101, 117, 45, 119, 101, 115, 116, 45, 49] => lookup_1091_105_30(info, labels, acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_1091_105_31(acc)
            }
            [115, 97, 45, 101, 97, 115, 116, 45, 49] => lookup_1091_105_32(info, labels, acc),
            [115, 51, 45, 99, 97, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_1091_105_33(acc)
            }
            [115, 51, 45, 97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_1091_105_34(acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_1091_105_35(info, labels, acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_1091_105_36(acc)
            }
            [115, 51, 45, 97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_1091_105_37(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 115, 97, 45, 101, 97, 115, 116, 45, 49] => {
                lookup_1091_105_38(acc)
            }
            [115, 51, 45, 97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_1091_105_39(acc)
            }
            [115, 51, 45, 101, 117, 45, 119, 101, 115, 116, 45, 49] => lookup_1091_105_40(acc),
            [115, 51, 45, 101, 117, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_1091_105_41(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_108_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_108<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1091_108_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_112_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_112<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 18usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 97, 115] => lookup_1091_112_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_130_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_130<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 117] => lookup_1091_130_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_158(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_162(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_163(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_164(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_165(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_166(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_167(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_168(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_169(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_170(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_171(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_172(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_173(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_174(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_175(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_176(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_177(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_178(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_179(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_180(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_181(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_182_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_182_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_182_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_182_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_182_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_182_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_182_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_182_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_182_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_182_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_182_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_182_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_182_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_182_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_182_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_182_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_182_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_182<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 16usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_1091_182_0(acc)
            }
            [117, 115, 45, 101, 97, 115, 116, 45, 49] => lookup_1091_182_1(acc),
            [97, 112, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_1091_182_2(acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 49] => lookup_1091_182_3(acc),
            [101, 117, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => lookup_1091_182_4(acc),
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 51] => {
                lookup_1091_182_5(acc)
            }
            [101, 117, 45, 119, 101, 115, 116, 45, 51] => lookup_1091_182_6(acc),
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_1091_182_7(acc)
            }
            [117, 115, 45, 119, 101, 115, 116, 45, 50] => lookup_1091_182_8(acc),
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_1091_182_9(acc)
            }
            [115, 97, 45, 101, 97, 115, 116, 45, 49] => lookup_1091_182_10(acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 50] => lookup_1091_182_11(acc),
            [117, 115, 45, 103, 111, 118, 45, 119, 101, 115, 116, 45, 49] => {
                lookup_1091_182_12(acc)
            }
            [117, 115, 45, 119, 101, 115, 116, 45, 49] => lookup_1091_182_13(acc),
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_1091_182_14(acc)
            }
            [99, 97, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => lookup_1091_182_15(acc),
            [117, 115, 45, 101, 97, 115, 116, 45, 50] => lookup_1091_182_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_183(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_184(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_185(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_186(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_187_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_187<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112] => lookup_1091_187_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_188(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_189(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_190_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_190<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [100, 101, 109, 111] => lookup_1091_190_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_191(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_192(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_193(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_194(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_195(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_196(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_197(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_198(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_199_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_199_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_199_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_199_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_199_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_199_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_199_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_199_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_199_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_199_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_199_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_199<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [118, 115] => lookup_1091_199_0(acc),
            [121, 97, 108, 105] => lookup_1091_199_1(acc),
            [108, 121, 110, 120] => lookup_1091_199_2(acc),
            [120] => lookup_1091_199_3(acc),
            [111, 110, 122, 97] => lookup_1091_199_4(acc),
            [102, 101, 110, 116, 105, 103, 101, 114] => lookup_1091_199_5(acc),
            [111, 99, 101, 108, 111, 116] => lookup_1091_199_6(acc),
            [115, 112, 104, 105, 110, 120] => lookup_1091_199_7(acc),
            [111, 110, 99, 105, 108, 108, 97] => lookup_1091_199_8(acc),
            [99, 117, 115, 116, 111, 109, 101, 114] => lookup_1091_199_9(acc),
            [99, 97, 114, 97, 99, 97, 108] => lookup_1091_199_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_200(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_201(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_202(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_203(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_204(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_205(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_206(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_207(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_208(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_209_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_209_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_209<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [114, 97, 103, 45, 99, 108, 111, 117, 100] => lookup_1091_209_0(acc),
            [114, 97, 103, 45, 99, 108, 111, 117, 100, 45, 99, 104] => lookup_1091_209_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_210(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_211(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_212_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_212_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 1usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1091_212_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_212<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [114] => lookup_1091_212_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_213(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_214(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_215(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_216(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_217(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_218(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_219(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_220(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_221_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_221<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [120, 101, 110] => lookup_1091_221_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_222(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_223(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_224(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_225(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_226(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_227(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_228(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_229_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_229_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_229<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [117, 50] => lookup_1091_229_0(acc),
            [117, 50, 45, 108, 111, 99, 97, 108] => lookup_1091_229_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_230(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_231(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_232(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_233(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_234(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_235(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_236(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_237(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_238(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_239_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_239_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_239_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_239<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 100] => lookup_1091_239_0(acc),
            [108, 111, 110] => lookup_1091_239_1(acc),
            [114, 121, 100] => lookup_1091_239_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_240(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_241(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_242(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_243(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_244(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_245(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_246(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_247(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_248(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_249(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_250(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_251(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_252(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_253(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_254(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_255(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_256(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_257(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_258(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_259(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_260(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_261(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_262(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_263_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_263_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_263<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 101, 116, 97] => lookup_1091_263_0(acc),
            [97, 108, 112, 104, 97] => lookup_1091_263_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_264(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_265(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_266(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_267(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_268(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_269(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_270(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_271(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_272(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_273_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_273<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 118] => lookup_1091_273_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_274(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_275(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_276(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_277(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_278_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_278<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 105] => lookup_1091_278_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_279_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_279<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 15usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [106, 115] => lookup_1091_279_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_280(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_281(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_282(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_283(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_284(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_285(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_286(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_287(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_288(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_289(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_290(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_291(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_292(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_293(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_294(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_295(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_296_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_296_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_296_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1091_296_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_296_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_296_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1091_296_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_296_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_296_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1091_296_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_296<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [111, 99, 112] => lookup_1091_296_1(info, labels, acc),
            [111, 99, 105] => lookup_1091_296_2(info, labels, acc),
            [111, 99, 115] => lookup_1091_296_3(info, labels, acc),
            wild => lookup_1091_296_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_297(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_298(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_299(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_300(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_301(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_302(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_303(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_304(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_305(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_306_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_306<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 103, 101, 115] => lookup_1091_306_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_307(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_308(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_309(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_310(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_311(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_312(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_313(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_314(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_315(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_316_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_316_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_316_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_316<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [97, 109, 115] => lookup_1091_316_0(acc),
            [115, 103] => lookup_1091_316_1(acc),
            [97, 117] => lookup_1091_316_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_317(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_318(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_319(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_320(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_321(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_322(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_323(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_324(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_325(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_326(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_327(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_328(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_329(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_330(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_331(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_332(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_333(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_334(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_335(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_336(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_337_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_337_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1091_337_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_337<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 101, 118] => lookup_1091_337_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091_338(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_339(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_340(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_341(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_342(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_343(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_344(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_345(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_346(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_347(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_348(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_349(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_350(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_351(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_352(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_353(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_354(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_355(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_356(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_357(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_358(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_359(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_360(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 108, 101, 115, 107, 110, 115] => lookup_1091_0(acc),
            [48, 48, 49, 119, 119, 119] => lookup_1091_1(acc),
            [99, 105, 115, 99, 111, 102, 114, 101, 97, 107] => lookup_1091_2(acc),
            [100, 121, 110, 100, 110, 115, 45, 114, 101, 109, 111, 116, 101] => lookup_1091_3(acc),
            [113, 117, 105, 112, 101, 108, 101, 109, 101, 110, 116, 115] => {
                lookup_1091_4(info, labels, acc)
            }
            [109, 121, 97, 115, 117, 115, 116, 111, 114] => lookup_1091_5(acc),
            [108, 105, 110, 111, 100, 101] => lookup_1091_6(info, labels, acc),
            [104, 101, 114, 111, 107, 117, 115, 115, 108] => lookup_1091_7(acc),
            [97, 112, 112, 115, 112, 97, 99, 101, 117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => {
                lookup_1091_8(acc)
            }
            [111, 110, 102, 97, 98, 114, 105, 99, 97] => lookup_1091_9(acc),
            [100, 100, 110, 115, 107, 105, 110, 103] => lookup_1091_10(acc),
            [98, 112, 108, 97, 99, 101, 100] => lookup_1091_11(acc),
            [105, 115, 45, 97, 45, 99, 97, 116, 101, 114, 101, 114] => lookup_1091_12(acc),
            [112, 97, 103, 101, 120, 108] => lookup_1091_13(acc),
            [102, 114, 111, 109, 45, 109, 105] => lookup_1091_14(acc),
            [115, 101, 114, 118, 101, 113, 117, 97, 107, 101] => lookup_1091_15(acc),
            [114, 101, 110, 100, 101, 114] => lookup_1091_16(info, labels, acc),
            [115, 116, 97, 99, 107, 104, 101, 114, 111, 45, 110, 101, 116, 119, 111, 114, 107] => {
                lookup_1091_17(acc)
            }
            [102, 114, 111, 109, 45, 109, 116] => lookup_1091_18(acc),
            [100, 121, 110, 100, 110, 115, 45, 109, 97, 105, 108] => lookup_1091_19(acc),
            [104, 101, 97, 108, 116, 104, 45, 99, 97, 114, 101, 114, 101, 102, 111, 114, 109] => {
                lookup_1091_20(acc)
            }
            [119, 105, 116, 104, 121, 111, 117, 116, 117, 98, 101] => lookup_1091_21(acc),
            [105, 115, 45, 97, 45, 97, 110, 97, 114, 99, 104, 105, 115, 116] => lookup_1091_22(acc),
            [49, 107, 97, 112, 112] => lookup_1091_23(acc),
            [101, 115, 116, 45, 97, 45, 108, 97, 45, 109, 97, 105, 115, 111, 110] => {
                lookup_1091_24(acc)
            }
            [103, 98] => lookup_1091_25(acc),
            [100, 121, 110, 45, 111, 45, 115, 97, 117, 114] => lookup_1091_26(acc),
            [105, 115, 45, 117, 98, 101, 114, 108, 101, 101, 116] => lookup_1091_27(acc),
            [48, 101, 109, 109] => lookup_1091_28(info, labels, acc),
            [119, 112, 109, 117, 99, 100, 110] => lookup_1091_29(acc),
            [102, 114, 111, 109, 45, 110, 109] => lookup_1091_30(acc),
            [102, 114, 111, 109, 45, 97, 108] => lookup_1091_31(acc),
            [103, 111, 111, 103, 108, 101, 99, 111, 100, 101] => lookup_1091_32(acc),
            [99, 108, 105, 99, 107, 101, 116, 99, 108, 111, 117, 100] => lookup_1091_33(acc),
            [102, 114, 111, 109, 45, 100, 101] => lookup_1091_34(acc),
            [105, 115, 45, 97, 45, 116, 104, 101, 114, 97, 112, 105, 115, 116] => {
                lookup_1091_35(acc)
            }
            [105, 115, 45, 97, 110, 45, 97, 99, 116, 111, 114] => lookup_1091_36(acc),
            [100, 121, 110, 100, 110, 115, 45, 97, 116, 45, 119, 111, 114, 107] => {
                lookup_1091_37(acc)
            }
            [101, 115, 116, 45, 97, 45, 108, 97, 45, 109, 97, 115, 105, 111, 110] => {
                lookup_1091_38(acc)
            }
            [115, 101, 108, 108, 115, 45, 102, 111, 114, 45, 108, 101, 115, 115] => {
                lookup_1091_39(acc)
            }
            [106, 111, 121, 101, 110, 116] => lookup_1091_40(info, labels, acc),
            [109, 121, 115, 104, 111, 112, 98, 108, 111, 99, 107, 115] => lookup_1091_41(acc),
            [109, 121, 97, 99, 116, 105, 118, 101, 100, 105, 114, 101, 99, 116, 111, 114, 121] => {
                lookup_1091_42(acc)
            }
            [105, 115, 45, 97, 45, 103, 114, 101, 101, 110] => lookup_1091_43(acc),
            [117, 110, 117, 115, 117, 97, 108, 112, 101, 114, 115, 111, 110] => lookup_1091_44(acc),
            [109, 97, 115, 115, 105, 118, 101, 103, 114, 105, 100] => {
                lookup_1091_45(info, labels, acc)
            }
            [112, 117, 98, 108, 105, 115, 104, 112, 114, 111, 120, 121] => lookup_1091_46(acc),
            [105, 115, 45, 97, 45, 98, 117, 108, 108, 115, 45, 102, 97, 110] => lookup_1091_47(acc),
            [105, 115, 45, 97, 45, 109, 117, 115, 105, 99, 105, 97, 110] => lookup_1091_48(acc),
            [104, 105, 100, 111, 114, 97] => lookup_1091_49(acc),
            [103, 111, 116, 100, 110, 115] => lookup_1091_50(acc),
            [108, 111, 115, 101, 121, 111, 117, 114, 105, 112] => lookup_1091_51(acc),
            [99, 101, 99, 104, 105, 114, 101] => lookup_1091_52(acc),
            [105, 115, 45, 97, 45, 108, 97, 119, 121, 101, 114] => lookup_1091_53(acc),
            [105, 115, 45, 97, 110, 45, 97, 99, 116, 114, 101, 115, 115] => lookup_1091_54(acc),
            [115, 101, 108, 108, 115, 45, 102, 111, 114, 45, 117] => lookup_1091_55(acc),
            [102, 98, 115, 98, 120] => lookup_1091_56(info, labels, acc),
            [119, 105, 116, 104, 103, 111, 111, 103, 108, 101] => lookup_1091_57(acc),
            [105, 115, 45, 97, 45, 115, 116, 117, 100, 101, 110, 116] => lookup_1091_58(acc),
            [103, 105, 116, 104, 117, 98, 117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => {
                lookup_1091_59(acc)
            }
            [102, 114, 111, 109, 45, 107, 121] => lookup_1091_60(acc),
            [97, 119, 115, 109, 112, 112, 108] => lookup_1091_61(acc),
            [105, 115, 45, 97, 110, 45, 97, 99, 99, 111, 117, 110, 116, 97, 110, 116] => {
                lookup_1091_62(acc)
            }
            [98, 108, 111, 103, 115, 121, 116, 101] => lookup_1091_63(acc),
            [100, 105, 116, 99, 104, 121, 111, 117, 114, 105, 112] => lookup_1091_64(acc),
            [104, 111, 109, 101, 108, 105, 110, 117, 120] => lookup_1091_65(acc),
            [115, 97, 118, 101, 115, 45, 116, 104, 101, 45, 119, 104, 97, 108, 101, 115] => {
                lookup_1091_66(acc)
            }
            [105, 100, 110, 98, 108, 111, 103, 103, 101, 114] => lookup_1091_67(acc),
            [105, 115, 45, 97, 45, 114, 101, 112, 117, 98, 108, 105, 99, 97, 110] => {
                lookup_1091_68(acc)
            }
            [112, 97, 103, 101, 102, 114, 111, 110, 116, 97, 112, 112] => lookup_1091_69(acc),
            [105, 115, 45, 97, 45, 112, 101, 114, 115, 111, 110, 97, 108, 116, 114, 97, 105, 110, 101, 114] => {
                lookup_1091_70(acc)
            }
            [105, 107, 45, 115, 101, 114, 118, 101, 114] => lookup_1091_71(info, labels, acc),
            [107, 114] => lookup_1091_72(acc),
            [104, 111, 109, 101, 115, 101, 99, 117, 114, 105, 116, 121, 109, 97, 99] => {
                lookup_1091_73(acc)
            }
            [100, 111, 110, 116, 101, 120, 105, 115, 116] => lookup_1091_74(acc),
            [105, 115, 45, 103, 111, 110, 101] => lookup_1091_75(acc),
            [100, 121, 110, 110, 115] => lookup_1091_76(acc),
            [99, 108, 111, 117, 100, 99, 111, 110, 116, 114, 111, 108, 97, 112, 112] => {
                lookup_1091_77(acc)
            }
            [116, 101, 109, 112, 45, 100, 110, 115] => lookup_1091_78(acc),
            [102, 105, 114, 101, 98, 97, 115, 101, 97, 112, 112] => lookup_1091_79(acc),
            [100, 115, 109, 121, 110, 97, 115] => lookup_1091_80(acc),
            [119, 111, 108, 116, 108, 97, 98, 45, 100, 101, 109, 111] => lookup_1091_81(acc),
            [111, 110, 45, 97, 112, 116, 105, 98, 108, 101] => lookup_1091_82(acc),
            [105, 115, 45, 97, 45, 104, 117, 110, 116, 101, 114] => lookup_1091_83(acc),
            [100, 121, 110, 100, 110, 115, 45, 104, 111, 109, 101] => lookup_1091_84(acc),
            [105, 115, 45, 97, 45, 100, 101, 109, 111, 99, 114, 97, 116] => lookup_1091_85(acc),
            [105, 115, 45, 97, 45, 110, 97, 115, 99, 97, 114, 102, 97, 110] => lookup_1091_86(acc),
            [119, 111, 114, 107, 105, 115, 98, 111, 114, 105, 110, 103] => lookup_1091_87(acc),
            [102, 97, 115, 116, 108, 121, 45, 116, 101, 114, 114, 97, 114, 105, 117, 109] => {
                lookup_1091_88(acc)
            }
            [115, 101, 114, 118, 101, 99, 111, 117, 110, 116, 101, 114, 115, 116, 114, 105, 107, 101] => {
                lookup_1091_89(acc)
            }
            [111, 98, 115, 101, 114, 118, 97, 98, 108, 101, 117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => {
                lookup_1091_90(info, labels, acc)
            }
            [102, 114, 111, 109, 45, 111, 107] => lookup_1091_91(acc),
            [113, 99] => lookup_1091_92(acc),
            [100, 121, 110, 100, 110, 115, 45, 119, 111, 114, 107] => lookup_1091_93(acc),
            [102, 114, 111, 109, 45, 105, 108] => lookup_1091_94(acc),
            [105, 109, 112, 101, 114, 116, 114, 105, 120] => lookup_1091_95(acc),
            [112, 111, 105, 110, 116, 50, 116, 104, 105, 115] => lookup_1091_96(acc),
            [115, 99, 114, 121, 115, 101, 99] => lookup_1091_97(acc),
            [101, 118, 101, 110, 110, 111, 100, 101] => lookup_1091_98(info, labels, acc),
            [100, 97, 109, 110, 115, 101, 114, 118, 101, 114] => lookup_1091_99(acc),
            [109, 121, 118, 110, 99] => lookup_1091_100(acc),
            [109, 121, 115, 104, 111, 112, 105, 102, 121] => lookup_1091_101(acc),
            [119, 97, 102, 102, 108, 101, 99, 101, 108, 108] => lookup_1091_102(acc),
            [105, 115, 45, 97, 45, 108, 108, 97, 109, 97] => lookup_1091_103(acc),
            [102, 114, 111, 109, 45, 97, 114] => lookup_1091_104(acc),
            [97, 109, 97, 122, 111, 110, 97, 119, 115] => lookup_1091_105(info, labels, acc),
            [105, 115, 97, 45, 104, 111, 99, 107, 101, 121, 110, 117, 116] => lookup_1091_106(acc),
            [102, 114, 111, 109, 45, 114, 105] => lookup_1091_107(acc),
            [108, 105, 110, 111, 100, 101, 111, 98, 106, 101, 99, 116, 115] => {
                lookup_1091_108(info, labels, acc)
            }
            [100, 121, 110, 97, 108, 105, 97, 115] => lookup_1091_109(acc),
            [109, 121, 100, 97, 116, 116, 111] => lookup_1091_110(acc),
            [115, 112, 97, 99, 101, 45, 116, 111, 45, 114, 101, 110, 116] => lookup_1091_111(acc),
            [104, 111, 115, 116, 101, 100, 45, 98, 121, 45, 112, 114, 101, 118, 105, 100, 101, 114] => {
                lookup_1091_112(info, labels, acc)
            }
            [102, 114, 111, 109, 45, 117, 116] => lookup_1091_113(acc),
            [115, 101, 114, 118, 101, 104, 117, 109, 111, 117, 114] => lookup_1091_114(acc),
            [122, 97] => lookup_1091_115(acc),
            [106, 100, 101, 118, 99, 108, 111, 117, 100] => lookup_1091_116(acc),
            [111, 111, 103, 117, 121] => lookup_1091_117(acc),
            [104, 111, 115, 116, 101, 100, 112, 105] => lookup_1091_118(acc),
            [111, 110, 116, 104, 101, 119, 105, 102, 105] => lookup_1091_119(acc),
            [117, 121] => lookup_1091_120(acc),
            [111, 114, 115, 105, 116, 101, 115] => lookup_1091_121(acc),
            [112, 103, 102, 111, 103] => lookup_1091_122(acc),
            [116, 104, 105, 110, 103, 100, 117, 115, 116, 100, 97, 116, 97] => lookup_1091_123(acc),
            [119, 112, 100, 101, 118, 99, 108, 111, 117, 100] => lookup_1091_124(acc),
            [100, 110, 115, 100, 111, 106, 111] => lookup_1091_125(acc),
            [115, 101, 108, 102, 105, 112] => lookup_1091_126(acc),
            [100, 100, 110, 115, 108, 105, 118, 101] => lookup_1091_127(acc),
            [105, 115, 45, 108, 101, 101, 116] => lookup_1091_128(acc),
            [102, 114, 101, 101, 98, 111, 120, 45, 111, 115] => lookup_1091_129(acc),
            [109, 101, 116, 101, 111, 114, 97, 112, 112] => lookup_1091_130(labels, acc),
            [100, 121, 110, 100, 110, 115, 45, 102, 114, 101, 101] => lookup_1091_131(acc),
            [105, 115, 45, 97, 45, 98, 111, 111, 107, 107, 101, 101, 112, 101, 114] => {
                lookup_1091_132(acc)
            }
            [104, 107] => lookup_1091_133(acc),
            [112, 108, 97, 121, 115, 116, 97, 116, 105, 111, 110, 45, 99, 108, 111, 117, 100] => {
                lookup_1091_134(acc)
            }
            [105, 115, 45, 97, 45, 99, 104, 101, 102] => lookup_1091_135(acc),
            [105, 115, 45, 97, 45, 108, 105, 98, 101, 114, 116, 97, 114, 105, 97, 110] => {
                lookup_1091_136(acc)
            }
            [109, 101, 120] => lookup_1091_137(acc),
            [98, 117, 105, 108, 116, 119, 105, 116, 104, 100, 97, 114, 107] => lookup_1091_138(acc),
            [99, 111, 100, 101, 115, 112, 111, 116] => lookup_1091_139(acc),
            [105, 115, 45, 97, 45, 98, 108, 111, 103, 103, 101, 114] => lookup_1091_140(acc),
            [100, 114, 101, 97, 109, 104, 111, 115, 116, 101, 114, 115] => lookup_1091_141(acc),
            [121, 111, 108, 97, 115, 105, 116, 101] => lookup_1091_142(acc),
            [98, 114] => lookup_1091_143(acc),
            [110, 101, 97, 116, 45, 117, 114, 108] => lookup_1091_144(acc),
            [102, 114, 111, 109, 45, 116, 110] => lookup_1091_145(acc),
            [104, 111, 109, 101, 115, 101, 99, 117, 114, 105, 116, 121, 112, 99] => {
                lookup_1091_146(acc)
            }
            [99, 110] => lookup_1091_147(acc),
            [115, 101, 99, 117, 114, 105, 116, 121, 116, 97, 99, 116, 105, 99, 115] => {
                lookup_1091_148(acc)
            }
            [102, 114, 101, 101, 109, 121, 105, 112] => lookup_1091_149(acc),
            [102, 114, 111, 109, 45, 109, 115] => lookup_1091_150(acc),
            [102, 114, 97, 109, 101, 114, 99, 97, 110, 118, 97, 115] => lookup_1091_151(acc),
            [107, 105, 108, 97, 116, 105, 114, 111, 110] => lookup_1091_152(acc),
            [117, 107] => lookup_1091_153(acc),
            [113, 117, 97, 108, 105, 102, 105, 111, 97, 112, 112] => lookup_1091_154(acc),
            [103, 114] => lookup_1091_155(acc),
            [102, 114, 111, 109, 45, 110, 100] => lookup_1091_156(acc),
            [100, 114, 97, 121, 100, 100, 110, 115] => lookup_1091_157(acc),
            [102, 114, 111, 109, 45, 109, 111] => lookup_1091_158(acc),
            [107, 111, 122, 111, 119] => lookup_1091_159(acc),
            [100, 121, 110, 100, 110, 115, 45, 119, 105, 107, 105] => lookup_1091_160(acc),
            [112, 108, 97, 116, 116, 101, 114, 45, 97, 112, 112] => lookup_1091_161(acc),
            [103, 101, 110, 116, 108, 101, 110, 116, 97, 112, 105, 115] => lookup_1091_162(acc),
            [100, 100, 110, 115, 103, 101, 101, 107] => lookup_1091_163(acc),
            [102, 114, 111, 109, 45, 110, 118] => lookup_1091_164(acc),
            [115, 101, 114, 118, 101, 101, 120, 99, 104, 97, 110, 103, 101] => lookup_1091_165(acc),
            [105, 97, 109, 97, 108, 108, 97, 109, 97] => lookup_1091_166(acc),
            [105, 115, 45, 97, 45, 116, 101, 97, 99, 104, 101, 114] => lookup_1091_167(acc),
            [109, 121, 100, 111, 98, 105, 115, 115] => lookup_1091_168(acc),
            [103, 101, 110, 116, 97, 112, 112, 115] => lookup_1091_169(acc),
            [100, 97, 116, 116, 111, 119, 101, 98] => lookup_1091_170(acc),
            [116, 114, 121, 45, 115, 110, 111, 119, 112, 108, 111, 119] => lookup_1091_171(acc),
            [102, 97, 109, 105, 108, 121, 100, 115] => lookup_1091_172(acc),
            [114, 117] => lookup_1091_173(acc),
            [102, 114, 111, 109, 45, 111, 114] => lookup_1091_174(acc),
            [102, 114, 111, 109, 45, 119, 118] => lookup_1091_175(acc),
            [97, 114] => lookup_1091_176(acc),
            [102, 105, 114, 101, 119, 97, 108, 108, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_1091_177(acc)
            }
            [101, 117] => lookup_1091_178(acc),
            [105, 115, 45, 97, 45, 99, 112, 97] => lookup_1091_179(acc),
            [97, 102, 114, 105, 99, 97] => lookup_1091_180(acc),
            [115, 101, 114, 118, 101, 112, 105, 99, 115] => lookup_1091_181(acc),
            [101, 108, 97, 115, 116, 105, 99, 98, 101, 97, 110, 115, 116, 97, 108, 107] => {
                lookup_1091_182(labels, acc)
            }
            [105, 115, 45, 119, 105, 116, 104, 45, 116, 104, 101, 98, 97, 110, 100] => {
                lookup_1091_183(acc)
            }
            [115, 105, 109, 112, 108, 101, 45, 117, 114, 108] => lookup_1091_184(acc),
            [99, 111] => lookup_1091_185(acc),
            [110, 111] => lookup_1091_186(acc),
            [108, 109, 112, 109] => lookup_1091_187(info, labels, acc),
            [102, 114, 111, 109, 45, 109, 110] => lookup_1091_188(acc),
            [112, 105, 120, 111, 108, 105, 110, 111] => lookup_1091_189(acc),
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_1091_190(info, labels, acc),
            [106, 112, 110] => lookup_1091_191(acc),
            [101, 115, 116, 45, 109, 111, 110, 45, 98, 108, 111, 103, 117, 101, 117, 114] => {
                lookup_1091_192(acc)
            }
            [108, 105, 107, 101, 115, 45, 112, 105, 101] => lookup_1091_193(acc),
            [104, 111, 109, 101, 117, 110, 105, 120] => lookup_1091_194(acc),
            [109, 105, 110, 105, 115, 101, 114, 118, 101, 114] => lookup_1091_195(acc),
            [105, 115, 45, 97, 45, 114, 111, 99, 107, 115, 116, 97, 114] => lookup_1091_196(acc),
            [115, 116, 117, 102, 102, 116, 111, 114, 101, 97, 100] => lookup_1091_197(acc),
            [97, 108, 112, 104, 97, 45, 109, 121, 113, 110, 97, 112, 99, 108, 111, 117, 100] => {
                lookup_1091_198(acc)
            }
            [109, 121, 116, 104, 105, 99, 45, 98, 101, 97, 115, 116, 115] => {
                lookup_1091_199(info, labels, acc)
            }
            [105, 115, 45, 97, 45, 112, 108, 97, 121, 101, 114] => lookup_1091_200(acc),
            [109, 121, 114, 97, 118, 101, 110, 100, 98] => lookup_1091_201(acc),
            [119, 112, 104, 111, 115, 116, 101, 100, 109, 97, 105, 108] => lookup_1091_202(acc),
            [105, 110, 100, 111, 119, 97, 112, 98, 108, 111, 103] => lookup_1091_203(acc),
            [111, 117, 116, 115, 121, 115, 116, 101, 109, 115, 99, 108, 111, 117, 100] => {
                lookup_1091_204(acc)
            }
            [105, 115, 45, 97, 45, 102, 105, 110, 97, 110, 99, 105, 97, 108, 97, 100, 118, 105, 115, 111, 114] => {
                lookup_1091_205(acc)
            }
            [100, 121, 110, 100, 110, 115, 45, 119, 101, 98] => lookup_1091_206(acc),
            [102, 114, 111, 109, 45, 119, 97] => lookup_1091_207(acc),
            [115, 101, 114, 118, 101, 98, 98, 115] => lookup_1091_208(acc),
            [104, 111, 115, 116, 101, 117, 114] => lookup_1091_209(info, labels, acc),
            [105, 115, 45, 115, 108, 105, 99, 107] => lookup_1091_210(acc),
            [98, 101, 116, 97, 105, 110, 97, 98, 111, 120] => lookup_1091_211(acc),
            [97, 112, 112, 115, 112, 111, 116] => lookup_1091_212(labels, acc),
            [105, 115, 45, 97, 45, 104, 97, 114, 100, 45, 119, 111, 114, 107, 101, 114] => {
                lookup_1091_213(acc)
            }
            [118, 105, 112, 115, 105, 110, 97, 97, 112, 112] => lookup_1091_214(acc),
            [102, 114, 111, 109, 45, 110, 99] => lookup_1091_215(acc),
            [111, 112, 101, 114, 97, 117, 110, 105, 116, 101] => lookup_1091_216(acc),
            [115, 101, 114, 118, 101, 109, 112, 51] => lookup_1091_217(acc),
            [105, 115, 45, 105, 110, 116, 111, 45, 103, 97, 109, 101, 115] => lookup_1091_218(acc),
            [105, 109, 112, 101, 114, 116, 114, 105, 120, 99, 100, 110] => lookup_1091_219(acc),
            [114, 101, 109, 111, 116, 101, 119, 100] => lookup_1091_220(acc),
            [112, 114, 103, 109, 114] => lookup_1091_221(info, labels, acc),
            [100, 111, 101, 115, 110, 116, 101, 120, 105, 115, 116] => lookup_1091_222(acc),
            [105, 115, 45, 97, 45, 100, 111, 99, 116, 111, 114] => lookup_1091_223(acc),
            [104, 101, 114, 111, 107, 117, 97, 112, 112] => lookup_1091_224(acc),
            [104, 117] => lookup_1091_225(acc),
            [105, 115, 45, 105, 110, 116, 111, 45, 99, 97, 114, 116, 111, 111, 110, 115] => {
                lookup_1091_226(acc)
            }
            [103, 105, 105, 122, 101] => lookup_1091_227(acc),
            [113, 97, 50] => lookup_1091_228(acc),
            [120, 110, 98, 97, 121] => lookup_1091_229(labels, acc),
            [115, 101, 114, 118, 101, 98, 101, 101, 114] => lookup_1091_230(acc),
            [102, 114, 111, 109, 45, 103, 97] => lookup_1091_231(acc),
            [105, 115, 45, 105, 110, 116, 111, 45, 97, 110, 105, 109, 101] => lookup_1091_232(acc),
            [105, 115, 45, 99, 101, 114, 116, 105, 102, 105, 101, 100] => lookup_1091_233(acc),
            [102, 114, 111, 109, 45, 109, 100] => lookup_1091_234(acc),
            [100, 110, 115, 97, 108, 105, 97, 115] => lookup_1091_235(acc),
            [105, 115, 45, 97, 110, 45, 101, 110, 116, 101, 114, 116, 97, 105, 110, 101, 114] => {
                lookup_1091_236(acc)
            }
            [102, 114, 111, 109, 45, 115, 100] => lookup_1091_237(acc),
            [105, 115, 45, 105, 110, 116, 111, 45, 99, 97, 114, 115] => lookup_1091_238(acc),
            [119, 97, 102, 97, 105, 99, 108, 111, 117, 100] => lookup_1091_239(info, labels, acc),
            [103, 101, 116, 109, 121, 105, 112] => lookup_1091_240(acc),
            [110, 102, 115, 104, 111, 115, 116] => lookup_1091_241(acc),
            [110, 101, 116, 45, 102, 114, 101, 97, 107, 115] => lookup_1091_242(acc),
            [115, 101, 114, 118, 101, 104, 116, 116, 112] => lookup_1091_243(acc),
            [103, 111, 116, 112, 97, 110, 116, 104, 101, 111, 110] => lookup_1091_244(acc),
            [117, 115] => lookup_1091_245(acc),
            [100, 121, 110, 100, 110, 115, 45, 115, 101, 114, 118, 101, 114] => {
                lookup_1091_246(acc)
            }
            [100, 97, 116, 116, 111, 108, 111, 99, 97, 108] => lookup_1091_247(acc),
            [102, 114, 111, 109, 45, 115, 99] => lookup_1091_248(acc),
            [102, 114, 111, 109, 45, 118, 116] => lookup_1091_249(acc),
            [100, 111, 111, 109, 100, 110, 115] => lookup_1091_250(acc),
            [100, 121, 110, 100, 110, 115, 45, 111, 102, 102, 105, 99, 101] => lookup_1091_251(acc),
            [105, 115, 45, 97, 110, 45, 101, 110, 103, 105, 110, 101, 101, 114] => {
                lookup_1091_252(acc)
            }
            [119, 114, 105, 116, 101, 115, 116, 104, 105, 115, 98, 108, 111, 103] => {
                lookup_1091_253(acc)
            }
            [100, 110, 115, 105, 115, 107, 105, 110, 107, 121] => lookup_1091_254(acc),
            [116, 101, 97, 99, 104, 101, 115, 45, 121, 111, 103, 97] => lookup_1091_255(acc),
            [115, 101, 114, 118, 101, 105, 114, 99] => lookup_1091_256(acc),
            [102, 114, 111, 109, 45, 119, 121] => lookup_1091_257(acc),
            [102, 97, 115, 116, 118, 112, 115, 45, 115, 101, 114, 118, 101, 114] => {
                lookup_1091_258(acc)
            }
            [102, 114, 111, 109, 45, 100, 99] => lookup_1091_259(acc),
            [115, 107, 121, 103, 101, 97, 114, 97, 112, 112] => lookup_1091_260(acc),
            [114, 104, 99, 108, 111, 117, 100] => lookup_1091_261(acc),
            [111, 110, 114, 101, 110, 100, 101, 114] => lookup_1091_262(acc),
            [98, 111, 117, 110, 116, 121, 45, 102, 117, 108, 108] => lookup_1091_263(labels, acc),
            [108, 105, 107, 101, 115, 99, 97, 110, 100, 121] => lookup_1091_264(acc),
            [98, 108, 111, 120, 99, 109, 115] => lookup_1091_265(acc),
            [102, 114, 111, 109, 45, 99, 97] => lookup_1091_266(acc),
            [115, 101, 114, 118, 101, 104, 97, 108, 102, 108, 105, 102, 101] => {
                lookup_1091_267(acc)
            }
            [105, 115, 45, 97, 45, 99, 117, 98, 105, 99, 108, 101, 45, 115, 108, 97, 118, 101] => {
                lookup_1091_268(acc)
            }
            [105, 115, 45, 97, 45, 116, 101, 99, 104, 105, 101] => lookup_1091_269(acc),
            [105, 115, 45, 97, 110, 45, 97, 114, 116, 105, 115, 116] => lookup_1091_270(acc),
            [51, 117, 116, 105, 108, 105, 116, 105, 101, 115] => lookup_1091_271(acc),
            [102, 114, 111, 109, 45, 97, 107] => lookup_1091_272(acc),
            [101, 108, 97, 115, 116, 121, 99, 111] => lookup_1091_273(labels, acc),
            [100, 111, 112, 97, 97, 115] => lookup_1091_274(acc),
            [102, 114, 111, 109, 45, 99, 116] => lookup_1091_275(acc),
            [107, 97, 115, 115, 101, 114, 118, 101, 114] => lookup_1091_276(acc),
            [102, 114, 111, 109, 45, 118, 97] => lookup_1091_277(acc),
            [115, 116, 100, 108, 105, 98] => lookup_1091_278(info, labels, acc),
            [119, 112, 101, 110, 103, 105, 110, 101, 112, 111, 119, 101, 114, 101, 100] => {
                lookup_1091_279(labels, acc)
            }
            [102, 114, 111, 109, 45, 107, 115] => lookup_1091_280(acc),
            [98, 97, 114, 115, 121, 99, 101, 110, 116, 101, 114] => lookup_1091_281(acc),
            [102, 114, 111, 109, 45, 109, 97] => lookup_1091_282(acc),
            [105, 115, 45, 110, 111, 116, 45, 99, 101, 114, 116, 105, 102, 105, 101, 100] => {
                lookup_1091_283(acc)
            }
            [97, 112, 112, 108, 105, 110, 122, 105] => lookup_1091_284(acc),
            [105, 115, 45, 97, 45, 112, 104, 111, 116, 111, 103, 114, 97, 112, 104, 101, 114] => {
                lookup_1091_285(acc)
            }
            [105, 115, 45, 97, 45, 99, 111, 110, 115, 101, 114, 118, 97, 116, 105, 118, 101] => {
                lookup_1091_286(acc)
            }
            [109, 121, 113, 110, 97, 112, 99, 108, 111, 117, 100] => lookup_1091_287(acc),
            [115, 104, 111, 112, 105, 116, 115, 105, 116, 101] => lookup_1091_288(acc),
            [100, 100, 110, 115, 102, 114, 101, 101] => lookup_1091_289(acc),
            [103, 101, 101, 107, 103, 97, 108, 97, 120, 121] => lookup_1091_290(acc),
            [102, 114, 111, 109, 45, 111, 104] => lookup_1091_291(acc),
            [100, 97, 116, 116, 111, 114, 101, 108, 97, 121] => lookup_1091_292(acc),
            [98, 108, 111, 103, 100, 110, 115] => lookup_1091_293(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1091_294(acc),
            [102, 114, 111, 109, 45, 119, 105] => lookup_1091_295(acc),
            [99, 117, 115, 116, 111, 109, 101, 114, 45, 111, 99, 105] => {
                lookup_1091_296(info, labels, acc)
            }
            [102, 114, 111, 109, 45, 110, 101] => lookup_1091_297(acc),
            [100, 121, 110, 100, 110, 115, 45, 98, 108, 111, 103] => lookup_1091_298(acc),
            [102, 114, 111, 109, 45, 102, 108] => lookup_1091_299(acc),
            [105, 115, 45, 97, 45, 108, 97, 110, 100, 115, 99, 97, 112, 101, 114] => {
                lookup_1091_300(acc)
            }
            [105, 115, 45, 97, 110, 45, 97, 110, 97, 114, 99, 104, 105, 115, 116] => {
                lookup_1091_301(acc)
            }
            [108, 111, 103, 111, 105, 112] => lookup_1091_302(acc),
            [115, 109, 117, 115, 104, 99, 100, 110] => lookup_1091_303(acc),
            [98, 97, 108, 101, 110, 97, 45, 100, 101, 118, 105, 99, 101, 115] => {
                lookup_1091_304(acc)
            }
            [100, 101] => lookup_1091_305(acc),
            [119, 105, 97, 114, 100, 119, 101, 98] => lookup_1091_306(info, labels, acc),
            [100, 121, 110, 100, 110, 115, 45, 112, 105, 99, 115] => lookup_1091_307(acc),
            [102, 114, 111, 109, 45, 104, 105] => lookup_1091_308(acc),
            [113, 117, 105, 99, 107, 115, 121, 116, 101, 115] => lookup_1091_309(acc),
            [115, 101, 114, 118, 101, 102, 116, 112] => lookup_1091_310(acc),
            [115, 105, 110, 97, 97, 112, 112] => lookup_1091_311(acc),
            [109, 121, 115, 101, 99, 117, 114, 105, 116, 121, 99, 97, 109, 101, 114, 97] => {
                lookup_1091_312(acc)
            }
            [97, 112, 112, 99, 104, 105, 122, 105] => lookup_1091_313(acc),
            [109, 121, 100, 114, 111, 98, 111] => lookup_1091_314(acc),
            [102, 114, 111, 109, 45, 112, 97] => lookup_1091_315(acc),
            [99, 108, 111, 117, 100, 115, 119, 105, 116, 99, 104, 101, 115] => {
                lookup_1091_316(info, labels, acc)
            }
            [115, 101, 114, 118, 101, 112, 50, 112] => lookup_1091_317(acc),
            [99, 108, 111, 117, 100, 99, 111, 110, 116, 114, 111, 108, 108, 101, 100] => {
                lookup_1091_318(acc)
            }
            [113, 98, 117, 115, 101, 114] => lookup_1091_319(acc),
            [114, 97, 99, 107, 109, 97, 122, 101] => lookup_1091_320(acc),
            [105, 115, 45, 97, 45, 100, 101, 115, 105, 103, 110, 101, 114] => lookup_1091_321(acc),
            [116, 114, 121, 99, 108, 111, 117, 100, 102, 108, 97, 114, 101] => lookup_1091_322(acc),
            [102, 114, 101, 101, 98, 111, 120, 111, 115] => lookup_1091_323(acc),
            [103, 111, 111, 103, 108, 101, 97, 112, 105, 115] => lookup_1091_324(acc),
            [105, 115, 45, 97, 45, 112, 97, 105, 110, 116, 101, 114] => lookup_1091_325(acc),
            [98, 97, 114, 115, 121, 111, 110, 108, 105, 110, 101] => lookup_1091_326(acc),
            [109, 121, 105, 112, 104, 111, 115, 116] => lookup_1091_327(acc),
            [102, 114, 111, 109, 45, 105, 97] => lookup_1091_328(acc),
            [102, 114, 111, 109, 45, 110, 106] => lookup_1091_329(acc),
            [102, 114, 111, 109, 45, 116, 120] => lookup_1091_330(acc),
            [105, 115, 97, 45, 103, 101, 101, 107] => lookup_1091_331(acc),
            [103, 108, 101, 101, 122, 101] => lookup_1091_332(acc),
            [115, 101, 114, 118, 101, 115, 97, 114, 99, 97, 115, 109] => lookup_1091_333(acc),
            [97, 119, 115, 103, 108, 111, 98, 97, 108, 97, 99, 99, 101, 108, 101, 114, 97, 116, 111, 114] => {
                lookup_1091_334(acc)
            }
            [102, 114, 111, 109, 45, 112, 114] => lookup_1091_335(acc),
            [100, 101, 118, 45, 109, 121, 113, 110, 97, 112, 99, 108, 111, 117, 100] => {
                lookup_1091_336(acc)
            }
            [97, 100, 111, 98, 101, 97, 101, 109, 99, 108, 111, 117, 100] => {
                lookup_1091_337(labels, acc)
            }
            [101, 115, 116, 45, 108, 101, 45, 112, 97, 116, 114, 111, 110] => lookup_1091_338(acc),
            [102, 114, 111, 109, 45, 105, 100] => lookup_1091_339(acc),
            [104, 111, 98, 98, 121, 45, 115, 105, 116, 101] => lookup_1091_340(acc),
            [116, 111, 119, 110, 110, 101, 119, 115, 45, 115, 116, 97, 103, 105, 110, 103] => {
                lookup_1091_341(acc)
            }
            [100, 121, 110, 100, 110, 115, 45, 105, 112] => lookup_1091_342(acc),
            [112, 97, 103, 101, 115, 112, 101, 101, 100, 109, 111, 98, 105, 108, 105, 122, 101, 114] => {
                lookup_1091_343(acc)
            }
            [100, 121, 110, 100, 110, 115, 45, 97, 116, 45, 104, 111, 109, 101] => {
                lookup_1091_344(acc)
            }
            [102, 114, 111, 109, 45, 110, 104] => lookup_1091_345(acc),
            [116, 104, 101, 119, 111, 114, 107, 112, 99] => lookup_1091_346(acc),
            [115, 97] => lookup_1091_347(acc),
            [52, 117] => lookup_1091_348(acc),
            [97, 112, 112, 115, 112, 97, 99, 101, 104, 111, 115, 116, 101, 100] => {
                lookup_1091_349(acc)
            }
            [111, 119, 110, 112, 114, 111, 118, 105, 100, 101, 114] => lookup_1091_350(acc),
            [109, 121, 116, 117, 108, 101, 97, 112] => lookup_1091_351(acc),
            [105, 115, 45, 97, 45, 103, 101, 101, 107] => lookup_1091_352(acc),
            [102, 114, 111, 109, 45, 105, 110] => lookup_1091_353(acc),
            [105, 115, 45, 97, 45, 103, 117, 114, 117] => lookup_1091_354(acc),
            [105, 115, 115, 109, 97, 114, 116, 101, 114, 116, 104, 97, 110, 121, 111, 117] => {
                lookup_1091_355(acc)
            }
            [115, 101, 114, 118, 101, 103, 97, 109, 101] => lookup_1091_356(acc),
            [105, 115, 45, 97, 45, 110, 117, 114, 115, 101] => lookup_1091_357(acc),
            [105, 115, 45, 97, 45, 108, 105, 98, 101, 114, 97, 108] => lookup_1091_358(acc),
            [108, 112, 117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => {
                lookup_1091_359(acc)
            }
            [105, 115, 45, 97, 45, 115, 111, 99, 105, 97, 108, 105, 115, 116] => {
                lookup_1091_360(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1092() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1093() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1094() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1095() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1096() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1097() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1098() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1099() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1100() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1101() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1102() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1103() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1104() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1105_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1105<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 51, 51, 55] => lookup_1105_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1106() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1107() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1108() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1109() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1112_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1112_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1112_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1112<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_1112_0(acc),
            [101, 100, 117] => lookup_1112_1(acc),
            [99, 111, 109] => lookup_1112_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1113() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1114() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1115() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1116() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1118() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1119() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1120() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1121() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1122() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1123() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1124() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1125() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1126() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1127() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1128() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1129() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1130() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1131() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1132() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1133() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1134() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1135() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1136() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1137_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1137_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1137_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1137_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1137_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1137_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1137_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1137_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1137_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1137_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1137_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1137_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1137_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1137_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1137_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1137_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1137_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1137_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1137_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1137_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1137_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1137<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 114, 101, 108, 108, 45, 111, 102, 45, 107, 110, 111, 119, 108, 101, 100, 103, 101] => {
                lookup_1137_0(acc)
            }
            [109, 97, 121, 102, 105, 114, 115, 116] => lookup_1137_1(acc),
            [104, 101, 114, 101, 45, 102, 111, 114, 45, 109, 111, 114, 101] => lookup_1137_2(acc),
            [110, 115, 117, 112, 100, 97, 116, 101] => lookup_1137_3(acc),
            [110, 111, 45, 105, 112] => lookup_1137_4(acc),
            [100, 121, 110, 100, 110, 115] => lookup_1137_5(acc),
            [115, 101, 108, 102, 105, 112] => lookup_1137_6(acc),
            [103, 114, 111, 107, 115, 45, 116, 104, 105, 115] => lookup_1137_7(acc),
            [102, 111, 114, 45, 111, 117, 114] => lookup_1137_8(acc),
            [98, 97, 114, 114, 101, 108, 45, 111, 102, 45, 107, 110, 111, 119, 108, 101, 100, 103, 101] => {
                lookup_1137_9(acc)
            }
            [99, 108, 111, 117, 100, 110, 115] => lookup_1137_10(acc),
            [107, 110, 111, 119, 115, 105, 116, 97, 108, 108] => lookup_1137_11(acc),
            [119, 101, 98, 104, 111, 112] => lookup_1137_12(acc),
            [98, 97, 114, 115, 121] => lookup_1137_13(acc),
            [100, 121, 110, 97, 109, 105, 99, 45, 100, 110, 115] => lookup_1137_14(acc),
            [103, 114, 111, 107, 115, 45, 116, 104, 101] => lookup_1137_15(acc),
            [102, 111, 114, 117, 109, 122] => lookup_1137_16(acc),
            [100, 118, 114, 99, 97, 109] => lookup_1137_17(acc),
            [105, 108, 111, 118, 101, 99, 111, 108, 108, 101, 103, 101] => lookup_1137_18(acc),
            [100, 110, 115, 117, 112, 100, 97, 116, 101] => lookup_1137_19(acc),
            [118, 45, 105, 110, 102, 111] => lookup_1137_20(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1138() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1139() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1140() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1141() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1142() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1143() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1144_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1144_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1144<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 122] => lookup_1144_0(acc),
            [97, 117, 115] => lookup_1144_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1145() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1146() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1147() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1148() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1149_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1149_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1149_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1149_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1149_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1149_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1149_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1149_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1149<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98] => lookup_1149_0(acc),
            [111, 114, 103] => lookup_1149_1(acc),
            [105, 110, 102, 111] => lookup_1149_2(acc),
            [103, 117, 97, 109] => lookup_1149_3(acc),
            [110, 101, 116] => lookup_1149_4(acc),
            [101, 100, 117] => lookup_1149_5(acc),
            [99, 111, 109] => lookup_1149_6(acc),
            [103, 111, 118] => lookup_1149_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1150() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1151() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1152_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1152_0_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1152_0_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1152_0_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1152_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [98, 122, 122] => lookup_1152_0_1(info, labels, acc),
            wild => lookup_1152_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1152<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 97, 112, 112, 115] => lookup_1152_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1153_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1153<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_1153_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1154() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1155() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1156_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1156_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1156_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1156_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1156_3<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1156_3_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1156<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_1156_0(acc),
            [110, 101, 116] => lookup_1156_1(acc),
            [101, 100, 117] => lookup_1156_2(acc),
            [99, 111, 109] => lookup_1156_3(labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1157() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1158() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1159() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1160() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1161() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1162() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1163() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1164() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1165() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1166_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1166_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1166_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1166_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1166_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1166_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1166_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1166_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1166_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1166<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 110, 102] => lookup_1166_0(acc),
            [103, 111, 118] => lookup_1166_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1166_2(acc),
            [110, 111, 109] => lookup_1166_3(acc),
            [111, 114, 103] => lookup_1166_4(acc),
            [110, 97, 109, 101] => lookup_1166_5(acc),
            [110, 101, 116] => lookup_1166_6(acc),
            [101, 100, 117] => lookup_1166_7(acc),
            [99, 111, 109] => lookup_1166_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1167() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1168_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1168_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1168_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1168_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1168_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1168_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1168_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1168_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1168_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1168_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1168_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1168_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1168_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1168<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 105, 110] => lookup_1168_0(acc),
            [109, 101, 100] => lookup_1168_1(acc),
            [103, 111, 118] => lookup_1168_2(acc),
            [103, 111, 98] => lookup_1168_3(acc),
            [110, 121, 109] => lookup_1168_4(acc),
            [107, 49, 50] => lookup_1168_5(acc),
            [111, 114, 103] => lookup_1168_6(acc),
            [105, 110, 102, 111] => lookup_1168_7(acc),
            [109, 105, 108] => lookup_1168_8(acc),
            [110, 101, 116] => lookup_1168_9(acc),
            [101, 100, 117] => lookup_1168_10(acc),
            [112, 114, 111] => lookup_1168_11(acc),
            [99, 111, 109] => lookup_1168_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1169() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1170() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1171() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1172() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1174() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1175_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1175<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 119, 110] => lookup_1175_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1176() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1177() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1178_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1178<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 110, 112, 121] => lookup_1178_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1179() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1180_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1180_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1180_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1180_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1180_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1180_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1180_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1180<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 117, 118] => lookup_1180_0(acc),
            [111, 114, 103] => lookup_1180_1(acc),
            [112, 114, 101, 115, 115, 101] => lookup_1180_2(acc),
            [110, 101, 116] => lookup_1180_3(acc),
            [101, 100, 117] => lookup_1180_4(acc),
            [99, 111, 109] => lookup_1180_5(acc),
            [103, 111, 118] => lookup_1180_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1181() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1182_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1182_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1182_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1182_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1182_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1182_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1182_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1182_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1182_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1182<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1182_0(acc),
            [116, 109] => lookup_1182_1(acc),
            [99, 111] => lookup_1182_2(acc),
            [110, 111, 109] => lookup_1182_3(acc),
            [111, 114, 103] => lookup_1182_4(acc),
            [109, 105, 108] => lookup_1182_5(acc),
            [112, 114, 100] => lookup_1182_6(acc),
            [101, 100, 117] => lookup_1182_7(acc),
            [103, 111, 118] => lookup_1182_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1183() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1184() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1185() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1186() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 100, 118] => lookup_1187_0(acc),
            [97, 99] => lookup_1187_1(acc),
            [109, 105, 108] => lookup_1187_2(acc),
            [111, 114, 103] => lookup_1187_3(acc),
            [110, 101, 116] => lookup_1187_4(acc),
            [99, 111] => lookup_1187_5(acc),
            [101, 100, 117] => lookup_1187_6(acc),
            [103, 111, 118] => lookup_1187_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1188() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1189() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1190() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1191() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1193() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1194() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1195() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1198() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1199() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1200() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1201() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1203() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1204() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1205() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1206() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1207() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1208_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1208_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1208_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1208_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1208_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1208_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1208_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1208_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1208<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [117, 115] => lookup_1208_0(acc),
            [101, 117] => lookup_1208_1(acc),
            [99, 97, 116] => lookup_1208_2(acc),
            [98, 101] => lookup_1208_3(acc),
            [103, 103] => lookup_1208_4(acc),
            [109, 99] => lookup_1208_5(acc),
            [120, 121] => lookup_1208_6(acc),
            [101, 115] => lookup_1208_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1209() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1210() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1211() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1212() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1213() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1214() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1215() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1217() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1218() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1219() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1220() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1221_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1221_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1221_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1221_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1221_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1221_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1221_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1221<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1221_0(acc),
            [115, 101, 99] => lookup_1221_1(acc),
            [111, 114, 103] => lookup_1221_2(acc),
            [110, 101, 116] => lookup_1221_3(acc),
            [101, 100, 117] => lookup_1221_4(acc),
            [112, 108, 111] => lookup_1221_5(acc),
            [103, 111, 118] => lookup_1221_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1222() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1223() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1224() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1227() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1229() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1230() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1231() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1232() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1234() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1236() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1237() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1238() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1239() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1241() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 28usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 25usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_158(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_162(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_163(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_164(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_165(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_166(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_167(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_168(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_169(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_170(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_171(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_172(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_173(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_174(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_175(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_176(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_177(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_178(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_179(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_180(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_181(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_182(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_183(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_184(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_185(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_186(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_187(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_188(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_189(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_190(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_191(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_192(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_193(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_194(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_195(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_196(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_197(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_198(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_199(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_200(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_201(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_202(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_203(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_204(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_205(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_206(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_207(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_208(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_209(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_210(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_211(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_212(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_213(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_214(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_215(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_216(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_217(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_218(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_219(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_220(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_221(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_222(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_223(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_224(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_225(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_226(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_227(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_228(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_229(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_230(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_231(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_232(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_233(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_234(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_235(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_236(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_237(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_238(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_239(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_240(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_241(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_242(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_243(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_244(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_245(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_246(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_247(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_248(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_249(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_250(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_251(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_252(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_253(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_254(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_255(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_256(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_257(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_258(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_259(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_260(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_261(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_262(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_263(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_264(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_265(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_266(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_267(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_268(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_269(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_270(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_271(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_272(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_273(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_274(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_275(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_276(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_277(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_278(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_279(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_280(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_281(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_282(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_283(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_284(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_285(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_286(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_287(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_288(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_289(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_290(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_291(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_292(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_293(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_294(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_295(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_296(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_297(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_298(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_299(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_300(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_301(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_302(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_303(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_304(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_305(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_306(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_307(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_308(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_309(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_310(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_311(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_312(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_313(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_314(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_315(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_316(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_317(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_318(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_319(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_320(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_321(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_322(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_323(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_324(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_325(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_326(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_327(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_328(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_329(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_330(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_331(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_332(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_333(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_334(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_335(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_336(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_337(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_338(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_339(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_340(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_341(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_342(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_343(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_344(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_345(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_346(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_347(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_348(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_349(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_350(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_351(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_352(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_353(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_354(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_355(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_356(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_357(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_358(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_359(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_360(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_361(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_362(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_363(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_364(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_365(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_366(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_367(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_368(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_369(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_370(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_371(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_372(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_373(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_374(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_375(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_376(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_377(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_378(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_379(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_380(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_381(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_382(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_383(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_384(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_385(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_386(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_387(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_388(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_389(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_390(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_391(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_392(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_393(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_394(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_395(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_396(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_397(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_398(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_399(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_400(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_401(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_402(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_403(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_404(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_405(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_406(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_407(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_408(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_409(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_410(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_411(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_412(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_413(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_414(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_415(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_416(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_417(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_418(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_419(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_420(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_421(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_422(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_423(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_424(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_425(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_426(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_427(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_428(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_429(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_430(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_431(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_432(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_433(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_434(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_435(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_436(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_437(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_438(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_439(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_440(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_441(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_442(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_443(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_444(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_445(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_446(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_447(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_448(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_449(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_450(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_451(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_452(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_453(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_454(acc: usize) -> Info {
    Info {
        len: acc + 1 + 29usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_455(acc: usize) -> Info {
    Info {
        len: acc + 1 + 36usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_456(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_457(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_458(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_459(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_460(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_461(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_462(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_463(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_464(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_465(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_466(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_467(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_468(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_469(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_470(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_471(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_472(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_473(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_474(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_475(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_476(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_477(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_478(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_479(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_480(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_481(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_482(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_483(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_484(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_485(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_486(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_487(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_488(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_489(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_490(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_491(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_492(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_493(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_494(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_495(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_496(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_497(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_498(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_499(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_500(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_501(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_502(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_503(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_504(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_505(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_506(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_507(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_508(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_509(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_510(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_511(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_512(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_513(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_514(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_515(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_516(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_517(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_518(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_519(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_520(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_521(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_522(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_523(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_524(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_525(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_526(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_527(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_528(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_529(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_530(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_531(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_532(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_533(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_534(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_535(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_536(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_537(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_538(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_539(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_540(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_541(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_542(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_543(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_544(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_545(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_546(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_547(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_548(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_549(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_550(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 117, 115] => lookup_1242_0(acc),
            [99, 104, 105, 99, 97, 103, 111] => lookup_1242_1(acc),
            [116, 101, 120, 97, 115] => lookup_1242_2(acc),
            [102, 111, 114, 116, 109, 105, 115, 115, 111, 117, 108, 97] => lookup_1242_3(acc),
            [98, 114, 111, 97, 100, 99, 97, 115, 116] => lookup_1242_4(acc),
            [106, 102, 107] => lookup_1242_5(acc),
            [108, 97, 98, 111, 117, 114] => lookup_1242_6(acc),
            [109, 117, 115, 105, 99] => lookup_1242_7(acc),
            [111, 99, 101, 97, 110, 111, 103, 114, 97, 112, 104, 105, 113, 117, 101] => {
                lookup_1242_8(acc)
            }
            [100, 105, 110, 111, 115, 97, 117, 114] => lookup_1242_9(acc),
            [100, 101, 116, 114, 111, 105, 116] => lookup_1242_10(acc),
            [107, 105, 100, 115] => lookup_1242_11(acc),
            [102, 105, 110, 101, 97, 114, 116] => lookup_1242_12(acc),
            [118, 97, 108, 108, 101, 121] => lookup_1242_13(acc),
            [111, 109, 97, 104, 97] => lookup_1242_14(acc),
            [106, 117, 105, 102] => lookup_1242_15(acc),
            [108, 105, 110, 122] => lookup_1242_16(acc),
            [109, 105, 108, 108] => lookup_1242_17(acc),
            [98, 101, 97, 117, 120, 97, 114, 116, 115] => lookup_1242_18(acc),
            [106, 97, 109, 105, 115, 111, 110] => lookup_1242_19(acc),
            [116, 114, 101, 101] => lookup_1242_20(acc),
            [97, 117, 115, 116, 105, 110] => lookup_1242_21(acc),
            [98, 97, 115, 101, 108] => lookup_1242_22(acc),
            [109, 117, 115, 101, 117, 109, 99, 101, 110, 116, 101, 114] => lookup_1242_23(acc),
            [116, 114, 97, 110, 115, 112, 111, 114, 116] => lookup_1242_24(acc),
            [110, 101, 119, 106, 101, 114, 115, 101, 121] => lookup_1242_25(acc),
            [112, 108, 97, 110, 101, 116, 97, 114, 105, 117, 109] => lookup_1242_26(acc),
            [115, 99, 104, 111, 111, 108] => lookup_1242_27(acc),
            [99, 111, 109, 112, 117, 116, 101, 114, 104, 105, 115, 116, 111, 114, 121] => {
                lookup_1242_28(acc)
            }
            [105, 114, 111, 110] => lookup_1242_29(acc),
            [115, 116, 117, 116, 116, 103, 97, 114, 116] => lookup_1242_30(acc),
            [98, 105, 98, 108, 101] => lookup_1242_31(acc),
            [109, 105, 99, 104, 105, 103, 97, 110] => lookup_1242_32(acc),
            [102, 97, 114, 109, 101, 114, 115] => lookup_1242_33(acc),
            [108, 97, 110, 100, 101, 115] => lookup_1242_34(acc),
            [110, 97, 116, 117, 114, 97, 108, 104, 105, 115, 116, 111, 114, 121, 109, 117, 115, 101, 117, 109] => {
                lookup_1242_35(acc)
            }
            [115, 116, 112, 101, 116, 101, 114, 115, 98, 117, 114, 103] => lookup_1242_36(acc),
            [112, 108, 97, 110, 116, 97, 116, 105, 111, 110] => lookup_1242_37(acc),
            [116, 111, 114, 105, 110, 111] => lookup_1242_38(acc),
            [115, 105, 98, 101, 110, 105, 107] => lookup_1242_39(acc),
            [115, 99, 105, 101, 110, 99, 101, 115, 110, 97, 116, 117, 114, 101, 108, 108, 101, 115] => {
                lookup_1242_40(acc)
            }
            [98, 97, 108, 116, 105, 109, 111, 114, 101] => lookup_1242_41(acc),
            [99, 121, 109, 114, 117] => lookup_1242_42(acc),
            [102, 114, 101, 101, 109, 97, 115, 111, 110, 114, 121] => lookup_1242_43(acc),
            [115, 99, 104, 119, 101, 105, 122] => lookup_1242_44(acc),
            [102, 117, 110, 100, 97, 99, 105, 111] => lookup_1242_45(acc),
            [107, 97, 114, 105, 107, 97, 116, 117, 114] => lookup_1242_46(acc),
            [116, 101, 99, 104, 110, 111, 108, 111, 103, 121] => lookup_1242_47(acc),
            [97, 110, 116, 105, 113, 117, 101, 115] => lookup_1242_48(acc),
            [108, 111, 117, 118, 114, 101] => lookup_1242_49(acc),
            [116, 97, 110, 107] => lookup_1242_50(acc),
            [99, 104, 101, 108, 116, 101, 110, 104, 97, 109] => lookup_1242_51(acc),
            [97, 110, 116, 104, 114, 111] => lookup_1242_52(acc),
            [105, 110, 116, 101, 108, 108, 105, 103, 101, 110, 99, 101] => lookup_1242_53(acc),
            [121, 111, 117, 116, 104] => lookup_1242_54(acc),
            [103, 105, 101, 115, 115, 101, 110] => lookup_1242_55(acc),
            [110, 97, 116, 105, 111, 110, 97, 108, 104, 101, 114, 105, 116, 97, 103, 101] => {
                lookup_1242_56(acc)
            }
            [109, 101, 100, 105, 122, 105, 110, 104, 105, 115, 116, 111, 114, 105, 115, 99, 104, 101, 115] => {
                lookup_1242_57(acc)
            }
            [118, 105, 108, 108, 97, 103, 101] => lookup_1242_58(acc),
            [99, 105, 110, 99, 105, 110, 110, 97, 116, 105] => lookup_1242_59(acc),
            [98, 114, 117, 115, 115, 101, 108, 115] => lookup_1242_60(acc),
            [99, 97, 112, 101, 98, 114, 101, 116, 111, 110] => lookup_1242_61(acc),
            [99, 111, 108, 100, 119, 97, 114] => lookup_1242_62(acc),
            [102, 105, 103, 117, 101, 114, 101, 115] => lookup_1242_63(acc),
            [99, 111, 100, 121] => lookup_1242_64(acc),
            [115, 99, 105, 101, 110, 99, 101, 97, 110, 100, 104, 105, 115, 116, 111, 114, 121] => {
                lookup_1242_65(acc)
            }
            [99, 111, 97, 108] => lookup_1242_66(acc),
            [98, 105, 114, 100, 97, 114, 116] => lookup_1242_67(acc),
            [103, 97, 116, 101, 119, 97, 121] => lookup_1242_68(acc),
            [110, 105, 101, 112, 99, 101] => lookup_1242_69(acc),
            [119, 105, 110, 100, 109, 105, 108, 108] => lookup_1242_70(acc),
            [97, 115, 109, 97, 116, 97, 114, 116] => lookup_1242_71(acc),
            [97, 109, 101, 114, 105, 99, 97, 110, 97, 114, 116] => lookup_1242_72(acc),
            [104, 111, 117, 115, 101] => lookup_1242_73(acc),
            [99, 97, 115, 116, 114, 101, 115] => lookup_1242_74(acc),
            [109, 117, 115, 101, 101, 116] => lookup_1242_75(acc),
            [110, 97, 116, 105, 118, 101, 97, 109, 101, 114, 105, 99, 97, 110] => {
                lookup_1242_76(acc)
            }
            [107, 97, 114, 97, 116, 101] => lookup_1242_77(acc),
            [104, 105, 115, 116, 111, 114, 105, 115, 99, 104, 101, 115] => lookup_1242_78(acc),
            [97, 118, 105, 97, 116, 105, 111, 110] => lookup_1242_79(acc),
            [115, 97, 110, 116, 97, 98, 97, 114, 98, 97, 114, 97] => lookup_1242_80(acc),
            [118, 105, 114, 116, 117, 97, 108] => lookup_1242_81(acc),
            [99, 111, 114, 118, 101, 116, 116, 101] => lookup_1242_82(acc),
            [99, 108, 111, 99, 107] => lookup_1242_83(acc),
            [114, 111, 99, 104, 101, 115, 116, 101, 114] => lookup_1242_84(acc),
            [116, 105, 109, 101, 107, 101, 101, 112, 105, 110, 103] => lookup_1242_85(acc),
            [115, 97, 110, 116, 97, 102, 101] => lookup_1242_86(acc),
            [102, 114, 101, 105, 98, 117, 114, 103] => lookup_1242_87(acc),
            [115, 99, 104, 111, 107, 111, 108, 97, 100, 101, 110] => lookup_1242_88(acc),
            [99, 111, 109, 109, 117, 110, 105, 99, 97, 116, 105, 111, 110, 115] => {
                lookup_1242_89(acc)
            }
            [109, 117, 115, 101, 117, 109, 118, 101, 114, 101, 110, 105, 103, 105, 110, 103] => {
                lookup_1242_90(acc)
            }
            [98, 111, 116, 97, 110, 121] => lookup_1242_91(acc),
            [103, 108, 97, 115] => lookup_1242_92(acc),
            [105, 110, 100, 105, 97, 110, 97, 112, 111, 108, 105, 115] => lookup_1242_93(acc),
            [101, 120, 101, 116, 101, 114] => lookup_1242_94(acc),
            [98, 101, 114, 110] => lookup_1242_95(acc),
            [111, 114, 101, 103, 111, 110] => lookup_1242_96(acc),
            [116, 114, 111, 108, 108, 101, 121] => lookup_1242_97(acc),
            [97, 114, 116, 100, 101, 99, 111] => lookup_1242_98(acc),
            [98, 105, 108, 108] => lookup_1242_99(acc),
            [208, 184, 208, 186, 208, 190, 208, 188] => lookup_1242_100(acc),
            [115, 97, 105, 110, 116, 108, 111, 117, 105, 115] => lookup_1242_101(acc),
            [107, 117, 110, 115, 116, 117, 110, 100, 100, 101, 115, 105, 103, 110] => {
                lookup_1242_102(acc)
            }
            [98, 97, 108, 101] => lookup_1242_103(acc),
            [114, 101, 115, 101, 97, 114, 99, 104] => lookup_1242_104(acc),
            [104, 105, 115, 116, 111, 114, 105, 99, 97, 108, 115, 111, 99, 105, 101, 116, 121] => {
                lookup_1242_105(acc)
            }
            [108, 117, 122, 101, 114, 110] => lookup_1242_106(acc),
            [98, 111, 115, 116, 111, 110] => lookup_1242_107(acc),
            [120, 110, 45, 45, 104, 49, 97, 101, 103, 104] => lookup_1242_108(acc),
            [110, 101, 117, 101, 115] => lookup_1242_109(acc),
            [111, 110, 108, 105, 110, 101] => lookup_1242_110(acc),
            [106, 101, 102, 102, 101, 114, 115, 111, 110] => lookup_1242_111(acc),
            [103, 111, 114, 103, 101] => lookup_1242_112(acc),
            [108, 111, 121, 97, 108, 105, 115, 116] => lookup_1242_113(acc),
            [99, 111, 112, 101, 110, 104, 97, 103, 101, 110] => lookup_1242_114(acc),
            [112, 111, 115, 116, 115, 45, 97, 110, 100, 45, 116, 101, 108, 101, 99, 111, 109, 109, 117, 110, 105, 99, 97, 116, 105, 111, 110, 115] => {
                lookup_1242_115(acc)
            }
            [115, 116, 97, 108, 98, 97, 110, 115] => lookup_1242_116(acc),
            [101, 108, 118, 101, 110, 100, 114, 101, 108, 108] => lookup_1242_117(acc),
            [104, 101, 108, 115, 105, 110, 107, 105] => lookup_1242_118(acc),
            [107, 111, 101, 98, 101, 110, 104, 97, 118, 110] => lookup_1242_119(acc),
            [117, 104, 114, 101, 110] => lookup_1242_120(acc),
            [110, 101, 119, 109, 101, 120, 105, 99, 111] => lookup_1242_121(acc),
            [98, 111, 116, 97, 110, 105, 99, 97, 108, 103, 97, 114, 100, 101, 110] => {
                lookup_1242_122(acc)
            }
            [101, 105, 115, 101, 110, 98, 97, 104, 110] => lookup_1242_123(acc),
            [104, 97, 110, 100, 115, 111, 110] => lookup_1242_124(acc),
            [97, 109, 98, 117, 108, 97, 110, 99, 101] => lookup_1242_125(acc),
            [109, 97, 100] => lookup_1242_126(acc),
            [116, 99, 109] => lookup_1242_127(acc),
            [110, 111, 114, 116, 104] => lookup_1242_128(acc),
            [117, 116, 97, 104] => lookup_1242_129(acc),
            [109, 97, 110, 115, 105, 111, 110] => lookup_1242_130(acc),
            [99, 104, 105, 108, 100, 114, 101, 110] => lookup_1242_131(acc),
            [106, 101, 119, 105, 115, 104] => lookup_1242_132(acc),
            [108, 105, 118, 105, 110, 103] => lookup_1242_133(acc),
            [99, 111, 117, 110, 116, 121] => lookup_1242_134(acc),
            [119, 97, 108, 101, 115] => lookup_1242_135(acc),
            [109, 105, 110, 101, 114, 115] => lookup_1242_136(acc),
            [115, 99, 105, 101, 110, 99, 101, 99, 101, 110, 116, 101, 114] => lookup_1242_137(acc),
            [109, 111, 100, 101, 114, 110] => lookup_1242_138(acc),
            [115, 112, 121] => lookup_1242_139(acc),
            [115, 119, 101, 100, 101, 110] => lookup_1242_140(acc),
            [101, 110, 118, 105, 114, 111, 110, 109, 101, 110, 116, 97, 108, 99, 111, 110, 115, 101, 114, 118, 97, 116, 105, 111, 110] => {
                lookup_1242_141(acc)
            }
            [97, 114, 99, 104, 97, 101, 111, 108, 111, 103, 105, 99, 97, 108] => {
                lookup_1242_142(acc)
            }
            [99, 104, 111, 99, 111, 108, 97, 116, 101] => lookup_1242_143(acc),
            [106, 117, 101, 100, 105, 115, 99, 104, 101, 115] => lookup_1242_144(acc),
            [98, 117, 114, 103, 104, 111, 102] => lookup_1242_145(acc),
            [98, 105, 108, 98, 97, 111] => lookup_1242_146(acc),
            [105, 109, 97, 103, 101, 97, 110, 100, 115, 111, 117, 110, 100] => lookup_1242_147(acc),
            [112, 114, 111, 106, 101, 99, 116] => lookup_1242_148(acc),
            [110, 97, 116, 105, 111, 110, 97, 108, 102, 105, 114, 101, 97, 114, 109, 115] => {
                lookup_1242_149(acc)
            }
            [99, 111, 110, 116, 101, 109, 112, 111, 114, 97, 114, 121, 97, 114, 116] => {
                lookup_1242_150(acc)
            }
            [99, 104, 97, 116, 116, 97, 110, 111, 111, 103, 97] => lookup_1242_151(acc),
            [108, 101, 119, 105, 115, 109, 105, 108, 108, 101, 114] => lookup_1242_152(acc),
            [103, 108, 97, 115, 115] => lookup_1242_153(acc),
            [110, 97, 116, 117, 114, 97, 108, 104, 105, 115, 116, 111, 114, 121] => {
                lookup_1242_154(acc)
            }
            [99, 104, 105, 108, 100, 114, 101, 110, 115, 103, 97, 114, 100, 101, 110] => {
                lookup_1242_155(acc)
            }
            [120, 110, 45, 45, 99, 111, 109, 117, 110, 105, 99, 97, 101, 115, 45, 118, 54, 97, 50, 111] => {
                lookup_1242_156(acc)
            }
            [112, 111, 114, 116, 108, 108, 105, 103, 97, 116] => lookup_1242_157(acc),
            [102, 105, 108, 109] => lookup_1242_158(acc),
            [98, 114, 105, 116, 105, 115, 104] => lookup_1242_159(acc),
            [104, 105, 115, 116, 111, 114, 105, 99, 97, 108] => lookup_1242_160(acc),
            [97, 114, 99, 104, 97, 101, 111, 108, 111, 103, 121] => lookup_1242_161(acc),
            [115, 99, 105, 101, 110, 99, 101, 104, 105, 115, 116, 111, 114, 121] => {
                lookup_1242_162(acc)
            }
            [119, 105, 108, 108, 105, 97, 109, 115, 98, 117, 114, 103] => lookup_1242_163(acc),
            [100, 100, 114] => lookup_1242_164(acc),
            [104, 105, 115, 116, 111, 114, 105, 115, 99, 104] => lookup_1242_165(acc),
            [102, 105, 101, 108, 100] => lookup_1242_166(acc),
            [98, 97, 104, 110] => lookup_1242_167(acc),
            [116, 114, 117, 115, 116, 101, 101] => lookup_1242_168(acc),
            [99, 111, 109, 109, 117, 110, 105, 99, 97, 116, 105, 111, 110] => lookup_1242_169(acc),
            [100, 101, 112, 111, 116] => lookup_1242_170(acc),
            [99, 97, 114, 114, 105, 101, 114] => lookup_1242_171(acc),
            [100, 97, 108, 105] => lookup_1242_172(acc),
            [100, 101, 115, 105, 103, 110] => lookup_1242_173(acc),
            [98, 114, 117, 115, 115, 101, 108] => lookup_1242_174(acc),
            [98, 114, 105, 116, 105, 115, 104, 99, 111, 108, 117, 109, 98, 105, 97] => {
                lookup_1242_175(acc)
            }
            [98, 117, 115, 104, 101, 121] => lookup_1242_176(acc),
            [101, 100, 117, 99, 97, 116, 105, 111, 110, 97, 108] => lookup_1242_177(acc),
            [115, 118, 105, 122, 122, 101, 114, 97] => lookup_1242_178(acc),
            [97, 114, 98, 111, 114, 101, 116, 117, 109] => lookup_1242_179(acc),
            [99, 111, 117, 110, 116, 114, 121, 101, 115, 116, 97, 116, 101] => lookup_1242_180(acc),
            [98, 101, 114, 107, 101, 108, 101, 121] => lookup_1242_181(acc),
            [98, 111, 110, 110] => lookup_1242_182(acc),
            [97, 110, 110, 101, 102, 114, 97, 110, 107] => lookup_1242_183(acc),
            [109, 105, 115, 115, 111, 117, 108, 97] => lookup_1242_184(acc),
            [101, 116, 104, 110, 111, 108, 111, 103, 121] => lookup_1242_185(acc),
            [99, 114, 97, 110, 98, 114, 111, 111, 107] => lookup_1242_186(acc),
            [108, 97, 110, 99, 97, 115, 104, 105, 114, 101] => lookup_1242_187(acc),
            [101, 97, 115, 116, 97, 102, 114, 105, 99, 97] => lookup_1242_188(acc),
            [115, 97, 110, 116, 97, 99, 114, 117, 122] => lookup_1242_189(acc),
            [97, 115, 115, 111, 99, 105, 97, 116, 105, 111, 110] => lookup_1242_190(acc),
            [110, 97, 118, 97, 108] => lookup_1242_191(acc),
            [112, 104, 105, 108, 97, 116, 101, 108, 121] => lookup_1242_192(acc),
            [112, 105, 116, 116, 115, 98, 117, 114, 103, 104] => lookup_1242_193(acc),
            [115, 116, 97, 100, 116] => lookup_1242_194(acc),
            [120, 110, 45, 45, 57, 100, 98, 104, 98, 108, 103, 54, 100, 105] => {
                lookup_1242_195(acc)
            }
            [100, 101, 108, 97, 119, 97, 114, 101] => lookup_1242_196(acc),
            [107, 117, 110, 115, 116, 115, 97, 109, 109, 108, 117, 110, 103] => {
                lookup_1242_197(acc)
            }
            [102, 108, 97, 110, 100, 101, 114, 115] => lookup_1242_198(acc),
            [99, 114, 97, 102, 116, 115] => lookup_1242_199(acc),
            [106, 111, 117, 114, 110, 97, 108, 105, 115, 109] => lookup_1242_200(acc),
            [109, 101, 101, 114, 101, 115] => lookup_1242_201(acc),
            [98, 111, 116, 97, 110, 105, 99, 97, 108] => lookup_1242_202(acc),
            [109, 105, 110, 110, 101, 115, 111, 116, 97] => lookup_1242_203(acc),
            [102, 114, 111, 103] => lookup_1242_204(acc),
            [111, 112, 101, 110, 97, 105, 114] => lookup_1242_205(acc),
            [101, 110, 118, 105, 114, 111, 110, 109, 101, 110, 116] => lookup_1242_206(acc),
            [111, 116, 97, 103, 111] => lookup_1242_207(acc),
            [115, 113, 117, 97, 114, 101] => lookup_1242_208(acc),
            [109, 105, 110, 105, 110, 103] => lookup_1242_209(acc),
            [115, 99, 105, 101, 110, 99, 101, 97, 110, 100, 105, 110, 100, 117, 115, 116, 114, 121] => {
                lookup_1242_210(acc)
            }
            [99, 97, 109, 98, 114, 105, 100, 103, 101] => lookup_1242_211(acc),
            [110, 97, 117, 109, 98, 117, 114, 103] => lookup_1242_212(acc),
            [116, 101, 120, 116, 105, 108, 101] => lookup_1242_213(acc),
            [100, 101, 108, 109, 101, 110, 104, 111, 114, 115, 116] => lookup_1242_214(acc),
            [115, 97, 108, 118, 97, 100, 111, 114, 100, 97, 108, 105] => lookup_1242_215(acc),
            [97, 109, 98, 101, 114] => lookup_1242_216(acc),
            [99, 97, 115, 116, 108, 101] => lookup_1242_217(acc),
            [97, 109, 101, 114, 105, 99, 97, 110] => lookup_1242_218(acc),
            [99, 104, 114, 105, 115, 116, 105, 97, 110, 115, 98, 117, 114, 103] => {
                lookup_1242_219(acc)
            }
            [117, 115, 104, 105, 115, 116, 111, 114, 121] => lookup_1242_220(acc),
            [108, 117, 120, 101, 109, 98, 111, 117, 114, 103] => lookup_1242_221(acc),
            [102, 111, 117, 110, 100, 97, 116, 105, 111, 110] => lookup_1242_222(acc),
            [99, 111, 110, 116, 101, 109, 112, 111, 114, 97, 114, 121] => lookup_1242_223(acc),
            [115, 116, 101, 105, 101, 114, 109, 97, 114, 107] => lookup_1242_224(acc),
            [97, 114, 116, 99, 101, 110, 116, 101, 114] => lookup_1242_225(acc),
            [97, 114, 116, 97, 110, 100, 100, 101, 115, 105, 103, 110] => lookup_1242_226(acc),
            [104, 105, 115, 116, 111, 114, 121] => lookup_1242_227(acc),
            [117, 115, 99, 117, 108, 116, 117, 114, 101] => lookup_1242_228(acc),
            [115, 97, 108, 101, 109] => lookup_1242_229(acc),
            [110, 101, 98, 114, 97, 115, 107, 97] => lookup_1242_230(acc),
            [114, 101, 115, 105, 115, 116, 97, 110, 99, 101] => lookup_1242_231(acc),
            [119, 97, 115, 104, 105, 110, 103, 116, 111, 110, 100, 99] => lookup_1242_232(acc),
            [99, 111, 97, 115, 116, 97, 108, 100, 101, 102, 101, 110, 99, 101] => {
                lookup_1242_233(acc)
            }
            [97, 115, 115, 97, 115, 115, 105, 110, 97, 116, 105, 111, 110] => lookup_1242_234(acc),
            [112, 108, 97, 110, 116, 115] => lookup_1242_235(acc),
            [102, 111, 114, 116, 119, 111, 114, 116, 104] => lookup_1242_236(acc),
            [108, 111, 99, 97, 108, 104, 105, 115, 116, 111, 114, 121] => lookup_1242_237(acc),
            [97, 114, 116, 115, 97, 110, 100, 99, 114, 97, 102, 116, 115] => lookup_1242_238(acc),
            [112, 97, 108, 101, 111] => lookup_1242_239(acc),
            [102, 97, 114, 109, 115, 116, 101, 97, 100] => lookup_1242_240(acc),
            [118, 105, 107, 105, 110, 103] => lookup_1242_241(acc),
            [97, 114, 116, 101, 100, 117, 99, 97, 116, 105, 111, 110] => lookup_1242_242(acc),
            [97, 117, 115, 116, 114, 97, 108, 105, 97] => lookup_1242_243(acc),
            [99, 117, 108, 116, 117, 114, 97, 108] => lookup_1242_244(acc),
            [110, 97, 116, 117, 114, 104, 105, 115, 116, 111, 114, 105, 115, 99, 104, 101, 115] => {
                lookup_1242_245(acc)
            }
            [110, 111, 114, 102, 111, 108, 107] => lookup_1242_246(acc),
            [111, 114, 101, 103, 111, 110, 116, 114, 97, 105, 108] => lookup_1242_247(acc),
            [109, 101, 100, 105, 97] => lookup_1242_248(acc),
            [109, 117, 101, 110, 99, 104, 101, 110] => lookup_1242_249(acc),
            [99, 111, 108, 111, 114, 97, 100, 111, 112, 108, 97, 116, 101, 97, 117] => {
                lookup_1242_250(acc)
            }
            [115, 105, 108, 107] => lookup_1242_251(acc),
            [100, 101, 110, 109, 97, 114, 107] => lookup_1242_252(acc),
            [112, 97, 108, 109, 115, 112, 114, 105, 110, 103, 115] => lookup_1242_253(acc),
            [97, 114, 99, 104, 105, 116, 101, 99, 116, 117, 114, 101] => lookup_1242_254(acc),
            [104, 105, 115, 116, 111, 114, 105, 99, 104, 111, 117, 115, 101, 115] => {
                lookup_1242_255(acc)
            }
            [109, 105, 100, 97, 116, 108, 97, 110, 116, 105, 99] => lookup_1242_256(acc),
            [115, 116, 101, 97, 109] => lookup_1242_257(acc),
            [109, 97, 100, 114, 105, 100] => lookup_1242_258(acc),
            [101, 97, 115, 116, 99, 111, 97, 115, 116] => lookup_1242_259(acc),
            [105, 110, 116, 101, 114, 97, 99, 116, 105, 118, 101] => lookup_1242_260(acc),
            [106, 117, 100, 121, 103, 97, 114, 108, 97, 110, 100] => lookup_1242_261(acc),
            [108, 97, 106, 111, 108, 108, 97] => lookup_1242_262(acc),
            [114, 105, 111, 100, 101, 106, 97, 110, 101, 105, 114, 111] => lookup_1242_263(acc),
            [98, 97, 116, 104, 115] => lookup_1242_264(acc),
            [109, 97, 110, 99, 104, 101, 115, 116, 101, 114] => lookup_1242_265(acc),
            [112, 104, 111, 116, 111, 103, 114, 97, 112, 104, 121] => lookup_1242_266(acc),
            [102, 114, 97, 110, 99, 97, 105, 115, 101] => lookup_1242_267(acc),
            [215, 153, 215, 168, 215, 149, 215, 169, 215, 156, 215, 153, 215, 157] => {
                lookup_1242_268(acc)
            }
            [108, 97, 98, 111, 114] => lookup_1242_269(acc),
            [112, 111, 114, 116, 97, 108] => lookup_1242_270(acc),
            [110, 121, 110, 121] => lookup_1242_271(acc),
            [108, 111, 115, 97, 110, 103, 101, 108, 101, 115] => lookup_1242_272(acc),
            [117, 115, 99, 111, 117, 110, 116, 114, 121, 101, 115, 116, 97, 116, 101] => {
                lookup_1242_273(acc)
            }
            [114, 111, 99, 107, 97, 114, 116] => lookup_1242_274(acc),
            [98, 97, 103, 104, 100, 97, 100] => lookup_1242_275(acc),
            [99, 121, 98, 101, 114] => lookup_1242_276(acc),
            [112, 114, 101, 115, 115] => lookup_1242_277(acc),
            [119, 104, 97, 108, 105, 110, 103] => lookup_1242_278(acc),
            [122, 111, 111, 108, 111, 103, 121] => lookup_1242_279(acc),
            [115, 121, 100, 110, 101, 121] => lookup_1242_280(acc),
            [112, 114, 101, 115, 105, 100, 105, 111] => lookup_1242_281(acc),
            [110, 101, 119, 104, 97, 109, 112, 115, 104, 105, 114, 101] => lookup_1242_282(acc),
            [97, 108, 97, 98, 97, 109, 97] => lookup_1242_283(acc),
            [104, 101, 109, 98, 121, 103, 100, 115, 102, 111, 114, 98, 117, 110, 100] => {
                lookup_1242_284(acc)
            }
            [98, 114, 117, 120, 101, 108, 108, 101, 115] => lookup_1242_285(acc),
            [97, 105, 114] => lookup_1242_286(acc),
            [98, 117, 105, 108, 100, 105, 110, 103] => lookup_1242_287(acc),
            [109, 111, 110, 116, 114, 101, 97, 108] => lookup_1242_288(acc),
            [101, 110, 103, 108, 97, 110, 100] => lookup_1242_289(acc),
            [99, 105, 110, 101, 109, 97] => lookup_1242_290(acc),
            [109, 97, 108, 108, 111, 114, 99, 97] => lookup_1242_291(acc),
            [99, 105, 118, 105, 108, 105, 122, 97, 116, 105, 111, 110] => lookup_1242_292(acc),
            [105, 110, 100, 105, 97, 110, 97] => lookup_1242_293(acc),
            [98, 101, 114, 108, 105, 110] => lookup_1242_294(acc),
            [104, 101, 105, 109, 97, 116, 117, 110, 100, 117, 104, 114, 101, 110] => {
                lookup_1242_295(acc)
            }
            [110, 97, 116, 117, 114, 101] => lookup_1242_296(acc),
            [110, 97, 116, 117, 117, 114, 119, 101, 116, 101, 110, 115, 99, 104, 97, 112, 112, 101, 110] => {
                lookup_1242_297(acc)
            }
            [115, 116, 97, 114, 110, 98, 101, 114, 103] => lookup_1242_298(acc),
            [122, 111, 111, 108, 111, 103, 105, 99, 97, 108] => lookup_1242_299(acc),
            [115, 117, 114, 114, 101, 121] => lookup_1242_300(acc),
            [117, 115, 108, 105, 118, 105, 110, 103, 104, 105, 115, 116, 111, 114, 121] => {
                lookup_1242_301(acc)
            }
            [105, 114, 97, 113] => lookup_1242_302(acc),
            [114, 117, 115, 115, 105, 97] => lookup_1242_303(acc),
            [116, 105, 109, 101] => lookup_1242_304(acc),
            [112, 97, 99, 105, 102, 105, 99] => lookup_1242_305(acc),
            [116, 101, 108, 101, 118, 105, 115, 105, 111, 110] => lookup_1242_306(acc),
            [119, 97, 108, 108, 111, 110, 105, 101] => lookup_1242_307(acc),
            [99, 97, 115, 97, 100, 101, 108, 97, 109, 111, 110, 101, 100, 97] => {
                lookup_1242_308(acc)
            }
            [108, 105, 110, 99, 111, 108, 110] => lookup_1242_309(acc),
            [114, 97, 105, 108, 119, 97, 121] => lookup_1242_310(acc),
            [112, 111, 114, 116, 108, 97, 110, 100] => lookup_1242_311(acc),
            [111, 120, 102, 111, 114, 100] => lookup_1242_312(acc),
            [100, 101, 99, 111, 114, 97, 116, 105, 118, 101, 97, 114, 116, 115] => {
                lookup_1242_313(acc)
            }
            [108, 111, 110, 100, 111, 110] => lookup_1242_314(acc),
            [115, 116, 97, 116, 101] => lookup_1242_315(acc),
            [116, 101, 108, 101, 107, 111, 109, 109, 117, 110, 105, 107, 97, 116, 105, 111, 110] => {
                lookup_1242_316(acc)
            }
            [98, 111, 116, 97, 110, 105, 99, 103, 97, 114, 100, 101, 110] => lookup_1242_317(acc),
            [111, 99, 101, 97, 110, 111, 103, 114, 97, 112, 104, 105, 99] => lookup_1242_318(acc),
            [117, 110, 105, 118, 101, 114, 115, 105, 116, 121] => lookup_1242_319(acc),
            [97, 113, 117, 97, 114, 105, 117, 109] => lookup_1242_320(acc),
            [110, 101, 119, 115, 112, 97, 112, 101, 114] => lookup_1242_321(acc),
            [97, 110, 100] => lookup_1242_322(acc),
            [101, 115, 116, 97, 116, 101] => lookup_1242_323(acc),
            [112, 117, 98, 111, 108] => lookup_1242_324(acc),
            [115, 99, 111, 116, 108, 97, 110, 100] => lookup_1242_325(acc),
            [115, 111, 117, 116, 104, 119, 101, 115, 116] => lookup_1242_326(acc),
            [98, 97, 117, 101, 114, 110] => lookup_1242_327(acc),
            [97, 109, 115, 116, 101, 114, 100, 97, 109] => lookup_1242_328(acc),
            [102, 105, 108, 97, 116, 101, 108, 105, 97] => lookup_1242_329(acc),
            [112, 117, 98, 108, 105, 99] => lookup_1242_330(acc),
            [97, 116, 108, 97, 110, 116, 97] => lookup_1242_331(acc),
            [98, 101, 101, 108, 100, 101, 110, 103, 101, 108, 117, 105, 100] => {
                lookup_1242_332(acc)
            }
            [97, 109, 101, 114, 105, 99, 97, 110, 97] => lookup_1242_333(acc),
            [119, 97, 114] => lookup_1242_334(acc),
            [115, 116, 106, 111, 104, 110] => lookup_1242_335(acc),
            [99, 111, 108, 108, 101, 99, 116, 105, 111, 110] => lookup_1242_336(acc),
            [104, 111, 114, 111, 108, 111, 103, 121] => lookup_1242_337(acc),
            [101, 120, 104, 105, 98, 105, 116, 105, 111, 110] => lookup_1242_338(acc),
            [114, 97, 105, 108, 114, 111, 97, 100] => lookup_1242_339(acc),
            [102, 108, 111, 114, 105, 100, 97] => lookup_1242_340(acc),
            [115, 117, 114, 103, 101, 111, 110, 115, 104, 97, 108, 108] => lookup_1242_341(acc),
            [115, 101, 116, 116, 108, 101, 114, 115] => lookup_1242_342(acc),
            [104, 117, 109, 97, 110, 105, 116, 105, 101, 115] => lookup_1242_343(acc),
            [119, 101, 115, 116, 101, 114, 110] => lookup_1242_344(acc),
            [115, 112, 97, 99, 101] => lookup_1242_345(acc),
            [98, 114, 105, 115, 116, 111, 108] => lookup_1242_346(acc),
            [99, 97, 110] => lookup_1242_347(acc),
            [115, 111, 108, 111, 103, 110, 101] => lookup_1242_348(acc),
            [103, 97, 108, 108, 101, 114, 121] => lookup_1242_349(acc),
            [97, 114, 116, 115] => lookup_1242_350(acc),
            [100, 111, 108, 108, 115] => lookup_1242_351(acc),
            [97, 103, 114, 105, 99, 117, 108, 116, 117, 114, 101] => lookup_1242_352(acc),
            [117, 108, 109] => lookup_1242_353(acc),
            [115, 99, 104, 111, 101, 110, 98, 114, 117, 110, 110] => lookup_1242_354(acc),
            [109, 111, 110, 116, 105, 99, 101, 108, 108, 111] => lookup_1242_355(acc),
            [119, 97, 116, 99, 104, 45, 97, 110, 100, 45, 99, 108, 111, 99, 107] => {
                lookup_1242_356(acc)
            }
            [118, 105, 114, 103, 105, 110, 105, 97] => lookup_1242_357(acc),
            [115, 117, 105, 115, 115, 101] => lookup_1242_358(acc),
            [115, 104, 101, 108, 108] => lookup_1242_359(acc),
            [118, 97, 110, 116, 97, 97] => lookup_1242_360(acc),
            [101, 103, 121, 112, 116, 105, 97, 110] => lookup_1242_361(acc),
            [120, 110, 45, 45, 108, 110, 115, 45, 113, 108, 97] => lookup_1242_362(acc),
            [99, 105, 118, 105, 108, 105, 115, 97, 116, 105, 111, 110] => lookup_1242_363(acc),
            [108, 195, 164, 110, 115] => lookup_1242_364(acc),
            [99, 111, 109, 109, 117, 110, 105, 116, 121] => lookup_1242_365(acc),
            [112, 114, 101, 115, 101, 114, 118, 97, 116, 105, 111, 110] => lookup_1242_366(acc),
            [116, 111, 117, 99, 104] => lookup_1242_367(acc),
            [99, 97, 110, 97, 100, 97] => lookup_1242_368(acc),
            [99, 97, 114, 116, 111, 111, 110, 97, 114, 116] => lookup_1242_369(acc),
            [109, 117, 110, 99, 105, 101] => lookup_1242_370(acc),
            [116, 111, 119, 110] => lookup_1242_371(acc),
            [104, 101, 97, 108, 116, 104] => lookup_1242_372(acc),
            [118, 111, 108, 107, 101, 110, 107, 117, 110, 100, 101] => lookup_1242_373(acc),
            [121, 111, 115, 101, 109, 105, 116, 101] => lookup_1242_374(acc),
            [98, 114, 117, 110, 101, 108] => lookup_1242_375(acc),
            [101, 110, 99, 121, 99, 108, 111, 112, 101, 100, 105, 99] => lookup_1242_376(acc),
            [115, 107, 111, 108, 101] => lookup_1242_377(acc),
            [118, 101, 114, 115, 97, 105, 108, 108, 101, 115] => lookup_1242_378(acc),
            [99, 111, 108, 117, 109, 98, 117, 115] => lookup_1242_379(acc),
            [109, 105, 108, 105, 116, 97, 114, 121] => lookup_1242_380(acc),
            [109, 117, 101, 110, 115, 116, 101, 114] => lookup_1242_381(acc),
            [103, 114, 97, 110, 100, 114, 97, 112, 105, 100, 115] => lookup_1242_382(acc),
            [101, 109, 98, 114, 111, 105, 100, 101, 114, 121] => lookup_1242_383(acc),
            [104, 105, 115, 116, 111, 105, 114, 101] => lookup_1242_384(acc),
            [117, 118, 105, 99] => lookup_1242_385(acc),
            [101, 112, 105, 108, 101, 112, 115, 121] => lookup_1242_386(acc),
            [108, 97, 110, 115] => lookup_1242_387(acc),
            [98, 97, 114, 99, 101, 108, 111, 110, 97] => lookup_1242_388(acc),
            [103, 117, 101, 114, 110, 115, 101, 121] => lookup_1242_389(acc),
            [97, 117, 116, 111, 109, 111, 116, 105, 118, 101] => lookup_1242_390(acc),
            [110, 101, 119, 112, 111, 114, 116] => lookup_1242_391(acc),
            [101, 115, 115, 101, 120] => lookup_1242_392(acc),
            [109, 101, 109, 111, 114, 105, 97, 108] => lookup_1242_393(acc),
            [104, 97, 119, 97, 105, 105] => lookup_1242_394(acc),
            [97, 108, 97, 115, 107, 97] => lookup_1242_395(acc),
            [115, 107, 105] => lookup_1242_396(acc),
            [115, 111, 117, 110, 100, 97, 110, 100, 118, 105, 115, 105, 111, 110] => {
                lookup_1242_397(acc)
            }
            [112, 104, 105, 108, 97, 100, 101, 108, 112, 104, 105, 97, 97, 114, 101, 97] => {
                lookup_1242_398(acc)
            }
            [110, 97, 116, 117, 114, 97, 108, 115, 99, 105, 101, 110, 99, 101, 115] => {
                lookup_1242_399(acc)
            }
            [103, 101, 101, 108, 118, 105, 110, 99, 107] => lookup_1242_400(acc),
            [109, 97, 114, 105, 116, 105, 109, 101] => lookup_1242_401(acc),
            [115, 101, 116, 116, 108, 101, 109, 101, 110, 116] => lookup_1242_402(acc),
            [115, 99, 105, 101, 110, 99, 101] => lookup_1242_403(acc),
            [112, 105, 108, 111, 116, 115] => lookup_1242_404(acc),
            [101, 108, 98, 117, 114, 103] => lookup_1242_405(acc),
            [115, 101, 97, 112, 111, 114, 116] => lookup_1242_406(acc),
            [98, 114, 97, 110, 100, 121, 119, 105, 110, 101, 118, 97, 108, 108, 101, 121] => {
                lookup_1242_407(acc)
            }
            [102, 114, 105, 98, 111, 117, 114, 103] => lookup_1242_408(acc),
            [109, 111, 116, 111, 114, 99, 121, 99, 108, 101] => lookup_1242_409(acc),
            [112, 104, 111, 101, 110, 105, 120] => lookup_1242_410(acc),
            [98, 101, 114, 103, 98, 97, 117] => lookup_1242_411(acc),
            [100, 111, 110, 111, 115, 116, 105, 97] => lookup_1242_412(acc),
            [109, 97, 114, 121, 108, 104, 117, 114, 115, 116] => lookup_1242_413(acc),
            [98, 97, 100, 97, 106, 111, 122] => lookup_1242_414(acc),
            [115, 97, 116, 120] => lookup_1242_415(acc),
            [104, 105, 115, 116, 111, 114, 121, 111, 102, 115, 99, 105, 101, 110, 99, 101] => {
                lookup_1242_416(acc)
            }
            [115, 116, 97, 116, 105, 111, 110] => lookup_1242_417(acc),
            [104, 101, 108, 108, 97, 115] => lookup_1242_418(acc),
            [97, 114, 116] => lookup_1242_419(acc),
            [99, 97, 100, 97, 113, 117, 101, 115] => lookup_1242_420(acc),
            [115, 97, 110, 100, 105, 101, 103, 111] => lookup_1242_421(acc),
            [102, 97, 114, 109] => lookup_1242_422(acc),
            [112, 97, 108, 97, 99, 101] => lookup_1242_423(acc),
            [118, 105, 114, 116, 117, 101, 108] => lookup_1242_424(acc),
            [97, 115, 116, 114, 111, 110, 111, 109, 121] => lookup_1242_425(acc),
            [109, 97, 114, 98, 117, 114, 103] => lookup_1242_426(acc),
            [102, 97, 109, 105, 108, 121] => lookup_1242_427(acc),
            [106, 117, 100, 97, 105, 99, 97] => lookup_1242_428(acc),
            [116, 104, 101, 97, 116, 101, 114] => lookup_1242_429(acc),
            [99, 111, 109, 112, 117, 116, 101, 114] => lookup_1242_430(acc),
            [99, 105, 114, 99, 117, 115] => lookup_1242_431(acc),
            [105, 108, 108, 117, 115, 116, 114, 97, 116, 105, 111, 110] => lookup_1242_432(acc),
            [99, 97, 108, 105, 102, 111, 114, 110, 105, 97] => lookup_1242_433(acc),
            [110, 101, 119, 121, 111, 114, 107] => lookup_1242_434(acc),
            [110, 114, 119] => lookup_1242_435(acc),
            [115, 97, 110, 102, 114, 97, 110, 99, 105, 115, 99, 111] => lookup_1242_436(acc),
            [97, 99, 97, 100, 101, 109, 121] => lookup_1242_437(acc),
            [121, 111, 114, 107, 115, 104, 105, 114, 101] => lookup_1242_438(acc),
            [114, 111, 109, 97] => lookup_1242_439(acc),
            [109, 97, 110, 115, 105, 111, 110, 115] => lookup_1242_440(acc),
            [99, 108, 105, 110, 116, 111, 110] => lookup_1242_441(acc),
            [98, 114, 97, 115, 105, 108] => lookup_1242_442(acc),
            [115, 116, 111, 99, 107, 104, 111, 108, 109] => lookup_1242_443(acc),
            [117, 115, 97, 110, 116, 105, 113, 117, 101, 115] => lookup_1242_444(acc),
            [115, 104, 101, 114, 98, 114, 111, 111, 107, 101] => lookup_1242_445(acc),
            [100, 105, 115, 99, 111, 118, 101, 114, 121] => lookup_1242_446(acc),
            [99, 104, 105, 108, 100, 114, 101, 110, 115] => lookup_1242_447(acc),
            [112, 97, 110, 97, 109, 97] => lookup_1242_448(acc),
            [112, 104, 97, 114, 109, 97, 99, 121] => lookup_1242_449(acc),
            [106, 101, 119, 105, 115, 104, 97, 114, 116] => lookup_1242_450(acc),
            [97, 105, 114, 103, 117, 97, 114, 100] => lookup_1242_451(acc),
            [99, 111, 114, 112, 111, 114, 97, 116, 105, 111, 110] => lookup_1242_452(acc),
            [98, 97, 115, 101, 98, 97, 108, 108] => lookup_1242_453(acc),
            [99, 111, 114, 114, 101, 105, 111, 115, 45, 101, 45, 116, 101, 108, 101, 99, 111, 109, 117, 110, 105, 99, 97, 195, 167, 195, 181, 101, 115] => {
                lookup_1242_454(acc)
            }
            [120, 110, 45, 45, 99, 111, 114, 114, 101, 105, 111, 115, 45, 101, 45, 116, 101, 108, 101, 99, 111, 109, 117, 110, 105, 99, 97, 101, 115, 45, 103, 104, 99, 50, 57, 97] => {
                lookup_1242_455(acc)
            }
            [102, 114, 97, 110, 107, 102, 117, 114, 116] => lookup_1242_456(acc),
            [116, 111, 112, 111, 108, 111, 103, 121] => lookup_1242_457(acc),
            [109, 111, 110, 109, 111, 117, 116, 104] => lookup_1242_458(acc),
            [97, 115, 115, 105, 115, 105] => lookup_1242_459(acc),
            [102, 117, 114, 110, 105, 116, 117, 114, 101] => lookup_1242_460(acc),
            [118, 108, 97, 97, 110, 100, 101, 114, 101, 110] => lookup_1242_461(acc),
            [105, 110, 100, 105, 97, 110] => lookup_1242_462(acc),
            [103, 97, 114, 100, 101, 110] => lookup_1242_463(acc),
            [97, 109, 101, 114, 105, 99, 97, 110, 97, 110, 116, 105, 113, 117, 101, 115] => {
                lookup_1242_464(acc)
            }
            [109, 101, 115, 97, 118, 101, 114, 100, 101] => lookup_1242_465(acc),
            [99, 111, 115, 116, 117, 109, 101] => lookup_1242_466(acc),
            [103, 101, 111, 114, 103, 105, 97] => lookup_1242_467(acc),
            [97, 110, 116, 104, 114, 111, 112, 111, 108, 111, 103, 121] => lookup_1242_468(acc),
            [104, 97, 114, 118, 101, 115, 116, 99, 101, 108, 101, 98, 114, 97, 116, 105, 111, 110] => {
                lookup_1242_469(acc)
            }
            [115, 111, 99, 105, 101, 116, 121] => lookup_1242_470(acc),
            [99, 101, 110, 116, 101, 114] => lookup_1242_471(acc),
            [109, 111, 110, 101, 121] => lookup_1242_472(acc),
            [119, 101, 115, 116, 102, 97, 108, 101, 110] => lookup_1242_473(acc),
            [109, 111, 109, 97] => lookup_1242_474(acc),
            [119, 111, 114, 107, 115, 104, 111, 112] => lookup_1242_475(acc),
            [99, 105, 118, 105, 108, 119, 97, 114] => lookup_1242_476(acc),
            [115, 111, 117, 116, 104, 99, 97, 114, 111, 108, 105, 110, 97] => lookup_1242_477(acc),
            [104, 97, 108, 108, 111, 102, 102, 97, 109, 101] => lookup_1242_478(acc),
            [103, 101, 111, 108, 111, 103, 121] => lookup_1242_479(acc),
            [99, 117, 108, 116, 117, 114, 101] => lookup_1242_480(acc),
            [102, 114, 97, 110, 122, 105, 115, 107, 97, 110, 101, 114] => lookup_1242_481(acc),
            [104, 101, 114, 105, 116, 97, 103, 101] => lookup_1242_482(acc),
            [109, 105, 115, 115, 105, 108, 101] => lookup_1242_483(acc),
            [111, 110, 116, 97, 114, 105, 111] => lookup_1242_484(acc),
            [99, 101, 108, 116, 105, 99] => lookup_1242_485(acc),
            [121, 111, 114, 107] => lookup_1242_486(acc),
            [99, 117, 108, 116, 117, 114, 97, 108, 99, 101, 110, 116, 101, 114] => {
                lookup_1242_487(acc)
            }
            [115, 97, 118, 97, 110, 110, 97, 104, 103, 97] => lookup_1242_488(acc),
            [117, 115, 104, 117, 97, 105, 97] => lookup_1242_489(acc),
            [98, 101, 108, 108, 101, 118, 117, 101] => lookup_1242_490(acc),
            [107, 111, 101, 108, 110] => lookup_1242_491(acc),
            [101, 100, 117, 99, 97, 116, 105, 111, 110] => lookup_1242_492(acc),
            [115, 99, 105, 101, 110, 99, 101, 45, 102, 105, 99, 116, 105, 111, 110] => {
                lookup_1242_493(acc)
            }
            [119, 97, 116, 99, 104, 97, 110, 100, 99, 108, 111, 99, 107] => lookup_1242_494(acc),
            [99, 104, 105, 114, 111, 112, 114, 97, 99, 116, 105, 99] => lookup_1242_495(acc),
            [116, 114, 117, 115, 116] => lookup_1242_496(acc),
            [103, 101, 109, 111, 108, 111, 103, 105, 99, 97, 108] => lookup_1242_497(acc),
            [115, 97, 108, 122, 98, 117, 114, 103] => lookup_1242_498(acc),
            [106, 101, 114, 117, 115, 97, 108, 101, 109] => lookup_1242_499(acc),
            [117, 115, 97, 114, 116, 115] => lookup_1242_500(acc),
            [99, 111, 108, 117, 109, 98, 105, 97] => lookup_1242_501(acc),
            [99, 111, 108, 111, 110, 105, 97, 108, 119, 105, 108, 108, 105, 97, 109, 115, 98, 117, 114, 103] => {
                lookup_1242_502(acc)
            }
            [100, 97, 108, 108, 97, 115] => lookup_1242_503(acc),
            [112, 108, 97, 122, 97] => lookup_1242_504(acc),
            [102, 97, 114, 109, 101, 113, 117, 105, 112, 109, 101, 110, 116] => {
                lookup_1242_505(acc)
            }
            [99, 111, 110, 118, 101, 110, 116] => lookup_1242_506(acc),
            [109, 101, 100, 105, 99, 97, 108] => lookup_1242_507(acc),
            [109, 117, 108, 104, 111, 117, 115, 101] => lookup_1242_508(acc),
            [97, 120, 105, 115] => lookup_1242_509(acc),
            [112, 97, 114, 105, 115] => lookup_1242_510(acc),
            [117, 115, 103, 97, 114, 100, 101, 110] => lookup_1242_511(acc),
            [113, 117, 101, 98, 101, 99] => lookup_1242_512(acc),
            [110, 121, 99] => lookup_1242_513(acc),
            [115, 99, 105, 101, 110, 99, 101, 115] => lookup_1242_514(acc),
            [117, 110, 100, 101, 114, 115, 101, 97] => lookup_1242_515(acc),
            [112, 97, 115, 97, 100, 101, 110, 97] => lookup_1242_516(acc),
            [108, 97, 114, 115, 115, 111, 110] => lookup_1242_517(acc),
            [98, 105, 114, 116, 104, 112, 108, 97, 99, 101] => lookup_1242_518(acc),
            [115, 116, 97, 116, 101, 111, 102, 100, 101, 108, 97, 119, 97, 114, 101] => {
                lookup_1242_519(acc)
            }
            [99, 104, 101, 115, 97, 112, 101, 97, 107, 101, 98, 97, 121] => lookup_1242_520(acc),
            [115, 97, 115, 107, 97, 116, 99, 104, 101, 119, 97, 110] => lookup_1242_521(acc),
            [97, 114, 116, 103, 97, 108, 108, 101, 114, 121] => lookup_1242_522(acc),
            [109, 97, 114, 121, 108, 97, 110, 100] => lookup_1242_523(acc),
            [100, 97, 116, 97, 98, 97, 115, 101] => lookup_1242_524(acc),
            [115, 99, 104, 108, 101, 115, 105, 115, 99, 104, 101, 115] => lookup_1242_525(acc),
            [112, 97, 100, 101, 114, 98, 111, 114, 110] => lookup_1242_526(acc),
            [105, 110, 100, 105, 97, 110, 109, 97, 114, 107, 101, 116] => lookup_1242_527(acc),
            [106, 101, 119, 101, 108, 114, 121] => lookup_1242_528(acc),
            [104, 97, 109, 98, 117, 114, 103] => lookup_1242_529(acc),
            [110, 97, 116, 105, 111, 110, 97, 108] => lookup_1242_530(acc),
            [117, 115, 97] => lookup_1242_531(acc),
            [100, 117, 114, 104, 97, 109] => lookup_1242_532(acc),
            [108, 105, 118, 105, 110, 103, 104, 105, 115, 116, 111, 114, 121] => {
                lookup_1242_533(acc)
            }
            [117, 115, 100, 101, 99, 111, 114, 97, 116, 105, 118, 101, 97, 114, 116, 115] => {
                lookup_1242_534(acc)
            }
            [102, 105, 110, 108, 97, 110, 100] => lookup_1242_535(acc),
            [109, 97, 110, 120] => lookup_1242_536(acc),
            [101, 110, 116, 111, 109, 111, 108, 111, 103, 121] => lookup_1242_537(acc),
            [112, 104, 105, 108, 97, 100, 101, 108, 112, 104, 105, 97] => lookup_1242_538(acc),
            [99, 111, 109, 117, 110, 105, 99, 97, 195, 167, 195, 181, 101, 115] => {
                lookup_1242_539(acc)
            }
            [107, 117, 110, 115, 116] => lookup_1242_540(acc),
            [115, 99, 105, 101, 110, 99, 101, 99, 101, 110, 116, 101, 114, 115] => {
                lookup_1242_541(acc)
            }
            [105, 115, 108, 101, 111, 102, 109, 97, 110] => lookup_1242_542(acc),
            [108, 117, 99, 101, 114, 110, 101] => lookup_1242_543(acc),
            [102, 111, 114, 99, 101] => lookup_1242_544(acc),
            [103, 114, 97, 122] => lookup_1242_545(acc),
            [109, 111, 115, 99, 111, 119] => lookup_1242_546(acc),
            [99, 114, 101, 97, 116, 105, 111, 110] => lookup_1242_547(acc),
            [119, 105, 108, 100, 108, 105, 102, 101] => lookup_1242_548(acc),
            [109, 97, 114, 105, 116, 105, 109, 111] => lookup_1242_549(acc),
            [102, 105, 110, 101, 97, 114, 116, 115] => lookup_1242_550(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1243() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1244() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1245() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1246() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1247() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1248() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1249_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1249_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1249_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1249<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 115, 112, 97, 99, 101] => lookup_1249_0(acc),
            [108, 105, 109, 97, 45, 99, 105, 116, 121] => lookup_1249_1(acc),
            [109, 121, 100, 100, 110, 115] => lookup_1249_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1250_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1250_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1250_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1250_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1250_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1250_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1250_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1250_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1250_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1250<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_1250_0(acc),
            [109, 101, 100] => lookup_1250_1(acc),
            [105, 100] => lookup_1250_2(acc),
            [112, 108, 99] => lookup_1250_3(acc),
            [111, 114, 103] => lookup_1250_4(acc),
            [115, 99, 104] => lookup_1250_5(acc),
            [110, 101, 116] => lookup_1250_6(acc),
            [101, 100, 117] => lookup_1250_7(acc),
            [99, 111, 109] => lookup_1250_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1251_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1251_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1251_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1251_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1251_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1251_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1251_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1251<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_1251_0(acc),
            [101, 109, 98] => lookup_1251_1(acc),
            [105, 110, 100] => lookup_1251_2(acc),
            [110, 101, 116] => lookup_1251_3(acc),
            [101, 100, 117] => lookup_1251_4(acc),
            [99, 111, 109] => lookup_1251_5(acc),
            [103, 111, 118] => lookup_1251_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1252() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1253() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1254() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1255() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1256() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1257() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1258_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1258_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1258_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1258<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1258_0(acc),
            [110, 121, 109] => lookup_1258_1(acc),
            [103, 111, 118] => lookup_1258_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1259() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1260() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1261() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1262() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1263() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1264() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1265() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1266_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1266_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1266_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1266_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1266_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1266<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_1266_0(acc),
            [110, 101, 116] => lookup_1266_1(acc),
            [101, 100, 117] => lookup_1266_2(acc),
            [99, 111, 109] => lookup_1266_3(acc),
            [103, 111, 118] => lookup_1266_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1267() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1268() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1269() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1270() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1272() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1273() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1274() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1275() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1276() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1277() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1278() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1279() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1280() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1281() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1282() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1283() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1284() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1285_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1285_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1285_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1285_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1285_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1285_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1285_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1285_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1285_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1285_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1285_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1285_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1285_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1285_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1285_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1285_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1285<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 108] => lookup_1285_0(acc),
            [110, 105, 99] => lookup_1285_1(acc),
            [110, 97, 109, 101] => lookup_1285_2(acc),
            [99, 111, 109] => lookup_1285_3(acc),
            [97, 99] => lookup_1285_4(acc),
            [98, 105, 122] => lookup_1285_5(acc),
            [103, 111, 118] => lookup_1285_6(acc),
            [119, 101, 98] => lookup_1285_7(acc),
            [110, 111, 109] => lookup_1285_8(acc),
            [111, 114, 103] => lookup_1285_9(acc),
            [103, 111] => lookup_1285_10(acc),
            [116, 101, 115, 116] => lookup_1285_11(acc),
            [110, 101, 116] => lookup_1285_12(acc),
            [101, 100, 117] => lookup_1285_13(acc),
            [105, 110, 116] => lookup_1285_14(acc),
            [99, 111] => lookup_1285_15(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1286() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1287() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1288() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1289() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1290() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1291() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1292() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1293() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1294_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1294_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [117, 115, 101, 114] => lookup_1294_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1294<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 97, 114, 116, 121] => lookup_1294_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1295() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1296_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1296_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1296_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1296_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1296_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1296_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1296<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [117, 114, 105] => lookup_1296_0(acc),
            [105, 112, 54] => lookup_1296_1(acc),
            [105, 110, 45, 97, 100, 100, 114] => lookup_1296_2(acc),
            [101, 49, 54, 52] => lookup_1296_3(acc),
            [117, 114, 110] => lookup_1296_4(acc),
            [105, 114, 105, 115] => lookup_1296_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1297() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1298() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1299() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1300() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1301() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1302() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1303() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1304_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1304_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1304_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1304_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1304_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1304_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1304_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1304_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1304_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1304_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1304<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_1304_0(acc),
            [110, 121, 109] => lookup_1304_1(acc),
            [112, 117, 98, 108] => lookup_1304_2(acc),
            [110, 111, 109, 101] => lookup_1304_3(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1304_4(acc),
            [111, 114, 103] => lookup_1304_5(acc),
            [110, 101, 116] => lookup_1304_6(acc),
            [101, 100, 117] => lookup_1304_7(acc),
            [99, 111, 109] => lookup_1304_8(acc),
            [105, 110, 116] => lookup_1304_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1305() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1306_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1306<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [121, 98, 111] => lookup_1306_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1307() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1308() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1309_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1309_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1309_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1309_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1309_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1309_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1309_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1309_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1309_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1309_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1309_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1309_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1309_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1309_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1309_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1309_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1309_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1309_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1309_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1309_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1309_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1309_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1309_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1309_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1309_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1309_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1309_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1309_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1309_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1309_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1309<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 119, 97, 110, 103, 106, 117] => lookup_1309_0(acc),
            [100, 97, 101, 106, 101, 111, 110] => lookup_1309_1(acc),
            [107, 103] => lookup_1309_2(acc),
            [100, 97, 101, 103, 117] => lookup_1309_3(acc),
            [115, 101, 111, 117, 108] => lookup_1309_4(acc),
            [109, 105, 108] => lookup_1309_5(acc),
            [110, 101] => lookup_1309_6(acc),
            [101, 115] => lookup_1309_7(acc),
            [97, 99] => lookup_1309_8(acc),
            [111, 114] => lookup_1309_9(acc),
            [98, 117, 115, 97, 110] => lookup_1309_10(acc),
            [114, 101] => lookup_1309_11(acc),
            [105, 110, 99, 104, 101, 111, 110] => lookup_1309_12(acc),
            [106, 101, 111, 110, 110, 97, 109] => lookup_1309_13(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1309_14(acc),
            [115, 99] => lookup_1309_15(acc),
            [99, 104, 117, 110, 103, 110, 97, 109] => lookup_1309_16(acc),
            [103, 121, 101, 111, 110, 103, 103, 105] => lookup_1309_17(acc),
            [117, 108, 115, 97, 110] => lookup_1309_18(acc),
            [106, 101, 111, 110, 98, 117, 107] => lookup_1309_19(acc),
            [99, 104, 117, 110, 103, 98, 117, 107] => lookup_1309_20(acc),
            [109, 115] => lookup_1309_21(acc),
            [103, 121, 101, 111, 110, 103, 98, 117, 107] => lookup_1309_22(acc),
            [103, 97, 110, 103, 119, 111, 110] => lookup_1309_23(acc),
            [106, 101, 106, 117] => lookup_1309_24(acc),
            [112, 101] => lookup_1309_25(acc),
            [103, 111] => lookup_1309_26(acc),
            [103, 121, 101, 111, 110, 103, 110, 97, 109] => lookup_1309_27(acc),
            [99, 111] => lookup_1309_28(acc),
            [104, 115] => lookup_1309_29(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1310_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1310_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1310_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1310_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1310_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1310_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1310_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1310_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1310_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1310_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1310_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1310_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1310_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1310_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1310_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1310<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 115, 110] => lookup_1310_0(acc),
            [115, 99, 104] => lookup_1310_1(acc),
            [99, 111, 109] => lookup_1310_2(acc),
            [103, 111, 118] => lookup_1310_3(acc),
            [115, 111, 99] => lookup_1310_4(acc),
            [97, 99] => lookup_1310_5(acc),
            [103, 114, 112] => lookup_1310_6(acc),
            [119, 101, 98] => lookup_1310_7(acc),
            [104, 111, 116, 101, 108] => lookup_1310_8(acc),
            [111, 114, 103] => lookup_1310_9(acc),
            [108, 116, 100] => lookup_1310_10(acc),
            [110, 101, 116] => lookup_1310_11(acc),
            [101, 100, 117] => lookup_1310_12(acc),
            [105, 110, 116] => lookup_1310_13(acc),
            [110, 103, 111] => lookup_1310_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1311_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1311_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1311_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 25usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 24usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 24usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_130_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1311_130<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [106, 99] => lookup_1311_130_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1311_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 24usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_158(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_162(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_163(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_164(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_165(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_166(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_167(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_168(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_169(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_170(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_171(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_172(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_173(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_174(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_175(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_176(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_177(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_178(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_179(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_180(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_181(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_182(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_183(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_184(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_185(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_186(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_187(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_188(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_189(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_190(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_191(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_192(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_193(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_194(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_195(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_196(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_197(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_198(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_199(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_200(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_201(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_202(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_203(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_204(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_205(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_206(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_207(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_208(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_209(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_210(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_211(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_212(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_213(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_214(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_215(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_216(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_217(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_218(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_219(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_220(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_221(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1311_222(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_223(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_224(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_225(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_226(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_227(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_228(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_229(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_230(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_231(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_232(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_233(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_234(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_235(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_236(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_237(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_238(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_239(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_240(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_241(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_242(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_243(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_244(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_245(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_246(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_247(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_248(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_249(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_250(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_251(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_252(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_253(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_254(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_255(acc: usize) -> Info {
    Info {
        len: acc + 1 + 23usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_256(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_257(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_258(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_259(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_260(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_261(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_262(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_263(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_264(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_265(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_266(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_267(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_268(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_269(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_270(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_271(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_272(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_273(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_274(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_275(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_276(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_277(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_278(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_279(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_280(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_281(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_282(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_283(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_284(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_285(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_286(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_287(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_288(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_289(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_290(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_291(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_292(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_293(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_294(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_295(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_296(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_297(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_298(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_299(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_300(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_301(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_302(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_303(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_304(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_305(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_306(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_307(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_308(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_309(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_310(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_311(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_312(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_313(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_314(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_315(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_316(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_317(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_318(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_319(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_320(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_321(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_322(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_323(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_324(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_325(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_326(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_327(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_328(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_329(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_330(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_331(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1311_332(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_333(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_334(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_335(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_336(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_337(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_338(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_339(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_340(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_341(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_342(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_343(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_344(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_345(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_346(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_347(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_348(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_349(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_350(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_351(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_352(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_353(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_354(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_355(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_356(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_357(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_358(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_359(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_360(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_361(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_362(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_363(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_364(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_365(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_366(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_367(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_368(acc: usize) -> Info {
    Info {
        len: acc + 1 + 23usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_369(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_370(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_371(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_372(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_373(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_374(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_375(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_376(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_377(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_378(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_379(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_380(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_381(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_382(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_383(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_384(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_385(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_386(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_387(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_388(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_389(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_390(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_391(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_392(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_393(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_394(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_395(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_396(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_397(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_398(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_399(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_400(acc: usize) -> Info {
    Info {
        len: acc + 1 + 23usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_401(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_402(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_403_0_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1311_403_0_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_1311_403_0_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1311_403_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_1311_403_0_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1311_403<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [111, 112, 101, 110] => lookup_1311_403_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1311_404(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1311_405(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_406(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_407(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_408(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_409(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_410(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_411(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_412(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_413(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_414(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_415(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_416(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_417(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_418(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_419(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_420(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_421(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_422(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_423(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_424(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_425(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_426(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_427(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_428(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_429(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_430(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_431(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311_432(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 105, 97, 99, 101, 110, 122, 97] => lookup_1311_0(acc),
            [102, 114, 105, 117, 108, 105, 45, 118, 101, 103, 105, 117, 108, 105, 97] => {
                lookup_1311_1(acc)
            }
            [102, 114] => lookup_1311_2(acc),
            [120, 110, 45, 45, 118, 97, 108, 108, 101, 45, 100, 45, 97, 111, 115, 116, 101, 45, 101, 104, 98] => {
                lookup_1311_3(acc)
            }
            [114, 109] => lookup_1311_4(acc),
            [115, 97] => lookup_1311_5(acc),
            [115, 105, 114, 97, 99, 117, 115, 97] => lookup_1311_6(acc),
            [115, 195, 188, 100, 116, 105, 114, 111, 108] => lookup_1311_7(acc),
            [114, 105] => lookup_1311_8(acc),
            [109, 111, 110, 122, 97, 45, 101, 45, 100, 101, 108, 108, 97, 45, 98, 114, 105, 97, 110, 122, 97] => {
                lookup_1311_9(acc)
            }
            [116, 118] => lookup_1311_10(acc),
            [51, 50, 45, 98] => lookup_1311_11(acc),
            [97, 115, 99, 111, 108, 105, 45, 112, 105, 99, 101, 110, 111] => lookup_1311_12(acc),
            [54, 52, 45, 98] => lookup_1311_13(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 116, 105, 114, 111, 108] => {
                lookup_1311_14(acc)
            }
            [109, 111, 108] => lookup_1311_15(acc),
            [108, 105, 118, 111, 114, 110, 111] => lookup_1311_16(acc),
            [118, 97, 108, 108, 101, 97, 111, 115, 116, 97] => lookup_1311_17(acc),
            [109, 111, 110, 122, 97, 98, 114, 105, 97, 110, 122, 97] => lookup_1311_18(acc),
            [98, 111, 108, 122, 97, 110, 111] => lookup_1311_19(acc),
            [116, 114] => lookup_1311_20(acc),
            [118, 101, 114, 98, 97, 110, 105, 97] => lookup_1311_21(acc),
            [114, 99] => lookup_1311_22(acc),
            [112, 122] => lookup_1311_23(acc),
            [116, 97, 97] => lookup_1311_24(acc),
            [116, 117, 115, 99, 97, 110, 121] => lookup_1311_25(acc),
            [99, 97, 109, 112, 105, 100, 97, 110, 111, 109, 101, 100, 105, 111] => {
                lookup_1311_26(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 100, 45, 116, 105, 114, 111, 108, 45, 99, 51, 98] => {
                lookup_1311_27(acc)
            }
            [111, 108, 98, 105, 97, 45, 116, 101, 109, 112, 105, 111] => lookup_1311_28(acc),
            [116, 111] => lookup_1311_29(acc),
            [118, 97, 114, 101, 115, 101] => lookup_1311_30(acc),
            [110, 117] => lookup_1311_31(acc),
            [118, 114] => lookup_1311_32(acc),
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 100, 116, 105, 114, 111, 108, 45, 115, 122, 98] => {
                lookup_1311_33(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 195, 188, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_1311_34(acc)
            }
            [102, 114, 105, 117, 108, 105, 118, 101, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_1311_35(acc)
            }
            [112, 117] => lookup_1311_36(acc),
            [102, 101, 114, 114, 97, 114, 97] => lookup_1311_37(acc),
            [116, 111, 115, 99, 97, 110, 97] => lookup_1311_38(acc),
            [99, 122] => lookup_1311_39(acc),
            [100, 101, 108, 108, 111, 103, 108, 105, 97, 115, 116, 114, 97] => lookup_1311_40(acc),
            [116, 101, 109, 112, 105, 111, 111, 108, 98, 105, 97] => lookup_1311_41(acc),
            [116, 112] => lookup_1311_42(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 97, 108, 116, 111, 97, 100, 105, 103, 101] => {
                lookup_1311_43(acc)
            }
            [101, 100, 117] => lookup_1311_44(acc),
            [108, 117, 99, 97, 110, 105, 97] => lookup_1311_45(acc),
            [98, 108] => lookup_1311_46(acc),
            [98, 111, 108, 111, 103, 110, 97] => lookup_1311_47(acc),
            [105, 109, 112, 101, 114, 105, 97] => lookup_1311_48(acc),
            [116, 114, 97, 110, 105, 97, 110, 100, 114, 105, 97, 98, 97, 114, 108, 101, 116, 116, 97] => {
                lookup_1311_49(acc)
            }
            [99, 97, 114, 114, 97, 114, 97, 45, 109, 97, 115, 115, 97] => lookup_1311_50(acc),
            [102, 99] => lookup_1311_51(acc),
            [102, 118, 103] => lookup_1311_52(acc),
            [102, 105, 114, 101, 110, 122, 101] => lookup_1311_53(acc),
            [97, 111, 115, 116, 97, 118, 97, 108, 108, 101, 121] => lookup_1311_54(acc),
            [118, 101, 110] => lookup_1311_55(acc),
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 117, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_1311_56(acc)
            }
            [115, 114] => lookup_1311_57(acc),
            [99, 97, 108, 97, 98, 114, 105, 97] => lookup_1311_58(acc),
            [118, 97, 108, 108, 101, 101, 45, 100, 45, 97, 111, 115, 116, 101] => {
                lookup_1311_59(acc)
            }
            [112, 101, 115, 97, 114, 111, 117, 114, 98, 105, 110, 111] => lookup_1311_60(acc),
            [117, 114, 98, 105, 110, 111, 45, 112, 101, 115, 97, 114, 111] => lookup_1311_61(acc),
            [117, 114, 98, 105, 110, 111, 112, 101, 115, 97, 114, 111] => lookup_1311_62(acc),
            [112, 111] => lookup_1311_63(acc),
            [99, 114, 111, 116, 111, 110, 101] => lookup_1311_64(acc),
            [112, 116] => lookup_1311_65(acc),
            [115, 105, 99, 105, 108, 121] => lookup_1311_66(acc),
            [99, 114, 101, 109, 111, 110, 97] => lookup_1311_67(acc),
            [115, 105, 99] => lookup_1311_68(acc),
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 45, 115, 100, 45, 116, 105, 114, 111, 108, 45, 114, 122, 98] => {
                lookup_1311_69(acc)
            }
            [97, 116] => lookup_1311_70(acc),
            [99, 97, 109, 112, 97, 110, 105, 97] => lookup_1311_71(acc),
            [99, 116] => lookup_1311_72(acc),
            [107, 114] => lookup_1311_73(acc),
            [110, 117, 111, 114, 111] => lookup_1311_74(acc),
            [97, 110, 100, 114, 105, 97, 98, 97, 114, 108, 101, 116, 116, 97, 116, 114, 97, 110, 105] => {
                lookup_1311_75(acc)
            }
            [102, 114, 105, 117, 108, 105, 45, 118, 101, 110, 101, 122, 105, 97, 103, 105, 117, 108, 105, 97] => {
                lookup_1311_76(acc)
            }
            [112, 105, 101, 100, 109, 111, 110, 116] => lookup_1311_77(acc),
            [111, 103, 108, 105, 97, 115, 116, 114, 97] => lookup_1311_78(acc),
            [114, 111, 109, 101] => lookup_1311_79(acc),
            [116, 111, 114, 105, 110, 111] => lookup_1311_80(acc),
            [118, 105, 98, 111, 118, 97, 108, 101, 110, 116, 105, 97] => lookup_1311_81(acc),
            [99, 101, 115, 101, 110, 97, 45, 102, 111, 114, 108, 105] => lookup_1311_82(acc),
            [116, 114, 101, 110, 116, 111] => lookup_1311_83(acc),
            [109, 111, 100, 101, 110, 97] => lookup_1311_84(acc),
            [118, 101, 110, 105, 99, 101] => lookup_1311_85(acc),
            [98, 97, 108, 115, 97, 110, 45, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_1311_86(acc)
            }
            [99, 97, 109] => lookup_1311_87(acc),
            [118, 116] => lookup_1311_88(acc),
            [109, 105, 108, 97, 110, 111] => lookup_1311_89(acc),
            [108, 99] => lookup_1311_90(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_1311_91(acc)
            }
            [99, 98] => lookup_1311_92(acc),
            [114, 105, 109, 105, 110, 105] => lookup_1311_93(acc),
            [102, 109] => lookup_1311_94(acc),
            [98, 111, 122, 101, 110] => lookup_1311_95(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 116, 105, 114, 111, 108] => {
                lookup_1311_96(acc)
            }
            [108, 97, 122, 105, 111] => lookup_1311_97(acc),
            [99, 97, 115, 101, 114, 116, 97] => lookup_1311_98(acc),
            [102, 101, 114, 109, 111] => lookup_1311_99(acc),
            [114, 110] => lookup_1311_100(acc),
            [118, 99] => lookup_1311_101(acc),
            [99, 115] => lookup_1311_102(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 97, 45, 97, 100, 105, 103, 101] => {
                lookup_1311_103(acc)
            }
            [120, 110, 45, 45, 115, 100, 116, 105, 114, 111, 108, 45, 110, 50, 97] => {
                lookup_1311_104(acc)
            }
            [114, 101, 103, 103, 105, 111, 99, 97, 108, 97, 98, 114, 105, 97] => {
                lookup_1311_105(acc)
            }
            [99, 117, 110, 101, 111] => lookup_1311_106(acc),
            [99, 111, 115, 101, 110, 122, 97] => lookup_1311_107(acc),
            [109, 97, 115, 115, 97, 99, 97, 114, 114, 97, 114, 97] => lookup_1311_108(acc),
            [98, 101, 114, 103, 97, 109, 111] => lookup_1311_109(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 117, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_1311_110(acc)
            }
            [115, 105] => lookup_1311_111(acc),
            [97, 110, 99, 111, 110, 97] => lookup_1311_112(acc),
            [108, 105, 103, 117, 114, 105, 97] => lookup_1311_113(acc),
            [111, 116] => lookup_1311_114(acc),
            [118, 115] => lookup_1311_115(acc),
            [108, 111, 109, 98, 97, 114, 100, 105, 97] => lookup_1311_116(acc),
            [115, 97, 114] => lookup_1311_117(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 45, 116, 105, 114, 111, 108] => {
                lookup_1311_118(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 115, 100, 116, 105, 114, 111, 108, 45, 110, 115, 98] => {
                lookup_1311_119(acc)
            }
            [112, 111, 114, 100, 101, 110, 111, 110, 101] => lookup_1311_120(acc),
            [118, 105, 98, 111, 45, 118, 97, 108, 101, 110, 116, 105, 97] => lookup_1311_121(acc),
            [117, 109, 98, 114, 105, 97] => lookup_1311_122(acc),
            [118, 97, 111] => lookup_1311_123(acc),
            [112, 114, 97, 116, 111] => lookup_1311_124(acc),
            [97, 98, 114, 117, 122, 122, 111] => lookup_1311_125(acc),
            [108, 111, 109, 98, 97, 114, 100, 121] => lookup_1311_126(acc),
            [117, 109, 98] => lookup_1311_127(acc),
            [120, 110, 45, 45, 118, 97, 108, 108, 101, 97, 111, 115, 116, 101, 45, 101, 55, 97] => {
                lookup_1311_128(acc)
            }
            [112, 105] => lookup_1311_129(acc),
            [110, 101, 101, 110] => lookup_1311_130(info, labels, acc),
            [109, 101, 100, 105, 111, 99, 97, 109, 112, 105, 100, 97, 110, 111] => {
                lookup_1311_131(acc)
            }
            [97, 103] => lookup_1311_132(acc),
            [116, 97, 114, 97, 110, 116, 111] => lookup_1311_133(acc),
            [118, 97, 108, 108, 101, 101, 100, 97, 111, 115, 116, 101] => lookup_1311_134(acc),
            [109, 111, 110, 122, 97, 101, 98, 114, 105, 97, 110, 122, 97] => lookup_1311_135(acc),
            [108, 111] => lookup_1311_136(acc),
            [99, 114] => lookup_1311_137(acc),
            [109, 105] => lookup_1311_138(acc),
            [112, 101] => lookup_1311_139(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 97, 108, 116, 111, 97, 100, 105, 103, 101] => {
                lookup_1311_140(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 97, 45, 97, 100, 105, 103, 101] => {
                lookup_1311_141(acc)
            }
            [118, 97, 108, 108, 195, 169, 101, 100, 97, 111, 115, 116, 101] => lookup_1311_142(acc),
            [116, 114, 101, 110, 116, 105, 110, 115, 195, 188, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_1311_143(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 97, 97, 100, 105, 103, 101] => {
                lookup_1311_144(acc)
            }
            [108, 97, 115, 112, 101, 122, 105, 97] => lookup_1311_145(acc),
            [116, 97] => lookup_1311_146(acc),
            [118, 105, 99, 101, 110, 122, 97] => lookup_1311_147(acc),
            [97, 108, 116, 111, 97, 100, 105, 103, 101] => lookup_1311_148(acc),
            [108, 111, 109] => lookup_1311_149(acc),
            [116, 114, 97, 110, 105, 45, 97, 110, 100, 114, 105, 97, 45, 98, 97, 114, 108, 101, 116, 116, 97] => {
                lookup_1311_150(acc)
            }
            [118, 101] => lookup_1311_151(acc),
            [118, 97, 108, 108, 101, 101, 45, 97, 111, 115, 116, 101] => lookup_1311_152(acc),
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 111, 115, 100, 45, 116, 105, 114, 111, 108, 45, 114, 122, 98] => {
                lookup_1311_153(acc)
            }
            [98, 97, 108, 115, 97, 110, 45, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_1311_154(acc)
            }
            [108, 101] => lookup_1311_155(acc),
            [118, 101, 110, 101, 116, 111] => lookup_1311_156(acc),
            [108, 116] => lookup_1311_157(acc),
            [109, 97, 110, 116, 111, 118, 97] => lookup_1311_158(acc),
            [98, 114] => lookup_1311_159(acc),
            [112, 101, 115, 97, 114, 111, 45, 117, 114, 98, 105, 110, 111] => lookup_1311_160(acc),
            [109, 111, 108, 105, 115, 101] => lookup_1311_161(acc),
            [99, 110] => lookup_1311_162(acc),
            [115, 105, 101, 110, 97] => lookup_1311_163(acc),
            [112, 101, 114, 117, 103, 105, 97] => lookup_1311_164(acc),
            [118, 105] => lookup_1311_165(acc),
            [102, 114, 105, 117, 108, 105, 118, 101, 110, 101, 122, 105, 97, 103, 105, 117, 108, 105, 97] => {
                lookup_1311_166(acc)
            }
            [105, 115] => lookup_1311_167(acc),
            [109, 111] => lookup_1311_168(acc),
            [103, 114] => lookup_1311_169(acc),
            [97, 115, 99, 111, 108, 105, 112, 105, 99, 101, 110, 111] => lookup_1311_170(acc),
            [109, 99] => lookup_1311_171(acc),
            [98, 122] => lookup_1311_172(acc),
            [97, 112] => lookup_1311_173(acc),
            [98, 97, 114, 108, 101, 116, 116, 97, 45, 116, 114, 97, 110, 105, 45, 97, 110, 100, 114, 105, 97] => {
                lookup_1311_174(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 97, 97, 100, 105, 103, 101] => {
                lookup_1311_175(acc)
            }
            [110, 111, 118, 97, 114, 97] => lookup_1311_176(acc),
            [111, 114, 105, 115, 116, 97, 110, 111] => lookup_1311_177(acc),
            [98, 117, 108, 115, 97, 110] => lookup_1311_178(acc),
            [99, 97, 109, 112, 105, 100, 97, 110, 111, 45, 109, 101, 100, 105, 111] => {
                lookup_1311_179(acc)
            }
            [98, 111, 108, 122, 97, 110, 111, 45, 97, 108, 116, 111, 97, 100, 105, 103, 101] => {
                lookup_1311_180(acc)
            }
            [98, 111, 122, 101, 110, 45, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_1311_181(acc)
            }
            [103, 111, 118] => lookup_1311_182(acc),
            [99, 97, 109, 112, 111, 98, 97, 115, 115, 111] => lookup_1311_183(acc),
            [97, 114] => lookup_1311_184(acc),
            [98, 117, 108, 115, 97, 110, 45, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_1311_185(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 117, 101, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_1311_186(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 97, 108, 116, 111, 45, 97, 100, 105, 103, 101] => {
                lookup_1311_187(acc)
            }
            [114, 101, 103, 103, 105, 111, 45, 99, 97, 108, 97, 98, 114, 105, 97] => {
                lookup_1311_188(acc)
            }
            [114, 101, 103, 103, 105, 111, 101, 109, 105, 108, 105, 97] => lookup_1311_189(acc),
            [116, 114, 105, 101, 115, 116, 101] => lookup_1311_190(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_1311_191(acc)
            }
            [98, 116] => lookup_1311_192(acc),
            [109, 101, 100, 105, 111, 45, 99, 97, 109, 112, 105, 100, 97, 110, 111] => {
                lookup_1311_193(acc)
            }
            [115, 97, 118, 111, 110, 97] => lookup_1311_194(acc),
            [117, 100] => lookup_1311_195(acc),
            [99, 111] => lookup_1311_196(acc),
            [99, 97, 108, 116, 97, 110, 105, 115, 115, 101, 116, 116, 97] => lookup_1311_197(acc),
            [105, 103, 108, 101, 115, 105, 97, 115, 99, 97, 114, 98, 111, 110, 105, 97] => {
                lookup_1311_198(acc)
            }
            [110, 111] => lookup_1311_199(acc),
            [97, 110] => lookup_1311_200(acc),
            [118, 101, 114, 111, 110, 97] => lookup_1311_201(acc),
            [108, 97, 45, 115, 112, 101, 122, 105, 97] => lookup_1311_202(acc),
            [109, 101, 115, 115, 105, 110, 97] => lookup_1311_203(acc),
            [99, 104] => lookup_1311_204(acc),
            [118, 98] => lookup_1311_205(acc),
            [98, 115] => lookup_1311_206(acc),
            [118, 101, 114, 99, 101, 108, 108, 105] => lookup_1311_207(acc),
            [98, 110] => lookup_1311_208(acc),
            [99, 97] => lookup_1311_209(acc),
            [108, 105, 103] => lookup_1311_210(acc),
            [118, 101, 110, 101, 122, 105, 97] => lookup_1311_211(acc),
            [102, 114, 105, 117, 108, 105, 45, 118, 101, 110, 101, 122, 105, 97, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_1311_212(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_1311_213(acc)
            }
            [98, 101, 110, 101, 118, 101, 110, 116, 111] => lookup_1311_214(acc),
            [118, 100, 97] => lookup_1311_215(acc),
            [116, 101, 114, 97, 109, 111] => lookup_1311_216(acc),
            [108, 105] => lookup_1311_217(acc),
            [110, 97, 112, 108, 101, 115] => lookup_1311_218(acc),
            [102, 105] => lookup_1311_219(acc),
            [102, 111, 114, 108, 195, 172, 99, 101, 115, 101, 110, 97] => lookup_1311_220(acc),
            [115, 121, 110, 99, 108, 111, 117, 100] => lookup_1311_221(acc),
            [99, 97, 114, 98, 111, 110, 105, 97, 105, 103, 108, 101, 115, 105, 97, 115] => {
                lookup_1311_222(acc)
            }
            [112, 109, 110] => lookup_1311_223(acc),
            [109, 111, 110, 122, 97] => lookup_1311_224(acc),
            [120, 110, 45, 45, 98, 111, 122, 101, 110, 45, 115, 100, 116, 105, 114, 111, 108, 45, 50, 111, 98] => {
                lookup_1311_225(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 45, 116, 105, 114, 111, 108] => {
                lookup_1311_226(acc)
            }
            [98, 111, 122, 101, 110, 45, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_1311_227(acc)
            }
            [112, 99] => lookup_1311_228(acc),
            [102, 114, 105, 117, 108, 105, 118, 101, 103, 105, 117, 108, 105, 97] => {
                lookup_1311_229(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 195, 188, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_1311_230(acc)
            }
            [99, 108] => lookup_1311_231(acc),
            [97, 108] => lookup_1311_232(acc),
            [109, 98] => lookup_1311_233(acc),
            [111, 108, 98, 105, 97, 116, 101, 109, 112, 105, 111] => lookup_1311_234(acc),
            [98, 97, 115, 105, 108, 105, 99, 97, 116, 97] => lookup_1311_235(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 195, 188, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_1311_236(acc)
            }
            [98, 105] => lookup_1311_237(acc),
            [120, 110, 45, 45, 99, 101, 115, 101, 110, 97, 45, 102, 111, 114, 108, 45, 109, 99, 98] => {
                lookup_1311_238(acc)
            }
            [102, 101] => lookup_1311_239(acc),
            [105, 103, 108, 101, 115, 105, 97, 115, 45, 99, 97, 114, 98, 111, 110, 105, 97] => {
                lookup_1311_240(acc)
            }
            [112, 103] => lookup_1311_241(acc),
            [114, 97, 118, 101, 110, 110, 97] => lookup_1311_242(acc),
            [116, 114, 101, 110, 116, 105, 110, 115, 117, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_1311_243(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_1311_244(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 115, 117, 101, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_1311_245(acc)
            }
            [97, 108, 101, 115, 115, 97, 110, 100, 114, 105, 97] => lookup_1311_246(acc),
            [115, 97, 108, 101, 114, 110, 111] => lookup_1311_247(acc),
            [120, 110, 45, 45, 102, 111, 114, 108, 99, 101, 115, 101, 110, 97, 45, 99, 56, 97] => {
                lookup_1311_248(acc)
            }
            [116, 101, 109, 112, 105, 111, 45, 111, 108, 98, 105, 97] => lookup_1311_249(acc),
            [116, 101, 114, 110, 105] => lookup_1311_250(acc),
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_1311_251(acc)
            }
            [97, 114, 101, 122, 122, 111] => lookup_1311_252(acc),
            [112, 100] => lookup_1311_253(acc),
            [98, 114, 101, 115, 99, 105, 97] => lookup_1311_254(acc),
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 111, 115, 100, 116, 105, 114, 111, 108, 45, 55, 118, 98] => {
                lookup_1311_255(acc)
            }
            [109, 97, 115, 115, 97, 45, 99, 97, 114, 114, 97, 114, 97] => lookup_1311_256(acc),
            [109, 97, 116, 101, 114, 97] => lookup_1311_257(acc),
            [112, 97, 100, 111, 118, 97] => lookup_1311_258(acc),
            [114, 105, 101, 116, 105] => lookup_1311_259(acc),
            [114, 111, 109, 97] => lookup_1311_260(acc),
            [114, 111, 118, 105, 103, 111] => lookup_1311_261(acc),
            [116, 101] => lookup_1311_262(acc),
            [109, 97, 114, 99, 104, 101] => lookup_1311_263(acc),
            [97, 118, 101, 108, 108, 105, 110, 111] => lookup_1311_264(acc),
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_1311_265(acc)
            }
            [109, 97, 114] => lookup_1311_266(acc),
            [114, 97] => lookup_1311_267(acc),
            [115, 97, 115, 115, 97, 114, 105] => lookup_1311_268(acc),
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_1311_269(acc)
            }
            [103, 111, 114, 105, 122, 105, 97] => lookup_1311_270(acc),
            [117, 100, 105, 110, 101] => lookup_1311_271(acc),
            [118, 97, 108, 108, 101, 45, 100, 97, 111, 115, 116, 97] => lookup_1311_272(acc),
            [118, 97, 108, 108, 101, 45, 100, 45, 97, 111, 115, 116, 97] => lookup_1311_273(acc),
            [115, 105, 99, 105, 108, 105, 97] => lookup_1311_274(acc),
            [112, 97, 100, 117, 97] => lookup_1311_275(acc),
            [116, 114, 97, 112, 97, 110, 105] => lookup_1311_276(acc),
            [98, 97, 114, 105] => lookup_1311_277(acc),
            [116, 114, 101, 110, 116, 105, 110, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_1311_278(acc)
            }
            [114, 111] => lookup_1311_279(acc),
            [99, 97, 116, 97, 110, 122, 97, 114, 111] => lookup_1311_280(acc),
            [102, 111, 114, 108, 195, 172, 45, 99, 101, 115, 101, 110, 97] => lookup_1311_281(acc),
            [97, 113, 117, 105, 108, 97] => lookup_1311_282(acc),
            [120, 110, 45, 45, 102, 111, 114, 108, 45, 99, 101, 115, 101, 110, 97, 45, 102, 99, 98] => {
                lookup_1311_283(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_1311_284(acc)
            }
            [120, 110, 45, 45, 99, 101, 115, 101, 110, 97, 102, 111, 114, 108, 45, 105, 56, 97] => {
                lookup_1311_285(acc)
            }
            [97, 110, 100, 114, 105, 97, 45, 116, 114, 97, 110, 105, 45, 98, 97, 114, 108, 101, 116, 116, 97] => {
                lookup_1311_286(acc)
            }
            [102, 114, 105, 117, 108, 105, 118, 103, 105, 117, 108, 105, 97] => {
                lookup_1311_287(acc)
            }
            [120, 110, 45, 45, 98, 97, 108, 115, 97, 110, 45, 115, 100, 116, 105, 114, 111, 108, 45, 110, 115, 98] => {
                lookup_1311_288(acc)
            }
            [101, 110, 110, 97] => lookup_1311_289(acc),
            [108, 101, 99, 99, 111] => lookup_1311_290(acc),
            [108, 97, 113, 117, 105, 108, 97] => lookup_1311_291(acc),
            [97, 111] => lookup_1311_292(acc),
            [99, 104, 105, 101, 116, 105] => lookup_1311_293(acc),
            [118, 97, 108, 108, 195, 169, 101, 45, 97, 111, 115, 116, 101] => lookup_1311_294(acc),
            [98, 111, 122, 101, 110, 45, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_1311_295(acc)
            }
            [99, 111, 109, 111] => lookup_1311_296(acc),
            [98, 105, 101, 108, 108, 97] => lookup_1311_297(acc),
            [102, 114, 105, 117, 108, 105, 45, 118, 101, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_1311_298(acc)
            }
            [115, 97, 114, 100, 105, 110, 105, 97] => lookup_1311_299(acc),
            [98, 101, 108, 108, 117, 110, 111] => lookup_1311_300(acc),
            [99, 97, 114, 114, 97, 114, 97, 109, 97, 115, 115, 97] => lookup_1311_301(acc),
            [97, 113] => lookup_1311_302(acc),
            [98, 117, 108, 115, 97, 110, 45, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_1311_303(acc)
            }
            [120, 110, 45, 45, 118, 97, 108, 108, 101, 100, 97, 111, 115, 116, 101, 45, 101, 98, 98] => {
                lookup_1311_304(acc)
            }
            [103, 111] => lookup_1311_305(acc),
            [109, 115] => lookup_1311_306(acc),
            [110, 97] => lookup_1311_307(acc),
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 117, 101, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_1311_308(acc)
            }
            [110, 97, 112, 111, 108, 105] => lookup_1311_309(acc),
            [112, 111, 116, 101, 110, 122, 97] => lookup_1311_310(acc),
            [116, 114, 101, 118, 105, 115, 111] => lookup_1311_311(acc),
            [101, 110] => lookup_1311_312(acc),
            [98, 97, 108, 115, 97, 110] => lookup_1311_313(acc),
            [115, 115] => lookup_1311_314(acc),
            [116, 115] => lookup_1311_315(acc),
            [109, 105, 108, 97, 110] => lookup_1311_316(acc),
            [112, 97, 108, 101, 114, 109, 111] => lookup_1311_317(acc),
            [101, 109, 114] => lookup_1311_318(acc),
            [118, 118] => lookup_1311_319(acc),
            [97, 111, 115, 116, 97] => lookup_1311_320(acc),
            [118, 97, 108, 100, 45, 97, 111, 115, 116, 97] => lookup_1311_321(acc),
            [97, 118] => lookup_1311_322(acc),
            [108, 117] => lookup_1311_323(acc),
            [112, 105, 115, 116, 111, 105, 97] => lookup_1311_324(acc),
            [98, 97, 115] => lookup_1311_325(acc),
            [112, 117, 103, 108, 105, 97] => lookup_1311_326(acc),
            [98, 97] => lookup_1311_327(acc),
            [112, 110] => lookup_1311_328(acc),
            [99, 97, 103, 108, 105, 97, 114, 105] => lookup_1311_329(acc),
            [109, 110] => lookup_1311_330(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1311_331(acc),
            [102, 103] => lookup_1311_332(acc),
            [103, 114, 111, 115, 115, 101, 116, 111] => lookup_1311_333(acc),
            [116, 117, 114, 105, 110] => lookup_1311_334(acc),
            [102, 108, 111, 114, 101, 110, 99, 101] => lookup_1311_335(acc),
            [98, 117, 108, 115, 97, 110, 45, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_1311_336(acc)
            }
            [109, 116] => lookup_1311_337(acc),
            [116, 114, 101, 110, 116, 105, 110, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_1311_338(acc)
            }
            [112, 117, 103] => lookup_1311_339(acc),
            [116, 114, 101, 110, 116, 105, 110, 111] => lookup_1311_340(acc),
            [120, 110, 45, 45, 118, 97, 108, 108, 101, 45, 97, 111, 115, 116, 101, 45, 101, 98, 98] => {
                lookup_1311_341(acc)
            }
            [115, 111, 110, 100, 114, 105, 111] => lookup_1311_342(acc),
            [115, 118] => lookup_1311_343(acc),
            [103, 101] => lookup_1311_344(acc),
            [97, 110, 100, 114, 105, 97, 116, 114, 97, 110, 105, 98, 97, 114, 108, 101, 116, 116, 97] => {
                lookup_1311_345(acc)
            }
            [99, 101] => lookup_1311_346(acc),
            [102, 111, 114, 108, 105, 99, 101, 115, 101, 110, 97] => lookup_1311_347(acc),
            [98, 103] => lookup_1311_348(acc),
            [109, 101] => lookup_1311_349(acc),
            [112, 97, 118, 105, 97] => lookup_1311_350(acc),
            [103, 101, 110, 111, 97] => lookup_1311_351(acc),
            [112, 105, 101, 109, 111, 110, 116, 101] => lookup_1311_352(acc),
            [97, 111, 115, 116, 101] => lookup_1311_353(acc),
            [114, 103] => lookup_1311_354(acc),
            [116, 110] => lookup_1311_355(acc),
            [115, 97, 114, 100, 101, 103, 110, 97] => lookup_1311_356(acc),
            [116, 111, 115] => lookup_1311_357(acc),
            [97, 108, 116, 111, 45, 97, 100, 105, 103, 101] => lookup_1311_358(acc),
            [109, 111, 110, 122, 97, 101, 100, 101, 108, 108, 97, 98, 114, 105, 97, 110, 122, 97] => {
                lookup_1311_359(acc)
            }
            [109, 111, 110, 122, 97, 45, 98, 114, 105, 97, 110, 122, 97] => lookup_1311_360(acc),
            [111, 103] => lookup_1311_361(acc),
            [112, 97, 114, 109, 97] => lookup_1311_362(acc),
            [114, 101, 103, 103, 105, 111, 45, 101, 109, 105, 108, 105, 97] => lookup_1311_363(acc),
            [118, 97, 108, 108, 195, 169, 101, 45, 100, 45, 97, 111, 115, 116, 101] => {
                lookup_1311_364(acc)
            }
            [112, 114] => lookup_1311_365(acc),
            [116, 114, 97, 110, 105, 45, 98, 97, 114, 108, 101, 116, 116, 97, 45, 97, 110, 100, 114, 105, 97] => {
                lookup_1311_366(acc)
            }
            [103, 101, 110, 111, 118, 97] => lookup_1311_367(acc),
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 45, 115, 100, 116, 105, 114, 111, 108, 45, 55, 118, 98] => {
                lookup_1311_368(acc)
            }
            [108, 97, 122] => lookup_1311_369(acc),
            [98, 111] => lookup_1311_370(acc),
            [118, 97] => lookup_1311_371(acc),
            [116, 114, 97, 110, 105, 98, 97, 114, 108, 101, 116, 116, 97, 97, 110, 100, 114, 105, 97] => {
                lookup_1311_372(acc)
            }
            [118, 97, 108, 45, 100, 97, 111, 115, 116, 97] => lookup_1311_373(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_1311_374(acc)
            }
            [102, 114, 105, 117, 108, 105, 118, 101, 110, 101, 122, 105, 97, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_1311_375(acc)
            }
            [114, 97, 103, 117, 115, 97] => lookup_1311_376(acc),
            [99, 97, 114, 98, 111, 110, 105, 97, 45, 105, 103, 108, 101, 115, 105, 97, 115] => {
                lookup_1311_377(acc)
            }
            [100, 101, 108, 108, 45, 111, 103, 108, 105, 97, 115, 116, 114, 97] => {
                lookup_1311_378(acc)
            }
            [102, 111, 103, 103, 105, 97] => lookup_1311_379(acc),
            [98, 97, 108, 115, 97, 110, 45, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_1311_380(acc)
            }
            [99, 101, 115, 101, 110, 97, 102, 111, 114, 108, 105] => lookup_1311_381(acc),
            [98, 97, 114, 108, 101, 116, 116, 97, 116, 114, 97, 110, 105, 97, 110, 100, 114, 105, 97] => {
                lookup_1311_382(acc)
            }
            [102, 111, 114, 108, 105, 45, 99, 101, 115, 101, 110, 97] => lookup_1311_383(acc),
            [115, 111] => lookup_1311_384(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 117, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_1311_385(acc)
            }
            [112, 118] => lookup_1311_386(acc),
            [111, 114] => lookup_1311_387(acc),
            [97, 110, 100, 114, 105, 97, 45, 98, 97, 114, 108, 101, 116, 116, 97, 45, 116, 114, 97, 110, 105] => {
                lookup_1311_388(acc)
            }
            [109, 97, 99, 101, 114, 97, 116, 97] => lookup_1311_389(acc),
            [102, 114, 111, 115, 105, 110, 111, 110, 101] => lookup_1311_390(acc),
            [118, 97, 108, 108, 195, 169, 101, 97, 111, 115, 116, 101] => lookup_1311_391(acc),
            [97, 103, 114, 105, 103, 101, 110, 116, 111] => lookup_1311_392(acc),
            [112, 105, 115, 97] => lookup_1311_393(acc),
            [114, 101] => lookup_1311_394(acc),
            [102, 114, 105, 117, 108, 105, 45, 118, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_1311_395(acc)
            }
            [112, 101, 115, 99, 97, 114, 97] => lookup_1311_396(acc),
            [99, 105] => lookup_1311_397(acc),
            [115, 112] => lookup_1311_398(acc),
            [99, 101, 115, 101, 110, 97, 45, 102, 111, 114, 108, 195, 172] => lookup_1311_399(acc),
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 115, 100, 45, 116, 105, 114, 111, 108, 45, 54, 118, 98] => {
                lookup_1311_400(acc)
            }
            [118, 105, 116, 101, 114, 98, 111] => lookup_1311_401(acc),
            [115, 117, 101, 100, 116, 105, 114, 111, 108] => lookup_1311_402(acc),
            [116, 105, 109] => lookup_1311_403(info, labels, acc),
            [49, 54, 45, 98] => lookup_1311_404(acc),
            [98, 114, 105, 110, 100, 105, 115, 105] => lookup_1311_405(acc),
            [99, 97, 108] => lookup_1311_406(acc),
            [99, 101, 115, 101, 110, 97, 102, 111, 114, 108, 195, 172] => lookup_1311_407(acc),
            [101, 109, 105, 108, 105, 97, 45, 114, 111, 109, 97, 103, 110, 97] => {
                lookup_1311_408(acc)
            }
            [101, 109, 105, 108, 105, 97, 114, 111, 109, 97, 103, 110, 97] => lookup_1311_409(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 97, 108, 116, 111, 45, 97, 100, 105, 103, 101] => {
                lookup_1311_410(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 117, 101, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_1311_411(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_1311_412(acc)
            }
            [118, 97, 108, 108, 101, 100, 97, 111, 115, 116, 97] => lookup_1311_413(acc),
            [118, 97, 108, 45, 100, 45, 97, 111, 115, 116, 97] => lookup_1311_414(acc),
            [99, 97, 116, 97, 110, 105, 97] => lookup_1311_415(acc),
            [118, 97, 108, 100, 97, 111, 115, 116, 97] => lookup_1311_416(acc),
            [105, 109] => lookup_1311_417(acc),
            [102, 114, 105, 117, 108, 105, 118, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_1311_418(acc)
            }
            [102, 114, 105, 117, 108, 105, 45, 118, 103, 105, 117, 108, 105, 97] => {
                lookup_1311_419(acc)
            }
            [105, 115, 101, 114, 110, 105, 97] => lookup_1311_420(acc),
            [108, 101, 99, 99, 101] => lookup_1311_421(acc),
            [97, 98, 114] => lookup_1311_422(acc),
            [108, 111, 100, 105] => lookup_1311_423(acc),
            [118, 97, 108, 108, 101, 101, 97, 111, 115, 116, 101] => lookup_1311_424(acc),
            [118, 97, 108, 108, 101, 45, 97, 111, 115, 116, 97] => lookup_1311_425(acc),
            [108, 97, 116, 105, 110, 97] => lookup_1311_426(acc),
            [118, 97, 108, 108, 101, 100, 45, 97, 111, 115, 116, 97] => lookup_1311_427(acc),
            [97, 111, 115, 116, 97, 45, 118, 97, 108, 108, 101, 121] => lookup_1311_428(acc),
            [97, 115, 116, 105] => lookup_1311_429(acc),
            [120, 110, 45, 45, 98, 117, 108, 115, 97, 110, 45, 115, 100, 116, 105, 114, 111, 108, 45, 110, 115, 98] => {
                lookup_1311_430(acc)
            }
            [108, 117, 99, 99, 97] => lookup_1311_431(acc),
            [112, 97] => lookup_1311_432(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1312_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1312<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1312_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1313() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1314() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1315() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1316() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1317() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1318() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1319() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1320_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1320_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1320_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1320_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1320<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_1320_0(acc),
            [110, 101, 116] => lookup_1320_1(acc),
            [99, 111] => lookup_1320_2(acc),
            [111, 102] => lookup_1320_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1321() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1322() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1323_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1323_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1323_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1323_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1323_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1323_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1323_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1323_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1323_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1323_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1323<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_1323_0(acc),
            [97, 99] => lookup_1323_1(acc),
            [115, 99] => lookup_1323_2(acc),
            [111, 114, 103] => lookup_1323_3(acc),
            [105, 110, 102, 111] => lookup_1323_4(acc),
            [100, 101] => lookup_1323_5(acc),
            [110, 101, 116] => lookup_1323_6(acc),
            [99, 111] => lookup_1323_7(acc),
            [101, 100, 117] => lookup_1323_8(acc),
            [103, 111, 118] => lookup_1323_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1324() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1325() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1326() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1327() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1328() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1329() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1330_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1330_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1330_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1330_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1330_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1330_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1330_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1330_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1330<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 121, 109] => lookup_1330_0(acc),
            [101, 100, 117] => lookup_1330_1(acc),
            [111, 121] => lookup_1330_2(acc),
            [111, 114, 103] => lookup_1330_3(acc),
            [110, 101, 116] => lookup_1330_4(acc),
            [99, 111] => lookup_1330_5(acc),
            [99, 111, 109] => lookup_1330_6(acc),
            [103, 111, 118] => lookup_1330_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1331() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1332() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1333() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1334() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1335_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1335_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1335_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1335_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1335_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1335<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_1335_0(acc),
            [110, 101, 116] => lookup_1335_1(acc),
            [101, 100, 117] => lookup_1335_2(acc),
            [99, 111, 109] => lookup_1335_3(acc),
            [114, 97, 100, 105, 111] => lookup_1335_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1336() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1337() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1338() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1339() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1340_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1340_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1340_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1340_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100] => lookup_1340_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1340_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1340_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1340_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1340_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1340_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1340_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1340<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [48, 101] => lookup_1340_0(acc),
            [110, 111, 109] => lookup_1340_1(acc),
            [103, 118] => lookup_1340_2(labels, acc),
            [111, 114, 103] => lookup_1340_3(acc),
            [109, 105, 108] => lookup_1340_4(acc),
            [110, 101, 116] => lookup_1340_5(acc),
            [101, 100, 117] => lookup_1340_6(acc),
            [99, 111, 109] => lookup_1340_7(acc),
            [103, 111, 118] => lookup_1340_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1341() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1342() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1343() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1344() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1345_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1345_7<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1345_7_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1345_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 111, 98, 105] => lookup_1345_0(acc),
            [111, 114] => lookup_1345_1(acc),
            [110, 111, 109] => lookup_1345_2(acc),
            [115, 99] => lookup_1345_3(acc),
            [109, 101] => lookup_1345_4(acc),
            [103, 111] => lookup_1345_5(acc),
            [105, 110, 102, 111] => lookup_1345_6(acc),
            [99, 111] => lookup_1345_7(labels, acc),
            [110, 101] => lookup_1345_8(acc),
            [97, 99] => lookup_1345_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1346() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1347() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1348() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1349() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1350_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1350<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_1350_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1351() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1353() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1354() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1355() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1356() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1357() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1358() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1359_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1359_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1359_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 97, 101, 109, 111, 110] => lookup_1359_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1359_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1359_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1359_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1359_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1359<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_1359_0(acc),
            [112, 97, 110, 101, 108] => lookup_1359_1(labels, acc),
            [107, 97, 97, 115] => lookup_1359_2(acc),
            [99, 121, 97] => lookup_1359_3(acc),
            [110, 101, 116] => lookup_1359_4(acc),
            [99, 111] => lookup_1359_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1360() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1361() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1362() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1363() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1364_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1364_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1364_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1364_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1364_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1364_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1364_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1364_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1364_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1364_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1364_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1364_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1364_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1364_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1364_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1364_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1364_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1364_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1364_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_158(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_162(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_163<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 119, 112, 115, 112] => lookup_1364_163_0(acc),
            [107, 119, 112] => lookup_1364_163_1(acc),
            [117, 103] => lookup_1364_163_2(acc),
            [112, 115, 112] => lookup_1364_163_3(acc),
            [114, 122, 103, 119] => lookup_1364_163_4(acc),
            [111, 117, 109] => lookup_1364_163_5(acc),
            [112, 115, 115, 101] => lookup_1364_163_6(acc),
            [119, 105, 110, 98] => lookup_1364_163_7(acc),
            [103, 114, 105, 119] => lookup_1364_163_8(acc),
            [115, 100, 110] => lookup_1364_163_9(acc),
            [111, 105, 114, 109] => lookup_1364_163_10(acc),
            [115, 114] => lookup_1364_163_11(acc),
            [115, 111] => lookup_1364_163_12(acc),
            [105, 115] => lookup_1364_163_13(acc),
            [119, 122, 109, 105, 117, 119] => lookup_1364_163_14(acc),
            [117, 115] => lookup_1364_163_15(acc),
            [117, 109] => lookup_1364_163_16(acc),
            [119, 105, 116, 100] => lookup_1364_163_17(acc),
            [112, 111] => lookup_1364_163_18(acc),
            [119, 115, 107, 114] => lookup_1364_163_19(acc),
            [112, 105, 110, 98] => lookup_1364_163_20(acc),
            [109, 117, 112] => lookup_1364_163_21(acc),
            [119, 105, 119] => lookup_1364_163_22(acc),
            [97, 112] => lookup_1364_163_23(acc),
            [117, 119] => lookup_1364_163_24(acc),
            [109, 119] => lookup_1364_163_25(acc),
            [115, 107, 111] => lookup_1364_163_26(acc),
            [117, 122, 115] => lookup_1364_163_27(acc),
            [119, 115, 97] => lookup_1364_163_28(acc),
            [107, 111, 110, 115, 117, 108, 97, 116] => lookup_1364_163_29(acc),
            [119, 105, 102] => lookup_1364_163_30(acc),
            [105, 99] => lookup_1364_163_31(acc),
            [107, 109, 112, 115, 112] => lookup_1364_163_32(acc),
            [107, 112, 112, 115, 112] => lookup_1364_163_33(acc),
            [117, 103, 105, 109] => lookup_1364_163_34(acc),
            [112, 97] => lookup_1364_163_35(acc),
            [115, 97] => lookup_1364_163_36(acc),
            [112, 105, 119] => lookup_1364_163_37(acc),
            [122, 112] => lookup_1364_163_38(acc),
            [119, 117, 111, 122] => lookup_1364_163_39(acc),
            [117, 109, 105, 103] => lookup_1364_163_40(acc),
            [112, 117, 112] => lookup_1364_163_41(acc),
            [119, 105, 105, 104] => lookup_1364_163_42(acc),
            [115, 116, 97, 114, 111, 115, 116, 119, 111] => lookup_1364_163_43(acc),
            [117, 112, 111, 119] => lookup_1364_163_44(acc),
            [117, 112, 112, 111] => lookup_1364_163_45(acc),
            [119, 105, 111, 115] => lookup_1364_163_46(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1364_164(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_165(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_166(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_167(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_168(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_169(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_170(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_171(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364_172(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1364_173(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1364<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 97, 108, 111, 112, 111, 108, 115, 107, 97] => lookup_1364_0(acc),
            [114, 97, 119, 97, 45, 109, 97, 122] => lookup_1364_1(acc),
            [122, 97, 99, 104, 112, 111, 109, 111, 114] => lookup_1364_2(acc),
            [98, 97, 98, 105, 97, 45, 103, 111, 114, 97] => lookup_1364_3(acc),
            [99, 105, 101, 115, 122, 121, 110] => lookup_1364_4(acc),
            [114, 101, 108] => lookup_1364_5(acc),
            [112, 111, 100, 108, 97, 115, 105, 101] => lookup_1364_6(acc),
            [109, 105, 108] => lookup_1364_7(acc),
            [108, 101, 98, 111, 114, 107] => lookup_1364_8(acc),
            [115, 116, 97, 108, 111, 119, 97, 45, 119, 111, 108, 97] => lookup_1364_9(acc),
            [119, 108, 111, 99, 108, 97, 119, 101, 107] => lookup_1364_10(acc),
            [115, 104, 111, 112, 97, 114, 101, 110, 97] => lookup_1364_11(acc),
            [106, 103, 111, 114, 97] => lookup_1364_12(acc),
            [111, 108, 115, 122, 116, 121, 110] => lookup_1364_13(acc),
            [112, 111, 110, 105, 97, 116, 111, 119, 97] => lookup_1364_14(acc),
            [107, 114, 97, 107, 111, 119] => lookup_1364_15(acc),
            [109, 101, 100] => lookup_1364_16(acc),
            [109, 97, 122, 111, 119, 115, 122, 101] => lookup_1364_17(acc),
            [103, 110, 105, 101, 122, 110, 111] => lookup_1364_18(acc),
            [97, 117, 103, 117, 115, 116, 111, 119] => lookup_1364_19(acc),
            [112, 117, 108, 97, 119, 121] => lookup_1364_20(acc),
            [107, 111, 108, 111, 98, 114, 122, 101, 103] => lookup_1364_21(acc),
            [111, 115, 116, 114, 111, 100, 97] => lookup_1364_22(acc),
            [119, 108, 111, 99, 108] => lookup_1364_23(acc),
            [116, 97, 114, 103, 105] => lookup_1364_24(acc),
            [107, 101, 112, 110, 111] => lookup_1364_25(acc),
            [107, 97, 108, 105, 115, 122] => lookup_1364_26(acc),
            [103, 109, 105, 110, 97] => lookup_1364_27(acc),
            [107, 97, 115, 122, 117, 98, 121] => lookup_1364_28(acc),
            [109, 114, 97, 103, 111, 119, 111] => lookup_1364_29(acc),
            [115, 122, 99, 122, 121, 116, 110, 111] => lookup_1364_30(acc),
            [122, 103, 111, 114, 122, 101, 108, 101, 99] => lookup_1364_31(acc),
            [98, 111, 108, 101, 115, 108, 97, 119, 105, 101, 99] => lookup_1364_32(acc),
            [112, 99] => lookup_1364_33(acc),
            [108, 117, 98, 108, 105, 110] => lookup_1364_34(acc),
            [110, 111, 119, 97, 114, 117, 100, 97] => lookup_1364_35(acc),
            [115, 101, 120] => lookup_1364_36(acc),
            [114, 101, 97, 108, 101, 115, 116, 97, 116, 101] => lookup_1364_37(acc),
            [98, 105, 97, 108, 111, 119, 105, 101, 122, 97] => lookup_1364_38(acc),
            [108, 101, 122, 97, 106, 115, 107] => lookup_1364_39(acc),
            [108, 101, 99, 122, 110, 97] => lookup_1364_40(acc),
            [116, 109] => lookup_1364_41(acc),
            [122, 103, 111, 114, 97] => lookup_1364_42(acc),
            [97, 114, 116] => lookup_1364_43(acc),
            [107, 97, 122, 105, 109, 105, 101, 114, 122, 45, 100, 111, 108, 110, 121] => {
                lookup_1364_44(acc)
            }
            [106, 97, 119, 111, 114, 122, 110, 111] => lookup_1364_45(acc),
            [119, 97, 119] => lookup_1364_46(acc),
            [115, 111, 115] => lookup_1364_47(acc),
            [112, 114, 105, 118] => lookup_1364_48(acc),
            [115, 111, 112, 111, 116] => lookup_1364_49(acc),
            [101, 100, 117] => lookup_1364_50(acc),
            [112, 111, 109, 111, 114, 122, 101] => lookup_1364_51(acc),
            [105, 108, 97, 119, 97] => lookup_1364_52(acc),
            [109, 97, 122, 117, 114, 121] => lookup_1364_53(acc),
            [98, 105, 101, 108, 97, 119, 97] => lookup_1364_54(acc),
            [110, 121, 115, 97] => lookup_1364_55(acc),
            [99, 122, 101, 115, 116] => lookup_1364_56(acc),
            [99, 111, 109] => lookup_1364_57(acc),
            [114, 121, 98, 110, 105, 107] => lookup_1364_58(acc),
            [98, 105, 101, 115, 122, 99, 122, 97, 100, 121] => lookup_1364_59(acc),
            [119, 101, 103, 114, 111, 119] => lookup_1364_60(acc),
            [98, 101, 101, 112] => lookup_1364_61(acc),
            [119, 114, 111, 99] => lookup_1364_62(acc),
            [115, 111, 115, 110, 111, 119, 105, 101, 99] => lookup_1364_63(acc),
            [108, 117, 98, 105, 110] => lookup_1364_64(acc),
            [119, 97, 114, 109, 105, 97] => lookup_1364_65(acc),
            [98, 121, 116, 111, 109] => lookup_1364_66(acc),
            [108, 97, 112, 121] => lookup_1364_67(acc),
            [111, 108, 107, 117, 115, 122] => lookup_1364_68(acc),
            [109, 97, 108, 98, 111, 114, 107] => lookup_1364_69(acc),
            [112, 111, 100, 104, 97, 108, 101] => lookup_1364_70(acc),
            [115, 119, 105, 100, 110, 105, 99, 97] => lookup_1364_71(acc),
            [115, 119, 105, 110, 111, 117, 106, 115, 99, 105, 101] => lookup_1364_72(acc),
            [122, 97, 107, 111, 112, 97, 110, 101] => lookup_1364_73(acc),
            [103, 100, 97, 110, 115, 107] => lookup_1364_74(acc),
            [112, 114, 111, 99, 104, 111, 119, 105, 99, 101] => lookup_1364_75(acc),
            [103, 115, 109] => lookup_1364_76(acc),
            [107, 108, 111, 100, 122, 107, 111] => lookup_1364_77(acc),
            [111, 115, 116, 114, 111, 119, 119, 108, 107, 112] => lookup_1364_78(acc),
            [97, 117, 116, 111] => lookup_1364_79(acc),
            [110, 111, 109] => lookup_1364_80(acc),
            [115, 117, 119, 97, 108, 107, 105] => lookup_1364_81(acc),
            [108, 117, 98, 97, 114, 116, 111, 119] => lookup_1364_82(acc),
            [119, 111, 100, 122, 105, 115, 108, 97, 119] => lookup_1364_83(acc),
            [107, 111, 98, 105, 101, 114, 122, 121, 99, 101] => lookup_1364_84(acc),
            [101, 108, 98, 108, 97, 103] => lookup_1364_85(acc),
            [110, 105, 101, 114, 117, 99, 104, 111, 109, 111, 115, 99, 105] => lookup_1364_86(acc),
            [107, 114, 97, 115, 110, 105, 107] => lookup_1364_87(acc),
            [98, 101, 100, 122, 105, 110] => lookup_1364_88(acc),
            [107, 111, 110, 115, 107, 111, 119, 111, 108, 97] => lookup_1364_89(acc),
            [101, 108, 107] => lookup_1364_90(acc),
            [115, 119, 105, 101, 98, 111, 100, 122, 105, 110] => lookup_1364_91(acc),
            [111, 115, 116, 114, 111, 108, 101, 107, 97] => lookup_1364_92(acc),
            [112, 111, 122, 110, 97, 110] => lookup_1364_93(acc),
            [119, 97, 114, 115, 122, 97, 119, 97] => lookup_1364_94(acc),
            [105, 110, 102, 111] => lookup_1364_95(acc),
            [116, 111, 117, 114, 105, 115, 109] => lookup_1364_96(acc),
            [100, 108, 117, 103, 111, 108, 101, 107, 97] => lookup_1364_97(acc),
            [107, 111, 110, 105, 110] => lookup_1364_98(acc),
            [115, 116, 97, 114, 97, 99, 104, 111, 119, 105, 99, 101] => lookup_1364_99(acc),
            [98, 101, 115, 107, 105, 100, 121] => lookup_1364_100(acc),
            [107, 97, 114, 112, 97, 99, 122] => lookup_1364_101(acc),
            [116, 117, 114, 101, 107] => lookup_1364_102(acc),
            [122, 97, 114, 111, 119] => lookup_1364_103(acc),
            [109, 97, 105, 108] => lookup_1364_104(acc),
            [119, 114, 111, 99, 108, 97, 119] => lookup_1364_105(acc),
            [112, 114, 117, 115, 122, 107, 111, 119] => lookup_1364_106(acc),
            [117, 115, 116, 107, 97] => lookup_1364_107(acc),
            [115, 108, 97, 115, 107] => lookup_1364_108(acc),
            [115, 101, 106, 110, 121] => lookup_1364_109(acc),
            [109, 105, 101, 108, 101, 99] => lookup_1364_110(acc),
            [117, 110, 105, 99, 108, 111, 117, 100] => lookup_1364_111(acc),
            [99, 122, 101, 108, 97, 100, 122] => lookup_1364_112(acc),
            [111, 115, 116, 114, 111, 119, 105, 101, 99] => lookup_1364_113(acc),
            [111, 108, 97, 119, 97] => lookup_1364_114(acc),
            [114, 97, 100, 111, 109] => lookup_1364_115(acc),
            [107, 97, 116, 111, 119, 105, 99, 101] => lookup_1364_116(acc),
            [97, 103, 114, 111] => lookup_1364_117(acc),
            [109, 105, 101, 108, 110, 111] => lookup_1364_118(acc),
            [107, 101, 116, 114, 122, 121, 110] => lookup_1364_119(acc),
            [98, 121, 100, 103, 111, 115, 122, 99, 122] => lookup_1364_120(acc),
            [116, 114, 97, 118, 101, 108] => lookup_1364_121(acc),
            [111, 112, 111, 108, 101] => lookup_1364_122(acc),
            [115, 122, 99, 122, 101, 99, 105, 110] => lookup_1364_123(acc),
            [107, 117, 116, 110, 111] => lookup_1364_124(acc),
            [115, 119, 105, 100, 110, 105, 107] => lookup_1364_125(acc),
            [115, 108, 117, 112, 115, 107] => lookup_1364_126(acc),
            [103, 100, 97] => lookup_1364_127(acc),
            [109, 105, 97, 115, 116, 97] => lookup_1364_128(acc),
            [112, 114, 122, 101, 119, 111, 114, 115, 107] => lookup_1364_129(acc),
            [115, 116, 97, 114, 103, 97, 114, 100] => lookup_1364_130(acc),
            [103, 100, 121, 110, 105, 97] => lookup_1364_131(acc),
            [114, 122, 101, 115, 122, 111, 119] => lookup_1364_132(acc),
            [115, 104, 111, 112] => lookup_1364_133(acc),
            [116, 117, 114, 121, 115, 116, 121, 107, 97] => lookup_1364_134(acc),
            [108, 105, 109, 97, 110, 111, 119, 97] => lookup_1364_135(acc),
            [103, 114, 97, 106, 101, 119, 111] => lookup_1364_136(acc),
            [111, 112, 111, 99, 122, 110, 111] => lookup_1364_137(acc),
            [119, 97, 108, 98, 114, 122, 121, 99, 104] => lookup_1364_138(acc),
            [98, 105, 122] => lookup_1364_139(acc),
            [115, 107, 111, 99, 122, 111, 119] => lookup_1364_140(acc),
            [103, 108, 111, 103, 111, 119] => lookup_1364_141(acc),
            [116, 97, 114, 110, 111, 98, 114, 122, 101, 103] => lookup_1364_142(acc),
            [98, 105, 97, 108, 121, 115, 116, 111, 107] => lookup_1364_143(acc),
            [115, 107, 108, 101, 112] => lookup_1364_144(acc),
            [97, 116, 109] => lookup_1364_145(acc),
            [111, 114, 103] => lookup_1364_146(acc),
            [110, 97, 107, 108, 111] => lookup_1364_147(acc),
            [112, 105, 108, 97] => lookup_1364_148(acc),
            [112, 111, 109, 111, 114, 115, 107, 105, 101] => lookup_1364_149(acc),
            [110, 101, 116] => lookup_1364_150(acc),
            [112, 111, 108, 107, 111, 119, 105, 99, 101] => lookup_1364_151(acc),
            [112, 111, 119, 105, 97, 116] => lookup_1364_152(acc),
            [116, 121, 99, 104, 121] => lookup_1364_153(acc),
            [119, 111, 108, 111, 109, 105, 110] => lookup_1364_154(acc),
            [115, 122, 107, 111, 108, 97] => lookup_1364_155(acc),
            [103, 111, 114, 108, 105, 99, 101] => lookup_1364_156(acc),
            [116, 103, 111, 114, 121] => lookup_1364_157(acc),
            [119, 105, 101, 108, 117, 110] => lookup_1364_158(acc),
            [111, 108, 101, 99, 107, 111] => lookup_1364_159(acc),
            [108, 111, 109, 122, 97] => lookup_1364_160(acc),
            [115, 97, 110, 111, 107] => lookup_1364_161(acc),
            [97, 105, 100] => lookup_1364_162(acc),
            [103, 111, 118] => lookup_1364_163(labels, acc),
            [106, 101, 108, 101, 110, 105, 97, 45, 103, 111, 114, 97] => lookup_1364_164(acc),
            [108, 117, 107, 111, 119] => lookup_1364_165(acc),
            [122, 97, 103, 97, 110] => lookup_1364_166(acc),
            [107, 97, 114, 116, 117, 122, 121] => lookup_1364_167(acc),
            [108, 111, 119, 105, 99, 122] => lookup_1364_168(acc),
            [109, 101, 100, 105, 97] => lookup_1364_169(acc),
            [112, 105, 115, 122] => lookup_1364_170(acc),
            [108, 101, 103, 110, 105, 99, 97] => lookup_1364_171(acc),
            [99, 111] => lookup_1364_172(acc),
            [103, 108, 105, 119, 105, 99, 101] => lookup_1364_173(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1365_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1365_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1365_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1365_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1365_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1365_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1365<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_1365_0(acc),
            [110, 111, 109] => lookup_1365_1(acc),
            [110, 101, 116] => lookup_1365_2(acc),
            [101, 100, 117] => lookup_1365_3(acc),
            [99, 111, 109] => lookup_1365_4(acc),
            [103, 111, 118] => lookup_1365_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1366() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1367() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1368() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1369() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1370() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1371() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1372() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1373() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1374() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1375() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1376_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1376_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1376_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1376_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1376_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1376_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1376_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1376_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1376_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1376_8<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 121, 109, 97, 105, 108, 101, 114] => lookup_1376_8_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1376_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1376_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1376_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1376_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1376_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1376_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1376_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1376_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1376_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1376_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1376<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [117, 114, 108] => lookup_1376_0(acc),
            [105, 100, 118] => lookup_1376_1(acc),
            [231, 182, 178, 232, 183, 175] => lookup_1376_2(acc),
            [120, 110, 45, 45, 99, 122, 114, 119, 50, 56, 98] => lookup_1376_3(acc),
            [103, 97, 109, 101] => lookup_1376_4(acc),
            [109, 105, 108] => lookup_1376_5(acc),
            [120, 110, 45, 45, 122, 102, 48, 97, 111, 54, 52, 97] => lookup_1376_6(acc),
            [99, 108, 117, 98] => lookup_1376_7(acc),
            [99, 111, 109] => lookup_1376_8(labels, acc),
            [103, 111, 118] => lookup_1376_9(acc),
            [101, 98, 105, 122] => lookup_1376_10(acc),
            [231, 181, 132, 231, 185, 148] => lookup_1376_11(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1376_12(acc),
            [229, 149, 134, 230, 165, 173] => lookup_1376_13(acc),
            [111, 114, 103] => lookup_1376_14(acc),
            [120, 110, 45, 45, 117, 99, 48, 97, 116, 118] => lookup_1376_15(acc),
            [110, 101, 116] => lookup_1376_16(acc),
            [101, 100, 117] => lookup_1376_17(acc),
            [110, 121, 109] => lookup_1376_18(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1377() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1378() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1379() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1380() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1381_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1381_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1381_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1381_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1381_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [230, 148, 191, 229, 186, 156] => lookup_1381_0(acc),
            [231, 187, 132, 231, 185, 148] => lookup_1381_1(acc),
            [231, 189, 145, 231, 181, 161] => lookup_1381_2(acc),
            [120, 110, 45, 45, 53, 53, 113, 120, 53, 100] => lookup_1381_3(acc),
            [120, 110, 45, 45, 117, 99, 48, 97, 121, 52, 97] => lookup_1381_4(acc),
            [120, 110, 45, 45, 99, 105, 113, 112, 110] => lookup_1381_5(acc),
            [120, 110, 45, 45, 111, 100, 48, 97, 108, 103] => lookup_1381_6(acc),
            [120, 110, 45, 45, 109, 120, 116, 113, 49, 109] => lookup_1381_7(acc),
            [99, 111, 109] => lookup_1381_8(acc),
            [229, 128, 139, 228, 186, 186] => lookup_1381_9(acc),
            [120, 110, 45, 45, 109, 107, 48, 97, 120, 105] => lookup_1381_10(acc),
            [120, 110, 45, 45, 111, 100, 48, 97, 113, 51, 98] => lookup_1381_11(acc),
            [231, 181, 132, 231, 187, 135] => lookup_1381_12(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1381_13(acc),
            [120, 110, 45, 45, 116, 110, 48, 97, 103] => lookup_1381_14(acc),
            [111, 114, 103] => lookup_1381_15(acc),
            [230, 149, 153, 232, 130, 178] => lookup_1381_16(acc),
            [120, 110, 45, 45, 108, 99, 118, 114, 51, 50, 100] => lookup_1381_17(acc),
            [110, 101, 116] => lookup_1381_18(acc),
            [231, 174, 135, 228, 186, 186] => lookup_1381_19(acc),
            [231, 182, 178, 231, 187, 156] => lookup_1381_20(acc),
            [110, 121, 109] => lookup_1381_21(acc),
            [108, 116, 100] => lookup_1381_22(acc),
            [105, 100, 118] => lookup_1381_23(acc),
            [120, 110, 45, 45, 103, 109, 113, 48, 53, 48, 105] => lookup_1381_24(acc),
            [120, 110, 45, 45, 105, 111, 48, 97, 55, 105] => lookup_1381_25(acc),
            [120, 110, 45, 45, 119, 99, 118, 115, 50, 50, 100] => lookup_1381_26(acc),
            [120, 110, 45, 45, 122, 102, 48, 97, 118, 120] => lookup_1381_27(acc),
            [103, 111, 118] => lookup_1381_28(acc),
            [231, 182, 178, 231, 181, 161] => lookup_1381_29(acc),
            [115, 101, 99, 97, 97, 115] => lookup_1381_30(acc),
            [120, 110, 45, 45, 103, 109, 113, 119, 53, 97] => lookup_1381_31(acc),
            [231, 181, 132, 231, 185, 148] => lookup_1381_32(acc),
            [105, 110, 99] => lookup_1381_33(acc),
            [228, 184, 170, 228, 186, 186] => lookup_1381_34(acc),
            [229, 133, 172, 229, 143, 184] => lookup_1381_35(acc),
            [231, 189, 145, 231, 187, 156] => lookup_1381_36(acc),
            [230, 149, 142, 232, 130, 178] => lookup_1381_37(acc),
            [231, 187, 132, 231, 187, 135] => lookup_1381_38(acc),
            [120, 110, 45, 45, 117, 99, 48, 97, 116, 118] => lookup_1381_39(acc),
            [101, 100, 117] => lookup_1381_40(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1382() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1383() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1384() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1385() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1386() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1387() -> Info {
    Info {
        len: 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1388() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1389() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1390_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1390_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1390_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1390<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1390_0(acc),
            [110, 121, 109] => lookup_1390_1(acc),
            [103, 111, 118] => lookup_1390_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1391() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1392() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1393() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1394() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1395() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1396() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1397() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1398() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1399() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1400() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1401() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1402() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1403_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1403_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1403_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1403_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1403_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1403_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1403_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1403_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1403_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1403_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1403_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1403_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1403_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1403_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1403<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [106, 111, 122, 105] => lookup_1403_0(acc),
            [102, 111, 114, 45, 116, 104, 101] => lookup_1403_1(acc),
            [102, 111, 114, 45, 98, 101, 116, 116, 101, 114] => lookup_1403_2(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_1403_3(acc),
            [102, 111, 114, 45, 109, 111, 114, 101] => lookup_1403_4(acc),
            [119, 101, 98, 104, 111, 112] => lookup_1403_5(acc),
            [102, 111, 114, 45, 115, 111, 109, 101] => lookup_1403_6(acc),
            [111, 114, 120] => lookup_1403_7(acc),
            [109, 121, 102, 116, 112] => lookup_1403_8(acc),
            [109, 109, 97, 102, 97, 110] => lookup_1403_9(acc),
            [110, 111, 45, 105, 112] => lookup_1403_10(acc),
            [100, 121, 110, 100, 110, 115] => lookup_1403_11(acc),
            [100, 115, 99, 108, 111, 117, 100] => lookup_1403_12(acc),
            [115, 101, 108, 102, 105, 112] => lookup_1403_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1404() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1405_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1405_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1405<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 121, 102, 111, 114, 117, 109] => lookup_1405_0(acc),
            [114, 97, 118, 101, 110, 100, 98] => lookup_1405_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1406() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1408_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1408_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1408_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1408_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1408_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1408_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1408_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1408_4_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1408_4<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 111, 109, 101, 111, 102, 102, 105, 99, 101] => lookup_1408_4_0(acc),
            [115, 101, 114, 118, 105, 99, 101] => lookup_1408_4_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1408_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1408_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1408_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1408_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1408_8_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1408_8_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1408_8<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 117, 103] => lookup_1408_8_0(acc),
            [103, 108, 117, 103] => lookup_1408_8_1(acc),
            [108, 117, 103, 115] => lookup_1408_8_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1408_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1408_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1408_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1408_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1408_13_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1408_13_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1408_13_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1408_13_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1408_13_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [106] => lookup_1408_13_3_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1408_13_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1408_13_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1408_13_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1408_13_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1408_13_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1408_13_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116] => lookup_1408_13_8_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1408_13_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1408_13_9_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1408_13_9<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [118, 109] => lookup_1408_13_9_0(acc),
            [100, 104] => lookup_1408_13_9_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1408_13<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [119, 101, 108, 108, 98, 101, 105, 110, 103, 122, 111, 110, 101] => {
                lookup_1408_13_0(acc)
            }
            [98, 97, 114, 115, 121, 111, 110, 108, 105, 110, 101] => lookup_1408_13_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1408_13_2(acc),
            [108, 97, 121, 101, 114, 115, 104, 105, 102, 116] => {
                lookup_1408_13_3(info, labels, acc)
            }
            [98, 97, 114, 115, 121] => lookup_1408_13_4(acc),
            [110, 111, 45, 105, 112] => lookup_1408_13_5(acc),
            [110, 104, 45, 115, 101, 114, 118] => lookup_1408_13_6(acc),
            [103, 119, 105, 100, 100, 108, 101] => lookup_1408_13_7(acc),
            [114, 101, 116, 114, 111, 115, 110, 117, 98] => lookup_1408_13_8(info, labels, acc),
            [98, 121, 116, 101, 109, 97, 114, 107] => lookup_1408_13_9(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1408_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1408<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 111, 108, 105, 99, 101] => lookup_1408_0(acc),
            [109, 101] => lookup_1408_1(acc),
            [99, 111, 110, 110] => lookup_1408_2(acc),
            [115, 99, 104] => lookup_1408_3(info, labels, acc),
            [103, 111, 118] => lookup_1408_4(labels, acc),
            [97, 99] => lookup_1408_5(acc),
            [99, 111, 112, 114, 111] => lookup_1408_6(acc),
            [112, 108, 99] => lookup_1408_7(acc),
            [111, 114, 103] => lookup_1408_8(labels, acc),
            [98, 97, 114, 115, 121] => lookup_1408_9(acc),
            [108, 116, 100] => lookup_1408_10(acc),
            [110, 101, 116] => lookup_1408_11(acc),
            [112, 121, 109, 110, 116] => lookup_1408_12(acc),
            [99, 111] => lookup_1408_13(labels, acc),
            [110, 104, 115] => lookup_1408_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1409() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1410() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1411_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1411_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1411<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 109] => lookup_1411_0(acc),
            [97, 115, 115, 111] => lookup_1411_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1412() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1413_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_8_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_8_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [97, 109, 115, 49] => lookup_1413_8_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1413_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [106, 108, 115] => lookup_1413_8_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1413_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_22_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_22_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_22_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_22<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [106, 108, 115, 45, 115, 116, 111, 49] => lookup_1413_22_0(acc),
            [106, 108, 115, 45, 115, 116, 111, 50] => lookup_1413_22_1(acc),
            [106, 108, 115, 45, 115, 116, 111, 51] => lookup_1413_22_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1413_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_24_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_24<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [106] => lookup_1413_24_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1413_25_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_25_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_25_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [97, 116, 108] => lookup_1413_25_0_0(acc),
            [110, 106, 115] => lookup_1413_25_0_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1413_25<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_1413_25_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1413_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_29_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_29<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1413_29_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1413_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_35_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_35_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1413_35_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1413_35_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_35_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1413_35_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1413_35<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 112, 97, 97, 115] => lookup_1413_35_0(info, labels, acc),
            [104, 111, 115, 116, 105, 110, 103] => lookup_1413_35_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1413_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_38_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_38_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_38<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 114, 97, 49, 45, 100, 101] => lookup_1413_38_0(acc),
            [119, 101, 115, 116, 49, 45, 117, 115] => lookup_1413_38_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1413_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_40_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_40_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_40_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_40_0_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_40_0_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_40_0_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_40_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [115, 103, 45, 49] => lookup_1413_40_0_0(acc),
            [108, 111, 110, 45, 50] => lookup_1413_40_0_1(acc),
            [108, 111, 110, 45, 49] => lookup_1413_40_0_2(acc),
            [110, 121, 45, 49] => lookup_1413_40_0_3(acc),
            [102, 114, 45, 49] => lookup_1413_40_0_4(acc),
            [110, 121, 45, 50] => lookup_1413_40_0_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1413_40<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 97, 115] => lookup_1413_40_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1413_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 24usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_50_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_50_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_50<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 115, 105, 116, 101] => lookup_1413_50_0(acc),
            [115, 116, 111, 114, 97, 103, 101] => lookup_1413_50_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1413_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_60_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_60<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 97, 112] => lookup_1413_60_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1413_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_91_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_91<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 97, 103, 101, 115] => lookup_1413_91_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1413_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_106_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_106<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_1413_106_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1413_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_112_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_112_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_112<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 114, 100, 101, 115, 116, 101, 45, 105, 100, 99] => lookup_1413_112_0(acc),
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_1413_112_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1413_113_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_113_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_113_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [103, 108, 111, 98, 97, 108] => lookup_1413_113_0_0(acc),
            [97] => lookup_1413_113_0_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1413_113_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_113_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_113_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_113_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_113_3_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_113_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [103, 108, 111, 98, 97, 108] => lookup_1413_113_3_0(acc),
            [98] => lookup_1413_113_3_1(acc),
            [97] => lookup_1413_113_3_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1413_113<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [112, 114, 111, 100] => lookup_1413_113_0(info, labels, acc),
            [109, 97, 112] => lookup_1413_113_1(acc),
            [102, 114, 101, 101, 116, 108, 115] => lookup_1413_113_2(acc),
            [115, 115, 108] => lookup_1413_113_3(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1413_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_117_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_117_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_117<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [117, 115, 101, 114] => lookup_1413_117_0(acc),
            [115, 111, 99] => lookup_1413_117_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1413_118_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_118<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [117] => lookup_1413_118_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1413_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_130_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_130<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [114] => lookup_1413_130_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1413_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_133_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_133_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_133_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_133_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_133_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_133<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 15usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [119, 101, 115, 116, 117, 115, 50] => lookup_1413_133_0(acc),
            [101, 97, 115, 116, 117, 115, 50] => lookup_1413_133_1(acc),
            [119, 101, 115, 116, 101, 117, 114, 111, 112, 101] => lookup_1413_133_2(acc),
            [99, 101, 110, 116, 114, 97, 108, 117, 115] => lookup_1413_133_3(acc),
            [101, 97, 115, 116, 97, 115, 105, 97] => lookup_1413_133_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1413_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1413<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 114, 111, 109, 45, 97, 122] => lookup_1413_0(acc),
            [97, 122, 117, 114, 101, 119, 101, 98, 115, 105, 116, 101, 115] => lookup_1413_1(acc),
            [115, 121, 116, 101, 115] => lookup_1413_2(acc),
            [98, 97, 114, 49] => lookup_1413_3(acc),
            [98, 114, 111, 107, 101, 45, 105, 116] => lookup_1413_4(acc),
            [104, 111, 109, 101, 117, 110, 105, 120] => lookup_1413_5(acc),
            [109, 121, 102, 114, 105, 116, 122] => lookup_1413_6(acc),
            [102, 114, 111, 109, 45, 110, 121] => lookup_1413_7(acc),
            [100, 111, 99, 107, 116, 101, 114, 97] => lookup_1413_8(info, labels, acc),
            [98, 112, 108, 97, 99, 101, 100] => lookup_1413_9(acc),
            [102, 114, 111, 109, 45, 99, 111] => lookup_1413_10(acc),
            [110, 104, 108, 102, 97, 110] => lookup_1413_11(acc),
            [107, 114, 101, 108, 108, 105, 97, 110] => lookup_1413_12(acc),
            [104, 97, 109, 45, 114, 97, 100, 105, 111, 45, 111, 112] => lookup_1413_13(acc),
            [119, 101, 98, 104, 111, 112] => lookup_1413_14(acc),
            [98, 97, 114, 115, 121] => lookup_1413_15(acc),
            [111, 102, 102, 105, 99, 101, 45, 111, 110, 45, 116, 104, 101] => lookup_1413_16(acc),
            [99, 108, 105, 99, 50, 48, 48, 48] => lookup_1413_17(acc),
            [115, 101, 114, 118, 101, 98, 98, 115] => lookup_1413_18(acc),
            [112, 111, 100, 122, 111, 110, 101] => lookup_1413_19(acc),
            [100, 121, 110, 118, 54] => lookup_1413_20(acc),
            [98, 105, 116, 98, 114, 105, 100, 103, 101] => lookup_1413_21(acc),
            [101, 108, 97, 115, 116, 120] => lookup_1413_22(info, labels, acc),
            [116, 104, 114, 117, 104, 101, 114, 101] => lookup_1413_23(acc),
            [115, 99, 97, 108, 101, 102, 111, 114, 99, 101] => lookup_1413_24(info, labels, acc),
            [118, 112, 115, 45, 104, 111, 115, 116] => lookup_1413_25(info, labels, acc),
            [115, 113, 117, 97, 114, 101, 55] => lookup_1413_26(acc),
            [103, 98] => lookup_1413_27(acc),
            [98, 111, 117, 110, 99, 101, 109, 101] => lookup_1413_28(acc),
            [99, 114, 121, 112, 116, 111, 110, 111, 109, 105, 99] => {
                lookup_1413_29(info, labels, acc)
            }
            [115, 101, 105, 100, 97, 116] => lookup_1413_30(acc),
            [98, 111, 111, 109, 108, 97] => lookup_1413_31(acc),
            [116, 119, 109, 97, 105, 108] => lookup_1413_32(acc),
            [105, 110, 45, 116, 104, 101, 45, 98, 97, 110, 100] => lookup_1413_33(acc),
            [115, 101, 108, 108, 115, 45, 105, 116] => lookup_1413_34(acc),
            [111, 118, 104] => lookup_1413_35(info, labels, acc),
            [115, 105, 116, 101, 108, 101, 97, 102] => lookup_1413_36(acc),
            [100, 110, 115, 117, 112] => lookup_1413_37(acc),
            [99, 108, 111, 117, 100, 106, 105, 102, 102, 121] => lookup_1413_38(labels, acc),
            [104, 117] => lookup_1413_39(acc),
            [109, 97, 115, 115, 105, 118, 101, 103, 114, 105, 100] => {
                lookup_1413_40(info, labels, acc)
            }
            [109, 121, 109, 101, 100, 105, 97, 112, 99] => lookup_1413_41(acc),
            [114, 101, 100, 105, 114, 101, 99, 116, 109, 101] => lookup_1413_42(acc),
            [110, 111, 45, 105, 112] => lookup_1413_43(acc),
            [100, 110, 115, 97, 108, 105, 97, 115] => lookup_1413_44(acc),
            [112, 114, 105, 118, 97, 116, 105, 122, 101, 104, 101, 97, 108, 116, 104, 105, 110, 115, 117, 114, 97, 110, 99, 101] => {
                lookup_1413_45(acc)
            }
            [104, 111, 109, 101, 108, 105, 110, 117, 120] => lookup_1413_46(acc),
            [107, 110, 120, 45, 115, 101, 114, 118, 101, 114] => lookup_1413_47(acc),
            [100, 97, 116, 116, 111, 108, 111, 99, 97, 108] => lookup_1413_48(acc),
            [99, 108, 111, 117, 100, 121, 99, 108, 117, 115, 116, 101, 114] => lookup_1413_49(acc),
            [121, 97, 110, 100, 101, 120, 99, 108, 111, 117, 100] => lookup_1413_50(labels, acc),
            [98, 97, 114, 48] => lookup_1413_51(acc),
            [100, 111, 110, 116, 101, 120, 105, 115, 116] => lookup_1413_52(acc),
            [100, 115, 109, 121, 110, 97, 115] => lookup_1413_53(acc),
            [98, 108, 97, 99, 107, 98, 97, 117, 100, 99, 100, 110] => lookup_1413_54(acc),
            [107, 105, 110, 103, 104, 111, 115, 116] => lookup_1413_55(acc),
            [98, 97, 114, 50] => lookup_1413_56(acc),
            [115, 101] => lookup_1413_57(acc),
            [115, 101, 114, 118, 101, 109, 105, 110, 101, 99, 114, 97, 102, 116] => {
                lookup_1413_58(acc)
            }
            [100, 100, 110, 115] => lookup_1413_59(acc),
            [102, 97, 115, 116, 108, 121, 108, 98] => lookup_1413_60(labels, acc),
            [104, 111, 109, 101, 105, 112] => lookup_1413_61(acc),
            [99, 97, 115, 97, 99, 97, 109] => lookup_1413_62(acc),
            [105, 110, 45, 100, 115, 108] => lookup_1413_63(acc),
            [106, 112] => lookup_1413_64(acc),
            [105, 112, 105, 102, 111, 110, 121] => lookup_1413_65(acc),
            [118, 112, 110, 100, 110, 115] => lookup_1413_66(acc),
            [109, 121, 101, 102, 102, 101, 99, 116] => lookup_1413_67(acc),
            [100, 101, 98, 105, 97, 110] => lookup_1413_68(acc),
            [104, 111, 109, 101, 102, 116, 112] => lookup_1413_69(acc),
            [109, 101, 109, 115, 101, 116] => lookup_1413_70(acc),
            [99, 108, 111, 117, 100, 97, 112, 112] => lookup_1413_71(acc),
            [105, 110] => lookup_1413_72(acc),
            [101, 97, 116, 105, 110, 103, 45, 111, 114, 103, 97, 110, 105, 99] => {
                lookup_1413_73(acc)
            }
            [112, 103, 97, 102, 97, 110] => lookup_1413_74(acc),
            [102, 97, 115, 116, 98, 108, 111, 103] => lookup_1413_75(acc),
            [105, 111, 98, 98] => lookup_1413_76(acc),
            [116, 51, 108, 51, 112, 48, 114, 116] => lookup_1413_77(acc),
            [101, 110, 100, 111, 102, 105, 110, 116, 101, 114, 110, 101, 116] => {
                lookup_1413_78(acc)
            }
            [100, 101, 102, 105, 110, 105, 109, 97] => lookup_1413_79(acc),
            [98, 108, 111, 103, 100, 110, 115] => lookup_1413_80(acc),
            [99, 108, 105, 99, 107, 114, 105, 115, 105, 110, 103] => lookup_1413_81(acc),
            [115, 101, 110, 115, 101, 101, 114, 105, 110, 103] => lookup_1413_82(acc),
            [97, 122, 117, 114, 101, 45, 109, 111, 98, 105, 108, 101] => lookup_1413_83(acc),
            [115, 101, 114, 118, 101, 98, 108, 111, 103] => lookup_1413_84(acc),
            [100, 121, 110, 97, 108, 105, 97, 115] => lookup_1413_85(acc),
            [109, 121, 100, 97, 116, 116, 111] => lookup_1413_86(acc),
            [97, 116, 45, 98, 97, 110, 100, 45, 99, 97, 109, 112] => lookup_1413_87(acc),
            [109, 121, 100, 105, 115, 115, 101, 110, 116] => lookup_1413_88(acc),
            [107, 105, 99, 107, 115, 45, 97, 115, 115] => lookup_1413_89(acc),
            [122, 97] => lookup_1413_90(acc),
            [116, 111, 114, 112, 114, 111, 106, 101, 99, 116] => lookup_1413_91(labels, acc),
            [109, 101, 105, 110, 102, 111, 114, 117, 109] => lookup_1413_92(acc),
            [100, 110, 115, 100, 111, 106, 111] => lookup_1413_93(acc),
            [115, 101, 108, 102, 105, 112] => lookup_1413_94(acc),
            [111, 119, 110, 105, 112] => lookup_1413_95(acc),
            [99, 108, 111, 117, 100, 102, 117, 110, 99, 116, 105, 111, 110, 115] => {
                lookup_1413_96(acc)
            }
            [115, 99, 104, 111, 107, 111, 107, 101, 107, 115] => lookup_1413_97(acc),
            [99, 108, 111, 117, 100, 102, 114, 111, 110, 116] => lookup_1413_98(acc),
            [100, 121, 110, 117] => lookup_1413_99(acc),
            [99, 100, 110, 55, 55, 45, 115, 115, 108] => lookup_1413_100(acc),
            [105, 115, 45, 97, 45, 99, 104, 101, 102] => lookup_1413_101(acc),
            [115, 101, 114, 118, 101, 102, 116, 112] => lookup_1413_102(acc),
            [99, 100, 110, 45, 101, 100, 103, 101, 115] => lookup_1413_103(acc),
            [109, 121, 115, 101, 99, 117, 114, 105, 116, 121, 99, 97, 109, 101, 114, 97] => {
                lookup_1413_104(acc)
            }
            [102, 114, 111, 109, 45, 108, 97] => lookup_1413_105(acc),
            [116, 115, 117, 107, 97, 101, 114, 117] => lookup_1413_106(info, labels, acc),
            [109, 121, 112, 115, 120] => lookup_1413_107(acc),
            [114, 97, 99, 107, 109, 97, 122, 101] => lookup_1413_108(acc),
            [115, 116, 97, 116, 105, 99, 45, 97, 99, 99, 101, 115, 115] => lookup_1413_109(acc),
            [102, 108, 121, 110, 110, 104, 111, 115, 116, 105, 110, 103] => lookup_1413_110(acc),
            [97, 108, 119, 97, 121, 115, 100, 97, 116, 97] => lookup_1413_111(acc),
            [115, 97, 118, 101, 105, 110, 99, 108, 111, 117, 100] => {
                lookup_1413_112(info, labels, acc)
            }
            [102, 97, 115, 116, 108, 121] => lookup_1413_113(info, labels, acc),
            [102, 101, 115, 116, 101, 45, 105, 112] => lookup_1413_114(acc),
            [117, 107] => lookup_1413_115(acc),
            [110, 111, 119, 45, 100, 110, 115] => lookup_1413_116(acc),
            [115, 114, 99, 102] => lookup_1413_117(info, labels, acc),
            [99, 104, 97, 110, 110, 101, 108, 115, 100, 118, 114] => lookup_1413_118(labels, acc),
            [105, 115, 97, 45, 103, 101, 101, 107] => lookup_1413_119(acc),
            [99, 111, 109, 109, 117, 110, 105, 116, 121, 45, 112, 114, 111] => lookup_1413_120(acc),
            [97, 100, 111, 98, 101, 97, 101, 109, 99, 108, 111, 117, 100] => lookup_1413_121(acc),
            [101, 100, 103, 101, 97, 112, 112] => lookup_1413_122(acc),
            [100, 121, 110, 97, 116, 104, 111, 109, 101] => lookup_1413_123(acc),
            [98, 117, 121, 115, 104, 111, 117, 115, 101, 115] => lookup_1413_124(acc),
            [117, 110, 105, 53] => lookup_1413_125(acc),
            [104, 105, 99, 97, 109] => lookup_1413_126(acc),
            [115, 99, 114, 97, 112, 112, 101, 114, 45, 115, 105, 116, 101] => lookup_1413_127(acc),
            [102, 97, 109, 105, 108, 121, 100, 115] => lookup_1413_128(acc),
            [100, 111, 101, 115, 45, 105, 116] => lookup_1413_129(acc),
            [99, 100, 110, 55, 55] => lookup_1413_130(info, labels, acc),
            [103, 101, 116, 115, 45, 105, 116] => lookup_1413_131(acc),
            [114, 117] => lookup_1413_132(acc),
            [97, 122, 117, 114, 101, 115, 116, 97, 116, 105, 99, 97, 112, 112, 115] => {
                lookup_1413_133(labels, acc)
            }
            [102, 105, 114, 101, 119, 97, 108, 108, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_1413_134(acc)
            }
            [105, 115, 45, 97, 45, 103, 101, 101, 107] => lookup_1413_135(acc),
            [109, 111, 111, 110, 115, 99, 97, 108, 101] => lookup_1413_136(acc),
            [99, 108, 111, 117, 100, 97, 99, 99, 101, 115, 115] => lookup_1413_137(acc),
            [105, 110, 45, 118, 112, 110] => lookup_1413_138(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1414_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1414_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1414_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1414_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1414_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1414_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1414_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1414_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1414_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1414<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 121, 109] => lookup_1414_0(acc),
            [122, 97] => lookup_1414_1(acc),
            [110, 111, 109] => lookup_1414_2(acc),
            [111, 114, 103] => lookup_1414_3(acc),
            [103, 115, 106] => lookup_1414_4(acc),
            [110, 101, 116] => lookup_1414_5(acc),
            [101, 100, 117] => lookup_1414_6(acc),
            [99, 111, 109] => lookup_1414_7(acc),
            [103, 111, 118] => lookup_1414_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1415_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1415_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1415<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 115, 99, 108, 111, 117, 100] => lookup_1415_0(acc),
            [98, 97, 114, 115, 121] => lookup_1415_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1416_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1416_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1416_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1416_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1416_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1416_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1416_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1416<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 101, 118, 101, 108, 111, 112, 109, 101, 110, 116] => lookup_1416_0(acc),
            [99, 111, 100, 101] => lookup_1416_1(info, labels, acc),
            [114, 101, 112, 108] => lookup_1416_2(acc),
            [104, 115] => lookup_1416_3(acc),
            [114, 97, 118, 101, 110, 100, 98] => lookup_1416_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1417() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1418() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1419() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1420_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1420_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1420_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1420_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1420_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1420_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1420<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_1420_0(acc),
            [97, 99] => lookup_1420_1(acc),
            [112, 114, 101, 115, 115] => lookup_1420_2(acc),
            [110, 101, 116] => lookup_1420_3(acc),
            [99, 111] => lookup_1420_4(acc),
            [103, 111, 118] => lookup_1420_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1421() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1422_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1422<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1422_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1423() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1424() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1425() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1426() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1427() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1428_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1428_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1428_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1428_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1428<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_1428_0(acc),
            [110, 101, 116] => lookup_1428_1(acc),
            [99, 111] => lookup_1428_2(acc),
            [99, 111, 109] => lookup_1428_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1429() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1430() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1431() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1432() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1434() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1435() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1436() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1437() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1438() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1439() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1440() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1441() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1442() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1443() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1444() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1445() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1447() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1449() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1450() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1451() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1452() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1453() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1454() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1455() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1456() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1457() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1458() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1459() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1460() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1461_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1461_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1461_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1461_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1461_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1461_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1461_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1461_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1461_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1461_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1461_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1461_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1461_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1461_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1461_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1461_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1461_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1461_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1461_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1461_19_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1461_19<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1461_19_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1461<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 108] => lookup_1461_0(acc),
            [98, 99] => lookup_1461_1(acc),
            [97, 98] => lookup_1461_2(acc),
            [110, 102] => lookup_1461_3(acc),
            [110, 111, 45, 105, 112] => lookup_1461_4(acc),
            [110, 117] => lookup_1461_5(acc),
            [103, 99] => lookup_1461_6(acc),
            [109, 98] => lookup_1461_7(acc),
            [112, 101] => lookup_1461_8(acc),
            [121, 107] => lookup_1461_9(acc),
            [110, 115] => lookup_1461_10(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1461_11(acc),
            [111, 110] => lookup_1461_12(acc),
            [98, 97, 114, 115, 121] => lookup_1461_13(acc),
            [110, 98] => lookup_1461_14(acc),
            [115, 107] => lookup_1461_15(acc),
            [113, 99] => lookup_1461_16(acc),
            [99, 111] => lookup_1461_17(acc),
            [110, 116] => lookup_1461_18(acc),
            [97, 119, 100, 101, 118] => lookup_1461_19(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1462_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1462_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1462_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1462_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1462_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1462_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1462_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1462_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1462_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1462_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1462<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_1462_0(acc),
            [115, 99, 104] => lookup_1462_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1462_2(acc),
            [110, 111, 109] => lookup_1462_3(acc),
            [109, 105, 108] => lookup_1462_4(acc),
            [111, 114, 103] => lookup_1462_5(acc),
            [110, 101, 116] => lookup_1462_6(acc),
            [110, 97, 109, 101] => lookup_1462_7(acc),
            [101, 100, 117] => lookup_1462_8(acc),
            [99, 111, 109] => lookup_1462_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1463() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1464() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1465() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1466_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1466_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1466<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 114, 97, 110, 115, 108, 97, 116, 101] => lookup_1466_0(acc),
            [99, 108, 111, 117, 100] => lookup_1466_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1467() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1468_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1468_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1468_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1468_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1468_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1468_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1468<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 108] => lookup_1468_0(acc),
            [111, 114, 103] => lookup_1468_1(acc),
            [110, 101, 116] => lookup_1468_2(acc),
            [101, 100, 117] => lookup_1468_3(acc),
            [99, 111, 109] => lookup_1468_4(acc),
            [103, 111, 118] => lookup_1468_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1469_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1469_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1469_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1469_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1469_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1469<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_1469_0(acc),
            [110, 101, 116] => lookup_1469_1(acc),
            [101, 100, 117] => lookup_1469_2(acc),
            [99, 111, 109] => lookup_1469_3(acc),
            [103, 111, 118] => lookup_1469_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1470() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1471() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1472_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1472_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1472_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1472_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1472_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1472<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_1472_0(acc),
            [110, 101, 116] => lookup_1472_1(acc),
            [101, 100, 117] => lookup_1472_2(acc),
            [99, 111, 109] => lookup_1472_3(acc),
            [103, 111, 118] => lookup_1472_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1473_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1473_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1473_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1473_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1473<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1473_0(acc),
            [99, 97, 97] => lookup_1473_1(acc),
            [110, 111, 109] => lookup_1473_2(acc),
            [110, 121, 109] => lookup_1473_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1474() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1475_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1475_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1475_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1475_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [102, 105] => lookup_1475_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1475_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1475_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1475_4_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1475_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 97, 115] => lookup_1475_4_0(acc),
            [100, 101, 109, 111] => lookup_1475_4_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1475_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1475_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1475_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1475<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 104, 107, 107, 105, 110, 101, 110, 45, 53, 119, 97] => {
                lookup_1475_0(acc)
            }
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1475_1(acc),
            [99, 108, 111, 117, 100, 112, 108, 97, 116, 102, 111, 114, 109] => {
                lookup_1475_2(info, labels, acc)
            }
            [105, 107, 105] => lookup_1475_3(acc),
            [100, 97, 116, 97, 99, 101, 110, 116, 101, 114] => lookup_1475_4(info, labels, acc),
            [97, 108, 97, 110, 100] => lookup_1475_5(acc),
            [100, 121] => lookup_1475_6(acc),
            [104, 195, 164, 107, 107, 105, 110, 101, 110] => lookup_1475_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1476() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1477() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1478_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1478_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1478_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1478_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1478_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1478_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1478_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1478_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1478_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1478_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1478_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1478<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 111, 115, 116, 105, 110, 103, 45, 99, 108, 117, 115, 116, 101, 114] => {
                lookup_1478_0(acc)
            }
            [116, 114, 97, 110, 115, 117, 114, 108] => lookup_1478_1(info, labels, acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1478_2(acc),
            [97, 109, 115, 119] => lookup_1478_3(acc),
            [118, 105, 114, 116, 117, 101, 101, 108, 100, 111, 109, 101, 105, 110] => {
                lookup_1478_4(acc)
            }
            [107, 104, 112, 108, 97, 121] => lookup_1478_5(acc),
            [99, 111] => lookup_1478_6(acc),
            [99, 105, 115, 116, 114, 111, 110] => lookup_1478_7(acc),
            [100, 101, 109, 111, 110] => lookup_1478_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1479_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1479<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1479_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1480_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1480_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1480_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1480_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1480_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1480_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1480_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1480_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1480_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1480_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1480<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [114, 101, 99] => lookup_1480_0(acc),
            [97, 114, 116, 115] => lookup_1480_1(acc),
            [115, 116, 111, 114, 101] => lookup_1480_2(acc),
            [119, 101, 98] => lookup_1480_3(acc),
            [105, 110, 102, 111] => lookup_1480_4(acc),
            [111, 116, 104, 101, 114] => lookup_1480_5(acc),
            [110, 101, 116] => lookup_1480_6(acc),
            [112, 101, 114] => lookup_1480_7(acc),
            [99, 111, 109] => lookup_1480_8(acc),
            [102, 105, 114, 109] => lookup_1480_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1481_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1481_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1481_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1481_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1481_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1481_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1481<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 108] => lookup_1481_0(acc),
            [111, 114, 103] => lookup_1481_1(acc),
            [110, 101, 116] => lookup_1481_2(acc),
            [101, 100, 117] => lookup_1481_3(acc),
            [99, 111, 109] => lookup_1481_4(acc),
            [103, 111, 118] => lookup_1481_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1482() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1483() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1484() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1485() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1486_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1486<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_1486_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1487_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1487<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 109] => lookup_1487_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1488_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1488_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1488_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1488_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1488_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1488_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1488_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1488<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 105, 108] => lookup_1488_0(acc),
            [110, 111, 109] => lookup_1488_1(acc),
            [97, 112, 114, 101, 110, 100, 101, 109, 97, 115] => lookup_1488_2(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1488_3(acc),
            [99, 111] => lookup_1488_4(acc),
            [103, 111, 98] => lookup_1488_5(acc),
            [103, 111, 118] => lookup_1488_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1489() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1490_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1490_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1490_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1490_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1490_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1490_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1490_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1490_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1490<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1490_0(acc),
            [110, 111, 109] => lookup_1490_1(acc),
            [109, 105, 108] => lookup_1490_2(acc),
            [111, 114, 103] => lookup_1490_3(acc),
            [110, 101, 116] => lookup_1490_4(acc),
            [101, 100, 117] => lookup_1490_5(acc),
            [99, 111, 109] => lookup_1490_6(acc),
            [103, 111, 118] => lookup_1490_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1491() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1492() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1493() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1494() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1495_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1495<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 111, 114, 106] => lookup_1495_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1496_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1496_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1496_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1496<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 108, 101, 115, 107] => lookup_1496_0(acc),
            [112, 114, 118, 99, 121] => lookup_1496_1(acc),
            [112, 100, 110, 115] => lookup_1496_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1497() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1498() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1499() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1500() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1501() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1502() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1503() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1504_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1504_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1504_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1504_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1504_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1504_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1504_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1504_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1504_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1504_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1504_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1504_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1504_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1504_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1504_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1504_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1504_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1504_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1504_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1504_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1504_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1504_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1504_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1504_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1504_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1504_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1504_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1504_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1504_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1504_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1504_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1504_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1504<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [114, 101, 107, 108, 97, 109] => lookup_1504_0(acc),
            [103, 97, 109, 101, 115] => lookup_1504_1(acc),
            [115, 104, 111, 112] => lookup_1504_2(acc),
            [105, 110, 102, 111] => lookup_1504_3(acc),
            [101, 114, 111, 116, 105, 99, 97] => lookup_1504_4(acc),
            [99, 105, 116, 121] => lookup_1504_5(acc),
            [116, 111, 122, 115, 100, 101] => lookup_1504_6(acc),
            [99, 97, 115, 105, 110, 111] => lookup_1504_7(acc),
            [50, 48, 48, 48] => lookup_1504_8(acc),
            [97, 103, 114, 97, 114] => lookup_1504_9(acc),
            [111, 114, 103] => lookup_1504_10(acc),
            [102, 111, 114, 117, 109] => lookup_1504_11(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1504_12(acc),
            [118, 105, 100, 101, 111] => lookup_1504_13(acc),
            [115, 122, 101, 120] => lookup_1504_14(acc),
            [105, 110, 103, 97, 116, 108, 97, 110] => lookup_1504_15(acc),
            [117, 116, 97, 122, 97, 115] => lookup_1504_16(acc),
            [110, 101, 119, 115] => lookup_1504_17(acc),
            [98, 111, 108, 116] => lookup_1504_18(acc),
            [115, 101, 120] => lookup_1504_19(acc),
            [108, 97, 107, 97, 115] => lookup_1504_20(acc),
            [106, 111, 103, 97, 115, 122] => lookup_1504_21(acc),
            [116, 109] => lookup_1504_22(acc),
            [101, 114, 111, 116, 105, 107, 97] => lookup_1504_23(acc),
            [115, 117, 108, 105] => lookup_1504_24(acc),
            [104, 111, 116, 101, 108] => lookup_1504_25(acc),
            [115, 112, 111, 114, 116] => lookup_1504_26(acc),
            [109, 101, 100, 105, 97] => lookup_1504_27(acc),
            [112, 114, 105, 118] => lookup_1504_28(acc),
            [102, 105, 108, 109] => lookup_1504_29(acc),
            [99, 111] => lookup_1504_30(acc),
            [107, 111, 110, 121, 118, 101, 108, 111] => lookup_1504_31(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1505() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1506() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1507_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1507_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1507_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1507_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1507_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1507<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_1507_0(acc),
            [110, 101, 116] => lookup_1507_1(acc),
            [101, 100, 117] => lookup_1507_2(acc),
            [99, 111, 109] => lookup_1507_3(acc),
            [103, 111, 118] => lookup_1507_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1508_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1508<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 102, 102, 105, 99, 105, 97, 108] => lookup_1508_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1509() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1510() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1511() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1512() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1513() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1514() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1515() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1516() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1517() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1518() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1519() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1520_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1520_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1520_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1520_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1520_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1520_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1520_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1520_6_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1520_6_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1520_6_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1520_6<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [98, 99] => lookup_1520_6_0(acc),
            [117, 115] => lookup_1520_6_1(acc),
            [101, 110, 116] => lookup_1520_6_2(acc),
            [101, 117] => lookup_1520_6_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1520_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1520_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1520_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1520_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1520<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [119, 101, 100, 101, 112, 108, 111, 121] => lookup_1520_0(acc),
            [104, 97, 115, 104, 98, 97, 110, 103] => lookup_1520_1(acc),
            [110, 111, 119] => lookup_1520_2(acc),
            [111, 114, 103] => lookup_1520_3(acc),
            [109, 105, 108] => lookup_1520_4(acc),
            [98, 105, 112] => lookup_1520_5(acc),
            [112, 108, 97, 116, 102, 111, 114, 109] => lookup_1520_6(info, labels, acc),
            [110, 101, 116] => lookup_1520_7(acc),
            [118, 120, 108] => lookup_1520_8(acc),
            [99, 111, 109] => lookup_1520_9(acc),
            [103, 111, 118] => lookup_1520_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1521() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1522() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1523() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1524_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1524<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 111, 114] => lookup_1524_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1525_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1525_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1525_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1525_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1525_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1525_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1525_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1525_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1525<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_1525_0(acc),
            [120, 120] => lookup_1525_1(acc),
            [110, 111, 109] => lookup_1525_2(acc),
            [111, 114, 103] => lookup_1525_3(acc),
            [110, 101, 116] => lookup_1525_4(acc),
            [99, 111] => lookup_1525_5(acc),
            [99, 111, 109] => lookup_1525_6(acc),
            [101, 100, 117] => lookup_1525_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1526() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1527() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_0_0(acc),
            [99, 99] => lookup_1528_0_1(acc),
            [107, 49, 50] => lookup_1528_0_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_1_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_1_0(acc),
            [99, 99] => lookup_1528_1_1(acc),
            [107, 49, 50] => lookup_1528_1_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1528_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_3_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_3<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_3_0(acc),
            [99, 99] => lookup_1528_3_1(acc),
            [107, 49, 50] => lookup_1528_3_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1528_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_5_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_5<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_5_0(acc),
            [99, 99] => lookup_1528_5_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1528_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_7_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_7_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_7<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_7_0(acc),
            [99, 99] => lookup_1528_7_1(acc),
            [107, 49, 50] => lookup_1528_7_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_8_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_8_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_8<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_8_0(acc),
            [99, 99] => lookup_1528_8_1(acc),
            [107, 49, 50] => lookup_1528_8_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_9<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1528_9_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_11_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_11_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_11_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_11<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_11_0(acc),
            [99, 99] => lookup_1528_11_1(acc),
            [107, 49, 50] => lookup_1528_11_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_13_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_13_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_13_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_13<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_13_0(acc),
            [99, 99] => lookup_1528_13_1(acc),
            [107, 49, 50] => lookup_1528_13_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_14_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_14_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_14_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_14<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_14_0(acc),
            [99, 99] => lookup_1528_14_1(acc),
            [107, 49, 50] => lookup_1528_14_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_15_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_15_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_15_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_15<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_15_0(acc),
            [99, 99] => lookup_1528_15_1(acc),
            [107, 49, 50] => lookup_1528_15_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_16_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_16_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_16_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_16<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_16_0(acc),
            [99, 99] => lookup_1528_16_1(acc),
            [107, 49, 50] => lookup_1528_16_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_17_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_17_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_17_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_17<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_17_0(acc),
            [99, 99] => lookup_1528_17_1(acc),
            [107, 49, 50] => lookup_1528_17_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1528_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1528_20_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_20_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_20_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_20<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_20_0(acc),
            [99, 99] => lookup_1528_20_1(acc),
            [107, 49, 50] => lookup_1528_20_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1528_22_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1528_22<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [112, 104, 120] => lookup_1528_22_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_23_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_23_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_23_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_23<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_23_0(acc),
            [99, 99] => lookup_1528_23_1(acc),
            [107, 49, 50] => lookup_1528_23_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_25_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_25_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_25_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_25<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_25_0(acc),
            [99, 99] => lookup_1528_25_1(acc),
            [107, 49, 50] => lookup_1528_25_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1528_27_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_27_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_27_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_27<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_27_0(acc),
            [99, 99] => lookup_1528_27_1(acc),
            [107, 49, 50] => lookup_1528_27_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_28_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1528_28_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_28_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_28<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_28_0(acc),
            [99, 99] => lookup_1528_28_1(acc),
            [107, 49, 50] => lookup_1528_28_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_29_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_29_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_29_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_29<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_29_0(acc),
            [99, 99] => lookup_1528_29_1(acc),
            [107, 49, 50] => lookup_1528_29_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_30_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_30_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_30_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_30<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_30_0(acc),
            [99, 99] => lookup_1528_30_1(acc),
            [107, 49, 50] => lookup_1528_30_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_31_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_31_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_31_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_31_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_31_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_31_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_31_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_31_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_31_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_31_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_31_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_31<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 103] => lookup_1528_31_0(acc),
            [108, 105, 98] => lookup_1528_31_1(acc),
            [99, 99] => lookup_1528_31_2(acc),
            [101, 97, 116, 111, 110] => lookup_1528_31_3(acc),
            [107, 49, 50] => lookup_1528_31_4(acc),
            [109, 117, 115] => lookup_1528_31_5(acc),
            [103, 101, 110] => lookup_1528_31_6(acc),
            [116, 101, 99] => lookup_1528_31_7(acc),
            [97, 110, 110, 45, 97, 114, 98, 111, 114] => lookup_1528_31_8(acc),
            [100, 115, 116] => lookup_1528_31_9(acc),
            [119, 97, 115, 104, 116, 101, 110, 97, 119] => lookup_1528_31_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_32_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_32_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_32_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_32<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_32_0(acc),
            [99, 99] => lookup_1528_32_1(acc),
            [107, 49, 50] => lookup_1528_32_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_33_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_33_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_33_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_33<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_33_0(acc),
            [99, 99] => lookup_1528_33_1(acc),
            [107, 49, 50] => lookup_1528_33_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1528_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1528_36_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_36_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_36<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_36_0(acc),
            [99, 99] => lookup_1528_36_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1528_38_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_38_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_38_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_38<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_38_0(acc),
            [99, 99] => lookup_1528_38_1(acc),
            [107, 49, 50] => lookup_1528_38_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_39_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_39_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_39_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_39<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_39_0(acc),
            [99, 99] => lookup_1528_39_1(acc),
            [107, 49, 50] => lookup_1528_39_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_40_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_40_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_40_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_40<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_40_0(acc),
            [99, 99] => lookup_1528_40_1(acc),
            [107, 49, 50] => lookup_1528_40_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_41_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_41_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_41<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_41_0(acc),
            [99, 99] => lookup_1528_41_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_42_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_42_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_42_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_42<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_42_0(acc),
            [99, 99] => lookup_1528_42_1(acc),
            [107, 49, 50] => lookup_1528_42_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_43_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_43_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_43_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_43<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_43_0(acc),
            [99, 99] => lookup_1528_43_1(acc),
            [107, 49, 50] => lookup_1528_43_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_44_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_44_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_44_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_44<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_44_0(acc),
            [99, 99] => lookup_1528_44_1(acc),
            [107, 49, 50] => lookup_1528_44_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_45_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_45_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_45_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_45<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_45_0(acc),
            [99, 99] => lookup_1528_45_1(acc),
            [107, 49, 50] => lookup_1528_45_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_46_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_46_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_46_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_46<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_46_0(acc),
            [99, 99] => lookup_1528_46_1(acc),
            [107, 49, 50] => lookup_1528_46_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_47_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_47_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_47_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_47<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_47_0(acc),
            [99, 99] => lookup_1528_47_1(acc),
            [107, 49, 50] => lookup_1528_47_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_48_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_48_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_48_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_48<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_48_0(acc),
            [99, 99] => lookup_1528_48_1(acc),
            [107, 49, 50] => lookup_1528_48_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_49_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_49_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_49_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_49<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_49_0(acc),
            [99, 99] => lookup_1528_49_1(acc),
            [107, 49, 50] => lookup_1528_49_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_50_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_50_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_50_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_50<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_50_0(acc),
            [99, 99] => lookup_1528_50_1(acc),
            [107, 49, 50] => lookup_1528_50_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_51_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_51_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_51_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_51<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_51_0(acc),
            [99, 99] => lookup_1528_51_1(acc),
            [107, 49, 50] => lookup_1528_51_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_52_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_52_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_52_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_52<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_52_0(acc),
            [99, 99] => lookup_1528_52_1(acc),
            [107, 49, 50] => lookup_1528_52_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_53_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_53_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_53_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_53<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_53_0(acc),
            [99, 99] => lookup_1528_53_1(acc),
            [107, 49, 50] => lookup_1528_53_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_54_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_54_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_54_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_54<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_54_0(acc),
            [99, 99] => lookup_1528_54_1(acc),
            [107, 49, 50] => lookup_1528_54_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_55_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_55_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_55_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_55<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_55_0(acc),
            [99, 99] => lookup_1528_55_1(acc),
            [107, 49, 50] => lookup_1528_55_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_57_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_57_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_57_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_57<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_57_0(acc),
            [99, 99] => lookup_1528_57_1(acc),
            [107, 49, 50] => lookup_1528_57_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_58_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_58_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_58_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_58<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_58_0(acc),
            [99, 99] => lookup_1528_58_1(acc),
            [107, 49, 50] => lookup_1528_58_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_59_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_59_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_59_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_59<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_59_0(acc),
            [99, 99] => lookup_1528_59_1(acc),
            [107, 49, 50] => lookup_1528_59_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1528_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_62_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_62_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_62_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_62<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_62_0(acc),
            [99, 99] => lookup_1528_62_1(acc),
            [107, 49, 50] => lookup_1528_62_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_63_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_63_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_63_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_63<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_63_0(acc),
            [99, 99] => lookup_1528_63_1(acc),
            [107, 49, 50] => lookup_1528_63_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_64_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_64_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_64_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_64<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_64_0(acc),
            [99, 99] => lookup_1528_64_1(acc),
            [107, 49, 50] => lookup_1528_64_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_65_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_65_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_65_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_65_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_65_2_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_65_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 97, 114, 111, 99, 104] => lookup_1528_65_2_0(acc),
            [99, 104, 116, 114] => lookup_1528_65_2_1(acc),
            [112, 118, 116] => lookup_1528_65_2_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_65<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_65_0(acc),
            [99, 99] => lookup_1528_65_1(acc),
            [107, 49, 50] => lookup_1528_65_2(labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_66_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_66_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_66_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_66<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_66_0(acc),
            [99, 99] => lookup_1528_66_1(acc),
            [107, 49, 50] => lookup_1528_66_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_67_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_67_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_67_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_67<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_67_0(acc),
            [99, 99] => lookup_1528_67_1(acc),
            [107, 49, 50] => lookup_1528_67_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_68_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_68_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_68_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_68<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_68_0(acc),
            [99, 99] => lookup_1528_68_1(acc),
            [107, 49, 50] => lookup_1528_68_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_69_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_69_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_69<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_69_0(acc),
            [99, 99] => lookup_1528_69_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1528_71_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_71_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_71_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_71<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_71_0(acc),
            [99, 99] => lookup_1528_71_1(acc),
            [107, 49, 50] => lookup_1528_71_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528_72_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_72_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_72_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528_72<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98] => lookup_1528_72_0(acc),
            [99, 99] => lookup_1528_72_1(acc),
            [107, 49, 50] => lookup_1528_72_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1528<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 104] => lookup_1528_0(labels, acc),
            [105, 110] => lookup_1528_1(labels, acc),
            [108, 97, 110, 100, 45, 52, 45, 115, 97, 108, 101] => lookup_1528_2(acc),
            [119, 105] => lookup_1528_3(labels, acc),
            [109, 105, 114, 99, 108, 111, 117, 100] => lookup_1528_4(acc),
            [114, 105] => lookup_1528_5(labels, acc),
            [102, 114, 101, 101, 100, 100, 110, 115] => lookup_1528_6(acc),
            [108, 97] => lookup_1528_7(labels, acc),
            [97, 115] => lookup_1528_8(labels, acc),
            [119, 118] => lookup_1528_9(labels, acc),
            [100, 110, 105] => lookup_1528_10(acc),
            [99, 97] => lookup_1528_11(labels, acc),
            [110, 115, 110] => lookup_1528_12(acc),
            [109, 110] => lookup_1528_13(labels, acc),
            [103, 117] => lookup_1528_14(labels, acc),
            [110, 99] => lookup_1528_15(labels, acc),
            [107, 121] => lookup_1528_16(labels, acc),
            [119, 121] => lookup_1528_17(labels, acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_1528_18(acc),
            [105, 115, 45, 98, 121] => lookup_1528_19(acc),
            [109, 116] => lookup_1528_20(labels, acc),
            [100, 114, 117, 100] => lookup_1528_21(acc),
            [101, 110, 115, 99, 97, 108, 101, 100] => lookup_1528_22(info, labels, acc),
            [100, 99] => lookup_1528_23(labels, acc),
            [107, 105, 100, 115] => lookup_1528_24(acc),
            [116, 110] => lookup_1528_25(labels, acc),
            [112, 108, 97, 116, 116, 101, 114, 112] => lookup_1528_26(acc),
            [109, 101] => lookup_1528_27(labels, acc),
            [100, 101] => lookup_1528_28(labels, acc),
            [102, 108] => lookup_1528_29(labels, acc),
            [97, 108] => lookup_1528_30(labels, acc),
            [109, 105] => lookup_1528_31(labels, acc),
            [97, 122] => lookup_1528_32(labels, acc),
            [110, 118] => lookup_1528_33(labels, acc),
            [103, 111, 108, 102, 102, 97, 110] => lookup_1528_34(acc),
            [110, 111, 105, 112] => lookup_1528_35(acc),
            [110, 100] => lookup_1528_36(labels, acc),
            [112, 111, 105, 110, 116, 116, 111] => lookup_1528_37(acc),
            [112, 114] => lookup_1528_38(labels, acc),
            [116, 120] => lookup_1528_39(labels, acc),
            [118, 97] => lookup_1528_40(labels, acc),
            [104, 105] => lookup_1528_41(labels, acc),
            [107, 115] => lookup_1528_42(labels, acc),
            [111, 107] => lookup_1528_43(labels, acc),
            [105, 108] => lookup_1528_44(labels, acc),
            [110, 101] => lookup_1528_45(labels, acc),
            [118, 105] => lookup_1528_46(labels, acc),
            [119, 97] => lookup_1528_47(labels, acc),
            [111, 114] => lookup_1528_48(labels, acc),
            [97, 107] => lookup_1528_49(labels, acc),
            [109, 111] => lookup_1528_50(labels, acc),
            [105, 97] => lookup_1528_51(labels, acc),
            [110, 106] => lookup_1528_52(labels, acc),
            [115, 99] => lookup_1528_53(labels, acc),
            [105, 100] => lookup_1528_54(labels, acc),
            [99, 116] => lookup_1528_55(labels, acc),
            [102, 101, 100] => lookup_1528_56(acc),
            [110, 109] => lookup_1528_57(labels, acc),
            [110, 121] => lookup_1528_58(labels, acc),
            [110, 104] => lookup_1528_59(labels, acc),
            [103, 114, 97, 112, 104, 111, 120] => lookup_1528_60(acc),
            [105, 115, 97] => lookup_1528_61(acc),
            [109, 115] => lookup_1528_62(labels, acc),
            [117, 116] => lookup_1528_63(labels, acc),
            [103, 97] => lookup_1528_64(labels, acc),
            [109, 97] => lookup_1528_65(labels, acc),
            [118, 116] => lookup_1528_66(labels, acc),
            [97, 114] => lookup_1528_67(labels, acc),
            [112, 97] => lookup_1528_68(labels, acc),
            [115, 100] => lookup_1528_69(labels, acc),
            [115, 116, 117, 102, 102, 45, 52, 45, 115, 97, 108, 101] => lookup_1528_70(acc),
            [109, 100] => lookup_1528_71(labels, acc),
            [99, 111] => lookup_1528_72(labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1529() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1530() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1531_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1531_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1531_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1531_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1531_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1531_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1531_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1531_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1531<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_1531_0(acc),
            [110, 101, 116] => lookup_1531_1(acc),
            [111, 114, 103] => lookup_1531_2(acc),
            [105, 110, 102, 111] => lookup_1531_3(acc),
            [110, 97, 109, 101] => lookup_1531_4(acc),
            [101, 100, 117] => lookup_1531_5(acc),
            [99, 111, 109] => lookup_1531_6(acc),
            [103, 111, 118] => lookup_1531_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1532() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1533_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1533_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1533_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1533_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1533_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1533_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1533_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1533_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1533_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1533<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1533_0(acc),
            [105, 110] => lookup_1533_1(acc),
            [111, 114] => lookup_1533_2(acc),
            [111, 110, 108, 105, 110, 101] => lookup_1533_3(acc),
            [115, 104, 111, 112] => lookup_1533_4(acc),
            [103, 111] => lookup_1533_5(acc),
            [110, 101, 116] => lookup_1533_6(acc),
            [99, 111] => lookup_1533_7(acc),
            [109, 105] => lookup_1533_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1534() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1535() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1536_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1536_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1536_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1536_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1536_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1536_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1536_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1536_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1536_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1536_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1536_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1536_11_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1536_11<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1536_11_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1536_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1536_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1536_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1536<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 101, 108, 117, 120] => lookup_1536_0(acc),
            [102, 110, 119, 107] => lookup_1536_1(acc),
            [109, 105, 110, 116, 101, 114, 101] => lookup_1536_2(acc),
            [111, 109, 110, 105, 119, 101] => lookup_1536_3(acc),
            [102, 97, 115, 116, 118, 112, 115] => lookup_1536_4(acc),
            [115, 114, 104, 116] => lookup_1536_5(acc),
            [98, 121, 101, 110] => lookup_1536_6(acc),
            [106, 101, 108, 101] => lookup_1536_7(acc),
            [102, 111, 108, 105, 111, 110, 101, 116, 119, 111, 114, 107] => lookup_1536_8(acc),
            [108, 111, 103, 105, 110, 108, 105, 110, 101] => lookup_1536_9(acc),
            [98, 97, 114, 115, 121] => lookup_1536_10(acc),
            [112, 108, 97, 116, 102, 111, 114, 109, 115, 104] => lookup_1536_11(info, labels, acc),
            [99, 108, 111, 117, 100, 101, 114, 97] => lookup_1536_12(acc),
            [99, 121, 111, 110] => lookup_1536_13(acc),
            [111, 112, 101, 110, 115, 111, 99, 105, 97, 108] => lookup_1536_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1537() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1538() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1539() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1540() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1541() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1542_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1542_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1542_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1542_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1542_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1542_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1542_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1542<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_1542_0(acc),
            [109, 105, 108] => lookup_1542_1(acc),
            [99, 111, 111, 112] => lookup_1542_2(acc),
            [111, 114, 103] => lookup_1542_3(acc),
            [110, 101, 116] => lookup_1542_4(acc),
            [99, 111] => lookup_1542_5(acc),
            [97, 99] => lookup_1542_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1543() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1544() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1545() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1546() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1547() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1548() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1549() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1550() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1551() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1552() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1553() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1554() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1555() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1556() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1557() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1558() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1559() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1560() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1561() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1562() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1563() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1564() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1565() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1566_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1566_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1566_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1566_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1566_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1566_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1566_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1566_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1566_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1566_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1566_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1566_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1566_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1566_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1566_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1566_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1566_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1566<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [114, 101, 108] => lookup_1566_0(acc),
            [115, 104, 111, 112] => lookup_1566_1(acc),
            [105, 110, 102, 111] => lookup_1566_2(acc),
            [103, 111, 117, 118] => lookup_1566_3(acc),
            [97, 114, 116] => lookup_1566_4(acc),
            [112, 111, 108] => lookup_1566_5(acc),
            [112, 114, 111] => lookup_1566_6(acc),
            [99, 111, 109] => lookup_1566_7(acc),
            [109, 101, 100] => lookup_1566_8(acc),
            [112, 101, 114, 115, 111] => lookup_1566_9(acc),
            [111, 114, 103] => lookup_1566_10(acc),
            [99, 111, 111, 112] => lookup_1566_11(acc),
            [97, 115, 115, 111] => lookup_1566_12(acc),
            [110, 101, 116] => lookup_1566_13(acc),
            [101, 100, 117] => lookup_1566_14(acc),
            [97, 100, 117, 108, 116] => lookup_1566_15(acc),
            [102, 105, 114, 109] => lookup_1566_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1567() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1568() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1569() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1570_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1570<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1570_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1571() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1572_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1572_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1572_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1572_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1572_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1572_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1572_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1572_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1572_0(acc),
            [105, 110] => lookup_1572_1(acc),
            [112, 112] => lookup_1572_2(acc),
            [100, 111, 110, 101, 116, 115, 107] => lookup_1572_3(acc),
            [99, 120] => lookup_1572_4(acc),
            [99, 118] => lookup_1572_5(acc),
            [118, 111, 108, 121, 110] => lookup_1572_6(acc),
            [99, 114, 105, 109, 101, 97] => lookup_1572_7(acc),
            [110, 105, 107, 111, 108, 97, 101, 118] => lookup_1572_8(acc),
            [115, 101, 98, 97, 115, 116, 111, 112, 111, 108] => lookup_1572_9(acc),
            [99, 107] => lookup_1572_10(acc),
            [107, 104, 109, 101, 108, 110, 105, 116, 115, 107, 105, 121] => lookup_1572_11(acc),
            [107, 105, 101, 118] => lookup_1572_12(acc),
            [118, 110] => lookup_1572_13(acc),
            [105, 118, 97, 110, 111, 45, 102, 114, 97, 110, 107, 105, 118, 115, 107] => {
                lookup_1572_14(acc)
            }
            [108, 117, 103, 97, 110, 115, 107] => lookup_1572_15(acc),
            [107, 105, 114, 111, 118, 111, 103, 114, 97, 100] => lookup_1572_16(acc),
            [108, 103] => lookup_1572_17(acc),
            [100, 112] => lookup_1572_18(acc),
            [111, 100, 101, 115, 115, 97] => lookup_1572_19(acc),
            [111, 100] => lookup_1572_20(acc),
            [112, 108] => lookup_1572_21(acc),
            [114, 111, 118, 110, 111] => lookup_1572_22(acc),
            [118, 105, 110, 110, 121, 116, 115, 105, 97] => lookup_1572_23(acc),
            [107, 104] => lookup_1572_24(acc),
            [107, 118] => lookup_1572_25(acc),
            [100, 110] => lookup_1572_26(acc),
            [109, 107] => lookup_1572_27(acc),
            [107, 109] => lookup_1572_28(acc),
            [99, 114] => lookup_1572_29(acc),
            [122, 104, 105, 116, 111, 109, 105, 114] => lookup_1572_30(acc),
            [107, 104, 97, 114, 107, 105, 118] => lookup_1572_31(acc),
            [99, 104, 101, 114, 110, 111, 118, 116, 115, 121] => lookup_1572_32(acc),
            [99, 99] => lookup_1572_33(acc),
            [99, 104, 101, 114, 107, 97, 115, 115, 121] => lookup_1572_34(acc),
            [122, 97, 112, 111, 114, 105, 122, 104, 122, 104, 105, 97] => lookup_1572_35(acc),
            [101, 100, 117] => lookup_1572_36(acc),
            [115, 98] => lookup_1572_37(acc),
            [108, 118] => lookup_1572_38(acc),
            [107, 121, 105, 118] => lookup_1572_39(acc),
            [108, 116] => lookup_1572_40(acc),
            [107, 115] => lookup_1572_41(acc),
            [115, 101, 118, 97, 115, 116, 111, 112, 111, 108] => lookup_1572_42(acc),
            [116, 101] => lookup_1572_43(acc),
            [122, 97, 112, 111, 114, 105, 122, 104, 122, 104, 101] => lookup_1572_44(acc),
            [112, 111, 108, 116, 97, 118, 97] => lookup_1572_45(acc),
            [122, 116] => lookup_1572_46(acc),
            [99, 110] => lookup_1572_47(acc),
            [99, 111, 109] => lookup_1572_48(acc),
            [111, 100, 101, 115, 97] => lookup_1572_49(acc),
            [121, 97, 108, 116, 97] => lookup_1572_50(acc),
            [98, 105, 122] => lookup_1572_51(acc),
            [100, 110, 101, 112, 114, 111, 112, 101, 116, 114, 111, 118, 115, 107] => {
                lookup_1572_52(acc)
            }
            [111, 114, 103] => lookup_1572_53(acc),
            [118, 105, 110, 110, 105, 99, 97] => lookup_1572_54(acc),
            [99, 104, 101, 114, 110, 105, 103, 111, 118] => lookup_1572_55(acc),
            [108, 116, 100] => lookup_1572_56(acc),
            [110, 101, 116] => lookup_1572_57(acc),
            [99, 104, 101, 114, 107, 97, 115, 121] => lookup_1572_58(acc),
            [107, 114] => lookup_1572_59(acc),
            [115, 109] => lookup_1572_60(acc),
            [118] => lookup_1572_61(acc),
            [99, 104, 101, 114, 110, 105, 104, 105, 118] => lookup_1572_62(acc),
            [115, 117, 109, 121] => lookup_1572_63(acc),
            [114, 105, 118, 110, 101] => lookup_1572_64(acc),
            [116, 101, 114, 110, 111, 112, 105, 108] => lookup_1572_65(acc),
            [99, 104, 101, 114, 110, 105, 118, 116, 115, 105] => lookup_1572_66(acc),
            [122, 112] => lookup_1572_67(acc),
            [103, 111, 118] => lookup_1572_68(acc),
            [117, 122] => lookup_1572_69(acc),
            [117, 122, 104, 103, 111, 114, 111, 100] => lookup_1572_70(acc),
            [105, 110, 102] => lookup_1572_71(acc),
            [107, 114, 121, 109] => lookup_1572_72(acc),
            [105, 102] => lookup_1572_73(acc),
            [108, 118, 105, 118] => lookup_1572_74(acc),
            [100, 110, 105, 112, 114, 111, 112, 101, 116, 114, 111, 118, 115, 107] => {
                lookup_1572_75(acc)
            }
            [109, 121, 107, 111, 108, 97, 105, 118] => lookup_1572_76(acc),
            [107, 104, 101, 114, 115, 111, 110] => lookup_1572_77(acc),
            [108, 117, 116, 115, 107] => lookup_1572_78(acc),
            [107, 104, 97, 114, 107, 111, 118] => lookup_1572_79(acc),
            [107, 104, 109, 101, 108, 110, 121, 116, 115, 107, 121, 105] => lookup_1572_80(acc),
            [114, 118] => lookup_1572_81(acc),
            [122, 104, 121, 116, 111, 109, 121, 114] => lookup_1572_82(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1573_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1573_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1573_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1573_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1573_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1573_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1573<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 54, 54] => lookup_1573_0(acc),
            [108, 105, 109, 97] => lookup_1573_1(acc),
            [104, 115] => lookup_1573_2(acc),
            [116, 114, 105, 116, 111, 110] => lookup_1573_3(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1574_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1574_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1574_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1574_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1574_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1574_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1574<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_1574_0(acc),
            [111, 114, 103] => lookup_1574_1(acc),
            [110, 101, 116] => lookup_1574_2(acc),
            [101, 100, 117] => lookup_1574_3(acc),
            [99, 111, 109] => lookup_1574_4(acc),
            [103, 111, 118] => lookup_1574_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1575() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1576() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1577_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1577_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1577_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1577_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1577_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1577_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1577<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_1577_0(acc),
            [117, 119, 117] => lookup_1577_1(acc),
            [110, 101, 116] => lookup_1577_2(acc),
            [110, 111, 109] => lookup_1577_3(acc),
            [99, 111, 109] => lookup_1577_4(acc),
            [111, 102, 102] => lookup_1577_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1578() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1579<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [118, 108, 97, 100, 105, 107, 97, 118, 107, 97, 122] => lookup_1579_0(acc),
            [118, 111, 108, 111, 103, 100, 97] => lookup_1579_1(acc),
            [107, 97, 114, 97, 103, 97, 110, 100, 97] => lookup_1579_2(acc),
            [97, 100, 121, 103, 101, 121, 97] => lookup_1579_3(acc),
            [107, 97, 108, 109, 121, 107, 105, 97] => lookup_1579_4(acc),
            [97, 114, 109, 101, 110, 105, 97] => lookup_1579_5(acc),
            [118, 108, 97, 100, 105, 109, 105, 114] => lookup_1579_6(acc),
            [109, 115, 107] => lookup_1579_7(acc),
            [115, 111, 99, 104, 105] => lookup_1579_8(acc),
            [103, 114, 111, 122, 110, 121] => lookup_1579_9(acc),
            [97, 107, 116, 121, 117, 98, 105, 110, 115, 107] => lookup_1579_10(acc),
            [105, 118, 97, 110, 111, 118, 111] => lookup_1579_11(acc),
            [106, 97, 109, 98, 121, 108] => lookup_1579_12(acc),
            [107, 97, 114, 101, 108, 105, 97] => lookup_1579_13(acc),
            [110, 111, 114, 116, 104, 45, 107, 97, 122, 97, 107, 104, 115, 116, 97, 110] => {
                lookup_1579_14(acc)
            }
            [116, 97, 115, 104, 107, 101, 110, 116] => lookup_1579_15(acc),
            [116, 117, 118, 97] => lookup_1579_16(acc),
            [100, 97, 103, 101, 115, 116, 97, 110] => lookup_1579_17(acc),
            [110, 111, 118] => lookup_1579_18(acc),
            [98, 97, 108, 97, 115, 104, 111, 118] => lookup_1579_19(acc),
            [101, 97, 115, 116, 45, 107, 97, 122, 97, 107, 104, 115, 116, 97, 110] => {
                lookup_1579_20(acc)
            }
            [109, 111, 114, 100, 111, 118, 105, 97] => lookup_1579_21(acc),
            [107, 104, 97, 107, 97, 115, 115, 105, 97] => lookup_1579_22(acc),
            [110, 97, 118, 111, 105] => lookup_1579_23(acc),
            [112, 111, 107, 114, 111, 118, 115, 107] => lookup_1579_24(acc),
            [110, 121, 109] => lookup_1579_25(acc),
            [97, 115, 104, 103, 97, 98, 97, 100] => lookup_1579_26(acc),
            [98, 114, 121, 97, 110, 115, 107] => lookup_1579_27(acc),
            [107, 97, 114, 97, 99, 111, 108] => lookup_1579_28(acc),
            [116, 101, 114, 109, 101, 122] => lookup_1579_29(acc),
            [99, 104, 105, 109, 107, 101, 110, 116] => lookup_1579_30(acc),
            [110, 97, 108, 99, 104, 105, 107] => lookup_1579_31(acc),
            [107, 114, 97, 115, 110, 111, 100, 97, 114] => lookup_1579_32(acc),
            [116, 111, 103, 108, 105, 97, 116, 116, 105] => lookup_1579_33(acc),
            [98, 97, 115, 104, 107, 105, 114, 105, 97] => lookup_1579_34(acc),
            [103, 101, 111, 114, 103, 105, 97] => lookup_1579_35(acc),
            [107, 117, 115, 116, 97, 110, 97, 105] => lookup_1579_36(acc),
            [108, 101, 110, 117, 103] => lookup_1579_37(acc),
            [109, 117, 114, 109, 97, 110, 115, 107] => lookup_1579_38(acc),
            [116, 115, 101, 108, 105, 110, 111, 103, 114, 97, 100] => lookup_1579_39(acc),
            [98, 117, 107, 104, 97, 114, 97] => lookup_1579_40(acc),
            [107, 117, 114, 103, 97, 110] => lookup_1579_41(acc),
            [111, 98, 110, 105, 110, 115, 107] => lookup_1579_42(acc),
            [116, 114, 111, 105, 116, 115, 107] => lookup_1579_43(acc),
            [97, 114, 107, 104, 97, 110, 103, 101, 108, 115, 107] => lookup_1579_44(acc),
            [101, 120, 110, 101, 116] => lookup_1579_45(acc),
            [97, 122, 101, 114, 98, 97, 105, 106, 97, 110] => lookup_1579_46(acc),
            [112, 101, 110, 122, 97] => lookup_1579_47(acc),
            [109, 97, 110, 103, 121, 115, 104, 108, 97, 107] => lookup_1579_48(acc),
            [116, 117, 108, 97] => lookup_1579_49(acc),
            [115, 112, 98] => lookup_1579_50(acc),
            [97, 98, 107, 104, 97, 122, 105, 97] => lookup_1579_51(acc),
            [107, 97, 108, 117, 103, 97] => lookup_1579_52(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1580_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1580_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1580_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1580_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1580_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1580<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_1580_0(acc),
            [110, 101, 116] => lookup_1580_1(acc),
            [99, 111] => lookup_1580_2(acc),
            [101, 100, 117] => lookup_1580_3(acc),
            [103, 111, 118] => lookup_1580_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1581() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1582() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1583_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1583_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1583<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1583_0(acc),
            [110, 121, 109] => lookup_1583_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1584() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1585() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1586() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1587() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1588() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1589() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1590_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1590_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1590_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1590_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1590_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1590<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_1590_0(acc),
            [110, 121, 109] => lookup_1590_1(acc),
            [101, 100, 117] => lookup_1590_2(acc),
            [110, 121, 99] => lookup_1590_3(acc),
            [103, 111, 118] => lookup_1590_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1591() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1592() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1593() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1594() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1595() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1596() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1597_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1597<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 110, 100, 105, 101] => lookup_1597_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1598() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1599() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1600() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1601_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1601_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1601_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1601_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1601_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1601_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1601_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1601_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1601_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1601_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1601_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1601_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1601_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1601_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1601_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1601_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1601_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1601_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1601_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1601_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1601_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1601<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 110, 115] => lookup_1601_0(acc),
            [111, 114, 97, 110, 103, 101, 99, 108, 111, 117, 100] => lookup_1601_1(acc),
            [109, 105, 110, 99, 111, 109] => lookup_1601_2(acc),
            [101, 100, 117, 110, 101, 116] => lookup_1601_3(acc),
            [105, 110, 102, 111] => lookup_1601_4(acc),
            [116, 111, 117, 114, 105, 115, 109] => lookup_1601_5(acc),
            [99, 111, 109] => lookup_1601_6(acc),
            [114, 110, 114, 116] => lookup_1601_7(acc),
            [103, 111, 118] => lookup_1601_8(acc),
            [112, 101, 114, 115, 111] => lookup_1601_9(acc),
            [105, 110, 100] => lookup_1601_10(acc),
            [114, 110, 117] => lookup_1601_11(acc),
            [97, 103, 114, 105, 110, 101, 116] => lookup_1601_12(acc),
            [100, 101, 102, 101, 110, 115, 101] => lookup_1601_13(acc),
            [105, 110, 116, 108] => lookup_1601_14(acc),
            [110, 97, 116] => lookup_1601_15(acc),
            [111, 114, 103] => lookup_1601_16(acc),
            [116, 117, 114, 101, 110] => lookup_1601_17(acc),
            [114, 110, 115] => lookup_1601_18(acc),
            [110, 101, 116] => lookup_1601_19(acc),
            [102, 105, 110] => lookup_1601_20(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1602() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1603() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1604() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1605() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1606() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1607() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1608() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1609() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1610() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1611() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1612() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1613() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1614() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1615() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1616() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1617_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1617_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1617_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1617_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1617_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1617_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1617_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1617_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1617_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1617_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1617_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1617_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1617<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 110, 116] => lookup_1617_0(acc),
            [112, 112] => lookup_1617_1(acc),
            [110, 97, 109, 101] => lookup_1617_2(acc),
            [112, 114, 111] => lookup_1617_3(acc),
            [98, 105, 122] => lookup_1617_4(acc),
            [111, 114, 103] => lookup_1617_5(acc),
            [105, 110, 102, 111] => lookup_1617_6(acc),
            [109, 105, 108] => lookup_1617_7(acc),
            [110, 101, 116] => lookup_1617_8(acc),
            [101, 100, 117] => lookup_1617_9(acc),
            [99, 111, 109] => lookup_1617_10(acc),
            [103, 111, 118] => lookup_1617_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1618() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1619() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1620() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1621() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1622() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1623_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1623_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1623_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1623_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1623_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1623_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1623_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1623_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1623_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1623_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1623_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1623_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1623_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1623<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1623_0(acc),
            [103, 111, 118] => lookup_1623_1(acc),
            [98, 105, 122] => lookup_1623_2(acc),
            [110, 97, 109, 101] => lookup_1623_3(acc),
            [101, 115, 116] => lookup_1623_4(acc),
            [97, 99] => lookup_1623_5(acc),
            [111, 114, 103] => lookup_1623_6(acc),
            [105, 110, 102, 111] => lookup_1623_7(acc),
            [112, 114, 111, 102] => lookup_1623_8(acc),
            [110, 101, 116] => lookup_1623_9(acc),
            [101, 100, 117] => lookup_1623_10(acc),
            [112, 114, 111] => lookup_1623_11(acc),
            [105, 115, 108, 97] => lookup_1623_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1624() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1625() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1626_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1626<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1626_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1627() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1628() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1629() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1630() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1631_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1631<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [114, 111, 117, 116, 101, 114] => lookup_1631_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1632() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1633() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1634() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1635() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1636() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1637() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1638_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1638_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1638_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1638_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1638<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 115, 111] => lookup_1638_0(acc),
            [110, 111, 109] => lookup_1638_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1638_2(acc),
            [99, 111, 109] => lookup_1638_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1639() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1640() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1641_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_22_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_22<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [116, 101, 108, 101] => lookup_1641_22_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1641_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_24_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_24_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_24_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112] => lookup_1641_24_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1641_24_2_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_24_2_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112] => lookup_1641_24_2_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1641_24_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [111, 115] => lookup_1641_24_2_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1641_24<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_1641_24_0(acc),
            [111, 115] => lookup_1641_24_1(info, labels, acc),
            [115, 116, 103] => lookup_1641_24_2(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1641_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_70_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_70_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [115, 115, 108] => lookup_1641_70_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1641_70<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [111, 114, 105, 103, 105, 110] => lookup_1641_70_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1641_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_90_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_90_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_90<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111] => lookup_1641_90_0(acc),
            [104, 111, 109, 101] => lookup_1641_90_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1641_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_106_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_106_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_106<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [114, 115, 99] => lookup_1641_106_0(acc),
            [99] => lookup_1641_106_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1641_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_108<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 118] => lookup_1641_108_0(acc),
            [100, 107] => lookup_1641_108_1(acc),
            [102, 114] => lookup_1641_108_2(acc),
            [97, 117] => lookup_1641_108_3(acc),
            [105, 110] => lookup_1641_108_4(acc),
            [108, 116] => lookup_1641_108_5(acc),
            [99, 104] => lookup_1641_108_6(acc),
            [98, 101] => lookup_1641_108_7(acc),
            [105, 108] => lookup_1641_108_8(acc),
            [99, 110] => lookup_1641_108_9(acc),
            [101, 115] => lookup_1641_108_10(acc),
            [108, 117] => lookup_1641_108_11(acc),
            [99, 97] => lookup_1641_108_12(acc),
            [105, 115] => lookup_1641_108_13(acc),
            [113, 45, 97] => lookup_1641_108_14(acc),
            [115, 105] => lookup_1641_108_15(acc),
            [117, 107] => lookup_1641_108_16(acc),
            [117, 115] => lookup_1641_108_17(acc),
            [103, 114] => lookup_1641_108_18(acc),
            [112, 116] => lookup_1641_108_19(acc),
            [109, 99] => lookup_1641_108_20(acc),
            [105, 101] => lookup_1641_108_21(acc),
            [104, 114] => lookup_1641_108_22(acc),
            [105, 110, 116] => lookup_1641_108_23(acc),
            [97, 116] => lookup_1641_108_24(acc),
            [102, 105] => lookup_1641_108_25(acc),
            [105, 116] => lookup_1641_108_26(acc),
            [107, 114] => lookup_1641_108_27(acc),
            [109, 116] => lookup_1641_108_28(acc),
            [109, 121] => lookup_1641_108_29(acc),
            [110, 101, 116] => lookup_1641_108_30(acc),
            [99, 121] => lookup_1641_108_31(acc),
            [101, 101] => lookup_1641_108_32(acc),
            [109, 101] => lookup_1641_108_33(acc),
            [100, 101] => lookup_1641_108_34(acc),
            [98, 103] => lookup_1641_108_35(acc),
            [110, 103] => lookup_1641_108_36(acc),
            [109, 107] => lookup_1641_108_37(acc),
            [110, 108] => lookup_1641_108_38(acc),
            [97, 108] => lookup_1641_108_39(acc),
            [110, 122] => lookup_1641_108_40(acc),
            [112, 108] => lookup_1641_108_41(acc),
            [112, 97, 114, 105, 115] => lookup_1641_108_42(acc),
            [114, 111] => lookup_1641_108_43(acc),
            [114, 117] => lookup_1641_108_44(acc),
            [106, 112] => lookup_1641_108_45(acc),
            [115, 101] => lookup_1641_108_46(acc),
            [99, 100] => lookup_1641_108_47(acc),
            [99, 122] => lookup_1641_108_48(acc),
            [116, 114] => lookup_1641_108_49(acc),
            [115, 107] => lookup_1641_108_50(acc),
            [97, 115, 115, 111] => lookup_1641_108_51(acc),
            [104, 117] => lookup_1641_108_52(acc),
            [101, 100, 117] => lookup_1641_108_53(acc),
            [110, 111] => lookup_1641_108_54(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1641_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1641<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [106, 115] => lookup_1641_0(acc),
            [105, 115, 45, 118, 101, 114, 121, 45, 115, 119, 101, 101, 116] => lookup_1641_1(acc),
            [109, 121, 102, 105, 114, 101, 119, 97, 108, 108] => lookup_1641_2(acc),
            [104, 111, 109, 101, 117, 110, 105, 120] => lookup_1641_3(acc),
            [102, 114, 101, 101, 100, 100, 110, 115] => lookup_1641_4(acc),
            [109, 121, 102, 116, 112] => lookup_1641_5(acc),
            [97, 101] => lookup_1641_6(acc),
            [109, 108, 98, 102, 97, 110] => lookup_1641_7(acc),
            [105, 115, 45, 97, 45, 107, 110, 105, 103, 104, 116] => lookup_1641_8(acc),
            [115, 101, 108, 108, 115, 121, 111, 117, 114, 104, 111, 109, 101] => lookup_1641_9(acc),
            [104, 101, 112, 102, 111, 114, 103, 101] => lookup_1641_10(acc),
            [105, 115, 45, 97, 45, 98, 114, 117, 105, 110, 115, 102, 97, 110] => {
                lookup_1641_11(acc)
            }
            [119, 101, 98, 104, 111, 112] => lookup_1641_12(acc),
            [109, 121, 119, 105, 114, 101] => lookup_1641_13(acc),
            [98, 97, 114, 115, 121] => lookup_1641_14(acc),
            [115, 101, 114, 118, 101, 98, 98, 115] => lookup_1641_15(acc),
            [112, 111, 100, 122, 111, 110, 101] => lookup_1641_16(acc),
            [99, 97, 109, 100, 118, 114] => lookup_1641_17(acc),
            [100, 100, 110, 115, 115] => lookup_1641_18(acc),
            [99, 111, 117, 99, 104, 112, 111, 116, 97, 116, 111, 102, 114, 105, 101, 115] => {
                lookup_1641_19(acc)
            }
            [97, 108, 116, 101, 114, 118, 105, 115, 116, 97] => lookup_1641_20(acc),
            [98, 111, 108, 100, 108, 121, 103, 111, 105, 110, 103, 110, 111, 119, 104, 101, 114, 101] => {
                lookup_1641_21(acc)
            }
            [97, 109, 117, 110, 101] => lookup_1641_22(info, labels, acc),
            [116, 119, 109, 97, 105, 108] => lookup_1641_23(acc),
            [102, 101, 100, 111, 114, 97, 112, 114, 111, 106, 101, 99, 116] => {
                lookup_1641_24(info, labels, acc)
            }
            [105, 115, 45, 108, 111, 115, 116] => lookup_1641_25(acc),
            [105, 115, 45, 97, 45, 115, 111, 120, 102, 97, 110] => lookup_1641_26(acc),
            [100, 111, 101, 115, 110, 116, 101, 120, 105, 115, 116] => lookup_1641_27(acc),
            [105, 115, 45, 118, 101, 114, 121, 45, 103, 111, 111, 100] => lookup_1641_28(acc),
            [99, 111, 108, 108, 101, 103, 101, 102, 97, 110] => lookup_1641_29(acc),
            [103, 111, 116, 100, 110, 115] => lookup_1641_30(acc),
            [110, 111, 45, 105, 112] => lookup_1641_31(acc),
            [97, 99, 99, 101, 115, 115, 99, 97, 109] => lookup_1641_32(acc),
            [104, 111, 112, 116, 111] => lookup_1641_33(acc),
            [100, 110, 115, 97, 108, 105, 97, 115] => lookup_1641_34(acc),
            [112, 117, 98, 116, 108, 115] => lookup_1641_35(acc),
            [119, 109, 102, 108, 97, 98, 115] => lookup_1641_36(acc),
            [103, 97, 109, 101, 45, 104, 111, 115, 116] => lookup_1641_37(acc),
            [105, 115, 45, 102, 111, 117, 110, 100] => lookup_1641_38(acc),
            [115, 112, 100, 110, 115] => lookup_1641_39(acc),
            [104, 111, 109, 101, 108, 105, 110, 117, 120] => lookup_1641_40(acc),
            [112, 111, 105, 118, 114, 111, 110] => lookup_1641_41(acc),
            [117, 115] => lookup_1641_42(acc),
            [105, 115, 45, 97, 45, 99, 101, 108, 116, 105, 99, 115, 102, 97, 110] => {
                lookup_1641_43(acc)
            }
            [101, 100, 117, 103, 105, 116] => lookup_1641_44(acc),
            [100, 117, 99, 107, 100, 110, 115] => lookup_1641_45(acc),
            [100, 111, 111, 109, 100, 110, 115] => lookup_1641_46(acc),
            [100, 111, 110, 116, 101, 120, 105, 115, 116] => lookup_1641_47(acc),
            [104, 111, 109, 101, 100, 110, 115] => lookup_1641_48(acc),
            [100, 115, 109, 121, 110, 97, 115] => lookup_1641_49(acc),
            [115, 119, 101, 101, 116, 112, 101, 112, 112, 101, 114] => lookup_1641_50(acc),
            [105, 115, 45, 118, 101, 114, 121, 45, 110, 105, 99, 101] => lookup_1641_51(acc),
            [98, 108, 111, 103, 115, 105, 116, 101] => lookup_1641_52(acc),
            [102, 114, 101, 101, 100, 101, 115, 107, 116, 111, 112] => lookup_1641_53(acc),
            [122, 97, 112, 116, 111] => lookup_1641_54(acc),
            [105, 115, 45, 97, 45, 108, 105, 110, 117, 120, 45, 117, 115, 101, 114] => {
                lookup_1641_55(acc)
            }
            [105, 110, 45, 100, 115, 108] => lookup_1641_56(acc),
            [114, 101, 97, 100, 45, 98, 111, 111, 107, 115] => lookup_1641_57(acc),
            [119, 109, 99, 108, 111, 117, 100] => lookup_1641_58(acc),
            [104, 111, 109, 101, 102, 116, 112] => lookup_1641_59(acc),
            [105, 115, 45, 97, 45, 99, 97, 110, 100, 105, 100, 97, 116, 101] => lookup_1641_60(acc),
            [115, 116, 117, 102, 102, 45, 52, 45, 115, 97, 108, 101] => lookup_1641_61(acc),
            [102, 101, 100, 111, 114, 97, 112, 101, 111, 112, 108, 101] => lookup_1641_62(acc),
            [114, 101, 97, 100, 109, 121, 98, 108, 111, 103] => lookup_1641_63(acc),
            [109, 105, 115, 99, 111, 110, 102, 117, 115, 101, 100] => lookup_1641_64(acc),
            [101, 110, 100, 111, 102, 116, 104, 101, 105, 110, 116, 101, 114, 110, 101, 116] => {
                lookup_1641_65(acc)
            }
            [100, 121, 110, 115, 101, 114, 118] => lookup_1641_66(acc),
            [102, 114, 111, 109, 45, 109, 101] => lookup_1641_67(acc),
            [101, 110, 100, 111, 102, 105, 110, 116, 101, 114, 110, 101, 116] => {
                lookup_1641_68(acc)
            }
            [116, 117, 110, 107] => lookup_1641_69(acc),
            [99, 100, 110, 55, 55, 45, 115, 101, 99, 117, 114, 101] => {
                lookup_1641_70(info, labels, acc)
            }
            [98, 108, 111, 103, 100, 110, 115] => lookup_1641_71(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_1641_72(acc),
            [100, 121, 110, 97, 108, 105, 97, 115] => lookup_1641_73(acc),
            [115, 109, 97, 108, 108, 45, 119, 101, 98] => lookup_1641_74(acc),
            [117, 102, 99, 102, 97, 110] => lookup_1641_75(acc),
            [109, 97, 121, 102, 105, 114, 115, 116] => lookup_1641_76(acc),
            [107, 105, 99, 107, 115, 45, 97, 115, 115] => lookup_1641_77(acc),
            [122, 97] => lookup_1641_78(acc),
            [100, 110, 115, 100, 111, 106, 111] => lookup_1641_79(acc),
            [115, 101, 108, 102, 105, 112] => lookup_1641_80(acc),
            [105, 115, 45, 118, 101, 114, 121, 45, 101, 118, 105, 108] => lookup_1641_81(acc),
            [100, 118, 114, 100, 110, 115] => lookup_1641_82(acc),
            [104, 107] => lookup_1641_83(acc),
            [105, 115, 45, 97, 45, 99, 104, 101, 102] => lookup_1641_84(acc),
            [115, 101, 114, 118, 101, 102, 116, 112] => lookup_1641_85(acc),
            [109, 121, 115, 101, 99, 117, 114, 105, 116, 121, 99, 97, 109, 101, 114, 97] => {
                lookup_1641_86(acc)
            }
            [99, 101, 114, 116, 109, 103, 114] => lookup_1641_87(acc),
            [105, 115, 45, 118, 101, 114, 121, 45, 98, 97, 100] => lookup_1641_88(acc),
            [112, 105, 109, 105, 101, 110, 116, 97] => lookup_1641_89(acc),
            [100, 121, 110, 100, 110, 115] => lookup_1641_90(labels, acc),
            [98, 109, 111, 97, 116, 116, 97, 99, 104, 109, 101, 110, 116, 115] => {
                lookup_1641_91(acc)
            }
            [110, 111, 119, 45, 100, 110, 115] => lookup_1641_92(acc),
            [116, 111, 111, 108, 102, 111, 114, 103, 101] => lookup_1641_93(acc),
            [105, 115, 45, 115, 97, 118, 101, 100] => lookup_1641_94(acc),
            [105, 115, 97, 45, 103, 101, 101, 107] => lookup_1641_95(acc),
            [100, 105, 115, 107, 115, 116, 97, 116, 105, 111, 110] => lookup_1641_96(acc),
            [102, 101, 100, 111, 114, 97, 105, 110, 102, 114, 97, 99, 108, 111, 117, 100] => {
                lookup_1641_97(acc)
            }
            [109, 121, 45, 102, 105, 114, 101, 119, 97, 108, 108] => lookup_1641_98(acc),
            [102, 97, 109, 105, 108, 121, 100, 115] => lookup_1641_99(acc),
            [99, 97, 98, 108, 101, 45, 109, 111, 100, 101, 109] => lookup_1641_100(acc),
            [104, 111, 98, 98, 121, 45, 115, 105, 116, 101] => lookup_1641_101(acc),
            [109, 111, 122, 105, 108, 108, 97, 45, 105, 111, 116] => lookup_1641_102(acc),
            [119, 101, 98, 114, 101, 100, 105, 114, 101, 99, 116] => lookup_1641_103(acc),
            [112, 111, 116, 97, 103, 101, 114] => lookup_1641_104(acc),
            [110, 102, 108, 102, 97, 110] => lookup_1641_105(acc),
            [99, 100, 110, 55, 55] => lookup_1641_106(info, labels, acc),
            [116, 117, 120, 102, 97, 109, 105, 108, 121] => lookup_1641_107(acc),
            [101, 117] => lookup_1641_108(labels, acc),
            [105, 115, 45, 97, 45, 103, 101, 101, 107] => lookup_1641_109(acc),
            [115, 101, 114, 118, 101, 103, 97, 109, 101] => lookup_1641_110(acc),
            [105, 115, 45, 97, 45, 112, 97, 116, 115, 102, 97, 110] => lookup_1641_111(acc),
            [105, 110, 45, 118, 112, 110] => lookup_1641_112(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1642() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1643_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1643_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1643_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1643_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1643_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1643_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1643_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1643_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1643_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1643_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1643_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1643_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1643_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1643_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1643_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1643_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1643_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1643_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1643<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1643_0(acc),
            [97, 195, 169, 114, 111, 112, 111, 114, 116] => lookup_1643_1(acc),
            [109, 100] => lookup_1643_2(acc),
            [102, 105, 110] => lookup_1643_3(acc),
            [110, 108] => lookup_1643_4(acc),
            [103, 111, 117, 118] => lookup_1643_5(acc),
            [101, 100] => lookup_1643_6(acc),
            [99, 111, 109] => lookup_1643_7(acc),
            [97, 99] => lookup_1643_8(acc),
            [111, 114] => lookup_1643_9(acc),
            [120, 110, 45, 45, 97, 114, 111, 112, 111, 114, 116, 45, 98, 121, 97] => {
                lookup_1643_10(acc)
            }
            [111, 114, 103] => lookup_1643_11(acc),
            [103, 111] => lookup_1643_12(acc),
            [97, 115, 115, 111] => lookup_1643_13(acc),
            [112, 114, 101, 115, 115, 101] => lookup_1643_14(acc),
            [101, 100, 117] => lookup_1643_15(acc),
            [105, 110, 116] => lookup_1643_16(acc),
            [110, 101, 116] => lookup_1643_17(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1644() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1645_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1645_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1645_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1645_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1645_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1645_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1645_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1645_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1645_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1645<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_1645_0(acc),
            [103, 111, 118] => lookup_1645_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1645_2(acc),
            [109, 105, 108] => lookup_1645_3(acc),
            [111, 114, 103] => lookup_1645_4(acc),
            [110, 101, 116] => lookup_1645_5(acc),
            [110, 97, 109, 101] => lookup_1645_6(acc),
            [101, 100, 117] => lookup_1645_7(acc),
            [99, 111, 109] => lookup_1645_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1646() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1647() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1648() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1649() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1650() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1651_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1651_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1651_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1651_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1651_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1651_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1651_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1651_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1651_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1651_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1651_10_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1651_10<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1651_10_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1651_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1651_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1651_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1651_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1651_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1651_16_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1651_16<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_1651_16_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1651_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1651_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1651_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1651_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1651_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1651<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 114] => lookup_1651_0(acc),
            [107, 101, 112] => lookup_1651_1(acc),
            [116, 101, 108] => lookup_1651_2(acc),
            [107, 49, 50] => lookup_1651_3(acc),
            [109, 105, 108] => lookup_1651_4(acc),
            [98, 98, 115] => lookup_1651_5(acc),
            [105, 110, 102, 111] => lookup_1651_6(acc),
            [116, 118] => lookup_1651_7(acc),
            [110, 97, 109, 101] => lookup_1651_8(acc),
            [97, 118] => lookup_1651_9(acc),
            [99, 111, 109] => lookup_1651_10(labels, acc),
            [103, 111, 118] => lookup_1651_11(acc),
            [98, 105, 122] => lookup_1651_12(acc),
            [112, 111, 108] => lookup_1651_13(acc),
            [116, 115, 107] => lookup_1651_14(acc),
            [119, 101, 98] => lookup_1651_15(acc),
            [110, 99] => lookup_1651_16(labels, acc),
            [111, 114, 103] => lookup_1651_17(acc),
            [103, 101, 110] => lookup_1651_18(acc),
            [98, 101, 108] => lookup_1651_19(acc),
            [101, 100, 117] => lookup_1651_20(acc),
            [110, 101, 116] => lookup_1651_21(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1652() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1653() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1654_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1654_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1654_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1654_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1654_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1654_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1654_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1654_6_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1654_6<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 108, 99] => lookup_1654_6_0(acc),
            [108, 116, 100] => lookup_1654_6_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1654_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1654_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1654<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [114, 111] => lookup_1654_0(acc),
            [110, 111, 109] => lookup_1654_1(acc),
            [111, 114, 103] => lookup_1654_2(acc),
            [116, 116] => lookup_1654_3(acc),
            [116, 118] => lookup_1654_4(acc),
            [110, 101, 116] => lookup_1654_5(acc),
            [99, 111] => lookup_1654_6(labels, acc),
            [99, 111, 109] => lookup_1654_7(acc),
            [97, 99] => lookup_1654_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1655() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1656() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1657() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1658() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1659() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1660() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1661() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1662() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1663() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1664() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1665() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1666() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1667_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1667<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 110, 115] => lookup_1667_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1668() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1669() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1670() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1671() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1672_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1672_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1672_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1672<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 116, 104] => lookup_1672_0(acc),
            [105, 110, 102, 111] => lookup_1672_1(acc),
            [103, 111, 118] => lookup_1672_2(acc),
            _ => info,
        },
        None => info,
    }
}
